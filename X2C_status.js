document.getElementById('generateCSVStatus').addEventListener('click', () => {    const xmlText = document.getElementById('xmlInput').value;    if (!xmlText.trim()) {        showMessage('XML 내용을 입력해주세요.');        return;    }    try {        const parser = new DOMParser();        const xmlDoc = parser.parseFromString(xmlText, "text/xml");        const parserError = xmlDoc.getElementsByTagName("parsererror");        if (parserError.length) {            console.error("XML parsing error:", parserError[0].textContent);            showMessage("XML 파싱 오류가 발생했습니다. 콘솔을 확인하세요.");            return;        }        const statusNodes = xmlDoc.querySelectorAll("StatusInfo > Status");        if (statusNodes.length === 0) {            showMessage("XML에서 Status 정보를 찾을 수 없습니다.");            return;        }        const headers = ["name", "control", "default", "deprecated", "unused", "group"];        const csvRows = [headers.join(',')];        statusNodes.forEach(node => {            const row = headers.map(header => `"${node.getAttribute(header) || ''}"`);            csvRows.push(row.join(','));        });        downloadCSV(csvRows.join('\n'), 'status_info.csv');    } catch (error) {        console.error("Error processing XML for Status:", error);        showMessage("Status 정보 처리 중 오류가 발생했습니다.");    }});