{
  "Action.js": [
    {
      "name": "nexacro.ActionEventInfo",
      "params": [
        "obj",
        "id"
      ],
      "calls": []
    },
    {
      "name": "nexacro.Action",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro._EventSinkObject.call"
      ]
    },
    {
      "name": "_pAction.destroy",
      "params": [],
      "calls": [
        "nexacro._EventSinkObject.prototype.destroy.call",
        "this._p_parent.removeChild"
      ]
    },
    {
      "name": "_pAction.set_targetview",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pAction.set_name",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pAction.on_fire_onsuccess",
      "params": [],
      "calls": [
        "event._fireEvent",
        "nexacro.ActionEventInfo"
      ]
    },
    {
      "name": "_pAction.on_fire_onerror",
      "params": [],
      "calls": [
        "event._fireEvent",
        "nexacro.ActionEventInfo"
      ]
    },
    {
      "name": "_pAction._setContents",
      "params": [
        "v"
      ],
      "calls": [
        "JSON.parse",
        "nexacro._isObject"
      ]
    },
    {
      "name": "_pAction.getContents",
      "params": [
        "key"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pAction._findViewObject",
      "params": [
        "strName"
      ],
      "calls": []
    },
    {
      "name": "_pAction.getTargetView",
      "params": [],
      "calls": [
        "this._findViewObject"
      ]
    }
  ],
  "Animation.js": [
    {
      "name": "crossBrowserSplit",
      "params": [
        "undef"
      ],
      "calls": [
        "Array.prototype.push.apply",
        "Math.abs",
        "Math.floor",
        "Math.pow",
        "Object.prototype.toString.call",
        "match.slice",
        "nativeSplit.call",
        "output.push",
        "output.slice",
        "separator.exec",
        "separator.test",
        "str.slice"
      ]
    },
    {
      "name": "self",
      "params": [
        "str",
        "separator",
        "limit"
      ],
      "calls": [
        "Array.prototype.push.apply",
        "Math.abs",
        "Math.floor",
        "Math.pow",
        "Object.prototype.toString.call",
        "match.slice",
        "nativeSplit.call",
        "output.push",
        "output.slice",
        "separator.exec",
        "separator.test",
        "str.slice"
      ]
    },
    {
      "name": "String.prototype.split",
      "params": [
        "separator",
        "limit"
      ],
      "calls": []
    },
    {
      "name": "bezier",
      "params": [],
      "calls": [
        "Math.abs"
      ]
    },
    {
      "name": "easings",
      "params": [],
      "calls": [
        "Math.asin",
        "Math.pow",
        "Math.sin",
        "bezier.apply",
        "equations.hasOwnProperty",
        "is.fnc"
      ]
    },
    {
      "name": "Date.now",
      "params": [],
      "calls": []
    },
    {
      "name": "instance.equalInstance",
      "params": [
        "instanceProp",
        "params"
      ],
      "calls": []
    },
    {
      "name": "instance.tick",
      "params": [
        "t"
      ],
      "calls": []
    },
    {
      "name": "instance.seek",
      "params": [
        "time"
      ],
      "calls": []
    },
    {
      "name": "instance.pause",
      "params": [],
      "calls": [
        "activeInstances.indexOf",
        "activeInstances.splice"
      ]
    },
    {
      "name": "instance.play",
      "params": [],
      "calls": [
        "activeInstances.push",
        "nexacro.AnimationFrame",
        "raf.start"
      ]
    },
    {
      "name": "instance.reverse",
      "params": [],
      "calls": []
    },
    {
      "name": "instance.restart",
      "params": [],
      "calls": [
        "instance.pause",
        "instance.play",
        "instance.reset"
      ]
    },
    {
      "name": "instance.destroy",
      "params": [],
      "calls": [
        "raf.destroy",
        "raf.stop"
      ]
    },
    {
      "name": "instance.reset",
      "params": [],
      "calls": [
        "child.reset",
        "child.seek"
      ]
    },
    {
      "name": "tl.add",
      "params": [
        "instancesParams"
      ],
      "calls": [
        "is.und",
        "tl.children.push",
        "tl.reset",
        "tl.restart",
        "tl.seek"
      ]
    },
    {
      "name": "anime.random",
      "params": [
        "min",
        "max"
      ],
      "calls": [
        "Math.floor",
        "nexacro._random"
      ]
    },
    {
      "name": "nexacro.AnimationItem",
      "params": [
        "id",
        "componentid",
        "props"
      ],
      "calls": [
        "nexacro.Object.call"
      ]
    },
    {
      "name": "_pAnimationItem.set_componentid",
      "params": [
        "componentid"
      ],
      "calls": []
    },
    {
      "name": "nexacro.AnimationEventInfo",
      "params": [
        "obj",
        "id"
      ],
      "calls": []
    },
    {
      "name": "nexacro.Animation",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro.Collection",
        "nexacro._EventSinkObject.call"
      ]
    },
    {
      "name": "_pAnimation.on_created",
      "params": [],
      "calls": [
        "this._createAnimeJSObject"
      ]
    },
    {
      "name": "_pAnimation.destroy",
      "params": [],
      "calls": [
        "nexacro._EventSinkObject.prototype.destroy.call",
        "this._anime.destroy",
        "this._anime.pause",
        "this._p_parent.removeChild"
      ]
    },
    {
      "name": "_pAnimation.set_beziercurve",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pAnimation.set_delay",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pAnimation.set_direction",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pAnimation.set_duration",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pAnimation.set_easing",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pAnimation.set_elasticity",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pAnimation.set_loop",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pAnimation.set_loopcount",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isInt"
      ]
    },
    {
      "name": "_pAnimation.set_enableevent",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pAnimation.set_offset",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pAnimation.set_round",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pAnimation.set_targets",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isObject",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pAnimation.set_targetprops",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pAnimation.addTarget",
      "params": [
        "id",
        "compobj",
        "props"
      ],
      "calls": [
        "nexacro.AnimationItem",
        "nexacro._OnceCallbackTimer.callonce",
        "this._p_items.add_item",
        "this._setAnimeTask",
        "this.addChild"
      ]
    },
    {
      "name": "_pAnimation.removeTarget",
      "params": [
        "id"
      ],
      "calls": [
        "nexacro._OnceCallbackTimer.callonce",
        "this._p_items.remove_item",
        "this._setAnimeTask",
        "this.removeChild"
      ]
    },
    {
      "name": "_pAnimation.pause",
      "params": [],
      "calls": [
        "this._anime.pause",
        "this._setAnimeTask"
      ]
    },
    {
      "name": "_pAnimation.play",
      "params": [],
      "calls": [
        "this._anime.pause",
        "this._anime.play",
        "this._anime.reset",
        "this._anime.reverse",
        "this._anime.seek",
        "this._createAnimeJSObject",
        "this._setAnimeTask",
        "this._syncTweens",
        "this.getCompletedStatus",
        "this.getCurrentTime",
        "this.getPausedStatus",
        "this.getReversedStatus"
      ]
    },
    {
      "name": "_pAnimation.reverse",
      "params": [],
      "calls": [
        "this._anime.pause",
        "this._anime.play",
        "this._anime.reverse",
        "this._setAnimeTask",
        "this.getBeginStatus",
        "this.getCompletedStatus",
        "this.getPausedStatus"
      ]
    },
    {
      "name": "_pAnimation.seek",
      "params": [
        "time"
      ],
      "calls": [
        "this._anime.pause",
        "this._anime.play",
        "this._anime.seek",
        "this._createAnimeJSObject",
        "this._setAnimeTask",
        "this.getBeginStatus",
        "this.getCompletedStatus",
        "this.getPausedStatus"
      ]
    },
    {
      "name": "_pAnimation.stop",
      "params": [],
      "calls": [
        "this._anime.pause",
        "this._anime.reset",
        "this._anime.seek",
        "this._createAnimeJSObject",
        "this._setAnimeTask",
        "this.getBeginStatus",
        "this.getCompletedStatus"
      ]
    },
    {
      "name": "_pAnimation.reset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pAnimation.restart",
      "params": [],
      "calls": []
    },
    {
      "name": "_pAnimation._on_begin",
      "params": [],
      "calls": [
        "this._refobject.on_fire_begin"
      ]
    },
    {
      "name": "_pAnimation._on_complete",
      "params": [],
      "calls": [
        "this._refobject.on_fire_complete"
      ]
    },
    {
      "name": "_pAnimation._on_run",
      "params": [],
      "calls": [
        "this._refobject.on_fire_run"
      ]
    },
    {
      "name": "_pAnimation._on_update",
      "params": [],
      "calls": [
        "this._refobject.on_fire_update"
      ]
    },
    {
      "name": "_pAnimation.on_fire_begin",
      "params": [],
      "calls": [
        "nexacro.AnimationEventInfo",
        "this.onbegin._fireEvent"
      ]
    },
    {
      "name": "_pAnimation.on_fire_complete",
      "params": [],
      "calls": [
        "nexacro.AnimationEventInfo",
        "this.oncomplete._fireEvent"
      ]
    },
    {
      "name": "_pAnimation.on_fire_run",
      "params": [],
      "calls": [
        "nexacro.AnimationEventInfo",
        "this.onrun._fireEvent"
      ]
    },
    {
      "name": "_pAnimation.on_fire_update",
      "params": [],
      "calls": [
        "nexacro.AnimationEventInfo",
        "this.onupdate._fireEvent"
      ]
    },
    {
      "name": "_pAnimation.addChild",
      "params": [
        "id",
        "obj"
      ],
      "calls": [
        "nexacro.MakeNativeError",
        "nexacro.MakeReferenceError"
      ]
    },
    {
      "name": "_pAnimation.removeChild",
      "params": [
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pAnimation._makeParamsObject",
      "params": [
        "isReset",
        "offset"
      ],
      "calls": [
        "compid.lastIndexOf",
        "compid.substring",
        "targets.push",
        "this._p_beziercurve.split",
        "this._p_easing.toLowerCase"
      ]
    },
    {
      "name": "_pAnimation._createAnimeJSObject",
      "params": [],
      "calls": [
        "this._makeParamsObject"
      ]
    },
    {
      "name": "_pAnimation._setAnimeTask",
      "params": [
        "task",
        "params"
      ],
      "calls": [
        "this._anime_task.push"
      ]
    },
    {
      "name": "_pAnimation._runAnimeTask",
      "params": [
        "id"
      ],
      "calls": [
        "this._anime_task.splice",
        "this._createAnimeJSObject",
        "this.pause",
        "this.play",
        "this.reverse",
        "this.seek",
        "this.stop"
      ]
    },
    {
      "name": "_pAnimation._syncTweens",
      "params": [],
      "calls": [
        "this._anime.equalInstance",
        "this._createAnimeJSObject",
        "this._makeParamsObject"
      ]
    },
    {
      "name": "_pAnimation.getReversedStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pAnimation.getCurrentTime",
      "params": [],
      "calls": []
    },
    {
      "name": "_pAnimation.getPausedStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pAnimation.getBeginStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pAnimation.getCompletedStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pAnimation._getReferenceContext",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.AnimationTimelineItem",
      "params": [
        "id",
        "animationid",
        "offset"
      ],
      "calls": [
        "nexacro.Object.call"
      ]
    },
    {
      "name": "_pAnimationTimelineItem.set_offset",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "nexacro.AnimationTimeline",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro.Animation.call"
      ]
    },
    {
      "name": "_pAnimationTimeline._makeParamsObject",
      "params": [
        "isReset"
      ],
      "calls": []
    },
    {
      "name": "_pAnimationTimeline._createAnimeJSObject",
      "params": [],
      "calls": [
        "anime.timeline",
        "this._anime.add",
        "this._makeParamsObject"
      ]
    },
    {
      "name": "_pAnimationTimeline.addTarget",
      "params": [
        "id",
        "obj",
        "offset"
      ],
      "calls": [
        "nexacro.AnimationTimelineItem",
        "this._p_items.add_item",
        "this.addChild"
      ]
    },
    {
      "name": "_pAnimationTimeline.insertTarget",
      "params": [
        "index",
        "id",
        "obj",
        "offset"
      ],
      "calls": [
        "nexacro.AnimationTimelineItem",
        "this._p_items.insert_item",
        "this._p_items.removeTarget",
        "this.addChild"
      ]
    }
  ],
  "Button.js": [
    {
      "name": "nexacro.Button",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._IconText.call"
      ]
    },
    {
      "name": "_pButton.destroyComponent",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.destroyComponent.call",
        "this._getMainForm"
      ]
    },
    {
      "name": "_pButton.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pButton._getDlgCode",
      "params": [
        "/*keycode",
        "altKey",
        "ctrlKey",
        "shiftKey*/"
      ],
      "calls": []
    },
    {
      "name": "_pButton._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pButton.set_defaultbutton",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._getMainForm",
        "this._setAccessibilityFlagDefaultButton"
      ]
    },
    {
      "name": "_pButton.set_escapebutton",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._getMainForm"
      ]
    },
    {
      "name": "_pButton._click",
      "params": [
        "keycode"
      ],
      "calls": [
        "this._isAccessibilityEnable",
        "this._notifyAccessibility",
        "this.click"
      ]
    },
    {
      "name": "_pButton.click",
      "params": [],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pButton.getSelectStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pButton.setSelectStatus",
      "params": [
        "select"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pButton.toggleSelectStatus",
      "params": [],
      "calls": [
        "this.setSelectStatus"
      ]
    },
    {
      "name": "_pButton._on_hotkey",
      "params": [
        "/*keycode",
        "altKey",
        "ctrlKey",
        "shiftKey*/"
      ],
      "calls": [
        "this.click"
      ]
    },
    {
      "name": "_pButton.on_keydown_basic_action",
      "params": [
        "keycode/*",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pButton.on_keyup_basic_action",
      "params": [
        "/*keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pButton.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._getWindow"
      ]
    },
    {
      "name": "_pButton.on_keyup_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._click",
        "this._getWindow"
      ]
    },
    {
      "name": "nexacro.StepImageButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pStepImageButtonCtrl._on_getAccessibilityAdditionalLabel",
      "params": [],
      "calls": []
    },
    {
      "name": "_pStepImageButtonCtrl._on_getAccessibilityAdditionalRole",
      "params": [],
      "calls": []
    },
    {
      "name": "_pStepImageButtonCtrl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pStepImageButtonCtrl.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "nexacro._TitleBarButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    }
  ],
  "Calendar.js": [
    {
      "name": "nexacro.CalendarCloseUpEventInfo",
      "params": [
        "obj",
        "id",
        "pretext",
        "posttext",
        "prevalue",
        "postvalue/*",
        "isselect*/"
      ],
      "calls": []
    },
    {
      "name": "nexacro.CalendarDayClickEventInfo",
      "params": [
        "obj",
        "id",
        "date"
      ],
      "calls": []
    },
    {
      "name": "nexacro.CalendarSpinEventInfo",
      "params": [
        "obj",
        "id",
        "beforeText",
        "afterText",
        "beforeValue",
        "afterValue",
        "isUp",
        "fromobject",
        "fromreferenceobject"
      ],
      "calls": [
        "nexacro.Event.call"
      ]
    },
    {
      "name": "nexacro.Calendar",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.Component.call",
        "nexacro._EditMaskTypeDate"
      ]
    },
    {
      "name": "_pCalendar.on_create_contents",
      "params": [],
      "calls": [
        "maskobj.setInputMode",
        "maskobj.setUseEditBuffer",
        "nexacro._isDesktop",
        "nexacro._isHybrid",
        "nexacro._isMobile",
        "this._createCalendaredit",
        "this._createDatePicker",
        "this._createDropbutton",
        "this._createSpinbutton",
        "this.getElement"
      ]
    },
    {
      "name": "_pCalendar.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "control_elem.setElementAccessibilityStatHidden",
        "dropbutton.on_created",
        "this._getLocale",
        "this._on_apply_expr",
        "this._p_calendaredit._on_apply_inputtype",
        "this._p_calendaredit._setAccessibilityStatHidden",
        "this._p_calendaredit.on_apply_usesoftkeyboard",
        "this._p_calendaredit.on_created",
        "this._p_calendarspindownbutton._setAccessibilityStatHidden",
        "this._p_calendarspindownbutton.on_created",
        "this._p_calendarspinupbutton._setAccessibilityStatHidden",
        "this._p_calendarspinupbutton.on_created",
        "this._p_datepicker.body.getElement",
        "this._p_datepicker.on_created",
        "this._p_dropbutton.on_created",
        "this._recalcLayout",
        "this._setAccessibilityActiveDescendant",
        "this._setEventHandlerToCalendarEdit",
        "this._setEventHandlerToDatePicker",
        "this._setEventHandlerToDropButton",
        "this._setEventHandlerToSpinButton",
        "this.getElement",
        "this.on_apply_dateformat",
        "this.on_apply_displayinvalidtext",
        "this.on_apply_displaynulltext",
        "this.on_apply_editformat",
        "this.on_apply_innerdataset",
        "this.on_apply_locale",
        "this.on_apply_readonly",
        "this.on_apply_useautocalibration",
        "this.on_apply_value",
        "this.on_apply_weekformat"
      ]
    },
    {
      "name": "_pCalendar.on_destroy_contents",
      "params": [],
      "calls": [
        "this._destroyControl",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pCalendar._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pCalendar.on_create_contents_command",
      "params": [],
      "calls": [
        "this._getLocale",
        "this._on_apply_expr",
        "this._p_calendaredit._on_apply_inputtype",
        "this._p_calendaredit.createCommand",
        "this._p_calendaredit.on_apply_usesoftkeyboard",
        "this._p_calendarspindownbutton.createCommand",
        "this._p_calendarspinupbutton.createCommand",
        "this._p_datepicker.createCommand",
        "this._p_dropbutton.createCommand",
        "this._recalcLayout",
        "this._setEventHandlerToCalendarEdit",
        "this._setEventHandlerToDatePicker",
        "this._setEventHandlerToDropButton",
        "this._setEventHandlerToSpinButton",
        "this.on_apply_dateformat",
        "this.on_apply_editformat",
        "this.on_apply_innerdataset",
        "this.on_apply_locale",
        "this.on_apply_useautocalibration",
        "this.on_apply_usesoftkeyboard",
        "this.on_apply_value",
        "this.on_apply_weekformat"
      ]
    },
    {
      "name": "_pCalendar.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._on_attach_accessibility_contents_handle",
        "this._p_calendaredit.attachHandle",
        "this._p_calendarspindownbutton.attachHandle",
        "this._p_calendarspinupbutton.attachHandle",
        "this._p_datepicker.attachHandle",
        "this._p_dropbutton.attachHandle",
        "this.on_apply_displayinvalidtext",
        "this.on_apply_displaynulltext",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCalendar.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCalendar.on_change_containerPos",
      "params": [
        "/*left",
        "top*/"
      ],
      "calls": []
    },
    {
      "name": "_pCalendar._getInputElement",
      "params": [],
      "calls": [
        "this._p_calendaredit._getInputElement"
      ]
    },
    {
      "name": "_pCalendar._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "calendaredit._on_focus",
        "nexacro._getBrowserEventName"
      ]
    },
    {
      "name": "_pCalendar.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._isEnable",
        "this._isReadOnly",
        "this._p_calendaredit._setEnable",
        "this._p_calendarspindownbutton._setEnable",
        "this._p_calendarspinupbutton._setEnable",
        "this._p_datepicker._setEnable",
        "this._p_dropbutton._setEnable"
      ]
    },
    {
      "name": "_pCalendar.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "this._p_calendaredit.on_apply_cssclass",
        "this._p_calendarspindownbutton.on_apply_cssclass",
        "this._p_calendarspinupbutton.on_apply_cssclass",
        "this._p_datepicker.on_apply_cssclass",
        "this._p_dropbutton.on_apply_cssclass"
      ]
    },
    {
      "name": "_pCalendar.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._setValue"
      ]
    },
    {
      "name": "_pCalendar.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "dateobj.toString",
        "ds.getColumn",
        "maskobj.changeNormalizeValue",
        "maskobj.setDate",
        "this._convertToDateObject",
        "this._convertValueType",
        "this._isInvalidValue",
        "this._on_apply_text",
        "this._setValue",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCalendar.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCalendar._getDragData",
      "params": [],
      "calls": [
        "calendaredit.getSelectedText"
      ]
    },
    {
      "name": "_pCalendar._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey/*",
        "shiftKey*/"
      ],
      "calls": []
    },
    {
      "name": "_pCalendar._getAccessibilityReadLabel",
      "params": [
        "/*bwholeread*/"
      ],
      "calls": [
        "this._getCurrentDateStr"
      ]
    },
    {
      "name": "_pCalendar._setAccessibilityStatFocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "calendaredit._input_element.setElementAccessibilityRole",
        "nexacro.Component.prototype._setAccessibilityStatFocus.call",
        "this._getAccessibilityRole",
        "this._getDescLevel",
        "this.on_find_CurrentStyle_accessibility"
      ]
    },
    {
      "name": "_pCalendar.set_restoreonblur",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pCalendar.set_useautocalibration",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_useautocalibration"
      ]
    },
    {
      "name": "_pCalendar.on_apply_useautocalibration",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCalendar.on_apply_text",
      "params": [
        "v"
      ],
      "calls": [
        "expr.substring",
        "nexacro.Date",
        "this._convertToDateObject",
        "this._convertValueType",
        "this._isInvalidValue",
        "this.on_apply_value",
        "this.set_value"
      ]
    },
    {
      "name": "_pCalendar.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this._convertToDateObject",
        "this._convertValueType",
        "this._isInvalidValue",
        "this.applyto_bindSource",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCalendar.on_apply_value",
      "params": [
        "value",
        "binvalid"
      ],
      "calls": [
        "maskobj.applyMask",
        "maskobj.getDatePickerValue",
        "nexacro._isNull",
        "nexacro._toString",
        "this._isInvalidValue",
        "this._setCalendarEditValue",
        "this._setDatePickerValue"
      ]
    },
    {
      "name": "_pCalendar._on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "exprfn.call",
        "nexacro.Date",
        "nexacro._settracemsg",
        "nexacro._toString",
        "this._convertToDateObject",
        "this._convertValueType",
        "this._isInvalidValue",
        "this._p_expr.substring",
        "this.on_apply_prop_accessibilitylabel",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pCalendar.set_displaynulltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pCalendar.on_apply_displaynulltext",
      "params": [
        "displaynulltext"
      ],
      "calls": [
        "calendaredit.set_displaynulltext"
      ]
    },
    {
      "name": "_pCalendar.set_displayinvalidtext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_displayinvalidtext"
      ]
    },
    {
      "name": "_pCalendar.on_apply_displayinvalidtext",
      "params": [
        "v"
      ],
      "calls": [
        "calendaredit.set_displayinvalidtext"
      ]
    },
    {
      "name": "_pCalendar.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCalendar._isReadOnly",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCalendar.on_apply_readonly",
      "params": [],
      "calls": [
        "calendaredit._changeStatus",
        "calendaredit.set_readonly",
        "datepicker.set_readonly",
        "dropbutton._setEnable",
        "spindownbutton._setEnable",
        "spinupbutton._setEnable",
        "this._changeStatus",
        "this._isEnable",
        "this._isReadOnly"
      ]
    },
    {
      "name": "_pCalendar.set_autoselect",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoselect"
      ]
    },
    {
      "name": "_pCalendar.on_apply_autoselect",
      "params": [
        "autoselect"
      ],
      "calls": [
        "calendaredit.set_autoselect"
      ]
    },
    {
      "name": "_pCalendar.set_autoskip",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoskip"
      ]
    },
    {
      "name": "_pCalendar.on_apply_autoskip",
      "params": [
        "autoskip"
      ],
      "calls": [
        "calendaredit.set_autoskip"
      ]
    },
    {
      "name": "_pCalendar.set_type",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_type",
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pCalendar.on_apply_type",
      "params": [
        "type"
      ],
      "calls": [
        "Math.round",
        "this._createMonthlytypeControl",
        "this._createNormaltypeControl",
        "this._createSpintypeControl",
        "this._destroyControl",
        "this._getClientWidth",
        "this._getPopupSizeArr",
        "this._masktypeobj.getInputMode",
        "this._p_calendaredit._on_apply_inputtype",
        "this._recalcLayout",
        "this.getElement",
        "this.resize"
      ]
    },
    {
      "name": "_pCalendar.set_popuptype",
      "params": [
        "v"
      ],
      "calls": [
        "popuptype_enum.indexOf",
        "this.on_apply_popuptype"
      ]
    },
    {
      "name": "_pCalendar.on_apply_popuptype",
      "params": [
        "popuptype"
      ],
      "calls": [
        "maskobj.setInputMode",
        "maskobj.setUseEditBuffer",
        "nexacro._isDesktop",
        "nexacro._isHybrid",
        "nexacro._isMobile",
        "this.on_apply_type"
      ]
    },
    {
      "name": "_pCalendar.set_locale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale",
        "this.on_apply_value",
        "this.on_apply_weekformat"
      ]
    },
    {
      "name": "_pCalendar.on_apply_locale",
      "params": [
        "locale"
      ],
      "calls": [
        "maskobj.setLocale",
        "nexacro.Locale._makeDateMaskString"
      ]
    },
    {
      "name": "_pCalendar.set_usecontextmenu",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usecontextmenu"
      ]
    },
    {
      "name": "_pCalendar.on_apply_usecontextmenu",
      "params": [
        "usecontextmenu"
      ],
      "calls": [
        "calendaredit.set_usecontextmenu"
      ]
    },
    {
      "name": "_pCalendar.set_usesoftkeyboard",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pCalendar.on_apply_usesoftkeyboard",
      "params": [],
      "calls": [
        "this._getUseSoftKeyboardValue",
        "this._p_calendaredit.set_usesoftkeyboard"
      ]
    },
    {
      "name": "_pCalendar.set_innerdataset",
      "params": [
        "v"
      ],
      "calls": [
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset"
      ]
    },
    {
      "name": "_pCalendar.on_apply_innerdataset",
      "params": [
        "ds"
      ],
      "calls": [
        "datepicker._refreshDay",
        "ds._setEventHandler"
      ]
    },
    {
      "name": "_pCalendar.set_backgroundcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_backgroundcolumn"
      ]
    },
    {
      "name": "_pCalendar.on_apply_backgroundcolumn",
      "params": [
        "/*backgroundcolumn*/"
      ],
      "calls": [
        "datepicker._refreshDay"
      ]
    },
    {
      "name": "_pCalendar.set_bordercolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_bordercolumn"
      ]
    },
    {
      "name": "_pCalendar.on_apply_bordercolumn",
      "params": [
        "/*bordercolumn*/"
      ],
      "calls": [
        "datepicker._refreshDay"
      ]
    },
    {
      "name": "_pCalendar.set_datecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datecolumn"
      ]
    },
    {
      "name": "_pCalendar.on_apply_datecolumn",
      "params": [
        "/*datecolumn*/"
      ],
      "calls": [
        "datepicker._refreshDay"
      ]
    },
    {
      "name": "_pCalendar.set_textcolorcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_textcolorcolumn"
      ]
    },
    {
      "name": "_pCalendar.on_apply_textcolorcolumn",
      "params": [
        "/*textcolorcolumn*/"
      ],
      "calls": [
        "datepicker._refreshDay"
      ]
    },
    {
      "name": "_pCalendar.set_buttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_buttonsize"
      ]
    },
    {
      "name": "_pCalendar.on_apply_buttonsize",
      "params": [
        "/*buttonsize*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCalendar.set_headheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_headheight"
      ]
    },
    {
      "name": "_pCalendar.on_apply_headheight",
      "params": [
        "/*headheight*/"
      ],
      "calls": [
        "datepicker._recalcLayout"
      ]
    },
    {
      "name": "_pCalendar.set_daysize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_daysize"
      ]
    },
    {
      "name": "_pCalendar.on_apply_daysize",
      "params": [
        "/*daysize*/"
      ],
      "calls": [
        "datepicker._refreshDay",
        "datepicker.body._recalcLayout"
      ]
    },
    {
      "name": "_pCalendar.set_popupsize",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCalendar.set_dateformat",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_dateformat",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCalendar.on_apply_dateformat",
      "params": [
        "dateformat"
      ],
      "calls": [
        "maskobj.setDateMask"
      ]
    },
    {
      "name": "_pCalendar.set_editformat",
      "params": [
        "v"
      ],
      "calls": [
        "this._setValue",
        "this.on_apply_editformat"
      ]
    },
    {
      "name": "_pCalendar.on_apply_editformat",
      "params": [
        "editformat"
      ],
      "calls": [
        "maskobj.setEditMask"
      ]
    },
    {
      "name": "_pCalendar.set_headformat",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_headformat"
      ]
    },
    {
      "name": "_pCalendar.on_apply_headformat",
      "params": [
        "/*headformat*/"
      ],
      "calls": [
        "datepicker._setHeadformatText"
      ]
    },
    {
      "name": "_pCalendar.set_weekformat",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_weekformat"
      ]
    },
    {
      "name": "_pCalendar.on_apply_weekformat",
      "params": [
        "/*weekformat*/"
      ],
      "calls": [
        "datepicker._setWeekformatText"
      ]
    },
    {
      "name": "_pCalendar.set_usetrailingday",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usetrailingday"
      ]
    },
    {
      "name": "_pCalendar.on_apply_usetrailingday",
      "params": [
        "/*usetrailingday*/"
      ],
      "calls": [
        "datepicker._refreshDay"
      ]
    },
    {
      "name": "_pCalendar.set_showmonthspin",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showmonthspin"
      ]
    },
    {
      "name": "_pCalendar.on_apply_showmonthspin",
      "params": [
        "/*showmonthspin*/"
      ],
      "calls": [
        "datepicker._refreshSpindate"
      ]
    },
    {
      "name": "_pCalendar.set_showyearspin",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showyearspin"
      ]
    },
    {
      "name": "_pCalendar.on_apply_showyearspin",
      "params": [
        "/*showyearspin*/"
      ],
      "calls": [
        "datepicker._refreshSpindate"
      ]
    },
    {
      "name": "_pCalendar.on_apply_accessibility",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_accessibility.call",
        "this._p_calendaredit.on_apply_accessibility"
      ]
    },
    {
      "name": "_pCalendar.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.set_visible.call",
        "this._closePopup",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pCalendar.set_datepickerchangetype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datepickerchangetype",
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pCalendar.on_apply_datepickerchangetype",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCalendar.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._getStringResourceProperty",
        "this.on_apply_displayinvalidtext",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pCalendar.dropdown",
      "params": [],
      "calls": [
        "this._isPopupVisible",
        "this._setFocus",
        "this._setZeroCaret",
        "this._showPopup"
      ]
    },
    {
      "name": "_pCalendar.isDropdown",
      "params": [],
      "calls": [
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pCalendar.getCaretPos",
      "params": [],
      "calls": [
        "calendaredit.getCaretPos"
      ]
    },
    {
      "name": "_pCalendar.setCaretPos",
      "params": [
        "v"
      ],
      "calls": [
        "calendaredit.setCaretPos"
      ]
    },
    {
      "name": "_pCalendar.getSelect",
      "params": [],
      "calls": [
        "calendaredit.getSelect"
      ]
    },
    {
      "name": "_pCalendar.setSelect",
      "params": [
        "begin",
        "end"
      ],
      "calls": [
        "calendaredit.setSelect"
      ]
    },
    {
      "name": "_pCalendar.getSelectedText",
      "params": [],
      "calls": [
        "calendaredit.getSelectedText"
      ]
    },
    {
      "name": "_pCalendar.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCalendar.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this._removeEventHandlerToInnerDataset",
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pCalendar.getYear",
      "params": [],
      "calls": [
        "maskobj._dateObj.getFullYear"
      ]
    },
    {
      "name": "_pCalendar.getMonth",
      "params": [],
      "calls": [
        "maskobj._dateObj.getMonth"
      ]
    },
    {
      "name": "_pCalendar.getDay",
      "params": [],
      "calls": [
        "maskobj._dateObj.getDate"
      ]
    },
    {
      "name": "_pCalendar.getDayOfWeek",
      "params": [],
      "calls": [
        "maskobj._dateObj.getDay"
      ]
    },
    {
      "name": "_pCalendar.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pCalendar._on_value_change",
      "params": [
        "prevalue",
        "postvalue"
      ],
      "calls": [
        "maskobj.changeNormalizeValue",
        "this._beginValueChange",
        "this._closePopup",
        "this._finalValueChange",
        "this._getEventInfoText",
        "this._isPopupVisible",
        "this._setValue",
        "this._setZeroCaret",
        "this.applyto_bindSource",
        "this.on_apply_value",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pCalendar._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "datepicker._refreshDay",
        "this.on_fire_oninnerdatachanged"
      ]
    },
    {
      "name": "_pCalendar._on_dataset_onrowsetchanged",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "datepicker._refreshDay"
      ]
    },
    {
      "name": "_pCalendar._on_edit_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro._openSystemCalendar",
        "this.dropbutton._control_element.setElementFocus",
        "this.getElement",
        "this.on_fire_ondropdown",
        "this.on_fire_oneditclick"
      ]
    },
    {
      "name": "_pCalendar._on_edit_onlbuttondown",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "this._closePopup",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pCalendar._on_edit_onlbuttonup",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": []
    },
    {
      "name": "_pCalendar._on_edit_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "calendaredit._input_element.stopSysEvent",
        "datepicker._changeDate",
        "datepicker._on_body_onkeydown",
        "datepicker._refreshSpindate",
        "datepicker.on_fire_ondayclick",
        "datepicker.on_keydown_default_action",
        "this._closePopup",
        "this._isPopupVisible",
        "this._on_spin_onspindown",
        "this._on_spin_onspinup",
        "this._on_value_change",
        "this._setDatePickerValue",
        "this._setValue",
        "this._setZeroCaret",
        "this._showPopup"
      ]
    },
    {
      "name": "_pCalendar._on_edit_oninput",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "maskobj.changeNormalizeValue",
        "maskobj.changeNormalizeValueFromBuffer",
        "this._isPopupVisible",
        "this._on_value_change",
        "this._setDatePickerValue",
        "this.on_fire_oninput"
      ]
    },
    {
      "name": "_pCalendar._on_notify_mobile_valuechanged",
      "params": [
        "v"
      ],
      "calls": [
        "maskobj.changeNormalizeValue",
        "maskobj.changeNormalizeValueFromBuffer",
        "this._on_value_change",
        "this._setCalendarEditValue",
        "this.on_fire_oninput"
      ]
    },
    {
      "name": "_pCalendar._on_drop_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "calendaredit._isInvalidValue",
        "this._closePopup",
        "this._isPopupVisible",
        "this._setDatePickerValue",
        "this._setZeroCaret",
        "this._showPopup"
      ]
    },
    {
      "name": "_pCalendar._on_drop_mobile_onclick",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "this._closePopup",
        "this._isPopupVisible",
        "this._setDatePickerValue",
        "this._showPopup"
      ]
    },
    {
      "name": "_pCalendar._on_drop_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "calendaredit._isInvalidValue",
        "this._closePopup",
        "this._isPopupVisible",
        "this._setDatePickerValue",
        "this._setZeroCaret",
        "this._showPopup"
      ]
    },
    {
      "name": "_pCalendar._on_spin_onspinup",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "maskobj.applyMask",
        "maskobj.applyMaskSpin",
        "maskobj.changeNormalizeValue",
        "maskobj.changeNormalizeValueFromBuffer",
        "maskobj.getEditFormatType",
        "maskobj.removeMask",
        "nexacro._toString",
        "this._getCurrentDate",
        "this._getEventInfoText",
        "this._setSpinValue",
        "this.getCaretPos",
        "this.on_fire_onspin"
      ]
    },
    {
      "name": "_pCalendar._on_spin_onspindown",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "maskobj.applyMask",
        "maskobj.applyMaskSpin",
        "maskobj.changeNormalizeValue",
        "maskobj.changeNormalizeValueFromBuffer",
        "maskobj.getEditFormatType",
        "maskobj.removeMask",
        "nexacro._toString",
        "this._getCurrentDate",
        "this._getEventInfoText",
        "this._setSpinValue",
        "this.getCaretPos",
        "this.on_fire_onspin"
      ]
    },
    {
      "name": "_pCalendar._on_spin_mobile_onspinup",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "maskobj.applyMask",
        "maskobj.applyMaskSpin",
        "maskobj.changeNormalizeValueFromBuffer",
        "maskobj.getEditFormatType",
        "maskobj.removeMask",
        "nexacro._toString",
        "this._getCurrentDate",
        "this._getEventInfoText",
        "this._setSpinValue",
        "this.getCaretPos",
        "this.on_fire_onspin"
      ]
    },
    {
      "name": "_pCalendar._on_spin_mobile_onspindown",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "maskobj.applyMask",
        "maskobj.applyMaskSpin",
        "maskobj.changeNormalizeValueFromBuffer",
        "maskobj.getEditFormatType",
        "maskobj.removeMask",
        "nexacro._toString",
        "this._getCurrentDate",
        "this._getEventInfoText",
        "this._setSpinValue",
        "this.getCaretPos",
        "this.on_fire_onspin"
      ]
    },
    {
      "name": "_pCalendar._on_datepicker_ondayclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "from_comp._changeStatus",
        "from_comp._p_text.padLeft",
        "h.padLeft",
        "m.padLeft",
        "maskobj.changeNormalizeValue",
        "maskobj.getEditFormatType",
        "nexacro._isNull",
        "s.padLeft",
        "ss.padLeft",
        "this._closePopup",
        "this._isPopupVisible",
        "this._on_value_change",
        "this._setCalendarEditValue",
        "this._setFocusToNextComponent",
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pCalendar._on_datepicker_oncloseup",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "_window._releaseCaptureLock",
        "this._changeStatus",
        "this._getWindow",
        "this._p_calendaredit._changeStatus",
        "this._p_dropbutton._changeStatus",
        "this.on_fire_oncloseup"
      ]
    },
    {
      "name": "_pCalendar.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "calendaredit._on_focus",
        "control_elem.setElementFocus",
        "nexacro._getBrowserEventName",
        "this._changeStatus",
        "this._p_datepicker.body._apply_setfocus",
        "this.getElement"
      ]
    },
    {
      "name": "_pCalendar.on_killfocus_basic_action",
      "params": [
        "/*new_focus",
        "new_refer_focus*/"
      ],
      "calls": [
        "_win._indexOfCurrentFocusPaths",
        "datepicker._refreshSpindate",
        "input_elem._setElementLastSelectionRange",
        "input_elem.setElementBlur",
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this._closePopup",
        "this._getRootWindow",
        "this._isPopupVisible",
        "this._on_value_change",
        "this._setValue",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCalendar.on_fire_sys_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onmousewheel.call",
        "this._popupcontrol._is_popup"
      ]
    },
    {
      "name": "_pCalendar.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslide.call",
        "this._updatePopupControlPosition"
      ]
    },
    {
      "name": "_pCalendar.on_fire_sys_onfling",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onfling.call",
        "this._updatePopupControlPosition"
      ]
    },
    {
      "name": "_pCalendar.on_fire_oneditclick",
      "params": [
        "obj",
        "caretpos",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.EditClickEventInfo",
        "this._isEnable",
        "this.oneditclick._fireEvent"
      ]
    },
    {
      "name": "_pCalendar.on_fire_ondayclick",
      "params": [
        "postdate"
      ],
      "calls": [
        "nexacro.CalendarDayClickEventInfo",
        "this.ondayclick._fireEvent"
      ]
    },
    {
      "name": "_pCalendar.on_fire_canchange",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.canchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pCalendar.on_fire_onchanged",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangedEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pCalendar.on_fire_oncloseup",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.CalendarCloseUpEventInfo",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pCalendar.on_fire_ondropdown",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.Event",
        "this.ondropdown._fireCheckEvent"
      ]
    },
    {
      "name": "_pCalendar.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.InputEventInfo",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pCalendar.on_fire_onspin",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue",
        "isUp"
      ],
      "calls": [
        "nexacro.CalendarSpinEventInfo",
        "this.onspin._fireCheckEvent"
      ]
    },
    {
      "name": "_pCalendar.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pCalendar._createCalendaredit",
      "params": [],
      "calls": [
        "calendaredit.createComponent",
        "calendaredit.set_autoselect",
        "calendaredit.set_autoskip",
        "calendaredit.set_displaynulltext",
        "calendaredit.set_readonly",
        "calendaredit.set_usecontextmenu",
        "nexacro._CalendarEditControl"
      ]
    },
    {
      "name": "_pCalendar._createDropbutton",
      "params": [],
      "calls": [
        "dropbutton.createComponent",
        "nexacro._CalendarDropButtonControl"
      ]
    },
    {
      "name": "_pCalendar._createSpinbutton",
      "params": [],
      "calls": [
        "nexacro._CalendarSpinButtonControl",
        "spindownbutton.createComponent",
        "spinupbutton.createComponent"
      ]
    },
    {
      "name": "_pCalendar._createDatePicker",
      "params": [],
      "calls": [
        "datepicker._setPopupContains",
        "datepicker.createComponent",
        "nexacro.DatePickerControl"
      ]
    },
    {
      "name": "_pCalendar._createPopupControl",
      "params": [],
      "calls": [
        "nexacro._CalendarPopupControl",
        "popupcontrol.createComponent"
      ]
    },
    {
      "name": "_pCalendar._createNormaltypeControl",
      "params": [],
      "calls": [
        "calendaredit._on_apply_inputtype",
        "calendaredit.on_created",
        "dropbutton.on_created",
        "this._applyAllProps",
        "this._createCalendaredit",
        "this._createDatePicker",
        "this._createDropbutton",
        "this._createPopupControl",
        "this._setEventHandlerToCalendarEdit",
        "this._setEventHandlerToDatePicker",
        "this._setEventHandlerToDropButton",
        "this.getElement"
      ]
    },
    {
      "name": "_pCalendar._createSpintypeControl",
      "params": [],
      "calls": [
        "calendaredit.on_created",
        "spindownbutton.on_created",
        "spinupbutton.on_created",
        "this._applyAllProps",
        "this._createCalendaredit",
        "this._createSpinbutton",
        "this._setEventHandlerToCalendarEdit",
        "this._setEventHandlerToSpinButton",
        "this.getElement"
      ]
    },
    {
      "name": "_pCalendar._createMonthlytypeControl",
      "params": [],
      "calls": [
        "datepicker.on_created",
        "this._applyDatePickerProps",
        "this._createDatePicker",
        "this._setEventHandlerToDatePicker",
        "this.getElement"
      ]
    },
    {
      "name": "_pCalendar._createSystemtypeControl",
      "params": [],
      "calls": [
        "calendaredit._on_apply_inputtype",
        "calendaredit.on_created",
        "this._applyAllProps",
        "this._createCalendaredit",
        "this._setEventHandlerToCalendarEdit",
        "this.getElement"
      ]
    },
    {
      "name": "_pCalendar._createPopupDatePickerControl",
      "params": [],
      "calls": [
        "datepicker.on_created",
        "popupcontrol._attach",
        "popupcontrol.on_created",
        "this._applyDatePickerProps",
        "this._createDatePicker",
        "this._createPopupControl",
        "this._setEventHandlerToDatePicker"
      ]
    },
    {
      "name": "_pCalendar._destroyControl",
      "params": [],
      "calls": [
        "this._p_calendaredit.destroy",
        "this._p_calendarspindownbutton.destroy",
        "this._p_calendarspinupbutton.destroy",
        "this._p_datepicker.destroy",
        "this._p_dropbutton.destroy",
        "this._popupcontrol.destroy"
      ]
    },
    {
      "name": "_pCalendar._recalcLayout",
      "params": [],
      "calls": [
        "Math.floor",
        "buttonsize.split",
        "calendaredit.move",
        "calendaredit.set_visible",
        "datepicker.move",
        "datepicker.set_visible",
        "dropbutton.move",
        "dropbutton.set_visible",
        "spindownbutton.move",
        "spindownbutton.set_visible",
        "spinupbutton.move",
        "spinupbutton.set_visible",
        "this._applyDatePickerProps",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pCalendar._updatePopupControlPosition",
      "params": [],
      "calls": [
        "frame.getElement",
        "nexacro._getElementPositionInFrame",
        "popup_control_elem.setElementPosition",
        "popupcontrol.getElement",
        "this._getElementPosition",
        "this._getPopupSizeArr",
        "this._getWindow",
        "this.getElement"
      ]
    },
    {
      "name": "_pCalendar._showPopup",
      "params": [],
      "calls": [
        "Math.round",
        "_window._setCaptureLock",
        "frame.getElement",
        "nexacro._getDevicePixelRatio",
        "nexacro._getElementPositionInFrame",
        "popupcontrol._getPopupParentPos",
        "popupcontrol._popup",
        "popupcontrol._popupBy",
        "this._accessibility_showPopup",
        "this._createPopupDatePickerControl",
        "this._getElementPosition",
        "this._getPopupSizeArr",
        "this._getWindow",
        "this.getElement",
        "this.on_fire_ondropdown"
      ]
    },
    {
      "name": "_pCalendar._applyZoomPopup",
      "params": [],
      "calls": [
        "this._isPopupVisible",
        "this._showPopup"
      ]
    },
    {
      "name": "_pCalendar._closePopup",
      "params": [],
      "calls": [
        "nexacro._closeSystemCalendar",
        "popupcontrol._closePopup",
        "this._accessibility_closePopup"
      ]
    },
    {
      "name": "_pCalendar._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._convertObjectContents",
        "this.set_innerdataset"
      ]
    },
    {
      "name": "_pCalendar._on_repeat",
      "params": [
        "fromComp"
      ],
      "calls": [
        "parentObject._on_spin_down",
        "parentObject._on_spin_up",
        "this._on_spin_mobile_onspindown",
        "this._on_spin_mobile_onspinup",
        "this._on_spin_onspindown",
        "this._on_spin_onspinup",
        "this._p_datepicker._on_button_onnextlbuttondown",
        "this._p_datepicker._on_button_onprevlbuttondown"
      ]
    },
    {
      "name": "_pCalendar._on_beforerepeat",
      "params": [
        "refer_comp"
      ],
      "calls": [
        "datepicker._on_beforerepeat"
      ]
    },
    {
      "name": "_pCalendar._convertValueType",
      "params": [
        "v",
        "dateobj",
        "bapplyrule"
      ],
      "calls": [
        "nexacro._getDatatypeRule",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pCalendar._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "maskobj.changeNormalizeValue",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCalendar._setSpinValue",
      "params": [
        "value",
        "text",
        "pos"
      ],
      "calls": [
        "calendaredit._setSpinValue"
      ]
    },
    {
      "name": "_pCalendar._setCalendarEditValue",
      "params": [
        "value"
      ],
      "calls": [
        "calendaredit._setValue",
        "calendaredit._updateAccessibilityLabel",
        "this._updateAccessibilityLabel"
      ]
    },
    {
      "name": "_pCalendar._setDatePickerValue",
      "params": [
        "value"
      ],
      "calls": [
        "datepicker._setValue"
      ]
    },
    {
      "name": "_pCalendar._setLocale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale",
        "this.on_apply_value",
        "this.on_apply_weekformat"
      ]
    },
    {
      "name": "_pCalendar._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pCalendar._setZeroCaret",
      "params": [],
      "calls": [
        "edit.setCaretPos",
        "nexacro._checkActiveElement"
      ]
    },
    {
      "name": "_pCalendar._setFocusToNextComponent",
      "params": [],
      "calls": [
        "next_comp._setDefaultCaret",
        "next_comp.setFocus",
        "this._getForm",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pCalendar._setEventHandlerToCalendarEdit",
      "params": [],
      "calls": [
        "calendaredit._setEventHandler",
        "this._setEventHandler"
      ]
    },
    {
      "name": "_pCalendar._setEventHandlerToDropButton",
      "params": [],
      "calls": [
        "dropbutton._setEventHandler"
      ]
    },
    {
      "name": "_pCalendar._setEventHandlerToSpinButton",
      "params": [],
      "calls": [
        "spindownbutton._setEventHandler",
        "spinupbutton._setEventHandler"
      ]
    },
    {
      "name": "_pCalendar._setEventHandlerToDatePicker",
      "params": [],
      "calls": [
        "datepicker._setEventHandler"
      ]
    },
    {
      "name": "_pCalendar._getDateMaskObj",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCalendar._getFormatType",
      "params": [],
      "calls": [
        "maskobj.getEditFormatType"
      ]
    },
    {
      "name": "_pCalendar._getCurrentDate",
      "params": [],
      "calls": [
        "maskobj.getCurrentDate"
      ]
    },
    {
      "name": "_pCalendar._getCurrentDateStr",
      "params": [],
      "calls": [
        "maskobj.applyMask",
        "maskobj.getCurrentDate",
        "maskobj.getEditFormatType",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pCalendar._getEndDay",
      "params": [
        "y",
        "m"
      ],
      "calls": [
        "maskobj.getEndDay"
      ]
    },
    {
      "name": "_pCalendar._getPopupSizeArr",
      "params": [],
      "calls": [
        "size.split"
      ]
    },
    {
      "name": "_pCalendar._getElementPosition",
      "params": [],
      "calls": [
        "nexacro._getElementPositionInFrame",
        "this.getElement"
      ]
    },
    {
      "name": "_pCalendar._getEventInfoText",
      "params": [
        "v"
      ],
      "calls": [
        "maskobj.applyMask",
        "maskobj.changeNormalizeValue",
        "maskobj.getEditStatus",
        "maskobj.setEditStatus",
        "this._isInvalidValue"
      ]
    },
    {
      "name": "_pCalendar._isPopupVisible",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCalendar._applyAllProps",
      "params": [],
      "calls": [
        "this._getLocale",
        "this.on_apply_dateformat",
        "this.on_apply_editformat",
        "this.on_apply_innerdataset",
        "this.on_apply_locale",
        "this.on_apply_readonly",
        "this.on_apply_value",
        "this.on_apply_weekformat"
      ]
    },
    {
      "name": "_pCalendar._applyDatePickerProps",
      "params": [],
      "calls": [
        "datepicker._setEnable",
        "datepicker._setValue",
        "datepicker.set_readonly",
        "maskobj.getDatePickerValue"
      ]
    },
    {
      "name": "_pCalendar._makeCalendarText",
      "params": [
        "value"
      ],
      "calls": [
        "date.charAt",
        "mask.charAt",
        "matchStr.indexOf",
        "this._makeDateObj",
        "this._makeMask",
        "this._makeMaskValue",
        "this._on_apply_mask",
        "value.toString"
      ]
    },
    {
      "name": "_pCalendar._isValidDate",
      "params": [
        "val",
        "editmask_type",
        "edit_type_buf"
      ],
      "calls": [
        "maskobj.getEndDay",
        "val.substr"
      ]
    },
    {
      "name": "_pCalendar._isInvalidValue",
      "params": [
        "v"
      ],
      "calls": [
        "dateobj._isInvalidDate",
        "dateobj.getFullYear",
        "dateobj.valueOf",
        "nexacro._isNull",
        "this._convertToDateObject"
      ]
    },
    {
      "name": "_pCalendar._beginValueChange",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCalendar._finalValueChange",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCalendar._convertToDateObject",
      "params": [
        "v"
      ],
      "calls": [
        "dateobj.getDate",
        "dateobj.getFullYear",
        "dateobj.getHours",
        "dateobj.getMilliseconds",
        "dateobj.getMinutes",
        "dateobj.getMonth",
        "dateobj.getSeconds",
        "dateobj.valueOf",
        "maskobj.convertToDateObject",
        "maskobj.getEditFormatType",
        "nexacro.Date",
        "nexacro._isNull",
        "nexacro._toString",
        "this.on_apply_editformat"
      ]
    },
    {
      "name": "_pCalendar._on_getDisplayText",
      "params": [],
      "calls": [
        "calendaredit._on_getDisplayText"
      ]
    },
    {
      "name": "nexacro._CalendarDropButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pCalendarDropButtonControl.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "calendar._apply_setfocus",
        "nexacro.Component.prototype.on_focus_basic_action.call",
        "nexacro._isHybrid"
      ]
    },
    {
      "name": "_pCalendarDropButtonControl._on_click",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._p_parent._isEnable",
        "this.on_click_basic_action",
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "nexacro._CalendarSpinButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pCalendarSpinButtonControl.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "calendar._apply_setfocus",
        "nexacro.Component.prototype.on_focus_basic_action.call"
      ]
    },
    {
      "name": "nexacro._CalendarEditControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.MaskEdit.call"
      ]
    },
    {
      "name": "_pCalendarEditControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "input_elem.create",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._isInvalidValue",
        "this._on_created_accessibility_contents",
        "this.on_apply_displayinvalidtext",
        "this.on_apply_displaynulltext",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCalendarEditControl.on_create_contents_command",
      "params": [],
      "calls": [
        "input_elem.createCommand",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCalendarEditControl._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.setElementDefaultValue",
        "input_elem.setElementFocus",
        "input_elem.setElementSetSelect",
        "input_elem.setElementValue",
        "maskobj.applyMask",
        "maskobj.setEditStatus",
        "nexacro._isNull",
        "nexacro._notifyAccessibilityInputElement",
        "this._changeUserStatus",
        "this._getAccessibilityReadLabel",
        "this._getEmptyText",
        "this._getMaskObj",
        "this._isComponentKeydownAction",
        "this._isInvalidValue"
      ]
    },
    {
      "name": "_pCalendarEditControl.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "maskobj.applyMask",
        "maskobj.setEditStatus",
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this._getMaskObj",
        "this._getRootComponent",
        "this._on_value_change",
        "this._setAccessibilityStatKillFocus"
      ]
    },
    {
      "name": "_pCalendarEditControl.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.setElementSetSelect",
        "input_elem.stopSysEvent",
        "input_handle.blur",
        "input_handle.focus",
        "input_value.charAt",
        "maskobj.isDeletableChar",
        "this._getMaskObj",
        "this._isEnable"
      ]
    },
    {
      "name": "_pCalendarEditControl.on_keypress_basic_action",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "meta_key"
      ],
      "calls": [
        "String.fromCharCode",
        "input_elem.getElementCaretPos",
        "input_elem.stopSysEvent",
        "maskobj.findNearEditablePos",
        "maskobj.isFilterChar",
        "maskobj.keyPressed",
        "this._getDlgCode",
        "this._getMaskObj",
        "this._on_input_autoskip"
      ]
    },
    {
      "name": "_pCalendarEditControl.on_keyinput_basic_action",
      "params": [],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_text.split",
        "maskobj.changeNormalizeValue",
        "maskobj.changeNormalizeValueFromBuffer",
        "maskobj.removeMask",
        "this._getMaskObj",
        "this._isEnable",
        "this._undostack.push"
      ]
    },
    {
      "name": "_pCalendarEditControl._beforeinput_process_with_HTMLEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "input_elem._getInputValue",
        "input_value.substring",
        "maskobj.applyMask",
        "maskobj.applyMaskEx",
        "maskobj.arrangeMask",
        "maskobj.findNearEditablePos",
        "maskobj.isFilterChar",
        "maskobj.isFilterCharEx",
        "ret.push",
        "this._getMaskObj"
      ]
    },
    {
      "name": "_pCalendarEditControl._beforeinput_process_with_NexacroInputEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end"
      ],
      "calls": [
        "calendar._isValidDate",
        "input_elem.replaceElementText",
        "input_elem.stopSysEvent",
        "input_elem.updateElementText",
        "input_text.split",
        "input_text.substring",
        "maskobj.applyMask",
        "maskobj.applyMaskEx",
        "maskobj.arrangeMask",
        "maskobj.findNearEditablePos",
        "maskobj.getCurrentText",
        "maskobj.getEditFormatType",
        "maskobj.isFilterChar",
        "maskobj.isFilterCharEx",
        "maskobj.removeMask",
        "result.text.split",
        "this._getMaskObj",
        "value.substr"
      ]
    },
    {
      "name": "_pCalendarEditControl._isInvalidValue",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_parent._isInvalidValue"
      ]
    },
    {
      "name": "_pCalendarEditControl._setSpinValue",
      "params": [
        "v",
        "pos"
      ],
      "calls": [
        "input_elem.setCompositionComplete",
        "input_elem.updateElementText",
        "this._setAccessibilityLabel"
      ]
    },
    {
      "name": "_pCalendarEditControl._getMaskObj",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCalendarEditControl._getEmptyText",
      "params": [],
      "calls": [
        "maskobj.getEmptyText",
        "this._getMaskObj"
      ]
    },
    {
      "name": "nexacro._CalendarPopupControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.PopupControl.call"
      ]
    },
    {
      "name": "_pCalendarPopupControl._getPopupParentPos",
      "params": [],
      "calls": [
        "calendar.getElement",
        "nexacro._getElementPositionInFrame",
        "rootframe.getElement",
        "this._getRootFrame"
      ]
    }
  ],
  "Cell.js": [
    {
      "name": "nexacro.CellInfo",
      "params": [
        "id",
        "parent",
        "view",
        "type",
        "idx"
      ],
      "calls": [
        "nexacro._EditMaskTypeString",
        "nexacro._GridMaskTypeNumber",
        "this._allocatePropertys"
      ]
    },
    {
      "name": "_pCellInfo._setCellChildControlProperty",
      "params": [
        "prefix",
        "ctrl",
        "datarow"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._setCellControlProperty",
      "params": [
        "cellcontrol",
        "datarow"
      ],
      "calls": [
        "cellcontrol.on_apply_prop_rtl",
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._setCellControlPropertyForAutosize",
      "params": [
        "cellcontrol",
        "datarow",
        "prop"
      ],
      "calls": [
        "nexacro._isArray",
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._chkExistSubControl",
      "params": [
        "displaytype"
      ],
      "calls": []
    },
    {
      "name": "_pCellInfo._getDefaultPropVal",
      "params": [
        "propname"
      ],
      "calls": []
    },
    {
      "name": "_pCellInfo._allocatePropertys",
      "params": [
        "_property_map"
      ],
      "calls": [
        "nexacro.BindableValue"
      ]
    },
    {
      "name": "nexacro._makeCellInfoPropertySetter",
      "params": [
        "ptype_val",
        "_property_map"
      ],
      "calls": [
        "eval_str.replace",
        "str.replace",
        "this._afterProcBindTypeProp",
        "this._changedStyle"
      ]
    },
    {
      "name": "nexacro._makePropertyDesignSetter",
      "params": [
        "ptype_val",
        "_property_map"
      ],
      "calls": [
        "nexacro._getExceptionMessage",
        "nexacro._isNumber",
        "str.replace",
        "this._apply_normalproperty",
        "this._updateAll"
      ]
    },
    {
      "name": "_pCellInfo._addPropertyMap",
      "params": [
        "ptype_val",
        "_property_map_add",
        "is_add_design_setter"
      ],
      "calls": [
        "nexacro._makeCellInfoPropertySetter",
        "nexacro._makePropertyDesignSetter",
        "this._property_map.concat"
      ]
    },
    {
      "name": "_pCellInfo.set_id",
      "params": [
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pCellInfo.set_name",
      "params": [
        "name"
      ],
      "calls": []
    },
    {
      "name": "_pCellInfo.set_displaytype",
      "params": [
        "v"
      ],
      "calls": [
        "this._afterProcBindTypeProp",
        "this._p_displaytype._set",
        "this._view._removeTreeCellinfo",
        "this._view._setTreeCellinfo"
      ]
    },
    {
      "name": "_pCellInfo.set_maskeditmaskchar",
      "params": [
        "v"
      ],
      "calls": [
        "this._afterProcBindTypeProp",
        "v.toString"
      ]
    },
    {
      "name": "_pCellInfo.set_cssclass",
      "params": [
        "v"
      ],
      "calls": [
        "this._afterProcBindTypeProp",
        "this._p_cssclass._set"
      ]
    },
    {
      "name": "_pCellInfo.set_expr",
      "params": [
        "v"
      ],
      "calls": [
        "str.substr",
        "this._afterProcBindTypeProp",
        "this._p_expr._set",
        "v.toString"
      ]
    },
    {
      "name": "_pCellInfo.destroy",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellInfo._getBindDataset",
      "params": [],
      "calls": [
        "this._view._getBindDataSet"
      ]
    },
    {
      "name": "_pCellInfo._getExprCacheFn",
      "params": [
        "ctx"
      ],
      "calls": [
        "this._view._getExprFuncByCtx"
      ]
    },
    {
      "name": "_pCellInfo._setExprCacheFn",
      "params": [
        "ctx",
        "func"
      ],
      "calls": [
        "this._view._setExprFuncByCtx"
      ]
    },
    {
      "name": "_pCellInfo._getValue",
      "params": [
        "rowidx",
        "nowritable"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getDisplaytype",
      "params": [
        "rowidx"
      ],
      "calls": [
        "dataset._getColumnType",
        "this._getAttrValue",
        "this._getBindDataset"
      ]
    },
    {
      "name": "_pCellInfo._getEdittype",
      "params": [
        "rowidx"
      ],
      "calls": [
        "dataset._getColumnType",
        "this._getAttrValue",
        "this._getBindDataset"
      ]
    },
    {
      "name": "_pCellInfo._getWordwrap",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getAttrValue",
      "params": [
        "attr",
        "rowidx",
        "is_NF"
      ],
      "calls": [
        "bindexpr.substring",
        "dataset.__getParsedRow",
        "dataset._createExprFunc",
        "dataset.getColumn",
        "dataset.getColumnNF",
        "exprfn.call",
        "reg_exps.exec",
        "this._getBindDataset",
        "this._getExprCacheFn",
        "this._setExprCacheFn"
      ]
    },
    {
      "name": "_pCellInfo._setAttrValue",
      "params": [
        "attr",
        "rowidx",
        "v"
      ],
      "calls": [
        "dataset.setColumn",
        "this._getBindDataset"
      ]
    },
    {
      "name": "_pCellInfo._getDefaultTextAlign",
      "params": [
        "displayType",
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue",
        "this._getDisplaytype"
      ]
    },
    {
      "name": "_pCellInfo._getCheckboxsize",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getRadioitemsize",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getControlButtonsize",
      "params": [
        "rowidx",
        "control"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getControlScrollbarsize",
      "params": [
        "rowidx",
        "control"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getControlPopuptype",
      "params": [
        "rowidx",
        "control"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getControlPopupsize",
      "params": [
        "rowidx",
        "control"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._afterProcBindTypeProp",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellInfo._changedStyle",
      "params": [
        "prop"
      ],
      "calls": []
    },
    {
      "name": "_pCellInfo._getTooltipText",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getTreeCheck",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getTreeCollapseImage",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getTreeExpandImage",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getTreeItemImage",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getTreeLevel",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getTreeStartLevel",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getTreeState",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._setTreeCheck",
      "params": [
        "rowidx",
        "v"
      ],
      "calls": [
        "this._setTreeBindValue"
      ]
    },
    {
      "name": "_pCellInfo._setTreeCollapseImage",
      "params": [
        "rowidx",
        "v"
      ],
      "calls": [
        "this._setTreeBindValue"
      ]
    },
    {
      "name": "_pCellInfo._setTreeExpandImage",
      "params": [
        "rowidx",
        "v"
      ],
      "calls": [
        "this._setTreeBindValue"
      ]
    },
    {
      "name": "_pCellInfo._setTreeItemImage",
      "params": [
        "rowidx",
        "v"
      ],
      "calls": [
        "this._setTreeBindValue"
      ]
    },
    {
      "name": "_pCellInfo._setTreeLevel",
      "params": [
        "rowidx",
        "v"
      ],
      "calls": [
        "this._setTreeBindValue"
      ]
    },
    {
      "name": "_pCellInfo._setTreeStartLevel",
      "params": [
        "rowidx",
        "v"
      ],
      "calls": [
        "this._setTreeBindValue"
      ]
    },
    {
      "name": "_pCellInfo._setTreeState",
      "params": [
        "rowidx",
        "v"
      ],
      "calls": [
        "this._setTreeBindValue"
      ]
    },
    {
      "name": "_pCellInfo._setTreeBindValue",
      "params": [
        "attr",
        "rowidx",
        "v"
      ],
      "calls": [
        "dataset.setColumn",
        "this._getBindDataset"
      ]
    },
    {
      "name": "_pCellInfo._setValue",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCellInfo._getLocale",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue",
        "this._view._getLocale"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayTypeValue",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayText",
      "params": [
        "rowidx"
      ],
      "calls": [
        "dataset._getColumnType",
        "dataset.getRowType",
        "nexacro._toString",
        "this._getAttrValue",
        "this._getBindDataset",
        "this._getDisplayText_combo",
        "this._getDisplayText_currency",
        "this._getDisplayText_date",
        "this._getDisplayText_localenumber",
        "this._getDisplayText_masknumber",
        "this._getDisplayText_maskstring",
        "this._getDisplayText_multicombo",
        "this._getDisplayText_text",
        "this._getDisplayTypeValue"
      ]
    },
    {
      "name": "_pCellInfo._getTextValueForDisp",
      "params": [
        "rowidx"
      ],
      "calls": [
        "this._getAttrValue"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayText_text",
      "params": [
        "rowidx"
      ],
      "calls": [
        "nexacro._getTextTemplateValue",
        "this._getTextValueForDisp",
        "v.toString"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayText_maskstring",
      "params": [
        "rowidx"
      ],
      "calls": [
        "maskobj.applyMask",
        "maskobj.setLocale",
        "maskobj.setMask",
        "maskobj.setMaskChar",
        "maskobj.setPostfixtext",
        "this._getAttrValue",
        "this._getLocale",
        "this._getTextValueForDisp",
        "v.toString"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayText_masknumber",
      "params": [
        "rowidx"
      ],
      "calls": [
        "maskobj.applyMask",
        "maskobj.setLimitType",
        "maskobj.setLocale",
        "maskobj.setMask",
        "maskobj.setPostfixtext",
        "maskobj.setUseGrouping",
        "nexacro._toString",
        "this._getAttrValue",
        "this._getLocale",
        "this._getTextValueForDisp"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayText_number",
      "params": [
        "rowidx"
      ],
      "calls": [
        "maskobj.applyMask",
        "maskobj.setLimitType",
        "maskobj.setLocale",
        "maskobj.setMask",
        "maskobj.setUseGrouping",
        "this._getAttrValue",
        "this._getLocale",
        "this._getTextValueForDisp"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayText_localenumber",
      "params": [
        "rowidx"
      ],
      "calls": [
        "nexacro.Number",
        "this._getLocale",
        "this._getTextValueForDisp",
        "v.isNaNOrInf",
        "v.toLocaleString"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayText_currency",
      "params": [
        "rowidx"
      ],
      "calls": [
        "nexacro.Number",
        "this._getLocale",
        "this._getTextValueForDisp",
        "v.isNaNOrInf",
        "v.toLocaleCurrencyString"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayText_date",
      "params": [
        "rowidx",
        "colType",
        "is_control"
      ],
      "calls": [
        "date._isInvalidDate",
        "date.getDate",
        "date.getDay",
        "date.getFullYear",
        "date.getHours",
        "date.getLocaleFormatString",
        "date.getMilliseconds",
        "date.getMinutes",
        "date.getMonth",
        "date.getSeconds",
        "date.getYear",
        "date.setDate",
        "date.setFullYear",
        "date.setMonth",
        "date.valueOf",
        "dateStr.indexOf",
        "dateStr.replace",
        "format.match",
        "format.replace",
        "maskobj.getEditFormatType",
        "maskobj.setDateMask",
        "maskobj.setEditMask",
        "nexacro.Date",
        "nexacro.Locale.getLocaleInfo",
        "nexacro._EditMaskTypeDate",
        "strVal.search",
        "this.__parseDate",
        "this._getAttrValue",
        "this._getLocale",
        "this._getTextValueForDisp",
        "this._view._isRtl",
        "v.toString",
        "yyyy.toString"
      ]
    },
    {
      "name": "_pCellInfo.__parseDate",
      "params": [
        "v",
        "formattype"
      ],
      "calls": [
        "dateobj.getDate",
        "dateobj.getFullYear",
        "dateobj.getHours",
        "dateobj.getMilliseconds",
        "dateobj.getMinutes",
        "dateobj.getMonth",
        "dateobj.getSeconds",
        "dateobj.valueOf",
        "maskobj.convertToDateObject",
        "nexacro.Date",
        "nexacro._EditMaskTypeDate"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayText_combo",
      "params": [
        "rowidx",
        "is_control"
      ],
      "calls": [
        "ds.lookupNF",
        "text.toString",
        "this._findDataset",
        "this._getAttrValue",
        "this._getTextValueForDisp"
      ]
    },
    {
      "name": "_pCellInfo._getDisplayText_multicombo",
      "params": [
        "rowidx",
        "is_control"
      ],
      "calls": [
        "data.toString",
        "ds.lookupNF",
        "this._findDataset",
        "this._getAttrValue",
        "this._getTextValueForDisp",
        "v.split"
      ]
    },
    {
      "name": "_pCellInfo._findDataset",
      "params": [
        "combodataset"
      ],
      "calls": [
        "view._findDataset"
      ]
    },
    {
      "name": "_pCellInfo._loadXmlElement",
      "params": [
        "cellElem",
        "subcell_override_info/*=undefined*/",
        "is_sub/*=undefined*/"
      ],
      "calls": [
        "cellElem.getAttribute",
        "cellElem.getElementsByTagName",
        "nexacro.BindableValue",
        "subinfo._loadXmlElement",
        "this._addPropertyMap",
        "this.hasOwnProperty"
      ]
    },
    {
      "name": "_pCellInfo._getXmlString",
      "params": [],
      "calls": [
        "nexacro._encodeXml"
      ]
    },
    {
      "name": "_pCellInfo._hasEditor",
      "params": [
        "datarow"
      ],
      "calls": [
        "this._getEdittype"
      ]
    },
    {
      "name": "nexacro._CellControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent",
        "refinfo",
        "cellidx",
        "view",
        "rowidx/*=undefined*/"
      ],
      "calls": [
        "nexacro.Component.call",
        "this._makeCellInfo"
      ]
    },
    {
      "name": "_pCellControl.init",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "refinfo",
        "cellidx",
        "view",
        "rowidx"
      ],
      "calls": [
        "nexacro.Component.prototype.init.call"
      ]
    },
    {
      "name": "_pCellControl._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.Component.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellControl._changeCell",
      "params": [
        "target_cell"
      ],
      "calls": [
        "target_cell.move",
        "this.move"
      ]
    },
    {
      "name": "_pCellControl._makeCellInfo",
      "params": [
        "id",
        "parent",
        "view",
        "type",
        "idx"
      ],
      "calls": [
        "nexacro.CellInfo"
      ]
    },
    {
      "name": "_pCellControl._apply_normalproperty",
      "params": [
        "prop",
        "val"
      ],
      "calls": []
    },
    {
      "name": "_pCellControl._getDisplaytype",
      "params": [],
      "calls": [
        "this._getDataRow",
        "this._refinfo._getDisplaytype"
      ]
    },
    {
      "name": "_pCellControl._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._text_elem._getComputedStyleAlign"
      ]
    },
    {
      "name": "_pCellControl.on_create_contents",
      "params": [],
      "calls": [
        "this._on_create_accessibility_contents",
        "this._updateDisplayer"
      ]
    },
    {
      "name": "_pCellControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "control_elem.setInnerHTML",
        "expand_ctrl.on_created",
        "sub_ctrl.on_created",
        "text_elem.create",
        "this._on_created_accessibility_contents",
        "this._setDisplay",
        "this.on_attach_contents_handle",
        "this.on_create_contents_command"
      ]
    },
    {
      "name": "_pCellControl._on_changeStatus",
      "params": [
        "status",
        "value"
      ],
      "calls": [
        "nexacro.Component.prototype._on_changeStatus.call"
      ]
    },
    {
      "name": "_pCellControl.on_changeStatus",
      "params": [
        "changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": [
        "nexacro.Component.prototype.on_changeStatus.call"
      ]
    },
    {
      "name": "_pCellControl.on_create_contents_command",
      "params": [
        "area"
      ],
      "calls": [
        "expand_ctrl.createCommand",
        "sub_ctrl.createCommand",
        "text_elem.createCommand"
      ]
    },
    {
      "name": "_pCellControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "expand_ctrl.attachHandle",
        "sub_ctrl.attachHandle",
        "text_elem.attachHandle",
        "this._on_attach_accessibility_contents_handle",
        "this._setDisplay"
      ]
    },
    {
      "name": "_pCellControl.destroyComponent",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.destroyComponent.call",
        "this._text_elem.destroy"
      ]
    },
    {
      "name": "_pCellControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._destroyDisplayer",
        "this._editor.destroy",
        "this._expandCtrl.destroy",
        "this._tempdestroyeditor.destroy"
      ]
    },
    {
      "name": "_pCellControl._makeEventInfoBase",
      "params": [
        "evt_id"
      ],
      "calls": [
        "cellobj._getDataRow"
      ]
    },
    {
      "name": "_pCellControl.on_fire_onexpandup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._makeEventInfoBase",
        "this.onexpandup._fireEvent"
      ]
    },
    {
      "name": "_pCellControl.on_fire_onexpanddown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._makeEventInfoBase",
        "this.onexpandup._fireEvent"
      ]
    },
    {
      "name": "_pCellControl.on_fire_oninput",
      "params": [
        "refcomp"
      ],
      "calls": [
        "this._makeEventInfoBase",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pCellControl.on_fire_ondropdown",
      "params": [
        "obj"
      ],
      "calls": [
        "this.__evtvalue",
        "this._makeEventInfoBase",
        "this.ondropdown._fireCheckEvent"
      ]
    },
    {
      "name": "_pCellControl.on_fire_oncloseup",
      "params": [
        "obj",
        "pretext",
        "posttext",
        "prevalue",
        "postvalue"
      ],
      "calls": [
        "this.__evtvalue",
        "this._makeEventInfoBase",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pCellControl.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key",
        "clickitem"
      ],
      "calls": [
        "subcomp._getRecalcCanvasXY",
        "this._getCurrentStylePadding",
        "this._makeEventInfoBase",
        "this.onclick._fireEvent"
      ]
    },
    {
      "name": "_pCellControl.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key",
        "clickitem"
      ],
      "calls": [
        "subcomp._getRecalcCanvasXY",
        "this._getCurrentStylePadding",
        "this._makeEventInfoBase",
        "this.ondblclick._fireEvent"
      ]
    },
    {
      "name": "_pCellControl._common_fire_lbuttonup",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "button",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "obj",
        "from_refer_comp",
        "from_elem",
        "metaKey"
      ],
      "calls": [
        "this._getWindow",
        "this.on_fire_onclick",
        "window.findComponent"
      ]
    },
    {
      "name": "_pCellControl.on_fire_user_ontouchend",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_ontouchend.call",
        "this._common_fire_lbuttonup"
      ]
    },
    {
      "name": "_pCellControl.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "obj",
        "refer_comp",
        "from_elem",
        "metaKey"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onlbuttonup.call",
        "this._common_fire_lbuttonup"
      ]
    },
    {
      "name": "_pCellControl._on_imeaction",
      "params": [
        "elem",
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._isEnable",
        "this.on_fire_onimeaction",
        "this.on_imeaction_default_action"
      ]
    },
    {
      "name": "_pCellControl.on_imeaction_default_action",
      "params": [
        "elem",
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "meta_key"
      ],
      "calls": [
        "next_comp.setFocus",
        "prev_comp.setFocus",
        "this._getForm",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pCellControl.on_fire_onimeaction",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._view.on_fire_onimeaction"
      ]
    },
    {
      "name": "_pCellControl.__evtvalue",
      "params": [
        "obj",
        "postvalue"
      ],
      "calls": []
    },
    {
      "name": "_pCellControl._destroyDisplayer",
      "params": [
        "b_async"
      ],
      "calls": [
        "nexacro._OnceCallbackTimer.callonce",
        "subcomp.destroy",
        "subcomp.set_visible",
        "this._subComp.destroy"
      ]
    },
    {
      "name": "_pCellControl._getBindDataset",
      "params": [],
      "calls": [
        "this._view._getBindDataSet"
      ]
    },
    {
      "name": "_pCellControl._applyEditorDataset",
      "params": [
        "async",
        "prevalue"
      ],
      "calls": [
        "dataset.setColumn",
        "this._editor._getValueData",
        "this._editor.set_value",
        "this._getBindDataset",
        "this._getDataRow"
      ]
    },
    {
      "name": "_pCellControl._getDataRow",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl._isFakeCell",
      "params": [],
      "calls": [
        "this._getBindDataset",
        "this._getDataRow"
      ]
    },
    {
      "name": "_pCellControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._updateAvailableArea"
      ]
    },
    {
      "name": "_pCellControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl._getClassCSSSelector",
      "params": [],
      "calls": [
        "cssarr.push",
        "nexacro.Component.prototype._getClassCSSSelector.call"
      ]
    },
    {
      "name": "_pCellControl._getElementClassCSSSelector",
      "params": [],
      "calls": [
        "cssarr.push",
        "this._getClassCSSSelector"
      ]
    },
    {
      "name": "_pCellControl._apply_setfocus",
      "params": [
        "evt_name",
        "self_flag"
      ],
      "calls": [
        "nexacro.Component.prototype._apply_setfocus.call"
      ]
    },
    {
      "name": "_pCellControl.on_apply_prop_tooltip",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_tooltip.call",
        "this._getDataRow",
        "this._refinfo._getTooltipText"
      ]
    },
    {
      "name": "_pCellControl.on_fire_onsize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_onsize.call",
        "this._setDisplay"
      ]
    },
    {
      "name": "_pCellControl._setDisplay",
      "params": [
        "v"
      ],
      "calls": [
        "this._control_element.setElementDisplay"
      ]
    },
    {
      "name": "_pCellControl.on_apply_text",
      "params": [],
      "calls": [
        "cellinfo._getDisplayTypeValue",
        "nexacro._toString",
        "text_elem.setElementDecorateText",
        "text_elem.setElementText",
        "this._control_element.bringToFrontElement",
        "this._getDataRow"
      ]
    },
    {
      "name": "_pCellControl.on_apply_wordWrap",
      "params": [],
      "calls": [
        "text_elem.setElementWordWrap",
        "this._getDataRow",
        "this._refinfo._getWordwrap"
      ]
    },
    {
      "name": "_pCellControl.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": [
        "text_elem.setElementTextAlign",
        "this._subComp._setAlign",
        "this._subComp.set_textAlign"
      ]
    },
    {
      "name": "_pCellControl.on_apply_verticalAlign",
      "params": [
        "valign"
      ],
      "calls": [
        "text_elem.setElementVerticalAlign",
        "this._subComp._setAlign",
        "this._subComp.set_verticalAlign"
      ]
    },
    {
      "name": "_pCellControl._needToggle",
      "params": [],
      "calls": [
        "cellinfo._getDisplaytype",
        "cellinfo._getEdittype",
        "cellinfo._getValue",
        "dataset.setColumn",
        "nexacro._toBoolean",
        "this._getBindDataset",
        "this._getDataRow",
        "this._setAccessibilityStatChecked",
        "this._subComp._itemSelect",
        "this._subComp._toggleCheck"
      ]
    },
    {
      "name": "_pCellControl.on_apply_subControlAlign",
      "params": [
        "halign",
        "valign"
      ],
      "calls": [
        "this._getAvailableRect",
        "this._subComp.move"
      ]
    },
    {
      "name": "_pCellControl.on_apply_textDecoration",
      "params": [
        "textDecoration"
      ],
      "calls": [
        "nexacro.TextDecorationObject",
        "this._subComp.set_textDecoration",
        "this._text_elem.setElementTextDecoration"
      ]
    },
    {
      "name": "_pCellControl._hideInnerElement",
      "params": [],
      "calls": [
        "this.__showExpand",
        "this._subComp._treeline_visible",
        "this._subComp.set_visible",
        "this._text_elem.setElementVisible"
      ]
    },
    {
      "name": "_pCellControl._isShowEditor",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl._isEnterDownable",
      "params": [],
      "calls": [
        "cellinfo._getEdittype",
        "this._getDataRow",
        "this._isShowEditor"
      ]
    },
    {
      "name": "_pCellControl._showInnerElement",
      "params": [],
      "calls": [
        "this.__showExpand",
        "this._isShowEditor",
        "this._subComp._treeline_visible",
        "this._subComp.set_visible",
        "this._text_elem.setElementVisible"
      ]
    },
    {
      "name": "_pCellControl.__showExpand",
      "params": [
        "flag"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "this._expandCtrl.set_visible",
        "this._getDataRow",
        "this._updateAvailableArea"
      ]
    },
    {
      "name": "_pCellControl._createDisplayer",
      "params": [
        "displayType"
      ],
      "calls": [
        "this._createBarDisplayer",
        "this._createButtonDisplayer",
        "this._createCalendarDisplayer",
        "this._createCheckboxDisplayer",
        "this._createComboDisplayer",
        "this._createEditDisplayer",
        "this._createImageDisplayer",
        "this._createMaskEditDisplayer",
        "this._createMultiComboDisplayer",
        "this._createRadioItemDisplayer",
        "this._createTextAreaDisplayer",
        "this._createTextDisplayer",
        "this._createTreeDisplayer",
        "this.on_apply_cursor",
        "this.on_apply_textAlign",
        "this.on_apply_verticalAlign",
        "view._applyCellSelection"
      ]
    },
    {
      "name": "this._subComp.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pCellControl._isChangeDisplayer",
      "params": [
        "displayType"
      ],
      "calls": []
    },
    {
      "name": "_pCellControl._updateDisplayer",
      "params": [],
      "calls": [
        "cellinfo._getAttrValue",
        "cellinfo._getDefaultTextAlign",
        "cellinfo._getDisplayTypeValue",
        "textelem.setElementTextAlignByClassCSSSelector",
        "this._changeClientmode",
        "this._createDisplayer",
        "this._createExpandDisplayer",
        "this._destroyDisplayer",
        "this._expandCtrl.destroy",
        "this._getDataRow",
        "this._getWindow",
        "this._hideInnerElement",
        "this._isChangeDisplayer",
        "this._isDisplayDataType",
        "this._isFakeCell",
        "this._showInnerElement",
        "this._subComp.on_created",
        "this._updateEditor",
        "this.on_apply_wordWrap",
        "view._isFakeCell",
        "view._setTreeCellinfo"
      ]
    },
    {
      "name": "_pCellControl._isUpdateArea",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl.on_apply_select",
      "params": [
        "select"
      ],
      "calls": [
        "this._updateAll"
      ]
    },
    {
      "name": "_pCellControl._isSelectedColor",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl._getRemoveLine",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl.__update",
      "params": [
        "status",
        "onlycontents",
        "nochk_updatearea"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellinfo._setCellControlProperty",
        "subComp._changeStatus",
        "subComp._updateAll",
        "this._changeStatus",
        "this._changeUserStatus",
        "this._expandCtrl._changeStatus",
        "this._expandCtrl._updateAll",
        "this._getDataRow",
        "this._getDisplayText",
        "this._isSelectedColor",
        "this._isUpdateArea",
        "this._updateDisplayer",
        "this._updateEditor",
        "this.on_apply_accessibility",
        "this.on_apply_cssclass",
        "this.on_apply_prop_tooltip",
        "this.on_apply_text",
        "this.on_apply_textDecoration",
        "this.set_cssclass"
      ]
    },
    {
      "name": "_pCellControl._updateAll",
      "params": [
        "status",
        "onlycontents",
        "nochk_updatearea"
      ],
      "calls": [
        "this.__update",
        "this._changeClientmode",
        "this._control_element.setElementBorderNone",
        "this._getRemoveLine",
        "this._isRtl",
        "this._showInnerElement"
      ]
    },
    {
      "name": "_pCellControl.on_apply_border",
      "params": [
        "border"
      ],
      "calls": [
        "control_elem._refreshBorderNone",
        "nexacro.Component.prototype.on_apply_border.call"
      ]
    },
    {
      "name": "_pCellControl._updateAllEx",
      "params": [
        "prop",
        "rowidx"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellinfo._setCellControlPropertyForAutosize",
        "subComp._changeStatus",
        "subComp._updateAll",
        "this._changeStatus",
        "this._changeUserStatus",
        "this._control_element.setElementBorderNone",
        "this._expandCtrl._changeStatus",
        "this._expandCtrl._updateAll",
        "this._getDisplayText",
        "this._getRemoveLine",
        "this._isRtl",
        "this._isSelectedColor",
        "this._updateDisplayer",
        "this.on_apply_cssclass",
        "this.on_apply_text",
        "this.on_apply_textDecoration",
        "this.set_cssclass"
      ]
    },
    {
      "name": "_pCellControl.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "this._editor.on_apply_cssclass",
        "this._expandCtrl.on_apply_cssclass",
        "this._subComp.on_apply_cssclass"
      ]
    },
    {
      "name": "_pCellControl.on_apply_cursor",
      "params": [
        "cursor"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_cursor.call",
        "this._subComp.set_cursor"
      ]
    },
    {
      "name": "_pCellControl._getAvailableRect",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pCellControl._changeClientmode",
      "params": [
        "mode"
      ],
      "calls": [
        "nexacro.TextBoxElement",
        "nexacro.TextBoxVirtualFlexElement",
        "this._getDataRow",
        "this._refinfo._getDisplayTypeValue",
        "this._text_elem.destroy",
        "this._updateAvailableArea"
      ]
    },
    {
      "name": "_pCellControl._createExpandDisplayer",
      "params": [],
      "calls": [
        "cellinfo._getAttrValue",
        "expCtrl.createComponent",
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._getDataRow"
      ]
    },
    {
      "name": "_pCellControl._createTextDisplayer",
      "params": [],
      "calls": [
        "text_elem.create",
        "this._changeClientmode",
        "this._getDisplayText",
        "this._getWindow",
        "this.on_apply_text",
        "this.on_apply_textDecoration",
        "this.on_apply_wordWrap"
      ]
    },
    {
      "name": "_pCellControl._createButtonDisplayer",
      "params": [],
      "calls": [
        "controlComp.createComponent",
        "controlComp.set_wordWrap",
        "this._changeClientmode",
        "this._getControlRect",
        "this._getDataRow",
        "this._refinfo._getWordwrap"
      ]
    },
    {
      "name": "_pCellControl._createCheckboxDisplayer",
      "params": [],
      "calls": [
        "controlComp.createComponent",
        "this._changeClientmode"
      ]
    },
    {
      "name": "_pCellControl._createRadioItemDisplayer",
      "params": [],
      "calls": [
        "controlComp.createComponent",
        "this._changeClientmode"
      ]
    },
    {
      "name": "_pCellControl._createImageDisplayer",
      "params": [],
      "calls": [
        "controlComp.createComponent",
        "this._changeClientmode",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._createComboDisplayer",
      "params": [],
      "calls": [
        "controlComp.createComponent",
        "this._changeClientmode",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._createMultiComboDisplayer",
      "params": [],
      "calls": [
        "controlComp.createComponent",
        "this._changeClientmode",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._createCalendarDisplayer",
      "params": [],
      "calls": [
        "controlComp._setAccessibilityEnable",
        "controlComp.createComponent",
        "this._changeClientmode",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._createEditDisplayer",
      "params": [],
      "calls": [
        "controlComp.createComponent",
        "this._changeClientmode",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._createMaskEditDisplayer",
      "params": [],
      "calls": [
        "controlComp.createComponent",
        "this._changeClientmode",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._createTextAreaDisplayer",
      "params": [],
      "calls": [
        "controlComp.createComponent",
        "controlComp.set_wordWrap",
        "this._changeClientmode",
        "this._getControlRect",
        "this._getDataRow",
        "this._refinfo._getWordwrap"
      ]
    },
    {
      "name": "_pCellControl._createBarDisplayer",
      "params": [],
      "calls": [
        "controlComp.createComponent",
        "this._changeClientmode",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._createTreeDisplayer",
      "params": [
        "doc",
        "target"
      ],
      "calls": [
        "controlComp.createComponent",
        "this._changeClientmode",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._updateAvailableArea",
      "params": [
        "force"
      ],
      "calls": [
        "expand_ctrl.move",
        "subcomp.move",
        "this._editor.move",
        "this._getAvailableRect",
        "this._getClientLeft",
        "this._getClientWidth",
        "this._getControlRect",
        "this._isConditionEditor",
        "this._text_elem.setElementMove",
        "this.on_apply_subControlAlign"
      ]
    },
    {
      "name": "_pCellControl._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellControl._getDisplayText",
      "params": [],
      "calls": [
        "this._getDataRow",
        "this._getStringResourceProperty",
        "this._refinfo._getDisplayText"
      ]
    },
    {
      "name": "_pCellControl._isDisplayDataType",
      "params": [
        "displayType"
      ],
      "calls": []
    },
    {
      "name": "_pCellControl._updateEditor",
      "params": [],
      "calls": [
        "editComp.move",
        "text_elem.setElementVisible",
        "this._getControlRect",
        "this._isConditionEditor",
        "this._subComp.set_visible"
      ]
    },
    {
      "name": "_pCellControl._isConditionEditor",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl._getAutoEnter",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl._getAutoUpdateType",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl._showEditor",
      "params": [],
      "calls": [
        "editComp._EditUpdateAll",
        "editComp._changeStatus",
        "editComp._setFocus",
        "editComp.comboedit.setCaretPos",
        "editComp.multicomboedit.setCaretPos",
        "editComp.setCaretPos",
        "editComp.set_height",
        "editComp.set_visible",
        "nexacro._OnceCallbackTimer.callonce",
        "text_elem.setElementVisible",
        "this._createEditor",
        "this._getControlRect",
        "this._isShowEditor",
        "this._subComp._changeStatus",
        "this._subComp.set_visible"
      ]
    },
    {
      "name": "_pCellControl._hideEditor",
      "params": [],
      "calls": [
        "text.setElementVisible",
        "this._destroyEditor",
        "this._editor._getValueData",
        "this._subComp.set_visible"
      ]
    },
    {
      "name": "_pCellControl._hasEditor",
      "params": [],
      "calls": [
        "this._getDataRow",
        "this._refinfo._hasEditor"
      ]
    },
    {
      "name": "_pCellControl._destroyEditor",
      "params": [],
      "calls": [
        "editComp.set_visible",
        "nexacro._OnceCallbackTimer.callonce",
        "tempeditor.destroy",
        "this._control_element.setElementFocus",
        "this._editor.set_height",
        "this._getWindow",
        "this._tempdestroyeditor.destroy",
        "this._tempdestroyeditor_list.pop",
        "this._tempdestroyeditor_list.push",
        "win._indexOfCurrentFocusPaths"
      ]
    },
    {
      "name": "_pCellControl._getFormatSize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl._getControlRect",
      "params": [],
      "calls": [
        "cellinfo._getAttrValue",
        "this._getAvailableRect",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._getDataRow",
        "this._getFormatSize"
      ]
    },
    {
      "name": "_pCellControl._createEditor",
      "params": [],
      "calls": [
        "cellinfo._getEdittype",
        "creator.call",
        "this._destroyEditor",
        "this._getDataRow",
        "this._isComponentKeydownAction"
      ]
    },
    {
      "name": "_pCellControl._createEditor_text",
      "params": [],
      "calls": [
        "cEdit._view._getUseSoftKeyboardValue",
        "cEdit.createComponent",
        "cEdit.set_maxlength",
        "cEdit.set_usesoftkeyboard",
        "cEdit.set_value",
        "cellinfo._getAttrValue",
        "cellinfo._getValue",
        "dataset._getColumnSize",
        "this._getBindDataset",
        "this._getControlRect",
        "this._getDataRow"
      ]
    },
    {
      "name": "_pCellControl._createEditor_mask",
      "params": [],
      "calls": [
        "cMaskEdit._view._getUseSoftKeyboardValue",
        "cMaskEdit.createComponent",
        "cMaskEdit.set_format",
        "cMaskEdit.set_locale",
        "cMaskEdit.set_type",
        "cMaskEdit.set_usesoftkeyboard",
        "cMaskEdit.set_value",
        "cellinfo._getAttrValue",
        "cellinfo._getDisplaytype",
        "cellinfo._getLocale",
        "cellinfo._getValue",
        "this._getControlRect",
        "this._getDataRow"
      ]
    },
    {
      "name": "_pCellControl._createEditor_combo",
      "params": [],
      "calls": [
        "cCombo._view._getUseSoftKeyboardValue",
        "cCombo.createComponent",
        "cCombo.set_usesoftkeyboard",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._createEditor_multicombo",
      "params": [],
      "calls": [
        "cMultiCombo._view._getUseSoftKeyboardValue",
        "cMultiCombo.createComponent",
        "cMultiCombo.set_usesoftkeyboard",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._createEditor_date",
      "params": [],
      "calls": [
        "cCalendar._recalcLayout",
        "cCalendar._view._getUseSoftKeyboardValue",
        "cCalendar.createComponent",
        "cCalendar.set_dateformat",
        "cCalendar.set_editformat",
        "cCalendar.set_locale",
        "cCalendar.set_popuptype",
        "cCalendar.set_usesoftkeyboard",
        "cCalendar.set_value",
        "cellinfo._getAttrValue",
        "cellinfo._getDisplayText",
        "cellinfo._getLocale",
        "cellinfo._getValue",
        "this._getControlRect",
        "this._getDataRow"
      ]
    },
    {
      "name": "_pCellControl._createEditor_textarea",
      "params": [
        "readonly"
      ],
      "calls": [
        "cTextArea._view._getUseSoftKeyboardValue",
        "cTextArea.createComponent",
        "cTextArea.set_maxlength",
        "cTextArea.set_readonly",
        "cTextArea.set_scrollbartype",
        "cTextArea.set_scrolltype",
        "cTextArea.set_usesoftkeyboard",
        "cTextArea.set_value",
        "cTextArea.set_wordWrap",
        "cellinfo._getAttrValue",
        "cellinfo._getDisplayText",
        "cellinfo._getValue",
        "cellinfo._getWordwrap",
        "dataset._getColumnSize",
        "dataset.getColIndex",
        "this._getBindDataset",
        "this._getControlRect",
        "this._getDataRow"
      ]
    },
    {
      "name": "_pCellControl._createEditor_readonly",
      "params": [],
      "calls": [
        "this._createEditor_textarea"
      ]
    },
    {
      "name": "_pCellControl._createEditor_button",
      "params": [],
      "calls": [
        "cButton.createComponent",
        "this._getControlRect"
      ]
    },
    {
      "name": "_pCellControl._setSubControlFocus",
      "params": [
        "bfocus"
      ],
      "calls": [
        "cellobj._getDataRow",
        "cellobj._refinfo._getEdittype",
        "subcomp._apply_setfocus",
        "subcomp._changeStatus",
        "subcomp._setFocus"
      ]
    },
    {
      "name": "_pCellControl._isEditable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl._getTreeStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellControl._getComputedStyleWithProp",
      "params": [
        "prop"
      ],
      "calls": [
        "nexacro._getStyleProperty",
        "this._control_element._getComputedStyleBackgroundColor",
        "this._getCSSStyleValue",
        "this._getCurrentStyleAlign",
        "this._getCurrentStyleBorder",
        "this._getCurrentStyleInheritValue"
      ]
    },
    {
      "name": "_pCellControl._getComputedStyle",
      "params": [
        "is_subcomp"
      ],
      "calls": [
        "this._getComputedStyleWithProp",
        "this._subComp._getComputedStyle"
      ]
    },
    {
      "name": "_pCellControl._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": [
        "subcomp._setComputedStyle"
      ]
    },
    {
      "name": "_pCellControl.on_apply_padding",
      "params": [
        "padding"
      ],
      "calls": [
        "this._updateAvailableArea"
      ]
    },
    {
      "name": "_pCellControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_enable.call",
        "this._expandCtrl._setEnable",
        "this._isEnable",
        "this._subComp._setEnable"
      ]
    },
    {
      "name": "_pCellControl.on_apply_prop_rtl",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_rtl.call",
        "nexacro._isBoolean",
        "nexacro._toBoolean",
        "this._getDataRow",
        "this._refinfo._getAttrValue",
        "this._subComp.on_apply_prop_rtl"
      ]
    },
    {
      "name": "nexacro._CellExpandControl",
      "params": [
        "parent",
        "left",
        "top",
        "right",
        "bottom",
        "controlmode"
      ],
      "calls": [
        "nexacro.Button.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pCellExpand.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.Button.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellExpand._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellExpand._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._apply_status",
        "this._cellinfo._getAttrValue",
        "this._cellobj._getDataRow",
        "this._changeStatus",
        "this.on_apply_readonly",
        "this.set_icon",
        "this.set_text"
      ]
    },
    {
      "name": "_pCellExpand._setAlign",
      "params": [
        "halign",
        "valign"
      ],
      "calls": [
        "this.set_textAlign",
        "this.set_verticalAlign"
      ]
    },
    {
      "name": "_pCellExpand.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._cellobj.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellExpand.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "nexacro._CellButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent",
        "displaymode",
        "controlmode"
      ],
      "calls": [
        "nexacro.Button.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pCellButton.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellButton._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.Button.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellButton.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.Button.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellButton._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "nexacro.Button.prototype._apply_setfocus.call"
      ]
    },
    {
      "name": "_pCellButton._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellButton.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Button.prototype.on_fire_onclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellButton.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Button.prototype.on_fire_ondblclick.call",
        "this._cellobj.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellButton._EditUpdateAll",
      "params": [],
      "calls": [
        "this._cellinfo._getWordwrap",
        "this._cellobj._getDataRow",
        "this._updateAll",
        "this.set_wordWrap"
      ]
    },
    {
      "name": "_pCellButton._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._getDisplayText",
        "cellinfo._getValue",
        "cellobj._getDataRow",
        "this.set_text"
      ]
    },
    {
      "name": "_pCellButton._getValueData",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellButton._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellButton._getComputedStyle",
      "params": [],
      "calls": [
        "nexacro._getComputedStyleProperties",
        "properties.toString"
      ]
    },
    {
      "name": "_pCellButton._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellButton._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._cellobj._getCurrentStyleAlign"
      ]
    },
    {
      "name": "_pCellButton.on_fire_user_onkeyup",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onkeyup.call",
        "this.click"
      ]
    },
    {
      "name": "nexacro._CellProgressBarControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent",
        "controlmode"
      ],
      "calls": [
        "nexacro.ProgressBar.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pCellBar._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.ProgressBar.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellBar._apply_dblclick_event",
      "params": [],
      "calls": [
        "nexacro.Static.prototype.on_fire_ondblclick.call",
        "nexacro._Icon.prototype.on_fire_ondblclick.call",
        "nexacro._ProgressBarItemControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": ".on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._ProgressBarItemControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "this.progressstartcap.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._Icon.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "this.progressendcap.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._Icon.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "this._progressbartext.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Static.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellBar.set_pos",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.ProgressBar.prototype.set_pos.call",
        "this._apply_dblclick_event"
      ]
    },
    {
      "name": "_pCellBar.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.ProgressBar.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellBar.set_text",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.set_text.call",
        "this.set_pos"
      ]
    },
    {
      "name": "_pCellBar._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellBar.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellBar.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._cellobj.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellBar._getDisplayText",
      "params": [],
      "calls": [
        "this._p_parent._getDisplayText"
      ]
    },
    {
      "name": "_pCellBar._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellBar._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._getDisplayText",
        "cellinfo._setCellChildControlProperty",
        "cellobj._getDataRow",
        "this.set_text"
      ]
    },
    {
      "name": "_pCellBar._getComputedStyle",
      "params": [],
      "calls": [
        "nexacro._getComputedStyleProperties",
        "properties.toString"
      ]
    },
    {
      "name": "_pCellBar._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellBar._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._cellobj._getCurrentStyleAlign"
      ]
    },
    {
      "name": "nexacro._CellEditControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent",
        "displaymode",
        "controlmode"
      ],
      "calls": [
        "nexacro.Edit.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pCellEdit.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellEdit._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.Edit.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellEdit.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.Edit.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellEdit._apply_setfocus",
      "params": [
        "evt_name",
        "self_flag",
        "callback"
      ],
      "calls": [
        "_win._isActiveLayerComponent",
        "nexacro.Edit.prototype._apply_setfocus.call",
        "nexacro._OnceCallbackTimer.callonce",
        "this._apply_setfocus",
        "this._getWindow"
      ]
    },
    {
      "name": "_pCellEdit.setOnlyElementFocus",
      "params": [],
      "calls": [
        "this._input_element._applyElementFocus"
      ]
    },
    {
      "name": "_pCellEdit.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.Edit.prototype.on_fire_oninput.call",
        "this._cellobj.on_fire_oninput"
      ]
    },
    {
      "name": "_pCellEdit.on_fire_onimeaction",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Edit.prototype.on_fire_onimeaction.call",
        "this._cellobj.on_fire_onimeaction"
      ]
    },
    {
      "name": "_pCellEdit.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key",
        "clickitem"
      ],
      "calls": [
        "nexacro.Edit.prototype.on_fire_onclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellEdit.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Edit.prototype.on_fire_ondblclick.call",
        "this._cellobj.on_fire_ondblclick",
        "this.setSelect"
      ]
    },
    {
      "name": "_pCellEdit.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellEdit._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellEdit._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellEdit._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._getDisplayText",
        "cellinfo._getValue",
        "cellinfo._setCellChildControlProperty",
        "cellobj._getDataRow",
        "this._view._getUseSoftKeyboardValue",
        "this.set_usesoftkeyboard",
        "this.set_value"
      ]
    },
    {
      "name": "_pCellEdit._setEditingValue",
      "params": [
        "value"
      ],
      "calls": [
        "this.set_value"
      ]
    },
    {
      "name": "_pCellEdit._EditUpdateAll",
      "params": [],
      "calls": [
        "this._updateAll"
      ]
    },
    {
      "name": "_pCellEdit._getEditingText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellEdit._getEditingValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellEdit._getValueData",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellEdit._getComputedStyle",
      "params": [],
      "calls": [
        "nexacro._getComputedStyleProperties",
        "properties.toString"
      ]
    },
    {
      "name": "_pCellEdit._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellEdit._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._input_element._getComputedStyleAlign"
      ]
    },
    {
      "name": "nexacro._CellTextAreaControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent",
        "displaymode",
        "controlmode"
      ],
      "calls": [
        "nexacro.TextArea.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pCellTextArea.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellTextArea._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.TextArea.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellTextArea.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.TextArea.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellTextArea._apply_setfocus",
      "params": [
        "evt_name",
        "self_flag",
        "callback"
      ],
      "calls": [
        "_win._isActiveLayerComponent",
        "nexacro.TextArea.prototype._apply_setfocus.call",
        "nexacro._OnceCallbackTimer.callonce",
        "this._apply_setfocus",
        "this._getWindow"
      ]
    },
    {
      "name": "_pCellTextArea.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.TextArea.prototype.on_fire_oninput.call",
        "this._cellobj.on_fire_oninput"
      ]
    },
    {
      "name": "_pCellTextArea.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key",
        "clickitem"
      ],
      "calls": [
        "nexacro.TextArea.prototype.on_fire_onclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellTextArea.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.TextArea.prototype.on_fire_ondblclick.call",
        "this._cellobj.on_fire_ondblclick",
        "this.setSelect"
      ]
    },
    {
      "name": "_pCellTextArea.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellobj._getDataRow",
        "chars.join",
        "chars.splice",
        "control_elem.getClientHeight",
        "input_elem.setElementVScrollPos",
        "input_elem.stopSysEvent",
        "input_elem.updateElementText",
        "nexacro.TextArea.prototype.on_keydown_basic_action.call",
        "nexacro._OnceCallbackTimer.callonce",
        "nexacro._getTextSize",
        "nexacro._toBoolean",
        "text.split",
        "this._getCaretLine",
        "this._getCurrentStyleInheritValue",
        "this._getReferenceAbsoluteFont",
        "this.getCaretPos",
        "this.getElement"
      ]
    },
    {
      "name": "_pCellTextArea.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellTextArea._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellTextArea._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellinfo._getControlScrollbarsize",
        "cellinfo._getDisplayText",
        "cellinfo._getValue",
        "cellinfo._setCellChildControlProperty",
        "cellobj._getDataRow",
        "this._view._getUseSoftKeyboardValue",
        "this.set_scrollbarsize",
        "this.set_scrollbartype",
        "this.set_scrolltype",
        "this.set_usesoftkeyboard",
        "this.set_value"
      ]
    },
    {
      "name": "_pCellTextArea._setEditingValue",
      "params": [
        "value"
      ],
      "calls": [
        "this.set_value"
      ]
    },
    {
      "name": "_pCellTextArea._EditUpdateAll",
      "params": [],
      "calls": [
        "this._cellinfo._getWordwrap",
        "this._cellobj._getDataRow",
        "this._updateAll",
        "this.set_wordWrap"
      ]
    },
    {
      "name": "_pCellTextArea._getEditingText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellTextArea._getEditingValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellTextArea._getValueData",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellTextArea._getComputedStyle",
      "params": [],
      "calls": [
        "nexacro._getComputedStyleProperties",
        "properties.toString"
      ]
    },
    {
      "name": "_pCellTextArea._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellTextArea._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._input_element._getComputedStyleAlign"
      ]
    },
    {
      "name": "nexacro._CellMaskEditControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent",
        "displaymode",
        "controlmode"
      ],
      "calls": [
        "nexacro.MaskEdit.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pCellMaskEdit.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMaskEdit._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.MaskEdit.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellMaskEdit.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.MaskEdit.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellMaskEdit._apply_setfocus",
      "params": [
        "evt_name",
        "self_flag",
        "callback"
      ],
      "calls": [
        "_win._isActiveLayerComponent",
        "nexacro.MaskEdit.prototype._apply_setfocus.call",
        "nexacro._OnceCallbackTimer.callonce",
        "this._apply_setfocus",
        "this._getWindow"
      ]
    },
    {
      "name": "_pCellMaskEdit.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.MaskEdit.prototype.on_fire_oninput.call",
        "this._cellobj.on_fire_oninput"
      ]
    },
    {
      "name": "_pCellMaskEdit.on_fire_onimeaction",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MaskEdit.prototype.on_fire_onimeaction.call",
        "this._cellobj.on_fire_onimeaction"
      ]
    },
    {
      "name": "_pCellMaskEdit.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key",
        "clickitem"
      ],
      "calls": [
        "nexacro.MaskEdit.prototype.on_fire_onclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellMaskEdit.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MaskEdit.prototype.on_fire_ondblclick.call",
        "this._cellobj.on_fire_ondblclick",
        "this.setSelect"
      ]
    },
    {
      "name": "_pCellMaskEdit._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellMaskEdit._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellinfo._getBindDataset",
        "cellinfo._getValue",
        "cellinfo._setCellChildControlProperty",
        "cellobj._getDataRow",
        "dataset.getRowType",
        "this._view._getUseSoftKeyboardValue",
        "this.set_usesoftkeyboard",
        "this.set_value"
      ]
    },
    {
      "name": "_pCellMaskEdit._setEditingValue",
      "params": [
        "value"
      ],
      "calls": [
        "this.set_value"
      ]
    },
    {
      "name": "_pCellMaskEdit._EditUpdateAll",
      "params": [],
      "calls": [
        "this._updateAll"
      ]
    },
    {
      "name": "_pCellMaskEdit._getEditingText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMaskEdit._getEditingValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMaskEdit._getValueData",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMaskEdit._getComputedStyle",
      "params": [],
      "calls": [
        "nexacro._getComputedStyleProperties",
        "properties.toString"
      ]
    },
    {
      "name": "_pCellMaskEdit._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellMaskEdit._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._input_element._getComputedStyleAlign"
      ]
    },
    {
      "name": "nexacro._CellCalendarPopupControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._CalendarPopupControl.call"
      ]
    },
    {
      "name": "_pCellCalendarPopupControl._getPopupParentPos",
      "params": [],
      "calls": [
        "Math.abs",
        "calendar._p_parent._getPositionInRootComponent",
        "calendar.getElement",
        "nexacro._CalendarPopupControl.prototype._getPopupParentPos.call",
        "nexacro._getElementPositionInFrame"
      ]
    },
    {
      "name": "nexacro._CellCalendarControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent",
        "displaymode",
        "controlmode"
      ],
      "calls": [
        "nexacro.Calendar.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pCellCalendar.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCalendar.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.Calendar.prototype.on_create_contents.call",
        "nexacro._CalendarDropButtonControl.prototype.on_fire_ondblclick.call",
        "nexacro._CalendarEditControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "this.calendaredit.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._CalendarEditControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "this.dropbutton.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._CalendarDropButtonControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellCalendar.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.Calendar.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellCalendar._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "nexacro.Calendar.prototype._apply_setfocus.call"
      ]
    },
    {
      "name": "_pCellCalendar.setOnlyElementFocus",
      "params": [],
      "calls": [
        "this.calendaredit._input_element._applyElementFocus"
      ]
    },
    {
      "name": "_pCellCalendar._getPopupSizeArr",
      "params": [],
      "calls": [
        "nexacro.Calendar.prototype._getPopupSizeArr.call",
        "size.split",
        "this.getOffsetHeight",
        "this.getOffsetWidth"
      ]
    },
    {
      "name": "_pCellCalendar._confirmValue",
      "params": [],
      "calls": [
        "datepicker._changeDate",
        "datepicker.on_fire_ondayclick",
        "this._isPopupVisible",
        "this._on_value_change",
        "this._setValue",
        "this._setZeroCaret"
      ]
    },
    {
      "name": "_pCellCalendar._setValueCtrl",
      "params": [
        "fire_event",
        "post_text",
        "post_value"
      ],
      "calls": [
        "cur_value.trim",
        "edit._setValue",
        "this._on_value_change",
        "this._setValue"
      ]
    },
    {
      "name": "_pCellCalendar._on_value_change",
      "params": [
        "prevalue",
        "postvalue"
      ],
      "calls": [
        "nexacro.Calendar.prototype._on_value_change.call"
      ]
    },
    {
      "name": "_pCellCalendar._createPopupControl",
      "params": [],
      "calls": [
        "nexacro._CellCalendarPopupControl",
        "popupcontrol.createComponent"
      ]
    },
    {
      "name": "_pCellCalendar.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.Calendar.prototype.on_fire_oninput.call",
        "this._cellobj.on_fire_oninput"
      ]
    },
    {
      "name": "_pCellCalendar.on_fire_oncloseup",
      "params": [
        "obj",
        "pretext",
        "posttext",
        "prevalue",
        "postvalue",
        "isselect"
      ],
      "calls": [
        "this._cellobj.on_fire_oncloseup"
      ]
    },
    {
      "name": "_pCellCalendar.on_fire_ondropdown",
      "params": [
        "obj"
      ],
      "calls": [
        "this._cellobj.on_fire_ondropdown"
      ]
    },
    {
      "name": "_pCellCalendar.on_fire_sys_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Calendar.prototype.on_fire_sys_onkeydown.call",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pCellCalendar.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key",
        "clickitem"
      ],
      "calls": [
        "nexacro.Calendar.prototype.on_fire_onclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellCalendar.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Calendar.prototype.on_fire_ondblclick.call",
        "this._cellobj.on_fire_ondblclick",
        "this.setSelect"
      ]
    },
    {
      "name": "_pCellCalendar._on_edit_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.Calendar.prototype._on_edit_oneditclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellCalendar._on_edit_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.Calendar.prototype._on_edit_onkeydown.call"
      ]
    },
    {
      "name": "_pCellCalendar._on_drop_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.Calendar.prototype._on_drop_onclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellCalendar.on_fire_onchanged",
      "params": [
        "obj",
        "pre_text",
        "pre_value",
        "post_text",
        "post_value"
      ],
      "calls": [
        "nexacro.Calendar.prototype.on_fire_onchanged.call",
        "this._cellobj._applyEditorDataset",
        "this._cellobj._getAutoUpdateType"
      ]
    },
    {
      "name": "_pCellCalendar.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCalendar._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellCalendar._getDisplayText",
      "params": [],
      "calls": [
        "this._p_parent._getDisplayText"
      ]
    },
    {
      "name": "_pCellCalendar._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellCalendar._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellinfo._getBindDataset",
        "cellinfo._getControlButtonsize",
        "cellinfo._getControlPopupsize",
        "cellinfo._getControlPopuptype",
        "cellinfo._getDisplayText",
        "cellinfo._getLocale",
        "cellinfo._getValue",
        "cellinfo._setCellChildControlProperty",
        "cellobj._getDataRow",
        "dataset.getRowType",
        "maskobj.changeNormalizeValue",
        "maskobj.removeMask",
        "nexacro._isNull",
        "this._isInvalidValue",
        "this.set_buttonsize",
        "this.set_dateformat",
        "this.set_displayinvalidtext",
        "this.set_displaynulltext",
        "this.set_editformat",
        "this.set_locale",
        "this.set_popupsize",
        "this.set_popuptype",
        "this.set_usesoftkeyboard",
        "this.set_value",
        "v.split",
        "view._getUseSoftKeyboardValue"
      ]
    },
    {
      "name": "_pCellCalendar._setEditingValue",
      "params": [
        "value"
      ],
      "calls": [
        "this.calendaredit.set_value"
      ]
    },
    {
      "name": "_pCellCalendar._EditUpdateAll",
      "params": [],
      "calls": [
        "this._updateAll"
      ]
    },
    {
      "name": "_pCellCalendar._getEditingText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCalendar._getEditingValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCalendar._getValueData",
      "params": [],
      "calls": [
        "this._setValueCtrl"
      ]
    },
    {
      "name": "_pCellCalendar._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.Calendar.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellCalendar._getChildren",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCalendar._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.Calendar.prototype._on_dataset_onvaluechanged.call"
      ]
    },
    {
      "name": "_pCellCalendar._on_dataset_onrowsetchanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.Calendar.prototype._on_dataset_onrowsetchanged.call",
        "this._updateAll"
      ]
    },
    {
      "name": "_pCellCalendar._getComputedStyle",
      "params": [],
      "calls": [
        "nexacro._getComputedStyleProperties",
        "properties.toString"
      ]
    },
    {
      "name": "_pCellCalendar._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellCalendar._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "calendaredit._input_element._getComputedStyleAlign"
      ]
    },
    {
      "name": "_pCellCalendar.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "nexacro.Calendar.prototype.on_apply_readonly.call"
      ]
    },
    {
      "name": "_pCellCalendar._isReadOnly",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._CellComboPopupControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._ComboPopupControl.call"
      ]
    },
    {
      "name": "_pCellComboPopupControl._getPopupParentPos",
      "params": [],
      "calls": [
        "Math.abs",
        "combo._p_parent._getPositionInRootComponent",
        "combo.getElement",
        "nexacro._ComboPopupControl.prototype._getPopupParentPos.call",
        "nexacro._getElementPositionInFrame"
      ]
    },
    {
      "name": "nexacro._CellComboControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent",
        "displaymode",
        "controlmode"
      ],
      "calls": [
        "nexacro.Combo.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pCellCombo.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCombo.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.Combo.prototype.on_create_contents.call",
        "nexacro._ComboButtonControl.prototype.on_fire_ondblclick.call",
        "nexacro._ComboEditControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "this.comboedit.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._ComboEditControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "this.dropbutton.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._ComboButtonControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellCombo.setOnlyElementFocus",
      "params": [],
      "calls": [
        "this.comboedit._input_element._applyElementFocus"
      ]
    },
    {
      "name": "_pCellCombo.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.Combo.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellCombo._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "nexacro.Combo.prototype._apply_setfocus.call"
      ]
    },
    {
      "name": "_pCellCombo.on_fire_oncloseup",
      "params": [
        "obj",
        "beforeIndex",
        "beforeText",
        "beforeValue",
        "afterIndex",
        "afterText",
        "afterValue",
        "isSelect"
      ],
      "calls": [
        "nexacro.Combo.prototype.on_fire_oncloseup.call",
        "this._cellobj.on_fire_oncloseup"
      ]
    },
    {
      "name": "_pCellCombo.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Combo.prototype.on_fire_user_onkeydown.call",
        "this._cellobj.on_fire_user_onkeydown"
      ]
    },
    {
      "name": "_pCellCombo.on_fire_user_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseWheelEventInfo",
        "pThis.on_fire_user_onmousewheel",
        "this.onmousewheel._fireUserEvent"
      ]
    },
    {
      "name": "_pCellCombo.on_fire_sys_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Combo.prototype.on_fire_sys_onmousewheel.call"
      ]
    },
    {
      "name": "_pCellCombo.on_fire_ondropdown",
      "params": [
        "obj"
      ],
      "calls": [
        "this._cellobj.on_fire_ondropdown"
      ]
    },
    {
      "name": "_pCellCombo.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Combo.prototype.on_fire_onclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellCombo.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Combo.prototype.on_fire_ondblclick.call",
        "this._cellobj.on_fire_ondblclick",
        "this.setSelect"
      ]
    },
    {
      "name": "_pCellCombo._on_edit_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.Combo.prototype._on_edit_oneditclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellCombo._on_edit_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.Combo.prototype._on_edit_onkeydown.call"
      ]
    },
    {
      "name": "_pCellCombo._on_drop_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.Combo.prototype._on_drop_onclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellCombo.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.Combo.prototype.on_fire_oninput.call",
        "this._cellobj.on_fire_oninput"
      ]
    },
    {
      "name": "_pCellCombo.on_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_lbuttondown_basic_action.call",
        "this._closePopup",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pCellCombo.on_fire_onitemchanged",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.Combo.prototype.on_fire_onitemchanged.call",
        "this._cellobj._applyEditorDataset",
        "this._cellobj._getAutoUpdateType"
      ]
    },
    {
      "name": "_pCellCombo.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCombo._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellCombo._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellCombo._confirmValue",
      "params": [],
      "calls": [
        "combolist._get_rowobj_status",
        "ds.set_filterstr",
        "this._getItemText",
        "this._getItemValue",
        "this._getRawIndex",
        "this._isPopupVisible",
        "this._on_value_change",
        "this._selectDataset",
        "this._setDefaultProps",
        "this._setEditValue"
      ]
    },
    {
      "name": "_pCellCombo._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellinfo._getControlButtonsize",
        "cellinfo._getControlPopupsize",
        "cellinfo._getControlPopuptype",
        "cellinfo._getControlScrollbarsize",
        "cellinfo._getDisplayText",
        "cellinfo._setCellChildControlProperty",
        "cellobj._getDataRow",
        "this._view._getUseSoftKeyboardValue",
        "this.applyto_bindSource",
        "this.on_apply_value",
        "this.redraw",
        "this.set_buttonsize",
        "this.set_displaynulltext",
        "this.set_popupsize",
        "this.set_popuptype",
        "this.set_scrollbarsize",
        "this.set_text",
        "this.set_usesoftkeyboard",
        "this.set_value"
      ]
    },
    {
      "name": "_pCellCombo._selectDataset",
      "params": [
        "bInit"
      ],
      "calls": [
        "nexacro.Combo.prototype._selectDataset.call"
      ]
    },
    {
      "name": "_pCellCombo._getColumn",
      "params": [
        "ds",
        "index",
        "column"
      ],
      "calls": [
        "ds.getColumn",
        "ds.getColumnNF"
      ]
    },
    {
      "name": "_pCellCombo._getRowCount",
      "params": [
        "ds"
      ],
      "calls": [
        "ds.getRowCount",
        "ds.getRowCountNF"
      ]
    },
    {
      "name": "_pCellCombo._setEditingValue",
      "params": [
        "value"
      ],
      "calls": [
        "this.comboedit.set_value"
      ]
    },
    {
      "name": "_pCellCombo.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellobj._getDataRow",
        "nexacro.Combo.prototype.on_apply_text.call",
        "nexacro._isNull",
        "this._setEditValue"
      ]
    },
    {
      "name": "_pCellCombo._EditUpdateAll",
      "params": [],
      "calls": [
        "this._updateAll"
      ]
    },
    {
      "name": "_pCellCombo._getEditingText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCombo._getEditingValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCombo._getValueData",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCombo._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.Combo.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellCombo._getChildren",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCombo._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.Combo.prototype._on_dataset_onvaluechanged.call"
      ]
    },
    {
      "name": "_pCellCombo._on_dataset_onrowsetchanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.Combo.prototype._on_dataset_onrowsetchanged.call",
        "this._updateAll"
      ]
    },
    {
      "name": "_pCellCombo._getComputedStyle",
      "params": [],
      "calls": [
        "nexacro._getComputedStyleProperties",
        "properties.toString"
      ]
    },
    {
      "name": "_pCellCombo._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellCombo._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this.comboedit._input_element._getComputedStyleAlign"
      ]
    },
    {
      "name": "_pCellCombo._isReadOnly",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCombo._createPopupControl",
      "params": [],
      "calls": [
        "nexacro._CellComboPopupControl",
        "popupcontrol._setType",
        "popupcontrol.createComponent"
      ]
    },
    {
      "name": "nexacro._CellMultiComboPopupControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._MultiComboPopupControl.call"
      ]
    },
    {
      "name": "_pCellMultiComboPopupControl._getPopupParentPos",
      "params": [],
      "calls": [
        "Math.abs",
        "combo._p_parent._getPositionInRootComponent",
        "combo.getElement",
        "nexacro._MultiComboPopupControl.prototype._getPopupParentPos.call",
        "nexacro._getElementPositionInFrame"
      ]
    },
    {
      "name": "nexacro._CellMultiComboControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent",
        "displaymode",
        "controlmode"
      ],
      "calls": [
        "nexacro.MultiCombo.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMultiCombo.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.MultiCombo.prototype.on_create_contents.call",
        "nexacro._MultiComboButtonControl.prototype.on_fire_ondblclick.call",
        "nexacro._MultiComboEditControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "this.multicombotext.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._MultiComboEditControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "this.multicomboedit.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._MultiComboEditControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "this.dropbutton.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._MultiComboButtonControl.prototype.on_fire_ondblclick.call",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellMultiCombo.setOnlyElementFocus",
      "params": [],
      "calls": [
        "this.multicomboedit._input_element._applyElementFocus"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.MultiCombo.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellMultiCombo._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype._apply_setfocus.call"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_fire_oncloseup",
      "params": [
        "obj",
        "beforeIndex",
        "beforeText",
        "beforeValue",
        "afterIndex",
        "afterText",
        "afterValue",
        "isSelect"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype.on_fire_oncloseup.call",
        "this._cellobj.on_fire_oncloseup"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype.on_fire_user_onkeydown.call",
        "this._cellobj.on_fire_user_onkeydown"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_fire_sys_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype.on_fire_sys_onmousewheel.call"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_fire_ondropdown",
      "params": [
        "obj"
      ],
      "calls": [
        "this._cellobj.on_fire_ondropdown"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype.on_fire_onclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype.on_fire_ondblclick.call",
        "this._cellobj.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellMultiCombo._on_edit_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype._on_edit_oneditclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellMultiCombo._on_edit_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype._on_edit_onkeydown.call"
      ]
    },
    {
      "name": "_pCellMultiCombo._on_drop_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype._on_drop_onclick.call",
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.MultiCombo.prototype.on_fire_oninput.call",
        "this._cellobj.on_fire_oninput"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_lbuttondown_basic_action.call",
        "this._closePopup",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_fire_onitemchanged",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype.on_fire_onitemchanged.call",
        "this._cellobj._applyEditorDataset",
        "this._cellobj._getAutoUpdateType"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMultiCombo._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellMultiCombo._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellMultiCombo._confirmValue",
      "params": [],
      "calls": [
        "ds.set_filterstr",
        "multicombolist._get_rowobj_status",
        "this._getItemText",
        "this._getItemValue",
        "this._getRawIndex",
        "this._isPopupVisible",
        "this._on_value_change",
        "this._selectDataset",
        "this._setDefaultProps",
        "this._setEditValue"
      ]
    },
    {
      "name": "_pCellMultiCombo._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellinfo._getControlButtonsize",
        "cellinfo._getControlPopupsize",
        "cellinfo._getControlPopuptype",
        "cellinfo._getControlScrollbarsize",
        "cellinfo._setCellChildControlProperty",
        "cellobj._getDataRow",
        "this._view._getUseSoftKeyboardValue",
        "this.applyto_bindSource",
        "this.on_apply_value",
        "this.redraw",
        "this.set_buttonsize",
        "this.set_displaynulltext",
        "this.set_popupsize",
        "this.set_popuptype",
        "this.set_scrollbarsize",
        "this.set_usesoftkeyboard",
        "this.set_value"
      ]
    },
    {
      "name": "_pCellMultiCombo._selectDataset",
      "params": [
        "bInit"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype._selectDataset.call"
      ]
    },
    {
      "name": "_pCellMultiCombo._getColumn",
      "params": [
        "ds",
        "index",
        "column"
      ],
      "calls": [
        "ds.getColumn",
        "ds.getColumnNF"
      ]
    },
    {
      "name": "_pCellMultiCombo._getRowCount",
      "params": [
        "ds"
      ],
      "calls": [
        "ds.getRowCount",
        "ds.getRowCountNF"
      ]
    },
    {
      "name": "_pCellMultiCombo._setEditingValue",
      "params": [
        "value"
      ],
      "calls": [
        "this.comboedit.set_value"
      ]
    },
    {
      "name": "_pCellMultiCombo.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellobj._getDataRow",
        "nexacro.MultiCombo.prototype.on_apply_text.call",
        "nexacro._isNull",
        "this._setEditValue"
      ]
    },
    {
      "name": "_pCellMultiCombo._EditUpdateAll",
      "params": [],
      "calls": [
        "this._updateAll"
      ]
    },
    {
      "name": "_pCellMultiCombo._getEditingText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMultiCombo._getEditingValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMultiCombo._getValueData",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMultiCombo._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellMultiCombo._getChildren",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMultiCombo._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype._on_dataset_onvaluechanged.call"
      ]
    },
    {
      "name": "_pCellMultiCombo._on_dataset_onrowsetchanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.MultiCombo.prototype._on_dataset_onrowsetchanged.call",
        "this._updateAll"
      ]
    },
    {
      "name": "_pCellMultiCombo._getComputedStyle",
      "params": [],
      "calls": [
        "nexacro._getComputedStyleProperties",
        "properties.toString"
      ]
    },
    {
      "name": "_pCellMultiCombo._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellMultiCombo._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this.multicomboedit._input_element._getComputedStyleAlign"
      ]
    },
    {
      "name": "_pCellMultiCombo._isReadOnly",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellMultiCombo._createPopupControl",
      "params": [],
      "calls": [
        "nexacro._CellMultiComboPopupControl",
        "popupcontrol._setType",
        "popupcontrol.createComponent"
      ]
    },
    {
      "name": "nexacro._CellCheckboxControlBase",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent"
      ],
      "calls": [
        "nexacro.CheckBox.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pCellCheckboxBase._apply_setfocus",
      "params": [
        "evt_name",
        "callback"
      ],
      "calls": []
    },
    {
      "name": "_pCellCheckboxBase._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.CheckBox.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellCheckboxBase.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.CheckBox.prototype.on_create_contents.call",
        "this._adjustAlign"
      ]
    },
    {
      "name": "_pCellCheckboxBase.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.CheckBox.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellCheckboxBase.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellCheckboxBase.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellCheckboxBase._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellCheckboxBase._on_icon_onload",
      "params": [
        "url",
        "width",
        "height"
      ],
      "calls": [
        "nexacro._IconText.prototype._on_icon_onload.call",
        "this._adjustAlign"
      ]
    },
    {
      "name": "_pCellCheckboxBase._adjustAlign",
      "params": [
        "halign",
        "valign",
        "w",
        "h"
      ],
      "calls": [
        "this._cellinfo._getCheckboxsize",
        "this._cellobj._getAvailableRect",
        "this._cellobj._getDataRow",
        "this._on_getFitSize",
        "this.move"
      ]
    },
    {
      "name": "_pCellCheckboxBase._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._adjustAlign",
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellCheckboxBase._getCheckValue",
      "params": [],
      "calls": [
        "cellinfo._getTextValueForDisp",
        "cellobj._getDataRow"
      ]
    },
    {
      "name": "_pCellCheckboxBase._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._setCellChildControlProperty",
        "cellobj._getDataRow",
        "this._cellobj._setAccessibilityStatChecked",
        "this._getCheckValue",
        "this._isChecked",
        "this._setValue",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCellCheckboxBase.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this._changeValue",
        "this._setValue",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCellCheckboxBase._getComputedStyle",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellCheckboxBase._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellCheckboxBase._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._cellobj._getCurrentStyleAlign"
      ]
    },
    {
      "name": "_pCellCheckboxBase._on_getFitSize",
      "params": [
        "w",
        "h"
      ],
      "calls": [
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getImageSize",
        "this._getCSSStyleValue",
        "this._getCurrentStyleBorder",
        "this._view._getRefFormBaseUrl",
        "this.getElement"
      ]
    },
    {
      "name": "nexacro._CellCheckboxControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent",
        "controlmode"
      ],
      "calls": [
        "nexacro._CellCheckboxControlBase.call"
      ]
    },
    {
      "name": "_pCellCheckbox.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._cellobj._isFakeCell",
        "this._cellobj.on_fire_onclick",
        "this._toggleCheck"
      ]
    },
    {
      "name": "_pCellCheckbox.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._cellobj._isFakeCell",
        "this._cellobj.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellCheckbox._toggleCheck",
      "params": [],
      "calls": [
        "cellinfo._getEdittype",
        "cellinfo._getTextValueForDisp",
        "cellinfo._setValue",
        "cellobj._getBindDataset",
        "cellobj._getDataRow",
        "dataset.setColumn",
        "grid._on_fire_onheadvaluechanged",
        "nexacro._isNull",
        "this._isChecked",
        "this.set_value"
      ]
    },
    {
      "name": "_pCellCheckbox._getDisplayText",
      "params": [],
      "calls": [
        "this._p_parent._getDisplayText"
      ]
    },
    {
      "name": "_pCellCheckbox._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._cellobj._getCurrentStyleAlign"
      ]
    },
    {
      "name": "nexacro._CellRadioItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent",
        "controlmode"
      ],
      "calls": [
        "nexacro._RadioItemControl.call"
      ]
    },
    {
      "name": "_pCellRadioItem.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellRadioItem._apply_setfocus",
      "params": [
        "evt_name",
        "callback"
      ],
      "calls": []
    },
    {
      "name": "_pCellRadioItem._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.CheckBox.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellRadioItem.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._RadioItemControl.prototype.on_create_contents.call",
        "this._adjustAlign"
      ]
    },
    {
      "name": "_pCellRadioItem.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro._RadioItemControl.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellRadioItem._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellRadioItem._on_icon_onload",
      "params": [
        "url",
        "width",
        "height"
      ],
      "calls": [
        "nexacro._RadioItemControl.prototype._on_icon_onload.call",
        "this._adjustAlign"
      ]
    },
    {
      "name": "_pCellRadioItem._adjustAlign",
      "params": [
        "halign",
        "valign",
        "w",
        "h"
      ],
      "calls": [
        "this._cellinfo._getRadioitemsize",
        "this._cellobj._getAvailableRect",
        "this._cellobj._getDataRow",
        "this._on_getFitSize",
        "this.move"
      ]
    },
    {
      "name": "_pCellRadioItem._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._adjustAlign",
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellRadioItem._getRadioItemValue",
      "params": [],
      "calls": [
        "cellinfo._getTextValueForDisp",
        "cellobj._getDataRow"
      ]
    },
    {
      "name": "_pCellRadioItem._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._setCellChildControlProperty",
        "cellobj._getDataRow",
        "this._cellobj._setAccessibilityStatChecked",
        "this._getRadioItemValue",
        "this.set_value"
      ]
    },
    {
      "name": "_pCellRadioItem.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCellRadioItem.set_codevalue",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCellRadioItem.on_apply_value",
      "params": [],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pCellRadioItem._getComputedStyle",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellRadioItem._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellRadioItem._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._cellobj._getCurrentStyleAlign"
      ]
    },
    {
      "name": "_pCellRadioItem._on_getFitSize",
      "params": [
        "w",
        "h"
      ],
      "calls": [
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getImageSize",
        "this._getCSSStyleValue",
        "this._getCurrentStyleBorder",
        "this._view._getRefFormBaseUrl",
        "this.getElement"
      ]
    },
    {
      "name": "_pCellRadioItem.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._cellobj._isFakeCell",
        "this._cellobj.on_fire_onclick",
        "this._itemSelect"
      ]
    },
    {
      "name": "_pCellRadioItem.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._cellobj._isFakeCell",
        "this._cellobj.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellRadioItem._itemSelect",
      "params": [],
      "calls": [
        "cellinfo._getEdittype",
        "cellinfo._getTextValueForDisp",
        "cellobj._getBindDataset",
        "cellobj._getDataRow",
        "dataset.setColumn",
        "this.set_value"
      ]
    },
    {
      "name": "_pCellRadioItem.isChecked",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellRadioItem._getDisplayText",
      "params": [],
      "calls": [
        "this._p_parent._getDisplayText"
      ]
    },
    {
      "name": "nexacro._CellImageControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "parent"
      ],
      "calls": [
        "nexacro._ImageAreaControl.call"
      ]
    },
    {
      "name": "_pCellImage._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro._ImageAreaControl.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellImage.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro._ImageAreaControl.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCellImage.on_apply_text",
      "params": [],
      "calls": [
        "this._getDisplayText",
        "this.set_image"
      ]
    },
    {
      "name": "_pCellImage.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellImage.on_fire_user_ontouchstart",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "this._p_parent.on_fire_user_ontouchstart"
      ]
    },
    {
      "name": "_pCellImage.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellImage.on_fire_onsize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro._ImageAreaControl.prototype.on_fire_onsize.call",
        "this.__apply_text"
      ]
    },
    {
      "name": "_pCellImage._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellImage._getDisplayText",
      "params": [],
      "calls": [
        "this._p_parent._getDisplayText"
      ]
    },
    {
      "name": "_pCellImage._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "this._apply_status",
        "this._changeStatus",
        "this._setProperty",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCellImage._setProperty",
      "params": [
        "onlycontrolprop"
      ],
      "calls": [
        "cellinfo._setCellChildControlProperty",
        "cellobj._getDataRow",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pCellImage._adjustAlign",
      "params": [
        "halign",
        "valign"
      ],
      "calls": [
        "this._updateElementPositions",
        "this.set_imagealign"
      ]
    },
    {
      "name": "_pCellImage._getComputedStyle",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellImage._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "_pCellImage._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._cellobj._getCurrentStyleAlign"
      ]
    },
    {
      "name": "nexacro._CellTreeControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pCellTree._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": []
    },
    {
      "name": "_pCellTree._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "nexacro.Component.prototype._getDlgCode.call"
      ]
    },
    {
      "name": "_pCellTree.on_create_contents",
      "params": [],
      "calls": [
        "this._createButton",
        "this._createCheckbox",
        "this._createImage",
        "this._createLines",
        "this._createText"
      ]
    },
    {
      "name": "_pCellTree._createLines",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "nexacro._CellTreeLineControl",
        "this._childctrl_setevent",
        "this._downline_ctrl.createComponent",
        "this._rightline_ctrl.createComponent",
        "this._upline_ctrl.createComponent"
      ]
    },
    {
      "name": "_pCellTree._createCheckbox",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "cellinfo._getAttrValue",
        "cellobj._getDataRow",
        "this._childctrl_setevent",
        "this._chk_ctrl.createComponent"
      ]
    },
    {
      "name": "this._chk_ctrl._getCheckValue",
      "params": [],
      "calls": [
        "cellinfo._getAttrValue",
        "cellobj._getDataRow"
      ]
    },
    {
      "name": "_pCellTree._createImage",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "nexacro._TreeItemIconControl",
        "this._childctrl_setevent",
        "this._img_ctrl.createComponent"
      ]
    },
    {
      "name": "_pCellTree._createButton",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "nexacro._TreeItemIconControl",
        "this._btnimg_ctrl.createComponent",
        "this._childctrl_setevent"
      ]
    },
    {
      "name": "_pCellTree._createText",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "nexacro._TreeItemTextControl",
        "this._childctrl_setevent",
        "this._text_ctrl._setControl",
        "this._text_ctrl.createComponent"
      ]
    },
    {
      "name": "_pCellTree._childctrl_setevent",
      "params": [
        "obj"
      ],
      "calls": [
        "this._p_parent._on_last_lbuttonup",
        "this._p_parent.on_fire_onclick",
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "obj.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_onclick"
      ]
    },
    {
      "name": "obj.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "obj._on_last_lbuttonup",
      "params": [],
      "calls": [
        "this._p_parent._on_last_lbuttonup"
      ]
    },
    {
      "name": "_pCellTree.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._btnimg_ctrl.on_created",
        "this._chk_ctrl.on_created",
        "this._downline_ctrl.on_created",
        "this._img_ctrl.on_created",
        "this._on_created_accessibility_contents",
        "this._rightline_ctrl.on_created",
        "this._text_ctrl.on_created",
        "this._upline_ctrl.on_created"
      ]
    },
    {
      "name": "_pCellTree.on_destroy_contents",
      "params": [],
      "calls": [
        "this._btnimg_ctrl.destroy",
        "this._chk_ctrl.destroy",
        "this._downline_ctrl.destroy",
        "this._img_ctrl.destroy",
        "this._rightline_ctrl.destroy",
        "this._text_ctrl.destroy",
        "this._upline_ctrl.destroy"
      ]
    },
    {
      "name": "_pCellTree.on_apply_text",
      "params": [],
      "calls": [
        "text_ctrl.set_text"
      ]
    },
    {
      "name": "_pCellTree.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key",
        "clickitem"
      ],
      "calls": [
        "this._cellobj.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pCellTree.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key",
        "clickitem"
      ],
      "calls": [
        "this._cellobj.on_fire_onclick"
      ]
    },
    {
      "name": "_pCellTree._isEditTypeTree",
      "params": [],
      "calls": [
        "cellinfo._getEdittype",
        "cellobj._getDataRow"
      ]
    },
    {
      "name": "_pCellTree._getLineHeight",
      "params": [],
      "calls": [
        "this._p_parent._getCurrentStyleBorder"
      ]
    },
    {
      "name": "_pCellTree._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellTree._load_image",
      "params": [
        "img_ctrl",
        "image"
      ],
      "calls": [
        "image.toString",
        "nexacro._getImageLocation",
        "nexacro._getImageSize",
        "nexacro._getURIValue",
        "this._getRefFormBaseUrl",
        "this._on_loadImage"
      ]
    },
    {
      "name": "_pCellTree._on_loadImage",
      "params": [
        "url",
        "imgW",
        "imgH"
      ],
      "calls": [
        "this._adjustSubCompAlign",
        "this._btnimg_ctrl.move",
        "this._img_ctrl.move"
      ]
    },
    {
      "name": "_pCellTree._changeTreeStatus",
      "params": [
        "changestatus",
        "value"
      ],
      "calls": [
        "this._btnimg_ctrl._changeUserStatus",
        "this._img_ctrl._changeUserStatus"
      ]
    },
    {
      "name": "_pCellTree._buttonUpdate",
      "params": [
        "state"
      ],
      "calls": [
        "this._btnimg_ctrl._getCSSStyleValue",
        "this._btnimg_ctrl.move",
        "this._btnimg_ctrl.set_visible",
        "this._cellobj._getDataRow",
        "this._load_image"
      ]
    },
    {
      "name": "_pCellTree._checkUpdate",
      "params": [
        "check"
      ],
      "calls": [
        "this._adjustSubCompAlign",
        "this._chk_ctrl._adjustAlign",
        "this._chk_ctrl._changeStatus",
        "this._chk_ctrl.set_value",
        "this._chk_ctrl.set_visible",
        "this._createCheckbox"
      ]
    },
    {
      "name": "_pCellTree._imageUpdate",
      "params": [
        "state"
      ],
      "calls": [
        "this._adjustSubCompAlign",
        "this._createImage",
        "this._img_ctrl._getCSSStyleValue",
        "this._img_ctrl.set_visible",
        "this._load_image"
      ]
    },
    {
      "name": "_pCellTree._lineUpdate",
      "params": [
        "rowidx",
        "level"
      ],
      "calls": [
        "ctrl._set_line",
        "this._cellinfo._getTreeStartLevel",
        "this._createLeftLine",
        "this._createLines",
        "this._downline_ctrl.set_visible",
        "this._rightline_ctrl.set_visible",
        "this._treeline_visible",
        "this._upline_ctrl.set_visible"
      ]
    },
    {
      "name": "_pCellTree._createLeftLine",
      "params": [
        "rowidx"
      ],
      "calls": [
        "ctrl._set_line",
        "ctrl.createComponent",
        "ctrl.set_height",
        "leftlines.splice",
        "nexacro._CellTreeLineControl",
        "this.__isNextSameLevelInSameParent",
        "this._cellinfo._getTreeLevel",
        "this._cellinfo._getTreeStartLevel",
        "this._getLineHeight"
      ]
    },
    {
      "name": "_pCellTree._toggleItem",
      "params": [
        "bHide",
        "state"
      ],
      "calls": [
        "this._btnimg_ctrl.move",
        "this._btnimg_ctrl.set_visible",
        "this._chk_ctrl.set_visible",
        "this._downline_ctrl.set_visible",
        "this._img_ctrl.set_visible",
        "this._rightline_ctrl.set_visible",
        "this._text_ctrl.set_visible",
        "this._upline_ctrl.set_visible"
      ]
    },
    {
      "name": "_pCellTree.on_apply_prop_tooltip",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_tooltip.call",
        "this._cellinfo._getTooltipText",
        "this._cellobj._getDataRow"
      ]
    },
    {
      "name": "_pCellTree._treeline_visible",
      "params": [
        "v"
      ],
      "calls": [
        "_control_element.setElementVisible",
        "this._downline_ctrl._control_element.setElementVisible",
        "this._rightline_ctrl._control_element.setElementVisible",
        "this._upline_ctrl._control_element.setElementVisible"
      ]
    },
    {
      "name": "_pCellTree.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "this._btnimg_ctrl.on_apply_cssclass",
        "this._chk_ctrl.on_apply_cssclass",
        "this._img_ctrl.on_apply_cssclass",
        "this._text_ctrl.on_apply_cssclass"
      ]
    },
    {
      "name": "_pCellTree.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._btnimg_ctrl._apply_status",
        "this._chk_ctrl._apply_status",
        "this._img_ctrl._apply_status",
        "this._text_ctrl._apply_status"
      ]
    },
    {
      "name": "_pCellTree.on_apply_prop_rtl",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_rtl.call",
        "this._btnimg_ctrl.on_apply_prop_rtl",
        "this._chk_ctrl.on_apply_prop_rtl",
        "this._img_ctrl.on_apply_prop_rtl",
        "this._text_ctrl.on_apply_prop_rtl"
      ]
    },
    {
      "name": "_pCellTree._updateAll",
      "params": [
        "onlycontents",
        "breadonly"
      ],
      "calls": [
        "cellobj._getDataRow",
        "cellobj._isFakeCell",
        "this._adjustSubCompAlign",
        "this._apply_status",
        "this._buttonUpdate",
        "this._cellinfo._getTreeLevel",
        "this._changeStatus",
        "this._changeTreeStatus",
        "this._checkUpdate",
        "this._imageUpdate",
        "this._lineUpdate",
        "this._p_parent._getDisplayText",
        "this._text_ctrl.set_text",
        "this._toggleItem",
        "this.on_apply_prop_tooltip",
        "this.on_apply_readonly",
        "view._getTreeCheck",
        "view._getTreeLevel",
        "view._getTreeStats"
      ]
    },
    {
      "name": "_pCellTree._getCurrentStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._text_ctrl._cell_elem._getComputedStyleAlign"
      ]
    },
    {
      "name": "_pCellTree._adjustSubCompAlign",
      "params": [
        "level"
      ],
      "calls": [
        "cellinfo._getTreeStartLevel",
        "cellobj._getControlRect",
        "cellobj._getCurrentStylePadding",
        "cellobj._getDataRow",
        "elem.setElementPosition",
        "this._btnimg_ctrl.move",
        "this._chk_ctrl.move",
        "this._downline_ctrl.move",
        "this._getLineHeight",
        "this._img_ctrl.move",
        "this._rightline_ctrl.move",
        "this._text_ctrl.move",
        "this._upline_ctrl.move"
      ]
    },
    {
      "name": "_pCellTree._setAlign",
      "params": [
        "halign",
        "valign"
      ],
      "calls": [
        "this._text_ctrl.set_textAlign",
        "this._text_ctrl.set_verticalAlign"
      ]
    },
    {
      "name": "_pCellTree.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._adjustSubCompAlign",
        "this._isRtl"
      ]
    },
    {
      "name": "_pCellTree.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._adjustSubCompAlign"
      ]
    },
    {
      "name": "_pCellTree._getComputedStyle",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellTree._setComputedStyle",
      "params": [
        "ctrl_cs"
      ],
      "calls": []
    },
    {
      "name": "nexacro._TreeItemIconControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro._Icon.call"
      ]
    },
    {
      "name": "_pTreeItemIcon.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "nexacro._TreeItemTextControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Static.call"
      ]
    },
    {
      "name": "nexacro._CellTreeLineControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pCellTreeLine.on_destroy_contents",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCellTreeLine._isEnable",
      "params": [],
      "calls": [
        "this._p_parent._isEnable"
      ]
    },
    {
      "name": "_pCellTreeLine._set_line",
      "params": [
        "left",
        "bottom"
      ],
      "calls": [
        "this._apply_status"
      ]
    },
    {
      "name": "_pCellTreeLine._on_apply_status",
      "params": [
        "oldstatus",
        "status",
        "olduserstatus",
        "userstatus",
        "apply",
        "status_param",
        "value_param",
        "applycssstatus",
        "applycssuserstatus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_apply_status.call",
        "this._control_element.setElementBorderNone"
      ]
    },
    {
      "name": "_pCellTreeLine.on_getIDCSSSelector",
      "params": [],
      "calls": []
    }
  ],
  "CheckBox.js": [
    {
      "name": "nexacro.CheckBoxChangedEventInfo",
      "params": [
        "obj",
        "id",
        "prevalue",
        "postvalue"
      ],
      "calls": []
    },
    {
      "name": "nexacro.CheckBox",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._IconText.call"
      ]
    },
    {
      "name": "_pCheckBox.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._IconText.prototype.on_created_contents.call",
        "this._setAccessibilityStatChecked",
        "this.isChecked"
      ]
    },
    {
      "name": "_pCheckBox.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._IconText.prototype.on_attach_contents_handle.call",
        "this._setAccessibilityStatChecked",
        "this.isChecked"
      ]
    },
    {
      "name": "_pCheckBox.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro._IconText.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pCheckBox.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._changeValue",
        "this._setValue",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCheckBox.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "this._changeValue",
        "this._setValue",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCheckBox.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBox._on_hotkey",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key"
      ],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pCheckBox._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBox.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this._changeValue",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCheckBox.on_apply_value",
      "params": [],
      "calls": [
        "this._changeUserStatus",
        "this.isChecked"
      ]
    },
    {
      "name": "_pCheckBox.set_truevalue",
      "params": [
        "v"
      ],
      "calls": [
        "this._setValue",
        "this.applyto_bindSource",
        "this.isChecked",
        "v.toString"
      ]
    },
    {
      "name": "_pCheckBox.set_falsevalue",
      "params": [
        "v"
      ],
      "calls": [
        "this._setValue",
        "this.applyto_bindSource",
        "this.isChecked",
        "v.toString"
      ]
    },
    {
      "name": "_pCheckBox.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCheckBox.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pCheckBox.isChecked",
      "params": [],
      "calls": [
        "this._isChecked"
      ]
    },
    {
      "name": "_pCheckBox.on_keyup_basic_action",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._isComponentKeydownAction",
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pCheckBox.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_onclick.call",
        "nexacro._isNull",
        "this._isChecked",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_apply_value",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pCheckBox.on_fire_canchange",
      "params": [
        "obj",
        "prevalue",
        "postvalue"
      ],
      "calls": [
        "nexacro.CheckBoxChangedEventInfo",
        "this.canchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pCheckBox.on_fire_onchanged",
      "params": [
        "obj",
        "prevalue",
        "postvalue"
      ],
      "calls": [
        "nexacro.CheckBoxChangedEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pCheckBox._on_click",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._isEnable",
        "this.on_click_basic_action",
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pCheckBox._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "this._setAccessibilityStatChecked",
        "this.isChecked"
      ]
    },
    {
      "name": "_pCheckBox._isChecked",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro._isNull",
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pCheckBox._changeValue",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isNull",
        "nexacro._toBoolean",
        "v.toString"
      ]
    },
    {
      "name": "_pCheckBox._applyStatus",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "this._isChecked",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_apply_value",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    }
  ],
  "CheckBoxSet.js": [
    {
      "name": "nexacro.CheckBoxSet",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "this._initInnerdatasetInfo"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_create_contents",
      "params": [],
      "calls": [
        "this._createCheckBoxSetTextElement",
        "this._on_apply_fittocontents",
        "this._redrawCheckBoxSetItem",
        "this.getElement"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "text_elem.create",
        "this._setInnerDatasetStr",
        "this._update_position",
        "this.on_apply_prop_accessibilitylabel",
        "this.on_apply_prop_itemaccessibilityenable"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_destroy_contents",
      "params": [],
      "calls": [
        "this._destroyCheckBoxSetItemControl",
        "this._destroyCheckBoxSetTextElement",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pCheckBoxSet._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_create_contents_command",
      "params": [],
      "calls": [
        "text_elem.createCommand",
        "this._setInnerDatasetStr"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "text_elem.attachHandle",
        "this._update_position",
        "this.on_apply_prop_accessibilitylabel",
        "this.on_apply_prop_itemaccessibilityenable"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "textElem.setElementSize",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_change_containerPos",
      "params": [
        "/*left",
        "top*/"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet.on_killfocus_basic_action",
      "params": [
        "/*new_focus",
        "new_refer_focus*/"
      ],
      "calls": [
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "rowobj._changeStatus",
        "this._getItem"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_prop_enable",
      "params": [
        "enable"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._redrawListBoxContents",
        "this.set_value"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.findRow",
        "ds.getColumn",
        "index.toString",
        "nexacro.getEnvironment",
        "rows.push",
        "this._convertValueType",
        "this._doSelect",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "val.split"
      ]
    },
    {
      "name": "_pCheckBoxSet._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._setFocus",
      "params": [
        "bResetScroll",
        "dir",
        "bInner"
      ],
      "calls": [
        "this.setFocus"
      ]
    },
    {
      "name": "_pCheckBoxSet._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "comp._on_focus",
        "item._on_focus",
        "nexacro.Component.prototype._on_focus.call",
        "this._do_defocus",
        "this._getInnerdatasetInfo",
        "this._getItem",
        "this._isAccessibilityEnable",
        "this._refreshScroll"
      ]
    },
    {
      "name": "_pCheckBoxSet._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "ds.getRowCount",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this.getElement"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._redrawCheckBoxSetItem"
      ]
    },
    {
      "name": "_pCheckBoxSet._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro.Component.prototype._convertValueType.call",
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "ds.findRow",
        "nexacro._isString",
        "nexacro.getEnvironment",
        "this.on_apply_value",
        "values.filter",
        "values.indexOf",
        "values.join",
        "values.split"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_value",
      "params": [
        "values"
      ],
      "calls": [
        "ds.findRow",
        "ds.getColumn",
        "nexacro._isArray",
        "nexacro.getEnvironment",
        "rows.push",
        "this._doSelect",
        "this._setIndex",
        "this._setText",
        "this.applyto_bindSource",
        "values.split"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_index",
      "params": [
        "v"
      ],
      "calls": [
        "ds.getRowCount",
        "indexes.filter",
        "indexes.indexOf",
        "indexes.join",
        "indexes.split",
        "nexacro._isString",
        "this.on_apply_index",
        "v.replace"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_index",
      "params": [
        "indexes"
      ],
      "calls": [
        "ds.getColumn",
        "indexes.split",
        "nexacro._isArray",
        "nexacro.getEnvironment",
        "this._doSelect",
        "this._select_clear",
        "this._setText",
        "this._setValue",
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_innerdataset",
      "params": [
        "v"
      ],
      "calls": [
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_innerdataset",
      "params": [
        "ds"
      ],
      "calls": [
        "ds._setEventHandler",
        "this._createCheckBoxSetTextElement",
        "this._destroyCheckBoxSetItemControl",
        "this._onRecalcScrollSize",
        "this._parseInnerDataset",
        "this._redrawCheckBoxSetItem",
        "this._redrawListBoxContents",
        "this.getElement"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_codecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_codecolumn"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_codecolumn",
      "params": [
        "codecolumn"
      ],
      "calls": [
        "this._updateItemInfo",
        "this.getElement",
        "this.on_apply_datacolumn",
        "this.on_apply_index"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_datacolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datacolumn"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_datacolumn",
      "params": [
        "datacolumn"
      ],
      "calls": [
        "ds.getColumn",
        "texts.push",
        "this._setText",
        "this._updateItemInfo",
        "this.getElement"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_readonlycolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_readonlycolumn"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_readonlycolumn",
      "params": [
        "readonlycolumn"
      ],
      "calls": [
        "ds.getColumn",
        "this._getContentsItem",
        "this.getElement"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._setAccessibilityFlagReadOnly",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "ds.getColumn",
        "this._changeStatus",
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_itemheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_itemheight"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_itemheight",
      "params": [
        "itemheight"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._redrawListBoxContents",
        "this.getElement"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_itemaccessibilityrole",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilityrole"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_itemaccessibilityrole",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_itemaccessibilitylabel",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilitylabel"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_itemaccessibilitylabel",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_itemaccessibilityenable",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilityenable"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_itemaccessibilityenable",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_itemaccessibilitydescription",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilitydescription"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_itemaccessibilitydescription",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_itemaccessibilityaction",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilityaction"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_itemaccessibilityaction",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_itemaccessibilitydesclevel",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilitydesclevel"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_itemaccessibilitydesclevel",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_acceptvaluetype",
      "params": [
        "v"
      ],
      "calls": [
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_columncount",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_columncount"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_columncount",
      "params": [
        "/*columncnt*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_rowcount",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_rowcount"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_rowcount",
      "params": [
        "/*rowcnt*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_direction",
      "params": [
        "v"
      ],
      "calls": [
        "direction_enum.indexOf",
        "this.on_apply_direction"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_direction",
      "params": [
        "/*dir*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCheckBoxSet.set_textseparator",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_textseparator"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_apply_textseparator",
      "params": [],
      "calls": [
        "ds.getColumn",
        "this._setText"
      ]
    },
    {
      "name": "_pCheckBoxSet.getCount",
      "params": [],
      "calls": [
        "this._getInnerdatasetInfo"
      ]
    },
    {
      "name": "_pCheckBoxSet.getSelectedCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet.getSelect",
      "params": [
        "v"
      ],
      "calls": [
        "this.getCount"
      ]
    },
    {
      "name": "_pCheckBoxSet.getSelectedItems",
      "params": [],
      "calls": [
        "objsorted.sort"
      ]
    },
    {
      "name": "_pCheckBoxSet.clearSelect",
      "params": [],
      "calls": [
        "this._select_clear"
      ]
    },
    {
      "name": "_pCheckBoxSet.redraw",
      "params": [],
      "calls": [
        "this._onRecalcScrollSize",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pCheckBoxSet.setSelect",
      "params": [
        "index",
        "select"
      ],
      "calls": [
        "item.set_selected",
        "nexacro._toBoolean",
        "this._getItem",
        "this._removeindex",
        "this._select_add",
        "this._select_clear",
        "this._select_remove"
      ]
    },
    {
      "name": "_pCheckBoxSet.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pCheckBoxSet.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this._removeEventHandlerToInnerDataset",
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pCheckBoxSet.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet.selectAll",
      "params": [],
      "calls": [
        "this._select_all"
      ]
    },
    {
      "name": "_pCheckBoxSet.setSelectRange",
      "params": [
        "start",
        "end",
        "bSelect"
      ],
      "calls": [
        "nexacro._toBoolean",
        "rows.push",
        "this._do_deselect",
        "this._do_select",
        "this._insertIndex",
        "this._removeindex"
      ]
    },
    {
      "name": "_pCheckBoxSet.setSelectItems",
      "params": [
        "items",
        "bSelect"
      ],
      "calls": [
        "nexacro._toBoolean",
        "rows.push",
        "this._do_deselect",
        "this._do_select",
        "this._insertIndex",
        "this._removeindex"
      ]
    },
    {
      "name": "_pCheckBoxSet._on_dataset_onload",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._redrawCheckBoxSetItem",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pCheckBoxSet._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._parseInnerDataset",
        "this._redrawCheckBoxSetItem",
        "this._redrawListBoxContents",
        "this.on_fire_oninnerdatachanged"
      ]
    },
    {
      "name": "_pCheckBoxSet._on_dataset_onrowsetchanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._parseInnerDataset",
        "this._redrawCheckBoxSetItem",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pCheckBoxSet._on_item_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "item._changeStatus",
        "obj._changeStatus",
        "obj._changeUserStatus",
        "this._getItem"
      ]
    },
    {
      "name": "_pCheckBoxSet._on_item_ondblclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_onitemdblclick"
      ]
    },
    {
      "name": "_pCheckBoxSet._on_beforescroll",
      "params": [
        "prehpos",
        "prevpos",
        "posthpos",
        "postvpos",
        "evttype",
        "evtkind"
      ],
      "calls": [
        "navigator.userAgent.indexOf",
        "nexacro.AnimationFrame",
        "pThis._adjustScrollRows_callback",
        "this._adjustScrollRows_callback",
        "this._aniframe_rowscroll.start",
        "this._scroll_vpos_queue.push"
      ]
    },
    {
      "name": "_pCheckBoxSet._adjustScrollRows_callback",
      "params": [
        "no_ani",
        "pos"
      ],
      "calls": [
        "Math.floor",
        "this._aniframe_rowscroll.start",
        "this._control_element.setElementVScrollPos",
        "this._createListBoxContents",
        "this._getInnerdatasetInfo",
        "this._getItemHeight",
        "this._scroll_vpos_queue.pop"
      ]
    },
    {
      "name": "_pCheckBoxSet._setVScrollDefaultAction",
      "params": [
        "wheelDeltaY"
      ],
      "calls": [
        "this._getItemHeight",
        "this._scrollTo",
        "this.getElement"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "item._on_focus",
        "last_focused._changeUserStatus",
        "nexacro.Component.prototype.on_fire_user_onkeydown.call",
        "this._do_defocus",
        "this._getInnerdatasetInfo",
        "this._getItem",
        "this._getTotalContentsCount",
        "this._getWindow",
        "this._isAccessibilityEnable",
        "this._on_focus",
        "this._refreshScroll"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onlbuttonup.call"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_sys_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "down_item._changeUserStatus",
        "nexacro.Component.prototype.on_fire_sys_onlbuttonup.call",
        "sel_item._changeUserStatus",
        "this._contains",
        "this._deselect_all",
        "this._getItem",
        "this._getWindow",
        "this._select_withmouseevent",
        "this.on_fire_onitemclick"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_sys_onslidestart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslidestart.call"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslide.call",
        "nexacro._isNumber",
        "rows.push",
        "this._deselect_all",
        "this._doMultiSelect",
        "this._getInnerdatasetInfo",
        "this._insertIndex"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_sys_onslideend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslideend.call"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_sys_onflingstart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onflingstart.call"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_sys_onflingend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onflingend.call"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_onitemclick",
      "params": [
        "obj",
        "index",
        "itemtext",
        "itemvalue",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ItemClickEventInfo",
        "nexacro._toBoolean",
        "this.onitemclick._fireEvent"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_canitemchange",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "nexacro._toBoolean",
        "this.canitemchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_onitemchanged",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "nexacro._toBoolean",
        "this.onitemchanged._fireEvent"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_onitemdblclick",
      "params": [
        "obj",
        "index",
        "itemtext",
        "itemvalue",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ItemClickEventInfo",
        "nexacro._toBoolean",
        "this.onitemdblclick._fireEvent"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_fire_sys_onaccessibilitygesture",
      "params": [
        "direction",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "obj._setAccessibilityNotifyEvent",
        "this._getContentsItem",
        "this._getItemByRealIdx"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_keydown_basic_action",
      "params": [
        "/*keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp"
      ],
      "calls": [
        "this._do_defocus",
        "this._do_deselect",
        "this._do_select",
        "this._getInnerdatasetInfo",
        "this._get_rowobj_status",
        "this._insertIndex",
        "this._removeindex",
        "this._select_withkeydownevent",
        "this._select_withkeyupevent",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_keyup_basic_action",
      "params": [
        "/*keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet.on_keyup_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp"
      ],
      "calls": [
        "this._get_rowobj_status"
      ]
    },
    {
      "name": "_pCheckBoxSet.on_item_onmousemove",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "rowobj._changeStatus",
        "this._getItem"
      ]
    },
    {
      "name": "_pCheckBoxSet._redrawListBoxContents",
      "params": [
        "bScrollChange"
      ],
      "calls": [
        "Math.ceil",
        "Math.floor",
        "nexacro._isMobile",
        "this._createListBoxContents",
        "this._getClientHeight",
        "this._getInnerdatasetInfo",
        "this._getItemHeight",
        "this._get_first_visible_row",
        "this._get_last_visible_row",
        "this._recalcContentsMaxSize",
        "this._redrawListBoxContentsAfter",
        "this._redrawListBoxContentsBefore",
        "this.on_apply_index",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCheckBoxSet._redrawListBoxContentsBefore",
      "params": [],
      "calls": [
        "this._destroyListBoxContents"
      ]
    },
    {
      "name": "_pCheckBoxSet._createListBoxContents",
      "params": [
        "start",
        "end",
        "createonly"
      ],
      "calls": [
        "this._addListBoxBufferPage",
        "this._adjustListBoxBufferPage",
        "this._clearListBoxBufferPage",
        "this._getInnerdatasetInfo",
        "this._insertListBoxBufferPage",
        "this._isRange",
        "this._removeListBoxBufferPage",
        "this._resetListBoxBufferPage"
      ]
    },
    {
      "name": "_pCheckBoxSet._destroyListBoxContents",
      "params": [],
      "calls": [
        "this._clearListBoxBufferPage"
      ]
    },
    {
      "name": "_pCheckBoxSet._addListBoxBufferPage",
      "params": [
        "itemcount",
        "itemindex"
      ],
      "calls": [
        "page.push",
        "this._buffer_pages.push",
        "this._createListItemControl"
      ]
    },
    {
      "name": "_pCheckBoxSet._insertListBoxBufferPage",
      "params": [
        "pageindex",
        "itemcount",
        "itemindex"
      ],
      "calls": [
        "page.push",
        "this._buffer_pages.splice",
        "this._createListItemControl"
      ]
    },
    {
      "name": "_pCheckBoxSet._adjustListBoxBufferPage",
      "params": [
        "pageindex"
      ],
      "calls": [
        "this._insertListBoxBufferPage",
        "this._removeListBoxBufferPage"
      ]
    },
    {
      "name": "_pCheckBoxSet._removeListBoxBufferPage",
      "params": [
        "pageindex"
      ],
      "calls": [
        "del_page.hasOwnProperty",
        "this._buffer_pages.splice"
      ]
    },
    {
      "name": "_pCheckBoxSet._clearListBoxBufferPage",
      "params": [],
      "calls": [
        "pages.hasOwnProperty"
      ]
    },
    {
      "name": "_pCheckBoxSet._resetListBoxBufferPage",
      "params": [
        "startindex",
        "endindex"
      ],
      "calls": [
        "this._removeListBoxBufferPage"
      ]
    },
    {
      "name": "_pCheckBoxSet._recalcLayout",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.max",
        "ds.getRowCount",
        "item._on_getFitSize",
        "item.move",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.getElement"
      ]
    },
    {
      "name": "_pCheckBoxSet._recalcContentsMaxSize",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getInnerdatasetInfo",
        "this._getItemHeight",
        "this._onRecalcScrollSize"
      ]
    },
    {
      "name": "_pCheckBoxSet._parseInnerDataset",
      "params": [],
      "calls": [
        "ds.getColumn",
        "ds.getRowCount",
        "nexacro._getTextSize",
        "this._convertValueType",
        "this._getReferenceAbsoluteFont",
        "this._initInnerdatasetInfo",
        "this._setInnerdatasetInfoMaxSize",
        "this._setInnerdatasetInfoRowCount",
        "this._setInnerdatasetInfoRowData",
        "tmp_item._getCurrentStyleInheritValue",
        "tmp_item._on_getFitSize",
        "tmp_item.set_text"
      ]
    },
    {
      "name": "_pCheckBoxSet._doSelect",
      "params": [
        "rows",
        "keepExisting",
        "isNotFireEvent"
      ],
      "calls": [
        "this._doMultiSelect"
      ]
    },
    {
      "name": "_pCheckBoxSet._doSingleSelect",
      "params": [
        "idx",
        "isNotFireEvent"
      ],
      "calls": [
        "this._on_select_change",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pCheckBoxSet._doMultiSelect",
      "params": [
        "rows",
        "keepExisting",
        "isNotFireEvent"
      ],
      "calls": [
        "this._do_deselect",
        "this._is_selected",
        "this._on_select_change",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_withmouseevent",
      "params": [
        "idx"
      ],
      "calls": [
        "item.set_selected",
        "rows.push",
        "this._do_deselect",
        "this._do_select",
        "this._getItem",
        "this._insertIndex",
        "this._removeindex",
        "this._select_add",
        "this._select_remove",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_withkeyupevent",
      "params": [
        "shiftkey"
      ],
      "calls": [
        "rows.toString",
        "this._changeIndex",
        "this._change_status_item_from_key",
        "this._do_deselect",
        "this._do_select",
        "this._getInnerdatasetInfo",
        "this._get_rowobj_status",
        "this._insertIndex",
        "this._p_index.toString",
        "this._removeindex",
        "this._select_clear"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_withkeydownevent",
      "params": [
        "shiftkey"
      ],
      "calls": [
        "rows.toString",
        "this._changeIndex",
        "this._change_status_item_from_key",
        "this._do_deselect",
        "this._do_select",
        "this._getInnerdatasetInfo",
        "this._get_rowobj_status",
        "this._insertIndex",
        "this._p_index.toString",
        "this._removeindex",
        "this._select_clear"
      ]
    },
    {
      "name": "_pCheckBoxSet._do_scroll",
      "params": [
        "dir"
      ],
      "calls": [
        "this._getItemHeight",
        "this._get_first_visible_row",
        "this._scrollTo"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_add",
      "params": [
        "selectIdx",
        "isNotFireEvent"
      ],
      "calls": [
        "info.items.push",
        "info.keys.push",
        "this._innerdataset.getRowCount",
        "this._insertIndex",
        "this._select_replace"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_replace",
      "params": [
        "k",
        "selectIdx"
      ],
      "calls": [
        "this._select_indexOfkey"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_indexOfkey",
      "params": [
        "k"
      ],
      "calls": [
        "nexacro._indexOf"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_remove",
      "params": [
        "selectIdx",
        "isNotFireEvent"
      ],
      "calls": [
        "info.items.splice",
        "info.keys.splice",
        "this._removeindex",
        "this._select_indexOfkey"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_indexOf",
      "params": [
        "selectIdx"
      ],
      "calls": [
        "nexacro._indexOf"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_clear",
      "params": [
        "isNotFireEvent"
      ],
      "calls": [
        "rows.push",
        "this._do_deselect",
        "this._getContentsItem",
        "this._removeindex"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_range",
      "params": [
        "startRow",
        "endRow",
        "keepExisting",
        "dir"
      ],
      "calls": [
        "nexacro._isNumber",
        "rows.push",
        "this._deselect_all",
        "this._doMultiSelect",
        "this._getInnerdatasetInfo",
        "this._insertIndex"
      ]
    },
    {
      "name": "_pCheckBoxSet._deselect_all",
      "params": [
        "isNotFireEvent"
      ],
      "calls": [
        "this._do_deselect",
        "this._getInnerdatasetInfo"
      ]
    },
    {
      "name": "_pCheckBoxSet._do_select",
      "params": [
        "rows",
        "keepExisting",
        "isNotFireEvent"
      ],
      "calls": [
        "this._doMultiSelect"
      ]
    },
    {
      "name": "_pCheckBoxSet._do_deselect",
      "params": [
        "rows",
        "isNotFireEvent"
      ],
      "calls": [
        "nexacro._isArray",
        "nexacro._isNumber",
        "this._is_selected",
        "this._on_select_change"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_commit",
      "params": [
        "jobgbn",
        "row",
        "params",
        "isNotFireEvent"
      ],
      "calls": [
        "this._do_deselect",
        "this._select_add",
        "this._select_remove"
      ]
    },
    {
      "name": "_pCheckBoxSet._set_last_selectfocused",
      "params": [
        "idx",
        "isNotFireEvent"
      ],
      "calls": [
        "this._on_last_selectfocuschanged"
      ]
    },
    {
      "name": "_pCheckBoxSet._on_select_change",
      "params": [
        "idx",
        "isSelected",
        "jobgbn",
        "params",
        "isNotFireEvent"
      ],
      "calls": [
        "rowobj._setAccessibilityInfoCount",
        "rowobj._setAccessibilityInfoIndex",
        "rowobj.set_selected",
        "this._getInnerdatasetInfo",
        "this._getItem",
        "this._select_commit"
      ]
    },
    {
      "name": "_pCheckBoxSet._on_last_selectfocuschanged",
      "params": [
        "newFocused",
        "isNotFireEvent"
      ],
      "calls": [
        "item.getElement",
        "item_control_elem.setElementFocus",
        "this._getItem",
        "this._getItemHeight",
        "this._get_first_visible_row",
        "this._get_last_visible_row",
        "this.getElement",
        "vscrollbar.set_pos"
      ]
    },
    {
      "name": "_pCheckBoxSet._do_defocus",
      "params": [
        "target",
        "bParent"
      ],
      "calls": [
        "_window._removeFromCurrentFocusPath",
        "this._getWindow"
      ]
    },
    {
      "name": "_pCheckBoxSet._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._convertObjectContents",
        "this.set_innerdataset"
      ]
    },
    {
      "name": "_pCheckBoxSet._createListItem",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._CheckBoxSetItemControl"
      ]
    },
    {
      "name": "_pCheckBoxSet._select_all",
      "params": [],
      "calls": [
        "this._select_range"
      ]
    },
    {
      "name": "_pCheckBoxSet._createCheckBoxSetItemControl",
      "params": [],
      "calls": [
        "ds.getColumn",
        "ds.getRowCount",
        "item._setAccessibilityInfoCount",
        "item._setAccessibilityInfoIndex",
        "item._setEventHandler",
        "item._setItemInfo",
        "item.createComponent",
        "item.set_index",
        "item.set_readonly",
        "item.set_text",
        "item.set_value",
        "nexacro._CheckBoxSetItemControl",
        "this._convertValueType"
      ]
    },
    {
      "name": "_pCheckBoxSet._destroyCheckBoxSetItemControl",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._destroyCheckBoxSetTextElement",
      "params": [],
      "calls": [
        "text_elem.destroy"
      ]
    },
    {
      "name": "_pCheckBoxSet._createCheckBoxSetTextElement",
      "params": [],
      "calls": [
        "nexacro.TextBoxElement",
        "text_elem.create",
        "text_elem.setElementSize",
        "text_elem.setElementText",
        "text_elem.setElementTextAlign",
        "text_elem.setElementVerticalAlign",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getWindow",
        "this.getElement"
      ]
    },
    {
      "name": "_pCheckBoxSet._redrawCheckBoxSetItem",
      "params": [],
      "calls": [
        "this._createCheckBoxSetItemControl",
        "this._destroyCheckBoxSetItemControl",
        "this._destroyCheckBoxSetTextElement",
        "this._recalcLayout",
        "this.on_apply_index",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pCheckBoxSet._updateItemInfo",
      "params": [],
      "calls": [
        "ds.getColumn",
        "ds.getRowCount",
        "item._setAccessibilityInfoCount",
        "item._setAccessibilityInfoIndex",
        "item._setItemInfo",
        "this._convertValueType"
      ]
    },
    {
      "name": "_pCheckBoxSet._change_status_item_from_key",
      "params": [
        "curidx",
        "nextidx"
      ],
      "calls": [
        "currowobj._changeStatus",
        "rowobj._changeStatus",
        "this._getItem"
      ]
    },
    {
      "name": "_pCheckBoxSet._get_rowobj_status",
      "params": [
        "status",
        "flag",
        "lastselected"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._changeIndex",
      "params": [
        "v",
        "change_by_script",
        "isNotFireEvent"
      ],
      "calls": [
        "dataset.getColumn",
        "idx.toString",
        "nexacro.getEnvironment",
        "this._convertValueType",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged"
      ]
    },
    {
      "name": "_pCheckBoxSet._insertIndex",
      "params": [
        "v",
        "change_by_script",
        "isNotFireEvent"
      ],
      "calls": [
        "dataset.getColumn",
        "idx.toString",
        "nexacro.getEnvironment",
        "preidx.split",
        "preidx_arr.indexOf",
        "this._convertValueType",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged",
        "v.filter",
        "v.indexOf"
      ]
    },
    {
      "name": "_pCheckBoxSet._removeindex",
      "params": [
        "v",
        "change_by_script",
        "isNotFireEvent"
      ],
      "calls": [
        "dataset.getColumn",
        "idx.toString",
        "nexacro.getEnvironment",
        "postidx.indexOf",
        "postidx.join",
        "postidx.splice",
        "posttext.indexOf",
        "posttext.join",
        "posttext.splice",
        "postvalue.indexOf",
        "postvalue.join",
        "postvalue.splice",
        "preidx.indexOf",
        "this._convertValueType",
        "this._p_index.split",
        "this._p_text.split",
        "this._p_value.split",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged",
        "v.filter",
        "v.indexOf"
      ]
    },
    {
      "name": "_pCheckBoxSet._setValue",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._setIndex",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._setText",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pCheckBoxSet._setItemAccessibility",
      "params": [
        "item"
      ],
      "calls": [
        "item.set_accessibilityaction",
        "item.set_accessibilitydesclevel",
        "item.set_accessibilitydescription",
        "item.set_accessibilityenable",
        "item.set_accessibilitylabel",
        "item.set_accessibilityrole",
        "this._getAccessibilityRole"
      ]
    },
    {
      "name": "_pCheckBoxSet._getItem",
      "params": [
        "index"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._getItemHeight",
      "params": [],
      "calls": [
        "item._on_getFitSize"
      ]
    },
    {
      "name": "_pCheckBoxSet._getContentsItem",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._getContentsCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._isRange",
      "params": [
        "start",
        "end"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._get_first_visible_row",
      "params": [],
      "calls": [
        "Math.floor",
        "this._getItemHeight"
      ]
    },
    {
      "name": "_pCheckBoxSet._get_last_visible_row",
      "params": [
        "bPrecision"
      ],
      "calls": [
        "this._getInnerdatasetInfo",
        "this._get_first_visible_row"
      ]
    },
    {
      "name": "_pCheckBoxSet._get_page_from_rowidx",
      "params": [
        "rowidx"
      ],
      "calls": [
        "Math.floor"
      ]
    },
    {
      "name": "_pCheckBoxSet._refreshScroll",
      "params": [
        "rowidx",
        "direction",
        "keycode"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getInnerdatasetInfo",
        "this._getItemHeight",
        "this.getElement",
        "this.vscrollbar.set_pos"
      ]
    },
    {
      "name": "_pCheckBoxSet._getNextAccessibilityOrderIndex",
      "params": [
        "direction"
      ],
      "calls": [
        "this._getInnerdatasetInfo"
      ]
    },
    {
      "name": "_pCheckBoxSet._is_selected",
      "params": [
        "idx"
      ],
      "calls": [
        "this._select_indexOf"
      ]
    },
    {
      "name": "_pCheckBoxSet._initInnerdatasetInfo",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._getInnerdatasetInfo",
      "params": [
        "prop"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._setInnerdatasetInfoRowCount",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSet._setInnerdatasetInfoRowData",
      "params": [
        "v"
      ],
      "calls": [
        "this._innerdataset_info._rows.push"
      ]
    },
    {
      "name": "_pCheckBoxSet._getTextHeight",
      "params": [],
      "calls": [
        "this._getInnerdatasetInfo"
      ]
    },
    {
      "name": "_pCheckBoxSet._setInnerdatasetInfoMaxSize",
      "params": [
        "w",
        "h"
      ],
      "calls": []
    },
    {
      "name": "nexacro._CheckBoxSetItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.CheckBox.call"
      ]
    },
    {
      "name": "_pCheckBoxSetItemControl._on_click",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSetItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBoxSetItemControl._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "nexacro.Component.prototype._apply_setfocus.call"
      ]
    },
    {
      "name": "_pCheckBoxSetItemControl._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCheckBoxSetItemControl._getAccessibilityLabel",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._getAccessibilityLabel.call",
        "parent._getAccessibilityParentValue",
        "this._isAccessibilityEnable"
      ]
    },
    {
      "name": "_pCheckBoxSetItemControl._getAccessibilityRole",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._getAccessibilityRole.call",
        "parent._getAccessibilityRole",
        "this._isAccessibilityEnable"
      ]
    },
    {
      "name": "_pCheckBoxSetItemControl._setAccessibilityStatFocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "item._getAccessibilityLabel",
        "list._getItem",
        "nexacro.Component.prototype._setAccessibilityStatFocus.call",
        "this._getAccessibilityLabel",
        "this._setAccessibilityLabel"
      ]
    },
    {
      "name": "_pCheckBoxSetItemControl.on_tap_default_action",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp"
      ],
      "calls": [
        "border._getBorderLeftWidth",
        "border._getBorderTopWidth",
        "down_item._changeUserStatus",
        "listbox._getClientXY",
        "listbox._getCurrentStyleBorder",
        "listbox._select_withmouseevent",
        "listbox.on_fire_onitemclick",
        "sel_info_list.shift",
        "this._contains",
        "this._getWindow"
      ]
    },
    {
      "name": "_pCheckBoxSetItemControl.set_index",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSetItemControl.set_value",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSetItemControl.set_selected",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_selected"
      ]
    },
    {
      "name": "_pCheckBoxSetItemControl.on_apply_selected",
      "params": [],
      "calls": [
        "this._changeStatus",
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pCheckBoxSetItemControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCheckBoxSetItemControl._getStringResourceProperty",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSetItemControl.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pCheckBoxSetItemControl.on_fire_sys_onflingstart",
      "params": [
        "elem",
        "touch_manager",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pCheckBoxSetItemControl._setItemInfo",
      "params": [
        "index",
        "value"
      ],
      "calls": []
    }
  ],
  "Combo.js": [
    {
      "name": "nexacro.ComboCloseUpEventInfo",
      "params": [
        "obj",
        "id",
        "beforeIndex",
        "beforeText",
        "beforeValue",
        "afterIndex",
        "afterText",
        "afterValue",
        "is_select"
      ],
      "calls": []
    },
    {
      "name": "nexacro.Combo",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pCombo.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._ComboButtonControl",
        "nexacro._ComboEditControl",
        "this._p_comboedit.createComponent",
        "this._p_dropbutton.createComponent",
        "this.getElement"
      ]
    },
    {
      "name": "_pCombo.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._isDropdownType",
        "this._on_created_accessibility_contents",
        "this._p_comboedit._setReadonlyView",
        "this._p_comboedit.on_apply_usesoftkeyboard",
        "this._p_comboedit.on_created",
        "this._p_dropbutton.on_created",
        "this._recalcLayout",
        "this._setDefaultProps",
        "this._setEventHandlerToComboEdit",
        "this._setEventHandlerToDropButton",
        "this._setInnerDatasetStr",
        "this.on_apply_autoselect",
        "this.on_apply_autoskip",
        "this.on_apply_displaynulltext",
        "this.on_apply_imemode",
        "this.on_apply_index",
        "this.on_apply_innerdataset",
        "this.on_apply_text",
        "this.on_apply_type",
        "this.on_apply_usecontextmenu",
        "this.on_apply_value",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.on_destroy_contents",
      "params": [],
      "calls": [
        "_window._releaseCaptureLock",
        "this._getWindow",
        "this._p_comboedit.destroy",
        "this._p_combolist.destroy",
        "this._p_dropbutton.destroy",
        "this._popupcontrol.destroy",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pCombo._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._filtereddataset.destroy",
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pCombo.on_create_contents_command",
      "params": [],
      "calls": [
        "this._getStringResourceProperty",
        "this._p_comboedit.createCommand",
        "this._p_comboedit.on_apply_usesoftkeyboard",
        "this._p_dropbutton.createCommand",
        "this._recalcLayout",
        "this._setEventHandlerToComboEdit",
        "this._setEventHandlerToDropButton",
        "this.on_apply_autoselect",
        "this.on_apply_autoskip",
        "this.on_apply_displaynulltext",
        "this.on_apply_imemode",
        "this.on_apply_index",
        "this.on_apply_text",
        "this.on_apply_usecontextmenu",
        "this.on_apply_usesoftkeyboard",
        "this.on_apply_value",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._isDropdownType",
        "this._on_attach_accessibility_contents_handle",
        "this._p_comboedit._setReadonlyView",
        "this._p_comboedit.attachHandle",
        "this._p_dropbutton.attachHandle",
        "this._setDefaultProps",
        "this.on_apply_type"
      ]
    },
    {
      "name": "_pCombo.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCombo.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCombo._getInputElement",
      "params": [],
      "calls": [
        "this._p_comboedit._getInputElement"
      ]
    },
    {
      "name": "_pCombo._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "comboedit._changeStatus",
        "comboedit._on_focus",
        "control_elem.setElementFocus",
        "this._isDropdownType",
        "this.getElement"
      ]
    },
    {
      "name": "_pCombo.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._isEnable",
        "this._isReadOnly",
        "this._p_comboedit._setEnable",
        "this._p_combolist._setEnable",
        "this._p_dropbutton._setEnable"
      ]
    },
    {
      "name": "_pCombo.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "this._p_comboedit.on_apply_cssclass",
        "this._p_combolist.on_apply_cssclass",
        "this._p_dropbutton.on_apply_cssclass"
      ]
    },
    {
      "name": "_pCombo.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._getStringResourceProperty",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pCombo.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._createFilteredDataset",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "this._convertValueType",
        "this._createFilteredDataset",
        "this._getIndexFromValue",
        "this._getItemText",
        "this._selectDataset",
        "this._setDefaultProps",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this._updateAccessibilityLabel",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCombo._getDragData",
      "params": [],
      "calls": [
        "comboedit.getSelectedText"
      ]
    },
    {
      "name": "_pCombo._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pCombo.set_text",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pCombo.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "this._getIndexFromText",
        "this._getItemValue",
        "this._selectDataset",
        "this._setDefaultProps",
        "this._setEditValue",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.getElement",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this._convertValueType",
        "this._getIndexFromValue",
        "this._selectDataset",
        "this.applyto_bindSource",
        "this.on_apply_value",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "this._getIndexFromValue",
        "this._getItemText",
        "this._selectDataset",
        "this._setDefaultProps",
        "this._setIndex",
        "this._setText",
        "this._updateAccessibilityLabel",
        "this.getElement"
      ]
    },
    {
      "name": "_pCombo.set_index",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_index",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.on_apply_index",
      "params": [
        "idx"
      ],
      "calls": [
        "ds.getRowCount",
        "form._bind_manager._findBindItem",
        "nexacro._isNumber",
        "this._getForm",
        "this._getItemText",
        "this._getItemValue",
        "this._getMainForm",
        "this._setDefaultProps",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.applyto_bindSource",
        "this.getElement"
      ]
    },
    {
      "name": "_pCombo.set_displaynulltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pCombo.on_apply_displaynulltext",
      "params": [
        "displaynulltext"
      ],
      "calls": [
        "comboedit.set_displaynulltext"
      ]
    },
    {
      "name": "_pCombo.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCombo._isReadOnly",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCombo.on_apply_readonly",
      "params": [],
      "calls": [
        "comboedit._changeStatus",
        "comboedit._setAccessibilityFlagReadOnly",
        "comboedit._setReadonlyView",
        "comboedit.set_readonly",
        "combolist.set_readonly",
        "dropbutton._setEnable",
        "this._changeStatus",
        "this._isDropdownType",
        "this._isEnable",
        "this._isReadOnly"
      ]
    },
    {
      "name": "_pCombo.set_autoselect",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoselect"
      ]
    },
    {
      "name": "_pCombo.on_apply_autoselect",
      "params": [
        "autoselect"
      ],
      "calls": [
        "comboedit.set_autoselect",
        "this._isDropdownType"
      ]
    },
    {
      "name": "_pCombo.set_autoskip",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoskip"
      ]
    },
    {
      "name": "_pCombo.on_apply_autoskip",
      "params": [
        "autoskip"
      ],
      "calls": [
        "comboedit.set_autoskip"
      ]
    },
    {
      "name": "_pCombo.set_usesoftkeyboard",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pCombo.on_apply_usesoftkeyboard",
      "params": [],
      "calls": [
        "this._getUseSoftKeyboardValue",
        "this._p_comboedit.set_usesoftkeyboard"
      ]
    },
    {
      "name": "_pCombo.set_imemode",
      "params": [
        "v"
      ],
      "calls": [
        "imemode_enum.indexOf",
        "this.on_apply_imemode"
      ]
    },
    {
      "name": "_pCombo.on_apply_imemode",
      "params": [
        "imemode"
      ],
      "calls": [
        "comboedit.set_imemode"
      ]
    },
    {
      "name": "_pCombo.set_type",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_type",
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pCombo.on_apply_type",
      "params": [
        "type"
      ],
      "calls": [
        "this._filtereddataset.filter",
        "this.on_apply_autoselect",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pCombo.set_popuptype",
      "params": [
        "v"
      ],
      "calls": [
        "popuptype_enum.indexOf",
        "this.on_apply_popuptype"
      ]
    },
    {
      "name": "_pCombo.on_apply_popuptype",
      "params": [
        "popuptype"
      ],
      "calls": [
        "popupcontrol._setType"
      ]
    },
    {
      "name": "_pCombo.set_popupsize",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCombo.set_usecontextmenu",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usecontextmenu"
      ]
    },
    {
      "name": "_pCombo.set_acceptvaluetype",
      "params": [
        "v"
      ],
      "calls": [
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pCombo.on_apply_usecontextmenu",
      "params": [
        "usecontextmenu"
      ],
      "calls": [
        "comboedit.set_usecontextmenu"
      ]
    },
    {
      "name": "_pCombo.set_innerdataset",
      "params": [
        "v"
      ],
      "calls": [
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset",
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset",
        "v.replace"
      ]
    },
    {
      "name": "_pCombo.on_apply_innerdataset",
      "params": [
        "ds"
      ],
      "calls": [
        "ds._setEventHandler",
        "this._createFilteredDataset",
        "this._p_combolist.setInnerDataset",
        "this._recheckIndex",
        "this._recheckText",
        "this._recheckValue",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.set_codecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_codecolumn"
      ]
    },
    {
      "name": "_pCombo.on_apply_codecolumn",
      "params": [
        "codecolumn"
      ],
      "calls": [
        "this._createFilteredDataset",
        "this._p_combolist.set_codecolumn",
        "this._recheckIndex",
        "this._recheckText",
        "this._recheckValue",
        "this._setDefaultProps",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.set_datacolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datacolumn"
      ]
    },
    {
      "name": "_pCombo.on_apply_datacolumn",
      "params": [
        "datacolumn"
      ],
      "calls": [
        "combolist.set_datacolumn",
        "this._createFilteredDataset",
        "this._recheckIndex",
        "this._recheckText",
        "this._recheckValue",
        "this._setDefaultProps",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.set_buttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_buttonsize"
      ]
    },
    {
      "name": "_pCombo.on_apply_buttonsize",
      "params": [
        "buttonsize"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCombo.set_displayrowcount",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCombo.set_itemheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_itemheight"
      ]
    },
    {
      "name": "_pCombo.on_apply_itemheight",
      "params": [
        "itemheight"
      ],
      "calls": [
        "combolist.set_itemheight"
      ]
    },
    {
      "name": "_pCombo.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.set_visible.call",
        "this._closePopup",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pCombo.set_scrollbarbarminsize",
      "params": [
        "scrollbarbarminsize"
      ],
      "calls": [
        "combolist.set_scrollbarbarminsize"
      ]
    },
    {
      "name": "_pCombo.set_scrollbardecbuttonsize",
      "params": [
        "scrollbardecbuttonsize"
      ],
      "calls": [
        "combolist.set_scrollbardecbuttonsize"
      ]
    },
    {
      "name": "_pCombo.set_scrollbarbaroutsize",
      "params": [
        "scrollbarbaroutsize"
      ],
      "calls": [
        "combolist.set_scrollbarbaroutsize"
      ]
    },
    {
      "name": "_pCombo.set_scrollbarincbuttonsize",
      "params": [
        "scrollbarincbuttonsize"
      ],
      "calls": [
        "combolist.set_scrollbarincbuttonsize"
      ]
    },
    {
      "name": "_pCombo.set_scrollbarsize",
      "params": [
        "scrollbarsize"
      ],
      "calls": [
        "combolist.set_scrollbarsize"
      ]
    },
    {
      "name": "_pCombo.set_scrollbartrackbarsize",
      "params": [
        "scrollbartrackbarsize"
      ],
      "calls": [
        "combolist.set_scrollbartrackbarsize"
      ]
    },
    {
      "name": "_pCombo.set_selectbyarrowkey",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pCombo.dropdown",
      "params": [],
      "calls": [
        "input_elem._is_accept_touch",
        "lastfocus._getLastFocused",
        "this._find_lastFocused",
        "this._selectDataset",
        "this._showPopup",
        "this.isDropdown",
        "this.setFocus"
      ]
    },
    {
      "name": "_pCombo.isDropdown",
      "params": [],
      "calls": [
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pCombo.getCaretPos",
      "params": [],
      "calls": [
        "comboedit.getCaretPos"
      ]
    },
    {
      "name": "_pCombo.getSelect",
      "params": [],
      "calls": [
        "this._p_comboedit.getSelect",
        "this.getCaretPos",
        "this.getElement"
      ]
    },
    {
      "name": "_pCombo.setSelect",
      "params": [
        "start",
        "end"
      ],
      "calls": [
        "this._p_comboedit.setSelect"
      ]
    },
    {
      "name": "_pCombo.getSelectedText",
      "params": [],
      "calls": [
        "this._p_comboedit.getSelectedText",
        "this.getElement"
      ]
    },
    {
      "name": "_pCombo.setSelectedText",
      "params": [
        "v"
      ],
      "calls": [
        "this._isDropdownType",
        "this._p_comboedit.setSelectedText",
        "this.getElement"
      ]
    },
    {
      "name": "_pCombo.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCombo.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this._recheckIndex",
        "this._removeEventHandlerToInnerDataset",
        "this.on_apply_innerdataset",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.getCount",
      "params": [],
      "calls": [
        "this._innerdataset.getRowCount",
        "this._p_combolist.getCount",
        "this.getElement"
      ]
    },
    {
      "name": "_pCombo.redraw",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "this._setDefaultCaret",
        "this._setEditValue"
      ]
    },
    {
      "name": "_pCombo.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pCombo._on_activate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_activate.call",
        "nexacro.Edit.prototype._on_activate.call"
      ]
    },
    {
      "name": "_pCombo._on_dropdown",
      "params": [],
      "calls": [
        "comboedit.setSelect",
        "input_elem._is_accept_touch",
        "this._clearFilteredDataset",
        "this._closePopup",
        "this._getItemText",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._setEditValue",
        "this._showPopup"
      ]
    },
    {
      "name": "_pCombo._on_value_change",
      "params": [
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "this._getIndexFromValue",
        "this._selectDataset",
        "this._updateAccessibilityLabel",
        "this.applyto_bindSource",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged"
      ]
    },
    {
      "name": "_pCombo._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._createFilteredDataset",
        "this._recheckValue",
        "this.on_fire_oninnerdatachanged",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo._on_dataset_onrowsetchanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._createFilteredDataset",
        "this._recheckIndex",
        "this._recheckText",
        "this._recheckValue",
        "this._setDefaultProps",
        "this.redraw",
        "this.set_index"
      ]
    },
    {
      "name": "_pCombo._on_edit_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "input_elem._is_accept_touch",
        "this._closePopup",
        "this._getItemText",
        "this._isDropdownType",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._setEditValue",
        "this._showPopup"
      ]
    },
    {
      "name": "_pCombo.on_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "input_elem._is_accept_touch",
        "nexacro.Component.prototype.on_lbuttondown_basic_action.call",
        "this._closePopup",
        "this._getItemText",
        "this._isDropdownType",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._setEditValue",
        "this._showPopup"
      ]
    },
    {
      "name": "_pCombo.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "combolist._changeIndex",
        "combolist._change_status_item_from_key",
        "combolist._get_rowobj_status",
        "combolist._refreshScroll",
        "combolist.on_apply_index",
        "ds.getColumn",
        "ds.getRowCount",
        "ds.set_filterstr",
        "input_elem._is_accept_touch",
        "this._clearFilteredDataset",
        "this._closePopup",
        "this._getItemText",
        "this._getItemValue",
        "this._getRawIndex",
        "this._isAccessibilityEnable",
        "this._isComponentKeydownAction",
        "this._isDropdownType",
        "this._isEnable",
        "this._isPopupVisible",
        "this._on_value_change",
        "this._selectDataset",
        "this._setDefaultProps",
        "this._setEditValue",
        "this._setFocusToNextComponent",
        "this._showPopup",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo._on_edit_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_keydown_default_action"
      ]
    },
    {
      "name": "_pCombo._on_edit_oninput",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ds.findRowAs",
        "ds.findRowExpr",
        "ds.getRowCount",
        "ds.set_filterstr",
        "input_elem._is_accept_touch",
        "nexacro.ExprParser",
        "nexacro._SystemType.toLowerCase",
        "nexacro._flushCommand",
        "this._closePopup",
        "this._createPopupListBoxControl",
        "this._getParseValue",
        "this._getWindow",
        "this._isDropdownType",
        "this._isEnable",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._showPopup",
        "this.on_fire_oninput"
      ]
    },
    {
      "name": "_pCombo._getParseValue",
      "params": [
        "edit_val"
      ],
      "calls": [
        "edit_val.charAt",
        "regExp.test"
      ]
    },
    {
      "name": "_pCombo._on_edit_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oneditclick"
      ]
    },
    {
      "name": "_pCombo._on_edit_mobile_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "input_elem._is_accept_touch",
        "this._closePopup",
        "this._getItemText",
        "this._isDropdownType",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._setEditValue",
        "this._showPopup",
        "this.on_fire_oneditclick"
      ]
    },
    {
      "name": "_pCombo._on_drop_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_dropdown"
      ]
    },
    {
      "name": "_pCombo._on_drop_mobile_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_dropdown"
      ]
    },
    {
      "name": "_pCombo._on_drop_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_dropdown"
      ]
    },
    {
      "name": "_pCombo._on_list_onitemclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._closePopup",
        "this._getItemText",
        "this._getItemValue",
        "this._getRawIndex",
        "this._isPopupVisible",
        "this._on_value_change",
        "this._selectDataset",
        "this._setDefaultProps",
        "this._setFocusToNextComponent",
        "this.on_fire_onitemclick",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo._on_list_oncloseup",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "_window._releaseCaptureLock",
        "nexacro._isNull",
        "this._changeStatus",
        "this._getWindow",
        "this._p_comboedit._changeStatus",
        "this._p_dropbutton._changeStatus",
        "this._setEditValue",
        "this.on_fire_oncloseup"
      ]
    },
    {
      "name": "_pCombo.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "this._apply_setfocus",
        "this._changeStatus",
        "this._setAccessibilityStatFocus"
      ]
    },
    {
      "name": "_pCombo.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "comboedit._changeStatus",
        "comboedit.setCaretPos",
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this._closePopup",
        "this._isPopupVisible",
        "this.redraw"
      ]
    },
    {
      "name": "_pCombo.on_fire_sys_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "ds.getRowCount",
        "popupcontrol._is_popup",
        "this._find_lastFocused",
        "this._getItemText",
        "this._getItemValue",
        "this._getRootComponent",
        "this._selectDataset",
        "this._setDefaultProps",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged",
        "this.set_index"
      ]
    },
    {
      "name": "_pCombo.on_fire_sys_onaccessibilitygesture",
      "params": [
        "direction",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "combolist._getContentsCount",
        "combolist._getItem",
        "item._setAccessibilityNotifyEvent",
        "this._closePopup",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pCombo.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslide.call",
        "this._popupcontrol._is_popup"
      ]
    },
    {
      "name": "_pCombo.on_fire_sys_onfling",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onfling.call",
        "this._popupcontrol._is_popup"
      ]
    },
    {
      "name": "_pCombo.on_fire_oneditclick",
      "params": [
        "obj",
        "caretpos",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.EditClickEventInfo",
        "this.oneditclick._fireEvent"
      ]
    },
    {
      "name": "_pCombo.on_fire_onitemclick",
      "params": [
        "obj",
        "index",
        "itemtext",
        "itemvalue",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ItemClickEventInfo",
        "this.onitemclick._fireEvent"
      ]
    },
    {
      "name": "_pCombo.on_fire_canitemchange",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "nexacro._toBoolean",
        "this.canitemchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pCombo.on_fire_onitemchanged",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "this.onitemchanged._fireEvent"
      ]
    },
    {
      "name": "_pCombo.on_fire_oncloseup",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue",
        "is_select"
      ],
      "calls": [
        "nexacro.ComboCloseUpEventInfo",
        "nexacro._toBoolean",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pCombo.on_fire_ondropdown",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.EventInfo",
        "this.ondropdown._fireCheckEvent"
      ]
    },
    {
      "name": "_pCombo.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.InputEventInfo",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pCombo.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pCombo.on_fire_sys_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "down_item._stat_change",
        "info.obj._stat_change",
        "sel_info_list.shift",
        "sel_info_list.splice",
        "this.isDropdown"
      ]
    },
    {
      "name": "_pCombo._createListBoxControl",
      "params": [
        "ds"
      ],
      "calls": [
        "combolist._setPopupContains",
        "combolist.createComponent",
        "combolist.setInnerDataset",
        "combolist.set_codecolumn",
        "combolist.set_cssclass",
        "combolist.set_datacolumn",
        "combolist.set_index",
        "combolist.set_itemheight",
        "combolist.set_scrollbarbarminsize",
        "combolist.set_scrollbarbaroutsize",
        "combolist.set_scrollbardecbuttonsize",
        "combolist.set_scrollbarincbuttonsize",
        "combolist.set_scrollbarsize",
        "combolist.set_scrollbartrackbarsize",
        "combolist.set_scrollbartype",
        "combolist.set_scrolltype",
        "nexacro._ComboListControl",
        "this._getVScrollBarType",
        "this._isUsableDataset"
      ]
    },
    {
      "name": "_pCombo._createdListBoxControl",
      "params": [
        "ds"
      ],
      "calls": [
        "combolist._setEventHandler",
        "combolist.on_created"
      ]
    },
    {
      "name": "_pCombo._createPopupControl",
      "params": [],
      "calls": [
        "nexacro._ComboPopupControl",
        "popupcontrol._setType",
        "popupcontrol.createComponent"
      ]
    },
    {
      "name": "_pCombo._createdPopupControl",
      "params": [
        "attach_comp"
      ],
      "calls": [
        "popupcontrol._attach",
        "popupcontrol.on_created"
      ]
    },
    {
      "name": "_pCombo._createPopupListBoxControl",
      "params": [
        "ds"
      ],
      "calls": [
        "this._createListBoxControl",
        "this._createPopupControl",
        "this._createdListBoxControl",
        "this._createdPopupControl",
        "this._isUsableDataset"
      ]
    },
    {
      "name": "_pCombo._createFilteredDataset",
      "params": [],
      "calls": [
        "combolist._onRecalcScrollSize",
        "combolist._redrawListBoxContents",
        "fds.addColumn",
        "fds.clear",
        "fds.insertRow",
        "fds.setColumn",
        "fds.set_enableevent",
        "ids.getColumn",
        "ids.getRowCount",
        "nexacro.Dataset",
        "this._isUsableDataset"
      ]
    },
    {
      "name": "_pCombo._recalcLayout",
      "params": [],
      "calls": [
        "buttonsize.split",
        "comboedit.move",
        "dropbutton.move",
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pCombo._recheckIndex",
      "params": [],
      "calls": [
        "ds.getRowCount",
        "this._getItemText",
        "this._getItemValue",
        "this._setIndex",
        "this._setText",
        "this._setValue"
      ]
    },
    {
      "name": "_pCombo._recheckValue",
      "params": [],
      "calls": [
        "ds._isValidColumn",
        "ds.getRowCount",
        "this._getItemText",
        "this._getItemValue",
        "this._setIndex",
        "this._setText",
        "this._setValue"
      ]
    },
    {
      "name": "_pCombo._recheckText",
      "params": [],
      "calls": [
        "ds.getRowCount",
        "this._getItemText",
        "this._getItemValue",
        "this._setIndex",
        "this._setText",
        "this._setValue"
      ]
    },
    {
      "name": "_pCombo._selectDataset",
      "params": [
        "bInit"
      ],
      "calls": [
        "this._clearFilteredDataset",
        "this._createFilteredDataset"
      ]
    },
    {
      "name": "_pCombo._showPopup",
      "params": [
        "ds",
        "index",
        "use_timer"
      ],
      "calls": [
        "this._on_showPopup"
      ]
    },
    {
      "name": "_pCombo._on_showPopup",
      "params": [
        "ds",
        "index"
      ],
      "calls": [
        "combolist._onRecalcScrollSize",
        "combolist._redrawListBoxContents",
        "combolist._refreshScroll",
        "combolist.set_index",
        "popupcontrol._popupAuto",
        "this._accessibility_showPopup",
        "this._closePopup",
        "this._createPopupListBoxControl",
        "this._getPopupType",
        "this._getWindow",
        "this._isPopupVisible",
        "this._isUsableDataset",
        "this.on_fire_ondropdown",
        "win._setCaptureLock"
      ]
    },
    {
      "name": "_pCombo._applyZoomPopup",
      "params": [],
      "calls": [
        "ds.getRowCount",
        "this._popupcontrol._is_popup",
        "this._selectDataset",
        "this._showPopup"
      ]
    },
    {
      "name": "_pCombo._closePopup",
      "params": [],
      "calls": [
        "_window._releaseCaptureLock",
        "nexacro._refreshWindow",
        "popupcontrol._closePopup",
        "this._accessibility_closePopup",
        "this._getWindow"
      ]
    },
    {
      "name": "_pCombo._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._convertObjectContents",
        "this.set_innerdataset"
      ]
    },
    {
      "name": "_pCombo._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro.Component.prototype._convertValueType.call",
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pCombo._setValue",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCombo._setEditValue",
      "params": [
        "v"
      ],
      "calls": [
        "comboedit._notifyAccessibility",
        "comboedit._setAccessibilityLabel",
        "comboedit._setValue",
        "comboedit._updateAccessibilityLabel",
        "combolist._getItem",
        "this._getIndexFromText",
        "this._isDropdownType",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._setAccessibilityActiveDescendant"
      ]
    },
    {
      "name": "_pCombo._setIndex",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCombo._setText",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pCombo._setDefaultProps",
      "params": [
        "index",
        "value",
        "text"
      ],
      "calls": []
    },
    {
      "name": "_pCombo._setEventHandlerToComboEdit",
      "params": [],
      "calls": [
        "comboedit._setEventHandler"
      ]
    },
    {
      "name": "_pCombo._setEventHandlerToDropButton",
      "params": [],
      "calls": [
        "dropbutton._setEventHandler"
      ]
    },
    {
      "name": "_pCombo._setEventHandlerToListBox",
      "params": [],
      "calls": [
        "combolist._setEventHandler"
      ]
    },
    {
      "name": "_pCombo._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pCombo._setDefaultCaret",
      "params": [],
      "calls": [
        "edit.setCaretPos"
      ]
    },
    {
      "name": "_pCombo._setFocusToNextComponent",
      "params": [],
      "calls": [
        "next_comp._setDefaultCaret",
        "next_comp.setFocus",
        "this._getForm",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pCombo._getColumn",
      "params": [
        "ds",
        "index",
        "column"
      ],
      "calls": [
        "ds.getColumn"
      ]
    },
    {
      "name": "_pCombo._getRowCount",
      "params": [
        "ds"
      ],
      "calls": [
        "ds.getRowCount"
      ]
    },
    {
      "name": "_pCombo._getItemValue",
      "params": [
        "index"
      ],
      "calls": [
        "this._convertValueType",
        "this._filtereddataset.getColumn",
        "this._getColumn"
      ]
    },
    {
      "name": "_pCombo._getItemText",
      "params": [
        "index"
      ],
      "calls": [
        "nexacro._toString",
        "this._filtereddataset.getColumn",
        "this._getColumn"
      ]
    },
    {
      "name": "_pCombo._getIndexFromValue",
      "params": [
        "ds",
        "value"
      ],
      "calls": [
        "ds._isValidColumn",
        "this._getItemValue",
        "this._getRowCount",
        "v.toString",
        "value.toString"
      ]
    },
    {
      "name": "_pCombo._getIndexFromText",
      "params": [
        "ds",
        "text"
      ],
      "calls": [
        "this._getItemText",
        "this._getRowCount"
      ]
    },
    {
      "name": "_pCombo._getRawToListindex",
      "params": [
        "idx"
      ],
      "calls": [
        "this._getFilteredDataset"
      ]
    },
    {
      "name": "_pCombo._getRawIndex",
      "params": [
        "fds",
        "idx"
      ],
      "calls": []
    },
    {
      "name": "_pCombo._getPopupType",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCombo._isUsableDataset",
      "params": [
        "ds"
      ],
      "calls": []
    },
    {
      "name": "_pCombo._isPopupVisible",
      "params": [],
      "calls": [
        "popupcontrol._is_popup"
      ]
    },
    {
      "name": "_pCombo._clearFilteredDataset",
      "params": [],
      "calls": [
        "this._filtereddataset.set_filterstr"
      ]
    },
    {
      "name": "_pCombo._setAccessibilityInfoByHover",
      "params": [
        "control"
      ],
      "calls": [
        "combolist._setAccessibilityInfoByHover",
        "this._isPopupVisible",
        "this._setAccessibilityNotifyEvent"
      ]
    },
    {
      "name": "_pCombo._clearAccessibilityInfoByHover",
      "params": [],
      "calls": [
        "combolist._clearAccessibilityInfoByHover"
      ]
    },
    {
      "name": "_pCombo._getPopupSizeArr",
      "params": [],
      "calls": [
        "size.split"
      ]
    },
    {
      "name": "_pCombo._cancelEvent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCombo._isDropdownType",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._ComboEditControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.Edit.call"
      ]
    },
    {
      "name": "_pComboEditControl._getFromComponent",
      "params": [
        "comp"
      ],
      "calls": [
        "nexacro.Component.prototype._getFromComponent.call",
        "parent._isPopupVisible"
      ]
    },
    {
      "name": "_pComboEditControl.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.isComposing",
        "input_elem.setCompositionComplete",
        "input_elem.stopSysEvent",
        "this._isEnable",
        "this._p_parent._isDropdownType",
        "this._undostack.redo",
        "this._undostack.undo",
        "this._undostack.update"
      ]
    },
    {
      "name": "_pComboEditControl.on_keyup_basic_action",
      "params": [
        "/*keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComboEditControl.on_keyup_basic_action",
      "params": [
        "/*keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComboEditControl.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Edit.prototype.set_value.call",
        "this._setAccessibilityValue"
      ]
    },
    {
      "name": "_pComboEditControl.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "nexacro._ComboButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pComboButtonControl.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "combo._apply_setfocus",
        "nexacro.Component.prototype.on_focus_basic_action.call",
        "this._setAccessibilityStatFocus"
      ]
    },
    {
      "name": "_pComboButtonControl._on_click",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._p_parent._isEnable",
        "this.on_click_basic_action",
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "nexacro._ComboListControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.ListBox.call"
      ]
    },
    {
      "name": "_pComboListControl.on_notify_item_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._do_select"
      ]
    },
    {
      "name": "_pComboListControl.on_notify_item_onlbuttonup",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._contains",
        "this._do_deselect",
        "this._getWindow",
        "this._get_rowobj_status",
        "this.on_fire_onitemclick"
      ]
    },
    {
      "name": "_pComboListControl.on_notify_item_ontouchstart",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._do_select"
      ]
    },
    {
      "name": "_pComboListControl.on_notify_item_ontouchend",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_notify_item_onlbuttonup"
      ]
    },
    {
      "name": "_pComboListControl.on_notify_listbox_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": []
    },
    {
      "name": "_pComboListControl.on_notify_item_onmouseenter",
      "params": [
        "obj",
        "e"
      ],
      "calls": []
    },
    {
      "name": "_pComboListControl.on_notify_item_onmouseleave",
      "params": [
        "obj",
        "e"
      ],
      "calls": []
    },
    {
      "name": "_pComboListControl.on_notify_item_onmousemove",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "rowobj._changeStatus",
        "this._getItem"
      ]
    },
    {
      "name": "_pComboListControl.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "combo._apply_setfocus",
        "combo._setAccessibilityStatFocus"
      ]
    },
    {
      "name": "_pComboListControl.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onkeydown.call"
      ]
    },
    {
      "name": "_pComboListControl.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onlbuttonup.call"
      ]
    },
    {
      "name": "_pComboListControl.on_fire_sys_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onlbuttonup.call"
      ]
    },
    {
      "name": "_pComboListControl.on_fire_sys_ontouchstart",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_ontouchstart.call"
      ]
    },
    {
      "name": "_pComboListControl.on_fire_sys_ontouchend",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_ontouchend.call"
      ]
    },
    {
      "name": "_pComboListControl.on_fire_sys_ontouchcancel",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComboListControl.on_fire_oncloseup",
      "params": [
        "obj"
      ],
      "calls": [
        "rowobj._changeStatus",
        "this._get_rowobj_status",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pComboListControl._createListItem",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._ComboListItemControl"
      ]
    },
    {
      "name": "_pComboListControl._createListItemControl",
      "params": [
        "index"
      ],
      "calls": [
        "Math.max",
        "ds.getColumn",
        "item._setEventHandler",
        "item.createComponent",
        "item.set_index",
        "item.set_readonly",
        "item.set_selected",
        "item.set_text",
        "item.set_value",
        "nexacro._toString",
        "this._convertValueType",
        "this._createListItem",
        "this._getClientWidth",
        "this._getItemHeight",
        "this._setItemAccessibility"
      ]
    },
    {
      "name": "_pComboListControl._change_status_item_from_key",
      "params": [
        "curidx",
        "nextidx"
      ],
      "calls": [
        "currowobj._changeStatus",
        "rowobj._changeStatus",
        "this._getItem"
      ]
    },
    {
      "name": "_pComboListControl._setAccessibilityNotifyEvent",
      "params": [
        "direction"
      ],
      "calls": [
        "nexacro.ListBox.prototype._setAccessibilityNotifyEvent.call",
        "this._p_parent._setAccessibilityNotifyEvent"
      ]
    },
    {
      "name": "_pComboListControl._changeIndex",
      "params": [
        "v"
      ],
      "calls": [
        "dataset.getColumn",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pComboListControl._get_rowobj_status",
      "params": [
        "status",
        "flag"
      ],
      "calls": []
    },
    {
      "name": "_pComboListControl._get_all_rowobj_status",
      "params": [
        "status",
        "flag"
      ],
      "calls": [
        "ret.push"
      ]
    },
    {
      "name": "nexacro._ComboListItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._ListBoxItemControl.call"
      ]
    },
    {
      "name": "_pComboListItemControl.on_fire_sys_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onlbuttonup.call",
        "this._getWindow",
        "window.findComponent"
      ]
    },
    {
      "name": "_pComboListItemControl.on_fire_sys_ontouchend",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_ontouchend.call",
        "this._getWindow",
        "window.findComponent"
      ]
    },
    {
      "name": "_pComboListItemControl.on_tap_basic_action",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "nexacro._ComboPopupControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.PopupControl.call"
      ]
    },
    {
      "name": "_pComboPopupControl._popupAuto",
      "params": [],
      "calls": [
        "nexacro._flushCommand",
        "this._getPopupPosition",
        "this._getPopupPositionCenter",
        "this._getRootFrame",
        "this._getWindow",
        "this._popupBy"
      ]
    },
    {
      "name": "_pComboPopupControl._setType",
      "params": [
        "type"
      ],
      "calls": []
    },
    {
      "name": "_pComboPopupControl._getElementPosition",
      "params": [],
      "calls": [
        "combo.getElement",
        "nexacro._getElementPositionInFrame"
      ]
    },
    {
      "name": "_pComboPopupControl._getPopupParentPos",
      "params": [],
      "calls": [
        "combo.getElement",
        "nexacro._getElementPositionInFrame",
        "rootframe.getElement",
        "this._getRootFrame"
      ]
    },
    {
      "name": "_pComboPopupControl._getPopupPosition",
      "params": [],
      "calls": [
        "Math.max",
        "Math.round",
        "combo._getPopupSizeArr",
        "combo._getVScrollBarSize",
        "combo._selectDataset",
        "combolist._getCurrentStyleBorder",
        "combolist._getCurrentStylePadding",
        "combolist._getItemHeight",
        "combolist._on_getFitSize",
        "combolist_bordersize._getBorderHeight",
        "nexacro._getDevicePixelRatio",
        "nexacro._getElementPositionInFrame",
        "nexacro._getElementScreenPosition",
        "nexacro._getScreenAvailHeight",
        "nexacro._getWindowHandleClientHeight",
        "nexacro._getWindowHandleClientWidth",
        "nexacro._getWindowOffsetPosition",
        "rootframe.getElement",
        "this._getPopupParentPos",
        "this._getRootFrame",
        "this._getWindow"
      ]
    },
    {
      "name": "_pComboPopupControl._getPopupPositionCenter",
      "params": [],
      "calls": [
        "Math.round",
        "combo._getPopupSizeArr",
        "combo._getVScrollBarSize",
        "combo._selectDataset",
        "combo.getElement",
        "combolist._getCurrentStyleBorder",
        "combolist._getCurrentStylePadding",
        "combolist._getItemHeight",
        "combolist._on_getFitSize",
        "combolist_bordersize._getBorderHeight",
        "nexacro._getDevicePixelRatio",
        "nexacro._getWindowDestinationHandle",
        "nexacro._getWindowHandleClientHeight",
        "nexacro._getWindowHandleClientWidth",
        "this._getWindow"
      ]
    },
    {
      "name": "_pComboPopupControl._setZoom",
      "params": [
        "scale"
      ],
      "calls": [
        "elem.setElementZoom",
        "nexacro.ScrollableControlElement.prototype.setElementZoom.call",
        "this.getElement"
      ]
    }
  ],
  "CompBase.js": [
    {
      "name": "nexacro.Component",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._EventSinkObject.call",
        "this._calcArrangePosition",
        "this._calcBasisSize",
        "this._findForm",
        "this._makeStatusMap",
        "this._parseArrangeInfo",
        "this._setMaxheight",
        "this._setMaxwidth",
        "this._setMinheight",
        "this._setMinwidth",
        "this._setWidth"
      ]
    },
    {
      "name": "_pComponent.createComponent",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "this._getWindow",
        "this._initComponent",
        "this.onCreateComponent",
        "this.onCreateComponentAfter",
        "this.on_created"
      ]
    },
    {
      "name": "_pComponent.onCreateComponent",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "this._applyAccessibility",
        "this._applyProperties",
        "this._createControlElement",
        "this._initContents",
        "this._initControlElement"
      ]
    },
    {
      "name": "_pComponent.onCreateComponentAfter",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._initComponent",
      "params": [],
      "calls": [
        "this._initUniqueID"
      ]
    },
    {
      "name": "_pComponent._initUniqueID",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._createControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "this.getElement",
        "this.on_create_control_element"
      ]
    },
    {
      "name": "_pComponent.on_create_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "this.on_create_frame_control_element",
        "this.on_create_normal_control_element",
        "this.on_create_popup_control_element",
        "this.on_create_scrollable_control_element",
        "this.on_create_tablecell_control_element"
      ]
    },
    {
      "name": "_pComponent.on_create_normal_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setLinkedControl",
        "nexacro.ControlElement"
      ]
    },
    {
      "name": "_pComponent.on_create_scrollable_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setLinkedControl",
        "nexacro.ScrollableControlElement"
      ]
    },
    {
      "name": "_pComponent.on_create_frame_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setLinkedControl",
        "nexacro.FrameControlElement"
      ]
    },
    {
      "name": "_pComponent.on_create_tablecell_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setLinkedControl",
        "nexacro.CellControlElement"
      ]
    },
    {
      "name": "_pComponent.on_create_popup_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setLinkedControl",
        "nexacro.ControlElement"
      ]
    },
    {
      "name": "_pComponent.on_create_popupscrollable_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setLinkedControl",
        "nexacro.ScrollableControlElement"
      ]
    },
    {
      "name": "_pComponent._initControlElement",
      "params": [],
      "calls": [
        "this._initControlElementCssInfo",
        "this._initControlElementInfo",
        "this._initControlElementLayoutProps",
        "this._initControlElementNormalProps",
        "this._initControlElementStyleProps"
      ]
    },
    {
      "name": "_pComponent._initControlElementInfo",
      "params": [],
      "calls": [
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._initControlElementCssInfo",
      "params": [],
      "calls": [
        "this._makeCSSMapInfo",
        "this._setControlElementCssMapInfo",
        "this._setControlElementCssSelector"
      ]
    },
    {
      "name": "_pComponent._initControlElementNormalProps",
      "params": [],
      "calls": [
        "this._applyElementVisible",
        "this._registerHotkey",
        "this.on_apply_prop_rtl"
      ]
    },
    {
      "name": "_pComponent._initControlElementStyleProps",
      "params": [],
      "calls": [
        "control_elem.setElementBackground",
        "control_elem.setElementBorder",
        "control_elem.setElementBorderRadius",
        "control_elem.setElementBoxShadow",
        "control_elem.setElementColor",
        "control_elem.setElementCursor",
        "control_elem.setElementEdge",
        "control_elem.setElementFont",
        "control_elem.setElementLetterSpacing",
        "control_elem.setElementOpacity",
        "control_elem.setElementPadding",
        "control_elem.setElementTextDecoration",
        "control_elem.setElementToolTip",
        "control_elem.setElementWordSpacing",
        "control_elem.setElementWordWrap",
        "nexacro._isNull",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._initControlElementLayoutProps",
      "params": [],
      "calls": [
        "control_elem.clearElementPosition",
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "this._adjustPosition",
        "this._calcArrangePosition",
        "this._calcBasisSize",
        "this._isFluidContainer",
        "this._setDefaultSize",
        "this._setLayoutContentsProps",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._applyProperties",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "this._getForm",
        "this._setLocale",
        "this.onApplyProperties",
        "this.on_apply_hittesttype",
        "this.on_apply_positionstep",
        "this.on_apply_prop_stringresource",
        "this.on_apply_prop_taborder",
        "this.on_apply_prop_tooltip"
      ]
    },
    {
      "name": "_pComponent.onApplyProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._applyAccessibility",
      "params": [],
      "calls": [
        "this.on_apply_accessibility"
      ]
    },
    {
      "name": "_pComponent._initContents",
      "params": [],
      "calls": [
        "this.onCreateContents"
      ]
    },
    {
      "name": "_pComponent.onCreateContents",
      "params": [],
      "calls": [
        "this.on_create_contents"
      ]
    },
    {
      "name": "_pComponent.on_create_contents",
      "params": [],
      "calls": [
        "this._on_create_accessibility_contents"
      ]
    },
    {
      "name": "_pComponent.on_created",
      "params": [
        "window"
      ],
      "calls": [
        "this.onCreated",
        "this.onCreatedAfter"
      ]
    },
    {
      "name": "_pComponent.onCreated",
      "params": [
        "window"
      ],
      "calls": [
        "this._control_element._setElementLayoutPosition",
        "this._createdContents",
        "this._createdControlElement",
        "this._createdControlElementLayoutProps",
        "this._createdControlElementStatus",
        "this._getWindow",
        "this._isFluidContainer",
        "this._update_position_fluid"
      ]
    },
    {
      "name": "_pComponent.onCreatedAfter",
      "params": [
        "resultCreated"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._on_created_accessibility_contents"
      ]
    },
    {
      "name": "_pComponent._createdControlElement",
      "params": [
        "window"
      ],
      "calls": [
        "control_elem.create",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._createdControlElementStatus",
      "params": [],
      "calls": [
        "this._apply_status_toelement",
        "this._changeStatus",
        "this._isEnable",
        "this.on_apply_prop_enable"
      ]
    },
    {
      "name": "_pComponent._createdControlElementLayoutProps",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._createdContents",
      "params": [
        "window"
      ],
      "calls": [
        "this.on_after_created",
        "this.on_created_contents"
      ]
    },
    {
      "name": "_pComponent.createCommand",
      "params": [],
      "calls": [
        "control_elem.createCommandEnd",
        "control_elem.createCommandStart",
        "this._apply_status_toelement",
        "this._changeStatus",
        "this._isEnable",
        "this._registerHotkey",
        "this._setAccessibilityStatFlag",
        "this.on_apply_prop_enable",
        "this.on_create_contents_command"
      ]
    },
    {
      "name": "_pComponent.attachHandle",
      "params": [
        "win",
        "bContainer"
      ],
      "calls": [
        "control_elem.attachHandle",
        "this.on_after_created",
        "this.on_attach_contents_handle"
      ]
    },
    {
      "name": "_pComponent.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._on_attach_accessibility_contents_handle"
      ]
    },
    {
      "name": "_pComponent.on_after_created",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.destroyComponent",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "application._remove_accessibility_history",
        "nexacro._SystemType.toLowerCase",
        "nexacro.getApplication",
        "this._clearEventListeners",
        "this._clearStyleObject",
        "this._control_element.destroy",
        "this._getWindow",
        "this._p_hscrollbar.destroy",
        "this._p_parent.removeChild",
        "this._p_vscrollbar.destroy",
        "this._unregisterHotkey",
        "this._unregisterPopupFrame",
        "this.on_destroy_contents",
        "win._removeFromCurrentFocusPath"
      ]
    },
    {
      "name": "_pComponent.on_destroy_contents",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._onResetScrollBar"
      ]
    },
    {
      "name": "_pComponent.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._resetComponent",
      "params": [],
      "calls": [
        "this._clearComponent",
        "this._resetObject",
        "this._resetProperties",
        "this._resetStatus"
      ]
    },
    {
      "name": "_pComponent._clearComponent",
      "params": [],
      "calls": [
        "this._afterClearProperties",
        "this._beforeClearProperties",
        "this._clearContents",
        "this._clearEventListeners",
        "this._clearFocus",
        "this._clearObject",
        "this._clearProperties"
      ]
    },
    {
      "name": "_pComponent._clearStyleObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._clearFocus",
      "params": [],
      "calls": [
        "this._getWindow",
        "win._removeFromCurrentFocusPath"
      ]
    },
    {
      "name": "_pComponent.set_initvalueid",
      "params": [
        "initvalueid"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.set_hittesttype",
      "params": [
        "hittesttype"
      ],
      "calls": [
        "this.on_apply_hittesttype"
      ]
    },
    {
      "name": "_pComponent.on_apply_hittesttype",
      "params": [],
      "calls": [
        "control_elem.setElementHittestType"
      ]
    },
    {
      "name": "_pComponent.set_positionstep",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_positionstep"
      ]
    },
    {
      "name": "_pComponent.on_apply_positionstep",
      "params": [],
      "calls": [
        "control_elem.setElementPositionStep",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent.set_flexgrow",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_flexgrow"
      ]
    },
    {
      "name": "_pComponent.on_apply_flexgrow",
      "params": [],
      "calls": [
        "manager.applyFluidLayoutContentsProeprty",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pComponent.set_flexshrink",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_flexshrink"
      ]
    },
    {
      "name": "_pComponent.on_apply_flexshrink",
      "params": [],
      "calls": [
        "manager.applyFluidLayoutContentsProeprty",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pComponent.set_layoutorder",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_layoutorder"
      ]
    },
    {
      "name": "_pComponent.on_apply_layoutorder",
      "params": [],
      "calls": [
        "manager.applyFluidLayoutContentsProeprty",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pComponent.set_tablecellarea",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tablecellarea"
      ]
    },
    {
      "name": "_pComponent.on_apply_tablecellarea",
      "params": [],
      "calls": [
        "manager.applyFluidLayoutContentsProeprty",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pComponent.set_cssclass",
      "params": [
        "cssname"
      ],
      "calls": [
        "cssclass._set",
        "nexacro.BindableValue",
        "this._makeExprFn",
        "this.on_apply_cssclass"
      ]
    },
    {
      "name": "_pComponent.on_apply_cssclass",
      "params": [],
      "calls": [
        "control_elem.setElementClassCSSSelector",
        "cssclassselector.join",
        "expr.call",
        "nexacro._settracemsg",
        "nexacro._toString",
        "this._apply_status",
        "this._getElementClassCSSSelector",
        "this._isEnableRedraw",
        "this._makeCSSMapInfo",
        "this._onResetScrollBar",
        "this._setControlElementCssSelector",
        "this.on_apply_prop_cssclass"
      ]
    },
    {
      "name": "_pComponent.set_name",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.set_text",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._on_apply_text"
      ]
    },
    {
      "name": "_pComponent._on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "exprfn.call",
        "nexacro._settracemsg",
        "nexacro._toString",
        "this._getStringResourceProperty",
        "this.on_apply_prop_accessibilitylabel",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pComponent.on_apply_text",
      "params": [
        "text"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.set_expr",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._on_apply_expr"
      ]
    },
    {
      "name": "_pComponent._on_apply_expr",
      "params": [
        "expr"
      ],
      "calls": [
        "this._makeExprFn",
        "this._on_apply_text"
      ]
    },
    {
      "name": "_pComponent.on_apply_expr",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._applyElementVisible",
      "params": [
        "v"
      ],
      "calls": [
        "this._control_element.setElementLayoutFluidPos",
        "this._control_element.setElementVisible",
        "this._isFluidContainer",
        "this._isSelfCalculationPosition"
      ]
    },
    {
      "name": "_pComponent.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "_window._getCurrentFocusPathsLength",
        "_window._indexOfCurrentFocusPaths",
        "_window._removeFromCurrentFocusPath",
        "manager.applyFluidLayoutContentsProeprty",
        "nexacro._getLayoutManager",
        "nexacro._toBoolean",
        "parent._getLastFocused",
        "this._applyElementVisible",
        "this._apply_status",
        "this._changeStatus",
        "this._getForm",
        "this._getWindow",
        "this._on_focus"
      ]
    },
    {
      "name": "_pComponent.set_enable",
      "params": [
        "v"
      ],
      "calls": [
        "_window._getCurrentFocusPathsLength",
        "_window._indexOfCurrentFocusPaths",
        "_window._removeFromCurrentFocusPath",
        "nexacro._toBoolean",
        "this._getForm",
        "this._getParentEnable",
        "this._getWindow",
        "this._on_focus",
        "this._setEnable"
      ]
    },
    {
      "name": "_pComponent.set_taborder",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_prop_taborder"
      ]
    },
    {
      "name": "_pComponent.set_tabstop",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_prop_taborder"
      ]
    },
    {
      "name": "_pComponent.set_tooltiptext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isNull",
        "nexacro._toString",
        "this.on_apply_prop_tooltip"
      ]
    },
    {
      "name": "_pComponent.set_tooltiptype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_prop_tooltip",
        "tooltiptype_enum.indexOf"
      ]
    },
    {
      "name": "_pComponent.set_enableevent",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pComponent.set_enableredraw",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_enableredraw"
      ]
    },
    {
      "name": "_pComponent.on_apply_enableredraw",
      "params": [],
      "calls": [
        "this.on_apply_background",
        "this.on_apply_border",
        "this.on_apply_borderRadius",
        "this.on_apply_boxShadow",
        "this.on_apply_color",
        "this.on_apply_cssclass",
        "this.on_apply_edge",
        "this.on_apply_font",
        "this.on_apply_letterSpacing",
        "this.on_apply_margin",
        "this.on_apply_opacity",
        "this.on_apply_wordSpacing"
      ]
    },
    {
      "name": "_pComponent.set_hotkey",
      "params": [
        "v"
      ],
      "calls": [
        "hotkey._isEmpty",
        "hotkey._toString",
        "nexacro._HotKey",
        "this._registerHotkey",
        "this._unregisterHotkey"
      ]
    },
    {
      "name": "_pComponent.set_rtl",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isBoolean",
        "nexacro._toBoolean",
        "this.on_apply_prop_rtl"
      ]
    },
    {
      "name": "_pComponent.set_left",
      "params": [
        "v"
      ],
      "calls": [
        "this._setLeft",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.set_top",
      "params": [
        "v"
      ],
      "calls": [
        "this._setTop",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.set_right",
      "params": [
        "v"
      ],
      "calls": [
        "this._setRight",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.set_bottom",
      "params": [
        "v"
      ],
      "calls": [
        "this._setBottom",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.set_width",
      "params": [
        "v"
      ],
      "calls": [
        "this._setWidth",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.set_height",
      "params": [
        "v"
      ],
      "calls": [
        "this._setHeight",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.set_minwidth",
      "params": [
        "v"
      ],
      "calls": [
        "this._setMinwidth",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.set_maxwidth",
      "params": [
        "v"
      ],
      "calls": [
        "this._setMaxwidth",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.set_minheight",
      "params": [
        "v"
      ],
      "calls": [
        "this._setMinheight",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.set_maxheight",
      "params": [
        "v"
      ],
      "calls": [
        "this._setMaxheight",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.set_fittocontents",
      "params": [
        "v"
      ],
      "calls": [
        "fittocontents_enum.indexOf",
        "this.on_apply_fittocontents"
      ]
    },
    {
      "name": "_pComponent.on_apply_fittocontents",
      "params": [],
      "calls": [
        "control_elem._setElementFittocontents",
        "this._adjustPosition",
        "this._calcArrangePosition",
        "this._on_apply_fittocontents",
        "this._update_position",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._on_apply_fittocontents",
      "params": [],
      "calls": [
        "control_elem.setElementFlexShrink",
        "manager.getLayoutType",
        "nexacro._getLayoutManager",
        "this._isFluidContainer",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent.set_scrollbartype",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_scrollbartype",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pComponent.on_apply_scrollbartype",
      "params": [],
      "calls": [
        "control_elem.setElementScrollbarSize",
        "this._getHScrollBarSize",
        "this._getHScrollBarType",
        "this._getVScrollBarSize",
        "this._getVScrollBarType",
        "this._onResetScrollBar",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent.set_scrolltype",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isNull",
        "nexacro._toString",
        "this.on_apply_scrolltype",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pComponent.on_apply_scrolltype",
      "params": [],
      "calls": [
        "control_elem.setElementScrollbarSize",
        "this._getHScrollBarSize",
        "this._getHScrollBarType",
        "this._getVScrollBarSize",
        "this._getVScrollBarType",
        "this._onResetScrollBar",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent.set_scrollbarbarminsize",
      "params": [
        "scrollbarbarminsize"
      ],
      "calls": [
        "scrollbar.set_barminsize"
      ]
    },
    {
      "name": "_pComponent.set_scrollbardecbuttonsize",
      "params": [
        "scrollbardecbuttonsize"
      ],
      "calls": [
        "scrollbar.set_decbuttonsize"
      ]
    },
    {
      "name": "_pComponent.set_scrollbarbaroutsize",
      "params": [
        "scrollbarbaroutsize"
      ],
      "calls": [
        "scrollbar.set_baroutsize"
      ]
    },
    {
      "name": "_pComponent.set_scrollbarincbuttonsize",
      "params": [
        "scrollbarincbuttonsize"
      ],
      "calls": [
        "scrollbar.set_incbuttonsize"
      ]
    },
    {
      "name": "_pComponent.set_scrollbarsize",
      "params": [
        "scrollbarsize"
      ],
      "calls": [
        "this.on_apply_scrollbarsize"
      ]
    },
    {
      "name": "_pComponent.on_apply_scrollbarsize",
      "params": [],
      "calls": [
        "control_elem.setElementScrollbarSize",
        "this._getHScrollBarSize",
        "this._getHScrollBarType",
        "this._getVScrollBarSize",
        "this._getVScrollBarType",
        "this._onResetScrollBar",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent.set_scrollindicatorsize",
      "params": [
        "scrollindicatorsize"
      ],
      "calls": [
        "this.on_apply_scrollbarsize"
      ]
    },
    {
      "name": "_pComponent.set_scrollbartrackbarsize",
      "params": [
        "scrollbartrackbarsize"
      ],
      "calls": [
        "scrollbar.set_trackbarsize"
      ]
    },
    {
      "name": "_pComponent.set_accessibilityrole",
      "params": [
        "accessibilityrole"
      ],
      "calls": [
        "this.on_apply_prop_accessibilityrole"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_accessibilityrole",
      "params": [],
      "calls": [
        "this._getAccessibilityRole",
        "this._setAccessibilityRole"
      ]
    },
    {
      "name": "_pComponent.set_accessibilityenable",
      "params": [
        "accessibilityenable"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_prop_accessibilityenable"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_accessibilityenable",
      "params": [],
      "calls": [
        "this._setAccessibilityEnable"
      ]
    },
    {
      "name": "_pComponent.set_accessibilitylabel",
      "params": [
        "accessibilitylabel"
      ],
      "calls": [
        "this.on_apply_prop_accessibilitylabel"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_accessibilitylabel",
      "params": [],
      "calls": [
        "this._getAccessibilityLabel",
        "this._setAccessibilityLabel"
      ]
    },
    {
      "name": "_pComponent.set_accessibilitydescription",
      "params": [
        "accessibilitydescription"
      ],
      "calls": [
        "this.on_apply_prop_accessibilitydescription"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_accessibilitydescription",
      "params": [],
      "calls": [
        "this._getAccessibilityDescription",
        "this._setAccessibilityDescription"
      ]
    },
    {
      "name": "_pComponent.set_accessibilityaction",
      "params": [
        "accessibilityaction"
      ],
      "calls": [
        "this.on_apply_prop_accessibilityaction"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_accessibilityaction",
      "params": [],
      "calls": [
        "this._getAccessibilityAction",
        "this._setAccessibilityAction"
      ]
    },
    {
      "name": "_pComponent.set_accessibilitydesclevel",
      "params": [
        "accessibilitydesclevel"
      ],
      "calls": [
        "this.on_apply_prop_accessibilitydesclevel"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_accessibilitydesclevel",
      "params": [],
      "calls": [
        "this._getAccessibilityDescLevel",
        "this._setAccessibilityDescLevel"
      ]
    },
    {
      "name": "_pComponent.on_apply_accessibility",
      "params": [],
      "calls": [
        "this.on_apply_prop_accessibilityaction",
        "this.on_apply_prop_accessibilitydesclevel",
        "this.on_apply_prop_accessibilitydescription",
        "this.on_apply_prop_accessibilityenable",
        "this.on_apply_prop_accessibilitylabel",
        "this.on_apply_prop_accessibilityrole"
      ]
    },
    {
      "name": "_pComponent.set_itemaccessibilityenable",
      "params": [
        "accessibilityenable"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_prop_itemaccessibilityenable"
      ]
    },
    {
      "name": "_pComponent.set_color",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.ColorObject",
        "this.on_apply_color"
      ]
    },
    {
      "name": "_pComponent.on_apply_color",
      "params": [
        "color"
      ],
      "calls": [
        "control_elem.setElementColor",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.set_font",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.FontObject",
        "this.on_apply_font"
      ]
    },
    {
      "name": "_pComponent.on_apply_font",
      "params": [
        "font"
      ],
      "calls": [
        "control_elem.setElementFont",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.set_textDecoration",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.TextDecorationObject",
        "this.on_apply_textDecoration"
      ]
    },
    {
      "name": "_pComponent.on_apply_textDecoration",
      "params": [
        "textDecoration"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.set_wordSpacing",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.CSSValueObject",
        "nexacro._toString",
        "this.on_apply_wordSpacing"
      ]
    },
    {
      "name": "_pComponent.on_apply_wordSpacing",
      "params": [
        "wordSpacing"
      ],
      "calls": [
        "control_elem.setElementWordSpacing",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.set_letterSpacing",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.CSSValueObject",
        "nexacro._toString",
        "this.on_apply_letterSpacing"
      ]
    },
    {
      "name": "_pComponent.on_apply_letterSpacing",
      "params": [
        "letterSpacing"
      ],
      "calls": [
        "control_elem.setElementLetterSpacing",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.set_wordWrap",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_wordWrap"
      ]
    },
    {
      "name": "_pComponent.on_apply_wordWrap",
      "params": [
        "wordWrap"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.set_borderRadius",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.BorderRadiusObject",
        "this.on_apply_borderRadius"
      ]
    },
    {
      "name": "_pComponent.on_apply_borderRadius",
      "params": [
        "borderRadius"
      ],
      "calls": [
        "control_elem.setElementBorderRadius",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.set_border",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.BorderObject",
        "this.on_apply_border"
      ]
    },
    {
      "name": "_pComponent.on_apply_border",
      "params": [
        "border"
      ],
      "calls": [
        "control_elem.setElementBorder",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.set_background",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.BackgroundObject",
        "this.on_apply_background"
      ]
    },
    {
      "name": "_pComponent.on_apply_background",
      "params": [
        "background"
      ],
      "calls": [
        "control_elem.setElementBackground",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.set_edge",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.EdgeImageObject",
        "this.on_apply_edge"
      ]
    },
    {
      "name": "_pComponent.on_apply_edge",
      "params": [
        "edge"
      ],
      "calls": [
        "control_elem.setElementEdge",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.set_margin",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro._getCachedMarginObject",
        "this.on_apply_margin"
      ]
    },
    {
      "name": "_pComponent.on_apply_margin",
      "params": [
        "/*margin*/"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "control_elem.setElementVisible",
        "this._adjustPosition",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.set_padding",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.PaddingObject",
        "this._on_apply_padding"
      ]
    },
    {
      "name": "_pComponent._on_apply_padding",
      "params": [
        "padding"
      ],
      "calls": [
        "control_elem.setElementPadding",
        "this.on_apply_padding"
      ]
    },
    {
      "name": "_pComponent.on_apply_padding",
      "params": [
        "padding"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.set_textAlign",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_textAlign"
      ]
    },
    {
      "name": "_pComponent.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.set_verticalAlign",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_verticalAlign"
      ]
    },
    {
      "name": "_pComponent.on_apply_verticalAlign",
      "params": [
        "valign"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.set_cursor",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.CursorObject",
        "this.on_apply_cursor"
      ]
    },
    {
      "name": "_pComponent.on_apply_cursor",
      "params": [
        "cursor"
      ],
      "calls": [
        "control_elem.setElementCursor"
      ]
    },
    {
      "name": "_pComponent._updateCursor",
      "params": [
        "cursor"
      ],
      "calls": [
        "nexacro.CursorObject",
        "this.on_apply_cursor"
      ]
    },
    {
      "name": "_pComponent.set_opacity",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.OpacityObject",
        "this.on_apply_opacity"
      ]
    },
    {
      "name": "_pComponent.on_apply_opacity",
      "params": [
        "opacity"
      ],
      "calls": [
        "control_elem.setElementOpacity",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.set_boxShadow",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.ShadowObject",
        "this.on_apply_boxShadow"
      ]
    },
    {
      "name": "_pComponent.on_apply_boxShadow",
      "params": [
        "shadow"
      ],
      "calls": [
        "control_elem.setElementBoxShadow",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pComponent.bringToFront",
      "params": [],
      "calls": [
        "nexacro._indexOf",
        "parent.getElement",
        "parent_child_list.splice",
        "parent_elem.bringToFrontElement",
        "this._applyScrollPos"
      ]
    },
    {
      "name": "_pComponent.bringToPrev",
      "params": [],
      "calls": [
        "nexacro._indexOf",
        "this.moveToPrev"
      ]
    },
    {
      "name": "_pComponent.moveToNext",
      "params": [
        "objOrId"
      ],
      "calls": [
        "child_list.splice",
        "nexacro._indexOf",
        "nexacro._isString",
        "parent.getElement",
        "parent_elem.moveToNextElement",
        "target.getElement",
        "this._applyScrollPos"
      ]
    },
    {
      "name": "_pComponent.moveToPrev",
      "params": [
        "objOrId"
      ],
      "calls": [
        "child_list.splice",
        "nexacro._indexOf",
        "nexacro._isString",
        "parent.getElement",
        "parent_elem.moveToPrevElement",
        "target.getElement",
        "this._applyScrollPos"
      ]
    },
    {
      "name": "_pComponent.sendToBack",
      "params": [],
      "calls": [
        "child_list.splice",
        "nexacro._indexOf",
        "parent.getElement",
        "parent_elem.sendToBackElement",
        "this._applyScrollPos"
      ]
    },
    {
      "name": "_pComponent.sendToNext",
      "params": [],
      "calls": [
        "nexacro._indexOf",
        "this.moveToNext"
      ]
    },
    {
      "name": "_pComponent.beginTransitionEffect",
      "params": [
        "effectObj",
        "callback"
      ],
      "calls": [
        "control_elem.beginTransitionEffect"
      ]
    },
    {
      "name": "_pComponent.applyTransitionEffect",
      "params": [],
      "calls": [
        "control_elem.applyTransitionEffect"
      ]
    },
    {
      "name": "_pComponent.cancelTransitionEffect",
      "params": [],
      "calls": [
        "control_elem.cancelTransitionEffect"
      ]
    },
    {
      "name": "_pComponent.create",
      "params": [],
      "calls": [
        "this.initEvents",
        "this.initProperties"
      ]
    },
    {
      "name": "_pComponent.destroy",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this.destroyComponent"
      ]
    },
    {
      "name": "_pComponent.init",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight"
      ],
      "calls": [
        "this._parseArrangeInfo",
        "this._setMaxheight",
        "this._setMaxwidth",
        "this._setMinheight",
        "this._setMinwidth",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.move",
      "params": [
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom"
      ],
      "calls": [
        "this._isRtl",
        "this._parseArrangeInfo",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.resize",
      "params": [
        "w",
        "h"
      ],
      "calls": [
        "this._parseArrangeInfoProp",
        "this._setBottom",
        "this._setRight",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent.show",
      "params": [],
      "calls": [
        "this._control_element._setElementLayoutPosition",
        "this._getWindow",
        "this._isFluidContainer",
        "this._update_position_fluid",
        "this.createComponent",
        "this.on_created"
      ]
    },
    {
      "name": "_pComponent.redraw",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.setFocus",
      "params": [
        "bResetScroll",
        "bInnerFocus"
      ],
      "calls": [
        "_p._getWindow",
        "c._getLastFocused",
        "c._getTabOrderFirst",
        "nexacro.Component.prototype._resetScrollPos.call",
        "target_comp._resetScrollPos",
        "this._apply_setfocus",
        "this._find_lastFocused",
        "this._getRootWindow",
        "this._hasContainer",
        "this._isAccessibilityEnable",
        "this._isEnable",
        "this._isFocusAcceptable",
        "this._isVisible",
        "this._on_focus",
        "this.getElement",
        "win._indexOfCurrentFocusPaths",
        "win._isActiveLayerComponent",
        "win._removeFromCurrentFocusPath"
      ]
    },
    {
      "name": "_pComponent.scrollTo",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "this._scrollTo"
      ]
    },
    {
      "name": "_pComponent.scrollBy",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "this._scrollBy"
      ]
    },
    {
      "name": "_pComponent.getHScrollPos",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getVScrollPos",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getDisplayText",
      "params": [],
      "calls": [
        "this._on_getDisplayText"
      ]
    },
    {
      "name": "_pComponent.getPixelLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getPixelTop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getPixelRight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getPixelBottom",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getPixelWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getPixelHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getOffsetLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getOffsetTop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getOffsetRight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getOffsetBottom",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getOffsetWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.getOffsetHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.setOffsetLeft",
      "params": [
        "v"
      ],
      "calls": [
        "this.set_left"
      ]
    },
    {
      "name": "_pComponent.setOffsetTop",
      "params": [
        "v"
      ],
      "calls": [
        "this.set_top"
      ]
    },
    {
      "name": "_pComponent.setOffsetRight",
      "params": [
        "v"
      ],
      "calls": [
        "this.set_width"
      ]
    },
    {
      "name": "_pComponent.setOffsetBottom",
      "params": [
        "v"
      ],
      "calls": [
        "this.set_height"
      ]
    },
    {
      "name": "_pComponent.setOffsetWidth",
      "params": [
        "v"
      ],
      "calls": [
        "this.set_width"
      ]
    },
    {
      "name": "_pComponent.setOffsetHeight",
      "params": [
        "v"
      ],
      "calls": [
        "this.set_height"
      ]
    },
    {
      "name": "_pComponent._on_afterHideWaitComp",
      "params": [
        "status"
      ],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pComponent.on_notify_hscroll_onscroll",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._scrollTo"
      ]
    },
    {
      "name": "_pComponent.on_notify_vscroll_onscroll",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._scrollTo"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_cssclass",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_hscrollbar._setEnable",
        "this._p_vscrollbar._setEnable"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_taborder",
      "params": [],
      "calls": [
        "this._setAccessibilityFlagFocusable"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_tooltip",
      "params": [],
      "calls": [
        "control_elem.setElementToolTip",
        "this._getStringResourceProperty",
        "this._updateAccessibilityLabel",
        "this.getElement",
        "this.on_apply_prop_accessibilitydescription"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_rtl",
      "params": [],
      "calls": [
        "control_elem.setElementRtl",
        "this._isRtl"
      ]
    },
    {
      "name": "_pComponent.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "comp.on_apply_prop_stringresource",
        "this._on_apply_text",
        "this.on_apply_prop_accessibilityaction",
        "this.on_apply_prop_accessibilitydescription",
        "this.on_apply_prop_accessibilitylabel",
        "this.on_apply_prop_tooltip"
      ]
    },
    {
      "name": "_pComponent._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "control_elem.setElementFocus"
      ]
    },
    {
      "name": "_pComponent.on_get_popupControlTypeName",
      "params": [],
      "calls": [
        "rootcomp.on_get_css_assumedtypename",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pComponent.on_get_prop_tabstop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._on_getFitSize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSizeInfo",
      "params": [],
      "calls": [
        "objComponent._control_element._setElementLayoutBasis",
        "this._getAdjustFitPositionHeight",
        "this._getAdjustFitPositionWidth",
        "this._getParentComponent",
        "this._on_getFitSize"
      ]
    },
    {
      "name": "_pComponent._on_getFitSize_style",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding"
      ]
    },
    {
      "name": "_pComponent._on_getFitSize_scroll",
      "params": [],
      "calls": [
        "this._getFittocontents"
      ]
    },
    {
      "name": "_pComponent._on_getDisplayText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.applyto_bindSource",
      "params": [
        "propid",
        "Val"
      ],
      "calls": [
        "this._bind_event._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.on_get_css_assumedtypename",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._on_getAccessibilityAdditionalLabel",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._on_getAccessibilityAdditionalRole",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.on_get_accessibility_label",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.on_get_accessibility_description",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.on_get_accessibility_action",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getStringResourceProperty",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._getTextTemplateValue",
        "v.indexOf"
      ]
    },
    {
      "name": "_pComponent._isAccessibilityEnable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isItemAccessibilityEnable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isComponentKeydownAction",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isFireVirtualMouseEvent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isFireAccessibilityKeydown",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._makeStatusMap",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._makeCSSMapInfo",
      "params": [],
      "calls": [
        "cssselector.trim",
        "findcssmap.push",
        "findselector.hasOwnProperty",
        "item.hasOwnProperty",
        "searchmapdata.push",
        "this._getCSSMapParent",
        "this._getClassCSSSelector",
        "this._getIDCSSSelector",
        "this.on_get_css_assumedtypename"
      ]
    },
    {
      "name": "_pComponent._getCSSMapParent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._makeRefCSSMapInfo",
      "params": [
        "cssmap",
        "searchmapdata",
        "sub_cssselectors"
      ],
      "calls": [
        "cssmap.push",
        "cssselector.trim",
        "findmaplist.push",
        "parent._makeRefCSSMapInfo",
        "searchmapdata.shift",
        "this._getCSSMapParent",
        "this._getClassCSSSelector",
        "this._getIDCSSSelector",
        "this.on_get_css_assumedtypename"
      ]
    },
    {
      "name": "_pComponent._setControlElementCssSelector",
      "params": [],
      "calls": [
        "_p._getClassCSSSelector",
        "_p.on_get_css_assumedtypename",
        "control_elem.setElementClassCSSSelector",
        "control_elem.setElementIDCSSSelector",
        "control_elem.setElementTypeCSSSelector",
        "cssclass.join",
        "this._getElementClassCSSSelector",
        "this._getIDCSSSelector",
        "this.on_getIDCSSSelector",
        "this.on_get_css_assumedtypename"
      ]
    },
    {
      "name": "_pComponent._setControlElementCssMapInfo",
      "params": [],
      "calls": [
        "this._control_element.setElementCSSMapInfo"
      ]
    },
    {
      "name": "_pComponent._changeStatus",
      "params": [
        "status",
        "value"
      ],
      "calls": [
        "this._on_changeStatus"
      ]
    },
    {
      "name": "_pComponent.on_changeStatus",
      "params": [
        "changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_changeStatus",
      "params": [
        "status",
        "value"
      ],
      "calls": [
        "this._apply_status",
        "this._setAccessibilityStatFlag",
        "this.on_changeStatus"
      ]
    },
    {
      "name": "_pComponent._changeUserStatus",
      "params": [
        "changestatus",
        "value"
      ],
      "calls": [
        "this._on_changeUserStatus"
      ]
    },
    {
      "name": "_pComponent.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_changeUserStatus",
      "params": [
        "status",
        "value"
      ],
      "calls": [
        "this._apply_status",
        "this._setAccessibilityStatFlag",
        "this.on_changeUserStatus"
      ]
    },
    {
      "name": "_pComponent.on_apply_status",
      "params": [
        "status",
        "userstatus",
        "status_param",
        "value_param"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_apply_status",
      "params": [
        "oldstatus",
        "status",
        "olduserstatus",
        "userstatus",
        "apply",
        "status_param",
        "value_param",
        "applycssstatus",
        "applycssuserstatus"
      ],
      "calls": [
        "control_elem.setElementStatus",
        "control_elem.setElementUserStatus",
        "this.on_apply_status"
      ]
    },
    {
      "name": "_pComponent._apply_status",
      "params": [
        "oldstatus",
        "status",
        "olduserstatus",
        "userstatus",
        "apply",
        "status_param",
        "value_param"
      ],
      "calls": [
        "this._apply_status_toelement",
        "this._setEnable"
      ]
    },
    {
      "name": "_pComponent._apply_status_toelement",
      "params": [
        "oldstatus",
        "status",
        "olduserstatus",
        "userstatus",
        "apply",
        "status_param",
        "value_param"
      ],
      "calls": [
        "control_elem.setElementCSSMapInfo",
        "this._isRtl",
        "this._on_apply_status"
      ]
    },
    {
      "name": "_pComponent._setTablecellarea",
      "params": [
        "v"
      ],
      "calls": [
        "control_elem.setElementTableCellArea",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._getCurrentLayoutTablecellarea",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._adjustPosition",
      "params": [],
      "calls": [
        "parent._getClientHeight",
        "parent._getClientWidth",
        "this._getArrangeComp",
        "this._getForm",
        "this._getParentComponent",
        "this._setAdjustProps"
      ]
    },
    {
      "name": "_pComponent._setLeft",
      "params": [
        "propVal"
      ],
      "calls": [
        "this._parseArrangeInfoProp",
        "this._setRight",
        "this._setWidth"
      ]
    },
    {
      "name": "_pComponent._setTop",
      "params": [
        "propVal"
      ],
      "calls": [
        "this._parseArrangeInfoProp",
        "this._setBottom",
        "this._setHeight"
      ]
    },
    {
      "name": "_pComponent._setRight",
      "params": [
        "propVal"
      ],
      "calls": [
        "this._parseArrangeInfoProp",
        "this._setLeft",
        "this._setWidth"
      ]
    },
    {
      "name": "_pComponent._setBottom",
      "params": [
        "propVal"
      ],
      "calls": [
        "this._parseArrangeInfoProp",
        "this._setHeight",
        "this._setTop"
      ]
    },
    {
      "name": "_pComponent._setWidth",
      "params": [
        "propVal"
      ],
      "calls": [
        "nexacro._traceV8CallStack",
        "this._parseArrangeInfoProp",
        "this._setLeft",
        "this._setRight"
      ]
    },
    {
      "name": "_pComponent._setHeight",
      "params": [
        "propVal"
      ],
      "calls": [
        "this._parseArrangeInfoProp",
        "this._setBottom",
        "this._setTop"
      ]
    },
    {
      "name": "_pComponent._setMinwidth",
      "params": [
        "v"
      ],
      "calls": [
        "this._setMaxwidth"
      ]
    },
    {
      "name": "_pComponent._setMaxwidth",
      "params": [
        "v"
      ],
      "calls": [
        "this._setMinwidth"
      ]
    },
    {
      "name": "_pComponent._setMinheight",
      "params": [
        "v"
      ],
      "calls": [
        "this._setMaxheight"
      ]
    },
    {
      "name": "_pComponent._setMaxheight",
      "params": [
        "v"
      ],
      "calls": [
        "this._setMinheight"
      ]
    },
    {
      "name": "_pComponent.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "this.on_fire_onmove",
        "this.on_fire_onsize"
      ]
    },
    {
      "name": "_pComponent._update_position",
      "params": [
        "isrtl"
      ],
      "calls": [
        "this._calcBasisSize",
        "this._isFluidContainer",
        "this._update_position_fluid",
        "this._update_position_static"
      ]
    },
    {
      "name": "_pComponent._update_position_static",
      "params": [
        "isrtl"
      ],
      "calls": [
        "this._adjustPosition",
        "this._apply_status",
        "this._calcArrangePosition",
        "this.on_update_position"
      ]
    },
    {
      "name": "_pComponent._update_position_fluid",
      "params": [
        "isAllContainer"
      ],
      "calls": [
        "control_elem._setElementLayoutBasis",
        "manager.calcFluidLayoutContents",
        "nexacro._getLayoutManager",
        "this._apply_status",
        "this._getLayoutBasis",
        "this._update_layoutbasis",
        "this.getElement",
        "this.getOffsetHeight",
        "this.getOffsetWidth"
      ]
    },
    {
      "name": "_pComponent._getReferenceAbsoluteFont",
      "params": [
        "target_font"
      ],
      "calls": [
        "comp._getReferenceAbsoluteFont",
        "nexacro._getSystemFont",
        "this._getCSSStyleValue",
        "this._getMainFrame",
        "this._getSettedFontObject"
      ]
    },
    {
      "name": "_pComponent._convToPixel",
      "params": [
        "val",
        "parent_size"
      ],
      "calls": [
        "val.indexOf"
      ]
    },
    {
      "name": "_pComponent._convToRelativeUnit",
      "params": [
        "val",
        "parent_size",
        "unit"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._parseArrangeVal",
      "params": [
        "val"
      ],
      "calls": [
        "val.indexOf",
        "val.split"
      ]
    },
    {
      "name": "_pComponent._parseArrangeInfoProp",
      "params": [
        "prop_name",
        "val"
      ],
      "calls": [
        "this._parseArrangeVal"
      ]
    },
    {
      "name": "_pComponent._parseArrangeInfo",
      "params": [
        "left",
        "top",
        "right",
        "bottom",
        "width",
        "height"
      ],
      "calls": [
        "this._parseArrangeVal"
      ]
    },
    {
      "name": "_pComponent._calcArrangePosition",
      "params": [],
      "calls": [
        "comp._getClientHeight",
        "comp._getClientWidth",
        "comp._getReferenceAbsoluteFont",
        "distance.indexOf",
        "this._convToPixel",
        "this._findComponentForArrange",
        "this._getForm",
        "this._getMainFrame",
        "this._getParentComponent",
        "this._on_getFitSize"
      ]
    },
    {
      "name": "_pComponent._getArrangeComp",
      "params": [
        "position_prop"
      ],
      "calls": [
        "this._findComponentForArrange"
      ]
    },
    {
      "name": "_pComponent._findComponentForArrange",
      "params": [
        "compid"
      ],
      "calls": [
        "comps.indexOf",
        "parent._findChild",
        "this._getForm"
      ]
    },
    {
      "name": "_pComponent._setInnerFlexibleFlag",
      "params": [
        "is_flexible",
        "is_calc"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._isFluidContainer",
      "params": [
        "binner"
      ],
      "calls": [
        "this._getForm",
        "this._p_parent._getForm"
      ]
    },
    {
      "name": "_pComponent._isFluidContainerCalculation",
      "params": [],
      "calls": [
        "this._getForm"
      ]
    },
    {
      "name": "_pComponent._getTablecellareaCoordinate",
      "params": [],
      "calls": [
        "cell_pos.split",
        "cell_pos.trim",
        "coord.forEach",
        "merge_pos.push",
        "tablecellarea.split",
        "tmp.forEach",
        "tmp.push",
        "tmp.shift"
      ]
    },
    {
      "name": "_pComponent._areConsecutive",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getFittocontents",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._onResetScrollBar",
      "params": [],
      "calls": [
        "this._createHScrollBar",
        "this._createVScrollBar",
        "this._getHScrollBarSize",
        "this._getHScrollBarType",
        "this._getVScrollBarSize",
        "this._getVScrollBarType",
        "this._getWindow",
        "this._isEnable",
        "this._p_hscrollbar._setScrollInfo",
        "this._p_hscrollbar.destroy",
        "this._p_hscrollbar.on_created",
        "this._p_hscrollbar.set_visible",
        "this._p_vscrollbar._setScrollInfo",
        "this._p_vscrollbar.destroy",
        "this._p_vscrollbar.on_created",
        "this._p_vscrollbar.set_visible",
        "this.getStepCount"
      ]
    },
    {
      "name": "_pComponent._setFlingScrollBezier",
      "params": [
        "p1x",
        "p1y",
        "p2x",
        "p2y"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._setFlingScrollMaxDistance",
      "params": [
        "maxdistance"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_beforescroll",
      "params": [
        "prehpos",
        "prevpos",
        "posthpos",
        "postvpos",
        "evttype",
        "evtkind"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._scrollBy",
      "params": [
        "x",
        "y",
        "bapplyscrollbar",
        "bautohidetimer",
        "evttype",
        "evtkind"
      ],
      "calls": [
        "this._scrollTo"
      ]
    },
    {
      "name": "_pComponent._correctScrollPos",
      "params": [
        "pos"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._scrollTo",
      "params": [
        "hpos",
        "vpos",
        "bapplyscrollbar",
        "bautohidetimer",
        "evttype",
        "evtkind"
      ],
      "calls": [
        "Math.abs",
        "control_elem.setElementHScrollPos",
        "control_elem.setElementScrollPos",
        "control_elem.setElementVScrollPos",
        "focused_comp._on_scroll_change",
        "hscrollbar._setPos",
        "hscrollbar.set_visible",
        "nexacro._OnceCallbackTimer.callonce",
        "nexacro._isNull",
        "this._correctScrollPos",
        "this._getHScrollBarType",
        "this._getScrollEventType",
        "this._getVScrollBarType",
        "this._on_beforescroll",
        "this._p_hscrollbar.set_visible",
        "this._p_vscrollbar.set_visible",
        "this.getElement",
        "this.on_fire_onhscroll",
        "this.on_fire_onvscroll",
        "vscrollbar._setPos",
        "vscrollbar.set_visible"
      ]
    },
    {
      "name": "_pComponent._createVScrollBar",
      "params": [
        "scroll_size"
      ],
      "calls": [
        "nexacro.ScrollBarControl",
        "nexacro.ScrollIndicatorControl",
        "nexacro._isNull",
        "this._getClientWidth",
        "this._getVScrollBarType",
        "this._p_vscrollbar.destroy",
        "vscrollbar._setEventHandler",
        "vscrollbar.createComponent",
        "vscrollbar.move",
        "vscrollbar.on_apply_cssclass",
        "vscrollbar.set_barminsize",
        "vscrollbar.set_baroutsize",
        "vscrollbar.set_decbuttonsize",
        "vscrollbar.set_direction",
        "vscrollbar.set_incbuttonsize",
        "vscrollbar.set_trackbarsize"
      ]
    },
    {
      "name": "_pComponent._createHScrollBar",
      "params": [
        "scroll_size"
      ],
      "calls": [
        "hscrollbar._setEventHandler",
        "hscrollbar.createComponent",
        "hscrollbar.move",
        "hscrollbar.on_apply_cssclass",
        "hscrollbar.set_barminsize",
        "hscrollbar.set_baroutsize",
        "hscrollbar.set_decbuttonsize",
        "hscrollbar.set_direction",
        "hscrollbar.set_incbuttonsize",
        "hscrollbar.set_trackbarsize",
        "nexacro.ScrollBarControl",
        "nexacro.ScrollIndicatorControl",
        "nexacro._isNull",
        "this._getClientHeight",
        "this._getHScrollBarType",
        "this._p_hscrollbar.destroy"
      ]
    },
    {
      "name": "_pComponent._registerHotkey",
      "params": [],
      "calls": [
        "nexacro._registerHotkeyComp",
        "this._getMainForm",
        "this._setAccessibilityHotKey",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pComponent._unregisterHotkey",
      "params": [],
      "calls": [
        "nexacro._unregisterHotkeyComp",
        "this._getMainForm",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pComponent._processHotkey",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "_form._processHotkey",
        "this._getMainForm"
      ]
    },
    {
      "name": "_pComponent._on_hotkey",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "this.setFocus"
      ]
    },
    {
      "name": "_pComponent._refreshLayoutInfo",
      "params": [],
      "calls": [
        "control_elem._refreshLayoutInfo",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._destroy",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this.destroy"
      ]
    },
    {
      "name": "_pComponent._applyScrollPos",
      "params": [],
      "calls": [
        "comp._applyScrollPos",
        "this._applyMultiContainerScrollPos",
        "this._control_element.setElementHScrollPos",
        "this._control_element.setElementVScrollPos"
      ]
    },
    {
      "name": "_pComponent._makeExprFn",
      "params": [
        "expr"
      ],
      "calls": [
        "expr.join",
        "expr.slice",
        "expr.trim",
        "nexacro.ExprParser",
        "nexacro._createInlineFunc",
        "parser.makeExpr"
      ]
    },
    {
      "name": "_pComponent._closePopup",
      "params": [],
      "calls": [
        "popup._closePopup"
      ]
    },
    {
      "name": "_pComponent._on_beforerepeat",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getLayoutChildlist",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._adjustStepindex",
      "params": [],
      "calls": [
        "nexacro._isMobile",
        "stepselector.set_stepindex"
      ]
    },
    {
      "name": "_pComponent.getElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getOwnerFrame",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getMainFrame",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getWindow",
      "params": [],
      "calls": [
        "form._getWindow",
        "nexacro._findWindow",
        "nexacro._getMainWindowHandle",
        "parent._getWindow"
      ]
    },
    {
      "name": "_pComponent._getRootWindow",
      "params": [],
      "calls": [
        "this._getWindow"
      ]
    },
    {
      "name": "_pComponent._getWindowHandle",
      "params": [],
      "calls": [
        "this._getWindow"
      ]
    },
    {
      "name": "_pComponent._getForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getRootForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getMainForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getParentForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getParentComponent",
      "params": [],
      "calls": [
        "this._getForm"
      ]
    },
    {
      "name": "_pComponent._getLastFocused",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getRefFormBaseUrl",
      "params": [],
      "calls": [
        "this._refform._getFormBaseUrl"
      ]
    },
    {
      "name": "_pComponent._getFormChildById",
      "params": [
        "id"
      ],
      "calls": [
        "this._getForm"
      ]
    },
    {
      "name": "_pComponent._getRootComponent",
      "params": [
        "component"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._getPopupRootComponent",
      "params": [
        "component"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._getEventInfoComponent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getFocusAcceptableComponent",
      "params": [
        "component"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._getReferenceContext",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getCSSStyleValue",
      "params": [
        "prop",
        "status",
        "userstatus"
      ],
      "calls": [
        "this._isRtl"
      ]
    },
    {
      "name": "_pComponent._getCurrentStyleInheritValue",
      "params": [
        "prop",
        "status",
        "userstatus"
      ],
      "calls": [
        "nexacro._getSystemFont",
        "this._getCSSStyleValue",
        "this._getSettedColorObject",
        "this._getSettedFontObject",
        "this._getSettedLetterSpacingObject",
        "this._getSettedWordSpacingObject",
        "this._p_parent._getCurrentStyleInheritValue"
      ]
    },
    {
      "name": "_pComponent._getCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getClassCSSSelector",
      "params": [],
      "calls": [
        "cssclassselector.split",
        "resultArray.push"
      ]
    },
    {
      "name": "_pComponent._getElementClassCSSSelector",
      "params": [],
      "calls": [
        "cssclassselector.trim",
        "this._getPopupContainerCSSSelector",
        "this._isPopupContains"
      ]
    },
    {
      "name": "_pComponent._getIDCSSSelector",
      "params": [],
      "calls": [
        "this.on_getIDCSSSelector"
      ]
    },
    {
      "name": "_pComponent._getPopupContainerCSSSelector",
      "params": [],
      "calls": [
        "parent._p_cssclass.split",
        "parent.on_getIDCSSSelector",
        "parent.on_get_css_assumedtypename",
        "popupcontrol.on_get_popupControlTypeName",
        "tempuserclassselectors.push",
        "this._p_parent._getPopupControl",
        "this.on_getIDCSSSelector",
        "userclassdummy.push",
        "userclassselectors.pop",
        "userclassselectors.push"
      ]
    },
    {
      "name": "_pComponent._getScreenPosition",
      "params": [],
      "calls": [
        "nexacro._getElementScreenPosition"
      ]
    },
    {
      "name": "_pComponent._getWindowPosition",
      "params": [],
      "calls": [
        "border._getBorderLeftWidth",
        "border._getBorderTopWidth",
        "nexacro._getElementXYInWindow",
        "this._getCurrentStyleBorder"
      ]
    },
    {
      "name": "_pComponent._getClientWidth",
      "params": [],
      "calls": [
        "control_elem.getClientWidth"
      ]
    },
    {
      "name": "_pComponent._getClientHeight",
      "params": [],
      "calls": [
        "control_elem.getClientHeight"
      ]
    },
    {
      "name": "_pComponent._getClientLeft",
      "params": [],
      "calls": [
        "control_elem.getClientLeft"
      ]
    },
    {
      "name": "_pComponent._getInnerWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getInnerHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getClientTop",
      "params": [],
      "calls": [
        "control_elem.getClientTop"
      ]
    },
    {
      "name": "_pComponent._getCumulativeZoomFactor",
      "params": [],
      "calls": [
        "comp._getZoom"
      ]
    },
    {
      "name": "_pComponent._getFixedOffsetValue",
      "params": [],
      "calls": [
        "this.getOffsetBottom",
        "this.getOffsetRight",
        "val.indexOf"
      ]
    },
    {
      "name": "_pComponent._getScrollEventType",
      "params": [
        "oldpos",
        "newpos",
        "min",
        "max",
        "dir"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._getScrollBarSize",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pComponent._getScrollIndicatorSize",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pComponent._getHScrollBarSize",
      "params": [],
      "calls": [
        "this._getHScrollBarType",
        "this._getScrollBarSize",
        "this._getScrollIndicatorSize"
      ]
    },
    {
      "name": "_pComponent._getVScrollBarSize",
      "params": [],
      "calls": [
        "this._getScrollBarSize",
        "this._getScrollIndicatorSize",
        "this._getVScrollBarType"
      ]
    },
    {
      "name": "_pComponent._getHScrollBarType",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "nexacro._toString",
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pComponent._getVScrollBarType",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "nexacro._toString",
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pComponent._getScrollable",
      "params": [],
      "calls": [
        "this._isEnable"
      ]
    },
    {
      "name": "_pComponent._getScrollWidth",
      "params": [],
      "calls": [
        "control_elem.getElementScrollWidth",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pComponent._getScrollHeight",
      "params": [],
      "calls": [
        "control_elem.getElementScrollHeight",
        "this._getClientHeight"
      ]
    },
    {
      "name": "_pComponent._getScrollLeft",
      "params": [],
      "calls": [
        "control_elem.getElementScrollLeft"
      ]
    },
    {
      "name": "_pComponent._getScrollTop",
      "params": [],
      "calls": [
        "control_elem.getElementScrollTop"
      ]
    },
    {
      "name": "_pComponent._getDragData",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getParentEnable",
      "params": [
        "/*v*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._getPopupControl",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._is_popup",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getLocale",
      "params": [],
      "calls": [
        "nexacro._getLocale"
      ]
    },
    {
      "name": "_pComponent._isRtl",
      "params": [
        "comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._getCurrentStylePadding",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getCurrentStyleBorder",
      "params": [],
      "calls": [
        "nexacro.BorderObject",
        "values.join"
      ]
    },
    {
      "name": "_pComponent._getCurrentStyleEdge",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedColorObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedFontObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedWordSpacingObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedLetterSpacingObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedTextDecorationObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedBorderRadiustObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedBorderObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedBackgroundObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedEdgeObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedCursorObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedOpacityObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getSettedBoxShadowObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isVisible",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isEnable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isEnableRedraw",
      "params": [],
      "calls": [
        "this._getFromComponent"
      ]
    },
    {
      "name": "_pComponent._isEditableComponent",
      "params": [
        "edittype"
      ],
      "calls": [
        "edittype.match",
        "edittype.split"
      ]
    },
    {
      "name": "_pComponent._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isPopupVisible",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isPopupContains",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isWheelScrollable",
      "params": [
        "delta"
      ],
      "calls": [
        "this._getClientHeight"
      ]
    },
    {
      "name": "_pComponent._isSelfCalculationPosition",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._findForm",
      "params": [
        "comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._findDataset",
      "params": [
        "id"
      ],
      "calls": [
        "_p._findDataset",
        "_p.lookup",
        "refform._p_parent.getViewDataset"
      ]
    },
    {
      "name": "_pComponent._find_lastFocused",
      "params": [],
      "calls": [
        "last_focus._getLastFocused",
        "last_focus._hasContainer",
        "this._getMainForm"
      ]
    },
    {
      "name": "_pComponent._hasContainer",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._contains",
      "params": [
        "oDescendant"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._setControl",
      "params": [
        "typename"
      ],
      "calls": [
        "this.on_get_css_assumedtypename"
      ]
    },
    {
      "name": "_pComponent._setFocus",
      "params": [
        "bResetScroll",
        "calledby",
        "block_inner_focus"
      ],
      "calls": [
        "this._getRootWindow",
        "this.setFocus",
        "win._isActiveLayerComponent"
      ]
    },
    {
      "name": "_pComponent._setHscrollPos",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pComponent._setVscrollPos",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pComponent._setEnable",
      "params": [
        "v"
      ],
      "calls": [
        "this._changeStatus",
        "this.on_apply_prop_enable"
      ]
    },
    {
      "name": "_pComponent._setLocale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale"
      ]
    },
    {
      "name": "_pComponent._setPopupContains",
      "params": [
        "is_popupcontains"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._setInheritStyleValues",
      "params": [
        "parent_comp"
      ],
      "calls": [
        "parent_comp._getCurrentStyleInheritValue",
        "this._control_element.setElementColor",
        "this._control_element.setElementFont",
        "this._control_element.setElementLetterSpacing",
        "this._control_element.setElementWordSpacing"
      ]
    },
    {
      "name": "_pComponent._setAdjustProps",
      "params": [
        "left",
        "top",
        "width",
        "height"
      ],
      "calls": [
        "this._setAdjustPosition",
        "this._setAdjustSize"
      ]
    },
    {
      "name": "_pComponent._setAdjustPosition",
      "params": [
        "left",
        "top"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._setAdjustSize",
      "params": [
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._update_layoutbasis",
      "params": [],
      "calls": [
        "control_elem._setElementLayoutBasis",
        "this._getLayoutBasis",
        "this._isFluidContainer",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._getLayoutBasis",
      "params": [],
      "calls": [
        "form._getLayoutType",
        "heightStr.indexOf",
        "manager.getLayoutProperty",
        "nexacro._getLayoutManager",
        "widthStr.indexOf"
      ]
    },
    {
      "name": "_pComponent._getParentComponent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getAdjustFitPositionHeight",
      "params": [
        "height",
        "parent_fittocontents"
      ],
      "calls": [
        "comp._getClientHeight",
        "comp._getReferenceAbsoluteFont",
        "distance.indexOf",
        "height.indexOf",
        "this._convToPixel",
        "this._findComponentForArrange",
        "this._getMainFrame",
        "this._getParentComponent",
        "this._getParentForm"
      ]
    },
    {
      "name": "_pComponent._getAdjustFitPositionWidth",
      "params": [
        "width",
        "parent_fittocontents"
      ],
      "calls": [
        "comp._getClientHeight",
        "comp._getReferenceAbsoluteFont",
        "distance.indexOf",
        "this._convToPixel",
        "this._findComponentForArrange",
        "this._getMainFrame",
        "this._getParentComponent",
        "width.indexOf"
      ]
    },
    {
      "name": "_pComponent._calcBasisSize",
      "params": [],
      "calls": [
        "bottom.indexOf",
        "height.indexOf",
        "right.indexOf",
        "this._convToPixel",
        "this._getParentComponent",
        "width.indexOf"
      ]
    },
    {
      "name": "_pComponent._setContentSize",
      "params": [
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._setContentInfo",
      "params": [
        "content"
      ],
      "calls": [
        "control_elem._updateInnerElement",
        "this._setAdjustProps",
        "this._setContentSize",
        "this._update_layoutbasis",
        "this.getElement",
        "this.on_fire_onmove",
        "this.on_fire_onsize"
      ]
    },
    {
      "name": "_pComponent._checkContainerTabFocus",
      "params": [],
      "calls": [
        "this._hasContainer"
      ]
    },
    {
      "name": "_pComponent._checkContainerHeadingFocus",
      "params": [],
      "calls": [
        "this._hasContainer",
        "this._isAccessibilityEnable",
        "this._isAccessibilityRoleHeading"
      ]
    },
    {
      "name": "_pComponent._isInvalidValue",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._convertValueType",
      "params": [
        "v",
        "type",
        "fn"
      ],
      "calls": [
        "nexacro._getDatatypeRule",
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pComponent._adjustFloatingPoint",
      "params": [
        "floatingPoint"
      ],
      "calls": [
        "Math.floor",
        "diff.toFixed",
        "floatingPoint.toFixed"
      ]
    },
    {
      "name": "_pComponent._getContentsmaxSize",
      "params": [
        "objContainer"
      ],
      "calls": [
        "manager.getContentsMaxRect",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pComponent._isAccessibilityCotainerComponent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._restorePosition",
      "params": [],
      "calls": [
        "this._isRtl",
        "this._parseArrangeInfo",
        "this._update_layoutbasis",
        "this._update_position"
      ]
    },
    {
      "name": "_pComponent._getUseSoftKeyboardValue",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._getLayoutType",
      "params": [
        "manager"
      ],
      "calls": [
        "manager.getLayoutProperty",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pComponent._setLayoutContainerProps",
      "params": [],
      "calls": [
        "control_elem.setElementFlexCrossAxisAlign",
        "control_elem.setElementFlexCrossAxisWrapAlign",
        "control_elem.setElementFlexMainAxisAlign",
        "control_elem.setElementFlexWrap",
        "control_elem.setElementLayoutHorizontalGap",
        "control_elem.setElementLayoutSpacing",
        "control_elem.setElementLayoutType",
        "control_elem.setElementLayoutVerticalGap",
        "control_elem.setElementTableCellAlign",
        "control_elem.setElementTableCellinCompAlign",
        "control_elem.setElementTableDirection",
        "control_elem.setElementTableTemplate",
        "control_elem.setElementTableTemplateArea",
        "manager.getLayoutProperties",
        "nexacro._getLayoutManager",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._setLayoutContentsProps",
      "params": [],
      "calls": [
        "control_elem._setElementLayoutBasis",
        "control_elem.setElementFlexGrow",
        "control_elem.setElementFlexShrink",
        "control_elem.setElementLayoutOrder",
        "control_elem.setElementTableCellArea",
        "this._getLayoutBasis",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._convertObjectContents",
      "params": [
        "str"
      ],
      "calls": [
        "doc.getElementsByTagName",
        "nexacro.NormalDataset",
        "nexacro._documentToXml",
        "nexacro._parseXMLDocument",
        "normalDataset._setContents"
      ]
    },
    {
      "name": "nexacro.PopupControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pPopupControl.on_create_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setElementZIndex",
        "this.on_create_popup_control_element"
      ]
    },
    {
      "name": "_pPopupControl.on_created",
      "params": [
        "_window"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "nexacro.Component.prototype.on_created.call"
      ]
    },
    {
      "name": "_pPopupControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "this._setInheritStyleValues"
      ]
    },
    {
      "name": "_pPopupControl.destroyComponent",
      "params": [],
      "calls": [
        "_window._releaseCaptureLock",
        "_window._removeFromCurrentFocusPath",
        "application._remove_accessibility_history",
        "nexacro.Component.prototype.destroyComponent.call",
        "nexacro._removePopupComponent",
        "nexacro.getApplication",
        "this._clearEventListeners",
        "this._control_element.destroy",
        "this._detach",
        "this._getWindow",
        "this._p_parent.removeChild",
        "this.on_destroy_contents"
      ]
    },
    {
      "name": "_pPopupControl.on_change_containerRect",
      "params": [
        "container_width",
        "container_height"
      ],
      "calls": [
        "comp.move"
      ]
    },
    {
      "name": "_pPopupControl._contains",
      "params": [
        "oDescendant"
      ],
      "calls": []
    },
    {
      "name": "_pPopupControl.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "_form._setLastFocus",
        "_window._releaseCaptureLock",
        "_window._removeFromCurrentFocusPath",
        "comp._setAccessibilityStatExpanded",
        "comp._setAccessibilityStatHidden",
        "comp.move",
        "comp.on_fire_oncloseup",
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "control_elem.setElementVisible",
        "control_elem.setElementZIndex",
        "nexacro.__setLastFocusedElement",
        "nexacro._appendPopupComponent",
        "nexacro._removePopupComponent",
        "nexacro._toBoolean",
        "this._call_comp._getForm",
        "this._call_comp._on_focus",
        "this._call_comp.getElement",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getWindow",
        "this._setAccessibilityStatHidden"
      ]
    },
    {
      "name": "_pPopupControl._attach",
      "params": [
        "comp"
      ],
      "calls": [
        "comp._isPopupContains",
        "comp._setPopupContains",
        "sub_control_element._appendToContainer",
        "sub_control_element._removeFromContainer"
      ]
    },
    {
      "name": "_pPopupControl._attach_multi",
      "params": [
        "comp",
        "sub_comp"
      ],
      "calls": [
        "comp._isPopupContains",
        "comp._setPopupContains",
        "sub_comp._isPopupContains",
        "sub_comp._setPopupContains",
        "sub_control_element._appendToContainer",
        "sub_control_element._removeFromContainer"
      ]
    },
    {
      "name": "_pPopupControl._detach",
      "params": [
        "comp"
      ],
      "calls": [
        "comp._setPopupContains",
        "sub_control_element._removeFromContainer"
      ]
    },
    {
      "name": "_pPopupControl._is_popup",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupControl._popup",
      "params": [
        "left",
        "top",
        "width",
        "height"
      ],
      "calls": [
        "_window._getCaptureComp",
        "_window._setCaptureLock",
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "control_elem.setElementZoom",
        "nexacro._OnceCallbackTimer.callonce",
        "nexacro._getDevicePixelRatio",
        "this._getWindow",
        "this._updateClientSize",
        "this.set_visible"
      ]
    },
    {
      "name": "_pPopupControl._popupBy",
      "params": [
        "from_comp",
        "left",
        "top",
        "width",
        "height",
        "center"
      ],
      "calls": [
        "_window._getCaptureComp",
        "_window._setCaptureLock",
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "control_elem.setElementZoom",
        "from_comp.getElement",
        "nexacro._OnceCallbackTimer.callonce",
        "nexacro._flushCommand",
        "nexacro._getDevicePixelRatio",
        "nexacro._getElementPositionInFrame",
        "nexacro._getPopupElementPositionInFrame",
        "this._getWindow",
        "this.set_visible"
      ]
    },
    {
      "name": "_pPopupControl._closePopup",
      "params": [],
      "calls": [
        "this.set_visible"
      ]
    },
    {
      "name": "_pPopupControl._findOwnerElementHandle",
      "params": [],
      "calls": [
        "this._getWindow",
        "win._getComponentLayerInfo"
      ]
    },
    {
      "name": "_pPopupControl._getRootFrame",
      "params": [],
      "calls": [
        "owner_frame._getWindow",
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "nexacro._WaitControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.PopupControl.call"
      ]
    },
    {
      "name": "__pWaitControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.ImageElement",
        "this.getElement"
      ]
    },
    {
      "name": "__pWaitControl.on_created_contents",
      "params": [
        "_window"
      ],
      "calls": [
        "img_elem.create",
        "img_elem.setElementVisible",
        "this._setAccessibilityStatHidden",
        "this.getElement",
        "this.on_apply_accessibility"
      ]
    },
    {
      "name": "__pWaitControl.on_change_containerRect",
      "params": [
        "container_width",
        "container_height"
      ],
      "calls": [
        "Math.round",
        "img_elem.setElementPosition",
        "img_elem.setElementSize"
      ]
    },
    {
      "name": "__pWaitControl._getAccessibilityLabel",
      "params": [
        "/*accessibility*/"
      ],
      "calls": []
    },
    {
      "name": "__pWaitControl._on_loadimage",
      "params": [
        "imgurl",
        "w",
        "h"
      ],
      "calls": [
        "Math.round",
        "img_elem.setElementImage",
        "img_elem.setElementPosition",
        "img_elem.setElementSize",
        "nexacro.UrlObject"
      ]
    },
    {
      "name": "__pWaitControl.setImage",
      "params": [
        "imageurl"
      ],
      "calls": [
        "Math.round",
        "img_elem.setElementImage",
        "img_elem.setElementPosition",
        "img_elem.setElementSize",
        "nexacro.UrlObject",
        "nexacro._getImageSize"
      ]
    },
    {
      "name": "__pWaitControl.show",
      "params": [],
      "calls": [
        "_window._setCaptureLock",
        "_window.getClientHeight",
        "_window.getClientWidth",
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "frame.getOffsetHeight",
        "frame.getOffsetWidth",
        "this._getWindow",
        "this.move",
        "this.set_visible"
      ]
    },
    {
      "name": "__pWaitControl.hide",
      "params": [],
      "calls": [
        "_window._releaseCaptureLock",
        "_window._updateWrapper",
        "control_elem.setElementSize",
        "last_focus._on_afterHideWaitComp",
        "nexacro.CursorObject",
        "this._getWindow",
        "this.set_visible"
      ]
    },
    {
      "name": "__pWaitControl._addContext",
      "params": [
        "context"
      ],
      "calls": [
        "this._context_list.push"
      ]
    },
    {
      "name": "__pWaitControl._removeContext",
      "params": [
        "context"
      ],
      "calls": [
        "nexacro._indexOf",
        "this._context_list.splice"
      ]
    },
    {
      "name": "__pWaitControl.on_fire_onlbuttondown",
      "params": [
        "/*button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "__pWaitControl._on_keydown",
      "params": [
        "elem",
        "keycode/*",
        "altKey",
        "ctrlKey",
        "shiftKey*/"
      ],
      "calls": [
        "context._stopTransaction"
      ]
    },
    {
      "name": "nexacro.CanvasComponent",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pCanvasComponent.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.CanvasElement",
        "tcanvas.setElementPosition",
        "tcanvas.setElementSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.getElement"
      ]
    },
    {
      "name": "_pCanvasComponent.on_created_contents",
      "params": [
        "_window"
      ],
      "calls": [
        "pCanvas.create",
        "this.ondraw"
      ]
    },
    {
      "name": "_pCanvasComponent._initInner",
      "params": [],
      "calls": [
        "this._apply_status"
      ]
    },
    {
      "name": "_pCanvasComponent.on_destroy_contents",
      "params": [],
      "calls": [
        "this._canvas.destroy"
      ]
    },
    {
      "name": "_pCanvasComponent.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._canvas._moveCanvas",
        "this.ondraw"
      ]
    },
    {
      "name": "_pCanvasComponent.ondraw",
      "params": [
        "/*canvas*/"
      ],
      "calls": []
    },
    {
      "name": "_pCanvasComponent.redraw",
      "params": [],
      "calls": [
        "this.ondraw"
      ]
    }
  ],
  "CompEventBase.js": [
    {
      "name": "_pComponent._resetScrollPos",
      "params": [
        "target_comp",
        "left",
        "top",
        "right",
        "bottom",
        "focus_direction"
      ],
      "calls": [
        "parent._resetScrollPos"
      ]
    },
    {
      "name": "_pComponent._getSameParent",
      "params": [
        "paths"
      ],
      "calls": [
        "nexacro._indexOf",
        "self_parent_paths.push"
      ]
    },
    {
      "name": "_pComponent._getTabOrderFirst",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._getFromComponent",
      "params": [
        "from_comp"
      ],
      "calls": [
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pComponent._getRecalcCanvasXY",
      "params": [
        "elem",
        "canvasX",
        "canvasY"
      ],
      "calls": [
        "this._getCurrentStylePadding",
        "this._getWindow",
        "window.findComponent"
      ]
    },
    {
      "name": "_pComponent._getClientXY",
      "params": [
        "canvasX",
        "canvasY"
      ],
      "calls": [
        "border._getBorderLeftWidth",
        "border._getBorderTopWidth",
        "this._getCurrentStyleBorder"
      ]
    },
    {
      "name": "_pComponent._setLastFocus",
      "params": [
        "comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._setCurFocusPathsByCurPos",
      "params": [
        "cur",
        "root_window"
      ],
      "calls": [
        "_win.addCurrentFocusPaths",
        "_win.clearCurrentFocusPaths",
        "parent_path.push",
        "this._getRootWindow"
      ]
    },
    {
      "name": "_pComponent._isParentdefaultprevented",
      "params": [
        "comp",
        "event_name"
      ],
      "calls": [
        "p_comp._getFromComponent"
      ]
    },
    {
      "name": "_pComponent._isSelected",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._isPushed",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "_win._removeFromCurrentFocusPath",
        "_win._setFocus",
        "_win.addCurrentFocusPaths",
        "_win.getCurrentFocusPaths",
        "c._on_focus",
        "cur_focus_paths.slice",
        "fireComp._on_focus",
        "focus_path._isFocusAcceptable",
        "focus_paths.slice",
        "focus_start._on_focus",
        "input_elem._change_to_keypad_type",
        "input_elem._restore_keypad_type",
        "lose_focus._changeStatus",
        "lose_focus.on_fire_onkillfocus",
        "nexacro.__setInputDOMNodeFocus",
        "nexacro._indexOf",
        "pThis._getSameParent",
        "pThis._isFocusAcceptable",
        "pThis._on_focus",
        "pThis._setCurFocusPathsByCurPos",
        "pThis.parent._setLastFocus",
        "refer_new_focus._getFromComponent",
        "this._changeStatus",
        "this._getLastFocused",
        "this._getRootComponent",
        "this._getRootWindow",
        "this._getTabOrderFirst",
        "this._isAccessibilityEnable",
        "this._isEnable",
        "this._setLastFocus",
        "this.on_fire_onsetfocus",
        "this.on_focus_basic_action"
      ]
    },
    {
      "name": "_pComponent.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "this._apply_setfocus",
        "this._isEnable",
        "this._setAccessibilityStatFocus"
      ]
    },
    {
      "name": "_pComponent._on_killfocus",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "this.on_killfocus_basic_action"
      ]
    },
    {
      "name": "_pComponent.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "this._changeUserStatus",
        "this._setAccessibilityStatKillFocus"
      ]
    },
    {
      "name": "_pComponent._on_activate",
      "params": [],
      "calls": [
        "this._changeStatus",
        "this._isSelected"
      ]
    },
    {
      "name": "_pComponent._on_deactivate",
      "params": [],
      "calls": [
        "this._changeStatus",
        "this._isSelected"
      ]
    },
    {
      "name": "_pComponent._on_click",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._isEnable",
        "this.on_click_basic_action",
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pComponent.on_click_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_dblclick",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getFromComponent",
        "this._isEnable",
        "this.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pComponent._on_keypress",
      "params": [
        "elem",
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "meta_key"
      ],
      "calls": [
        "this.on_keypress_basic_action"
      ]
    },
    {
      "name": "_pComponent.on_keypress_basic_action",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_beforekeyinput",
      "params": [
        "elem",
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "this.on_beforekeyinput_basic_action"
      ]
    },
    {
      "name": "_pComponent.on_beforekeyinput_basic_action",
      "params": [
        "value",
        "status",
        "begin",
        "end"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_keyinput",
      "params": [
        "elem",
        "input_text"
      ],
      "calls": [
        "this._isEnable",
        "this.on_fire_oninput",
        "this.on_keyinput_basic_action",
        "this.on_keyinput_default_action"
      ]
    },
    {
      "name": "_pComponent.on_keyinput_basic_action",
      "params": [
        "input_text"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_keyinput_default_action",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._on_contextmenu",
      "params": [
        "button",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "clientX",
        "clientY",
        "screenX",
        "screenY",
        "offsetX",
        "offsetY",
        "metaKey"
      ],
      "calls": [
        "nexacro._CheckShowContextPrevented",
        "this._getFromComponent",
        "this._on_contextmenu_default_action"
      ]
    },
    {
      "name": "_pComponent._on_contextmenu_default_action",
      "params": [],
      "calls": [
        "nexacro._checkShowContextMenu"
      ]
    },
    {
      "name": "_pComponent._on_zoom",
      "params": [
        "zoomfactor"
      ],
      "calls": [
        "this._isEnable",
        "this._setZoom"
      ]
    },
    {
      "name": "_pComponent._on_orientationchange",
      "params": [
        "orientation"
      ],
      "calls": [
        "this._isEnable",
        "this.on_fire_onorientationchange"
      ]
    },
    {
      "name": "_pComponent._on_lbuttondown",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_lbuttondown",
        "this.on_lbuttondown_default_action"
      ]
    },
    {
      "name": "_pComponent._on_touch_lbuttondown",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_touch_lbuttondown"
      ]
    },
    {
      "name": "_pComponent._on_bubble_touch_lbuttondown",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "nexacro._setDragInfo",
        "this._getFocusAcceptableComponent",
        "this._getRecalcCanvasXY",
        "this._getWindow",
        "this._isEnable",
        "this.on_touch_lbuttondown_basic_action",
        "this.parent._on_bubble_touch_lbuttondown"
      ]
    },
    {
      "name": "_pComponent._on_bubble_lbuttondown",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "nexacro._setDragInfo",
        "this._getClientXY",
        "this._getFocusAcceptableComponent",
        "this._getRecalcCanvasXY",
        "this._getWindow",
        "this._isEnable",
        "this.on_fire_sys_onlbuttondown",
        "this.on_fire_user_onlbuttondown",
        "this.on_lbuttondown_basic_action",
        "this.parent._on_bubble_lbuttondown"
      ]
    },
    {
      "name": "_pComponent.on_touch_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._setRepeatInfo",
        "nexacro._setTrackInfo",
        "this._changeUserStatus",
        "this._getWindow"
      ]
    },
    {
      "name": "_pComponent.on_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._getRTLCanvasXForMouseEvent",
        "nexacro._setRepeatInfo",
        "nexacro._setTrackInfo",
        "ownerframe._canDragMove",
        "this._changeUserStatus",
        "this._getWindow",
        "this._isRtl",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pComponent.on_lbuttondown_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "form._setLastFocus",
        "last_modalframe._contains",
        "refer_comp._changeStatus",
        "refer_comp._getParentForm",
        "refer_comp._on_focus",
        "refer_comp._resetScrollPos",
        "this._getWindow",
        "this._isEnable",
        "this._isFireVirtualMouseEvent",
        "win._findComponentForEvent",
        "win._getLastModalFrame"
      ]
    },
    {
      "name": "_pComponent._on_rbuttondown",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_rbuttondown",
        "this.on_rbuttondown_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_rbuttondown",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getFocusAcceptableComponent",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_fire_sys_onrbuttondown",
        "this.on_fire_user_onrbuttondown",
        "this.parent._on_bubble_rbuttondown"
      ]
    },
    {
      "name": "_pComponent.on_rbuttondown_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "refer_comp._on_focus",
        "this._getWindow",
        "this._isEnable",
        "win._findComponentForEvent"
      ]
    },
    {
      "name": "_pComponent._on_lbuttonup",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_lbuttonup",
        "this.on_lbuttonup_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_lbuttonup",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "from_elem",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_fire_sys_onlbuttonup",
        "this.on_fire_user_onlbuttonup",
        "this.on_lbuttonup_basic_action",
        "this.parent._on_bubble_lbuttonup"
      ]
    },
    {
      "name": "_pComponent.on_lbuttonup_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._changeStatus",
        "this._changeUserStatus",
        "this._isPushed"
      ]
    },
    {
      "name": "_pComponent.on_lbuttonup_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_rbuttonup",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_rbuttonup",
        "this.on_rbuttonup_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_rbuttonup",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "from_elem",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_fire_sys_onrbuttonup",
        "this.on_fire_user_onrbuttonup",
        "this.on_rbuttonup_basic_action",
        "this.parent._on_bubble_rbuttonup"
      ]
    },
    {
      "name": "_pComponent.on_rbuttonup_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._changeUserStatus",
        "this._isPushed"
      ]
    },
    {
      "name": "_pComponent.on_rbuttonup_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_mouseup",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_mouseup",
        "this.on_mouseup_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_mouseup",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "from_elem",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_fire_sys_onmouseup",
        "this.on_fire_user_onmouseup",
        "this.parent._on_bubble_mouseup"
      ]
    },
    {
      "name": "_pComponent.on_mouseup_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_mousedown",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_mousedown",
        "this.on_mousedown_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_mousedown",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_fire_sys_onmousedown",
        "this.on_fire_user_onmousedown",
        "this.parent._on_bubble_mousedown"
      ]
    },
    {
      "name": "_pComponent.on_mousedown_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_mousemove",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "cur_popup._contains",
        "cur_popup._getRootComponent",
        "nexacro._mousewheel_obj._changeStatus",
        "this._getFromComponent",
        "this._getRootComponent",
        "this._getWindow",
        "this._on_bubble_mousemove",
        "this.on_mousemove_default_action",
        "win.findComponent"
      ]
    },
    {
      "name": "_pComponent._on_bubble_mousemove",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_fire_sys_onmousemove",
        "this.on_fire_user_onmousemove",
        "this.on_mousemove_basic_action",
        "this.parent._on_bubble_mousemove"
      ]
    },
    {
      "name": "_pComponent.on_mousemove_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "elem_comp._changeUserStatus",
        "elem_comp._isPushed",
        "this._changeStatus",
        "this._changeUserStatus",
        "this._getWindow",
        "this._isPushed",
        "win.findComponent"
      ]
    },
    {
      "name": "_pComponent.on_mousemove_default_action",
      "params": [
        "elem",
        "from_comp",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_mouseenter",
      "params": [
        "elem",
        "from_comp",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "cur_popup._contains",
        "cur_popup._getRootComponent",
        "this._getFromComponent",
        "this._getRootComponent",
        "this._getWindow",
        "this._on_bubble_mouseenter",
        "this.on_mouseenter_default_action",
        "win.findComponent"
      ]
    },
    {
      "name": "_pComponent._on_bubble_mouseenter",
      "params": [
        "elem",
        "from_comp",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._contains",
        "this._getClientXY",
        "this._getRecalcCanvasXY",
        "this._getRootComponent",
        "this._isEnable",
        "this.on_fire_sys_onmouseenter",
        "this.on_fire_user_onmouseenter",
        "this.parent._on_bubble_mouseenter"
      ]
    },
    {
      "name": "_pComponent.on_mouseenter_default_action",
      "params": [
        "elem",
        "from_comp",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_mouseleave",
      "params": [
        "elem",
        "to_comp",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "cur_popup._contains",
        "cur_popup._getRootComponent",
        "this._getFromComponent",
        "this._getRootComponent",
        "this._getWindow",
        "this._on_bubble_mouseleave",
        "this.on_mouseleave_default_action",
        "win.findComponent"
      ]
    },
    {
      "name": "_pComponent._on_bubble_mouseleave",
      "params": [
        "elem",
        "to_comp",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._contains",
        "this._getClientXY",
        "this._getRecalcCanvasXY",
        "this._getRootComponent",
        "this._isEnable",
        "this.on_fire_sys_onmouseleave",
        "this.on_fire_user_onmouseleave",
        "this.on_mouseleave_basic_action",
        "this.parent._on_bubble_mouseleave"
      ]
    },
    {
      "name": "_pComponent.on_mouseleave_basic_action",
      "params": [
        "elem",
        "to_comp",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._changeStatus",
        "this._changeUserStatus",
        "this._isPushed",
        "this._isSelected"
      ]
    },
    {
      "name": "_pComponent.on_mouseleave_default_action",
      "params": [
        "elem",
        "to_comp",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_mousewheel",
      "params": [
        "elem",
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._on_bubble_mousewheel"
      ]
    },
    {
      "name": "_pComponent._on_bubble_mousewheel",
      "params": [
        "elem",
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "popupcontrol._is_popup",
        "this._getClientXY",
        "this._getFromComponent",
        "this._getPopupControl",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this._setHScrollDefaultAction",
        "this._setVScrollDefaultAction",
        "this.on_fire_sys_onmousewheel",
        "this.on_fire_user_onmousewheel",
        "this.parent._on_bubble_mousewheel"
      ]
    },
    {
      "name": "_pComponent._setVScrollDefaultAction",
      "params": [
        "wheelDelta"
      ],
      "calls": [
        "this._scrollTo",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._setHScrollDefaultAction",
      "params": [
        "wheelDelta"
      ],
      "calls": [
        "this._scrollTo",
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._on_drag",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro._initDragInfo",
        "this._getFromComponent",
        "this._on_bubble_drag"
      ]
    },
    {
      "name": "_pComponent._on_bubble_drag",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getFromComponent",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_fire_sys_ondrag",
        "this.on_fire_user_ondrag",
        "this.parent._on_bubble_drag"
      ]
    },
    {
      "name": "_pComponent.on_drag_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_drop",
      "params": [
        "elem",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_drop",
        "this.on_drop_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_drop",
      "params": [
        "elem",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_fire_sys_ondrop",
        "this.on_fire_user_ondrop",
        "this.parent._on_bubble_drop"
      ]
    },
    {
      "name": "_pComponent.on_drop_default_action",
      "params": [
        "elem",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_dragmove",
      "params": [
        "elem",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "xdeltavalue",
        "ydeltavalue",
        "meta_key"
      ],
      "calls": [
        "nexacro._initDragInfo",
        "this._getFromComponent",
        "this._on_bubble_dragmove",
        "this.on_dragmove_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_dragmove",
      "params": [
        "elem",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "xdeltavalue",
        "ydeltavalue",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_fire_sys_ondragmove",
        "this.on_fire_user_ondragmove",
        "this.parent._on_bubble_dragmove"
      ]
    },
    {
      "name": "_pComponent.on_dragmove_default_action",
      "params": [
        "elem",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_dragenter",
      "params": [
        "elem",
        "from_comp",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "dayatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro._initDragInfo",
        "this._getFromComponent",
        "this._on_bubble_dragenter",
        "this.on_dragenter_default_action"
      ]
    },
    {
      "name": "_pComponent.on_dragenter_basic_action",
      "params": [
        "elem",
        "from_comp",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._changeStatus",
        "this._changeUserStatus",
        "this._isPushed"
      ]
    },
    {
      "name": "_pComponent.on_dragenter_default_action",
      "params": [
        "elem",
        "from_comp",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_dragleave",
      "params": [
        "elem",
        "to_comp",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "dayatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_dragleave",
        "this.on_dragleave_default_action"
      ]
    },
    {
      "name": "_pComponent.on_dragleave_basic_action",
      "params": [
        "elem",
        "to_comp",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._changeStatus",
        "this._changeUserStatus",
        "this._isPushed"
      ]
    },
    {
      "name": "_pComponent.on_dragleave_default_action",
      "params": [
        "elem",
        "to_comp",
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_keydown",
      "params": [
        "elem",
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_keydown",
        "this.on_keydown_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_keydown",
      "params": [
        "elem",
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._isAccessibilityEnable",
        "this._isEnable",
        "this.on_fire_sys_onkeydown",
        "this.on_fire_user_onkeydown",
        "this.on_keydown_basic_action",
        "this.parent._on_bubble_keydown"
      ]
    },
    {
      "name": "_pComponent.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_keyup",
      "params": [
        "elem",
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "meta_key"
      ],
      "calls": [
        "this._getDlgCode",
        "this._getFromComponent",
        "this._on_bubble_keyup",
        "this.on_keyup_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_keyup",
      "params": [
        "elem",
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope",
        "meta_key"
      ],
      "calls": [
        "this._isAccessibilityEnable",
        "this._isEnable",
        "this.on_fire_sys_onkeyup",
        "this.on_fire_user_onkeyup",
        "this.on_keyup_basic_action",
        "this.parent._on_bubble_keyup"
      ]
    },
    {
      "name": "_pComponent.on_keyup_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_keyup_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_imeaction",
      "params": [
        "elem",
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._isEnable",
        "this.on_fire_onimeaction",
        "this.on_imeaction_default_action"
      ]
    },
    {
      "name": "_pComponent.on_imeaction_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "meta_key"
      ],
      "calls": [
        "form.getNextComponent",
        "form.getPrevComponent",
        "next_comp.setFocus",
        "prev_comp.setFocus",
        "this._getForm",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pComponent._on_touchstart",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_touchstart"
      ]
    },
    {
      "name": "_pComponent._on_bubble_touchstart",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "nexacro._setDragInfo",
        "this._isEnable",
        "this.on_touchstart_basic_action",
        "this.on_touchstart_default_action",
        "this.parent._on_bubble_touchstart",
        "touch_manager.updateTouchInputInfosCanvasXY",
        "touch_manager.updateTouchInputInfosClientXY"
      ]
    },
    {
      "name": "_pComponent.on_touchstart_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "nexacro._checkClosePopupComponent",
        "nexacro._setRepeatInfo",
        "nexacro._setTrackInfo",
        "this._changeUserStatus",
        "this._getWindow",
        "touch_manager.getFirstTouchInputInfo"
      ]
    },
    {
      "name": "_pComponent.on_touchstart_default_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_touchmove",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_touchmove"
      ]
    },
    {
      "name": "_pComponent._on_bubble_touchmove",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_touchmove_basic_action",
        "this.on_touchmove_default_action",
        "this.parent._on_bubble_touchmove",
        "touch_manager.updateTouchInputInfosCanvasXY",
        "touch_manager.updateTouchInputInfosClientXY"
      ]
    },
    {
      "name": "_pComponent.on_touchmove_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "elem_comp._changeUserStatus",
        "elem_comp._isPushed",
        "this._getWindow",
        "touch_manager.getFirstTouchInputInfo",
        "win.findComponent"
      ]
    },
    {
      "name": "_pComponent.on_touchmove_default_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_touchend",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_touchend"
      ]
    },
    {
      "name": "_pComponent._on_bubble_touchend",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_touchend_basic_action",
        "this.on_touchend_default_action",
        "this.parent._on_bubble_touchend",
        "touch_manager.updateTouchInputInfosCanvasXY",
        "touch_manager.updateTouchInputInfosClientXY"
      ]
    },
    {
      "name": "_pComponent.on_touchend_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "this._changeStatus",
        "this._changeUserStatus",
        "touch_manager.getFirstTouchInputInfo"
      ]
    },
    {
      "name": "_pComponent.on_touchend_default_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_tap",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_tap"
      ]
    },
    {
      "name": "_pComponent._on_bubble_tap",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._getClientXY",
        "this._getFocusAcceptableComponent",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_tap_basic_action",
        "this.on_tap_basic_action_before",
        "this.on_tap_default_action",
        "this.parent._on_bubble_tap"
      ]
    },
    {
      "name": "_pComponent.on_tap_basic_action_before",
      "params": [
        "/*elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_tap_basic_action",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp"
      ],
      "calls": [
        "nexacro._OnceCallbackTimer.callonce",
        "nexacro._getLbuttonupDelayTime",
        "refer_comp._on_focus",
        "this._focus_refer_comp._on_focus",
        "this._getWindow",
        "this._isEnable",
        "this._on_click",
        "win._findComponentForEvent"
      ]
    },
    {
      "name": "_pComponent.on_tap_default_action",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_dbltap",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_dbltap"
      ]
    },
    {
      "name": "_pComponent._on_bubble_dbltap",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._getClientXY",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this.on_dbltap_basic_action",
        "this.on_dbltap_default_action",
        "this.parent._on_bubble_dbltap"
      ]
    },
    {
      "name": "_pComponent.on_dbltap_basic_action",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_dbltap_default_action",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_pinchstart",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange"
      ],
      "calls": [
        "this._getFromComponent",
        "this._isParentdefaultprevented",
        "this._on_bubble_pinchstart"
      ]
    },
    {
      "name": "_pComponent._on_bubble_pinchstart",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_pinchstart_basic_action",
        "this.on_pinchstart_default_action",
        "this.parent._on_bubble_pinchstart"
      ]
    },
    {
      "name": "_pComponent.on_pinchstart_basic_action",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_pinchstart_default_action",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_pinch",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange"
      ],
      "calls": [
        "this._getFromComponent",
        "this._isParentdefaultprevented",
        "this._on_bubble_pinch"
      ]
    },
    {
      "name": "_pComponent._on_bubble_pinch",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_pinch_basic_action",
        "this.on_pinch_default_action",
        "this.parent._on_bubble_pinch"
      ]
    },
    {
      "name": "_pComponent.on_pinch_basic_action",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_pinch_default_action",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_pinchend",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_pinchend"
      ]
    },
    {
      "name": "_pComponent._on_bubble_pinchend",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_pinchend_basic_action",
        "this.on_pinchend_default_action",
        "this.parent._on_bubble_pinchend"
      ]
    },
    {
      "name": "_pComponent.on_pinchend_basic_action",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_pinchend_default_action",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_flingstart",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen"
      ],
      "calls": [
        "this._on_bubble_flingstart"
      ]
    },
    {
      "name": "_pComponent._on_bubble_flingstart",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_flingstart_basic_action",
        "this.on_flingstart_default_action",
        "this.parent._on_bubble_flingstart"
      ]
    },
    {
      "name": "_pComponent.on_flingstart_basic_action",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_flingstart_default_action",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_fling",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen"
      ],
      "calls": [
        "this._on_bubble_fling"
      ]
    },
    {
      "name": "_pComponent._on_bubble_fling",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_fling_basic_action",
        "this.on_fling_default_action",
        "this.parent._on_bubble_fling"
      ]
    },
    {
      "name": "_pComponent.on_fling_basic_action",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fling_default_action",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_flingend",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen"
      ],
      "calls": [
        "this._on_bubble_flingend"
      ]
    },
    {
      "name": "_pComponent._on_bubble_flingend",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_flingend_basic_action",
        "this.on_flingend_default_action",
        "this.parent._on_bubble_flingend"
      ]
    },
    {
      "name": "_pComponent.on_flingend_basic_action",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "refer_comp"
      ],
      "calls": [
        "pThis._getHScrollBarType",
        "pThis._getScrollable",
        "pThis._getVScrollBarType",
        "pThis._isEnable",
        "pThis._p_hscrollbar.set_visible",
        "pThis._p_vscrollbar.set_visible"
      ]
    },
    {
      "name": "_pComponent.on_flingend_default_action",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_longpress",
      "params": [
        "elem",
        "touchinfos"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_longpress"
      ]
    },
    {
      "name": "_pComponent._on_bubble_longpress",
      "params": [
        "elem",
        "touchinfos",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_longpress_basic_action",
        "this.on_longpress_default_action",
        "this.parent._on_bubble_longpress"
      ]
    },
    {
      "name": "_pComponent.on_longpress_basic_action",
      "params": [
        "elem",
        "touchinfos",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_longpress_default_action",
      "params": [
        "elem",
        "touchinfos",
        "refer_comp"
      ],
      "calls": [
        "refer_comp._on_focus",
        "this._getWindow",
        "this._isEnable",
        "win._findComponentForEvent"
      ]
    },
    {
      "name": "_pComponent._on_slidestart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue"
      ],
      "calls": [
        "this._on_bubble_slidestart"
      ]
    },
    {
      "name": "_pComponent._on_bubble_slidestart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_slidestart_basic_action",
        "this.on_slidestart_default_action",
        "this.parent._on_bubble_slidestart"
      ]
    },
    {
      "name": "_pComponent.on_slidestart_basic_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_slidestart_default_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_slide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue"
      ],
      "calls": [
        "this._on_bubble_slide"
      ]
    },
    {
      "name": "_pComponent._on_bubble_slide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "Math.abs",
        "fire_event_func.call",
        "this._isEnable",
        "this.on_slide_basic_action",
        "this.on_slide_default_action",
        "this.parent._on_bubble_slide"
      ]
    },
    {
      "name": "_pComponent.on_slide_basic_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_slide_default_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_slideend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue"
      ],
      "calls": [
        "this._on_bubble_slideend"
      ]
    },
    {
      "name": "_pComponent._on_bubble_slideend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "fire_event_func.call",
        "this._isEnable",
        "this.on_slideend_basic_action",
        "this.on_slideend_default_action",
        "this.parent._on_bubble_slideend"
      ]
    },
    {
      "name": "_pComponent.on_slideend_basic_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": [
        "pThis._getHScrollBarType",
        "pThis._getScrollable",
        "pThis._getVScrollBarType",
        "pThis._isEnable",
        "pThis._p_hscrollbar.set_visible",
        "pThis._p_vscrollbar.set_visible",
        "touchsession._cur_detector._checkFlingOption"
      ]
    },
    {
      "name": "_pComponent.on_slideend_default_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_accessibilitygesture",
      "params": [
        "direction"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_accessibilitygesture",
        "this.on_accessibilitygesture_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_accessibilitygesture",
      "params": [
        "direction",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "this._isEnable",
        "this.on_fire_sys_onaccessibilitygesture",
        "this.on_fire_user_onaccessibilitygesture",
        "this.parent._on_bubble_accessibilitygesture"
      ]
    },
    {
      "name": "_pComponent.on_accessibilitygesture_default_action",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent._on_devicebuttonup",
      "params": [
        "button"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_devicebuttonup",
        "this.on_ondevicebuttonup_default_action"
      ]
    },
    {
      "name": "_pComponent._on_bubble_devicebuttonup",
      "params": [
        "button",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "this._isEnable",
        "this.on_fire_sys_ondevicebuttonup",
        "this.on_fire_user_ondevicebuttonup",
        "this.parent._on_bubble_devicebuttonup"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_ondevicebuttonup",
      "params": [
        "button",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "nexacro.DeviceButtonEventInfo",
        "this.ondevicebuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_ondevicebuttonup",
      "params": [
        "button",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.DeviceButtonEventInfo",
        "this.ondevicebuttonup._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ondevicebuttonup",
      "params": [
        "button",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.DeviceButtonEventInfo",
        "this.ondevicebuttonup._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_ondevicebuttonup_default_action",
      "params": [
        "button"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "evt.destroy",
        "nexacro.ClickEventInfo",
        "this.onclick._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.ClickEventInfo",
        "this.ondblclick._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onkillfocus",
      "params": [
        "newobj",
        "newreferobj"
      ],
      "calls": [
        "nexacro.KillFocusEventInfo",
        "this.onkillfocus._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onsetfocus",
      "params": [
        "oldobj",
        "oldreferobj",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.SetFocusEventInfo",
        "this.onsetfocus._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onkeydown._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onkeydown._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onkeydown._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onkeyup",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onkeyup._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onkeyup",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onkeyup._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onkeyup",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onkeyup._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onimeaction",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onimeaction._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onimeaction",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onimeaction._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onimeaction",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onimeaction._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.InputEventInfo",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onlbuttondown._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onlbuttondown._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onlbuttondown._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onlbuttonup._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onlbuttonup._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onlbuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onrbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onrbuttondown._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onrbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onrbuttondown._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onrbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onrbuttondown._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onrbuttonup._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onrbuttonup._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onrbuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onmouseup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmouseup._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onmouseup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmouseup._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onmouseup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmouseup._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onmousedown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmousedown._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onmousedown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmousedown._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onmousedown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmousedown._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onmouseenter",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmouseenter._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onmouseenter",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmouseenter._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onmouseenter",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmouseenter._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onmouseleave",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmouseleave._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onmouseleave",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmouseleave._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onmouseleave",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmouseleave._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onmousemove",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmousemove._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onmousemove",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmousemove._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onmousemove",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onmousemove._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseWheelEventInfo",
        "this.onmousewheel._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseWheelEventInfo",
        "this.onmousewheel._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseWheelEventInfo",
        "this.onmousewheel._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ondrag",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "refer_comp",
        "self_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this._getDragData",
        "this.ondrag._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_ondrag",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "refer_comp",
        "src_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this._getDragData",
        "this._getRootComponent",
        "this.ondrag._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_ondrag",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "refer_comp",
        "src_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this._getDragData",
        "this._getRootComponent",
        "this.ondrag._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ondrop",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondrop._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_ondrop",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondrop._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_ondrop",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondrop._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ondragenter",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondragenter._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_ondragenter",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondragenter._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_ondragenter",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondragenter._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ondragleave",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondragleave._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_ondragleave",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondragleave._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_ondragleave",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondragleave._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ondragmove",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondragmove._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_ondragmove",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "xdeltavalue",
        "ydeltavalue",
        "meta_key"
      ],
      "calls": [
        "Math.abs",
        "nexacro.DragEventInfo",
        "src_comp._p_hscrollbar._setPos",
        "src_comp._p_vscrollbar._setPos",
        "this.ondragmove._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_ondragmove",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo",
        "this.ondragmove._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onmove",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "nexacro.MoveEventInfo",
        "this.onmove._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onsize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.SizeEventInfo",
        "this.onsize._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_oncontextmenu",
      "params": [
        "from_comp",
        "from_refer_comp",
        "button",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ContextMenuEventInfo",
        "this.oncontextmenu._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onextendedcommand",
      "params": [
        "eventid",
        "eventtype",
        "deviceid",
        "data",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.ExtendedCommandEventInfo",
        "this.onextendedcommand._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onextendedcommand",
      "params": [
        "eventid",
        "eventtype",
        "deviceid",
        "data",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.ExtendedCommandEventInfo",
        "this.onextendedcommand._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ontouchstart",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.TouchEventInfo",
        "this.ontouchstart._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_ontouchstart",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.TouchEventInfo",
        "this.ontouchstart._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_ontouchstart",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.TouchEventInfo",
        "this.ontouchstart._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ontouchmove",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.TouchEventInfo",
        "this.ontouchmove._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_ontouchmove",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.TouchEventInfo",
        "this.ontouchmove._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_ontouchmove",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.TouchEventInfo",
        "this.ontouchmove._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ontouchend",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.TouchEventInfo",
        "this.ontouchend._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_ontouchend",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.TouchEventInfo",
        "this.ontouchend._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_ontouchend",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.TouchEventInfo",
        "this.ontouchend._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_ontap",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_user_ontap",
      "params": [],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_ontap",
      "params": [
        "elem",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_ondbltap",
      "params": [],
      "calls": [
        "nexacro.TapEventInfo",
        "this.ondbltap._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_ondbltap",
      "params": [
        "elem",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "this._on_dblclick"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onpinchstart",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_onpinchstart",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.PinchEventInfo",
        "this.onpinchstart._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onpinch",
      "params": [
        "/*elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "from_comp",
        "from_refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_user_onpinch",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_onpinch",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "firstrange",
        "currange",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "Math.abs",
        "nexacro._getCurrentScreenID",
        "this._getZoom",
        "this._on_zoom"
      ]
    },
    {
      "name": "_pComponent.on_fire_onpinchend",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.PinchEventInfo",
        "this.onpinchend._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onpinchend",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.PinchEventInfo",
        "this.onpinchend._fireUserEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_sys_onpinchend",
      "params": [
        "elem",
        "touchinfos",
        "accvalue",
        "deltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.PinchEventInfo",
        "this.onpinchend._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onflingstart",
      "params": [
        "/*elem",
        "touch_manager",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_user_onflingstart",
      "params": [
        "elem",
        "touch_manager",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_onflingstart",
      "params": [
        "elem",
        "touch_manager",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "this.on_fire_sys_onfling"
      ]
    },
    {
      "name": "_pComponent.on_fire_onfling",
      "params": [
        "/*elem",
        "touch_manager",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_user_onfling",
      "params": [
        "elem",
        "touch_manager",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_onfling",
      "params": [
        "elem",
        "touch_manager",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "Math.abs",
        "this._getCanHscroll",
        "this._getCanVscroll",
        "this._getScrollable",
        "this._scrollBy"
      ]
    },
    {
      "name": "_pComponent.on_fire_onflingend",
      "params": [
        "/*elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_user_onflingend",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_onflingend",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "this.on_fire_sys_onfling"
      ]
    },
    {
      "name": "_pComponent.on_fire_onlongpress",
      "params": [
        "/*elem",
        "touchinfos",
        "from_comp",
        "from_refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_user_onlongpress",
      "params": [
        "elem",
        "touchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_onlongpress",
      "params": [
        "elem",
        "touchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.LongPressEventInfo",
        "this.onlongpress._fireSysEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onslidestart",
      "params": [
        "/*elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_user_onslidestart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_onslidestart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "this.on_fire_sys_onslide"
      ]
    },
    {
      "name": "_pComponent.on_fire_onslide",
      "params": [
        "/*elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_user_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp",
        "scroll_start"
      ],
      "calls": [
        "Math.abs",
        "this._getCanHscroll",
        "this._getCanVscroll",
        "this._getZoom",
        "this._scrollTo"
      ]
    },
    {
      "name": "_pComponent._getCanHscroll",
      "params": [
        "hscrollbar",
        "dragscrolltype",
        "xdeltavalue"
      ],
      "calls": [
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent._getCanVscroll",
      "params": [
        "vscrollbar",
        "dragscrolltype",
        "ydeltavalue"
      ],
      "calls": [
        "this.getElement"
      ]
    },
    {
      "name": "_pComponent.on_fire_onslideend",
      "params": [
        "/*elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_user_onslideend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_onslideend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "this.on_fire_sys_onslide"
      ]
    },
    {
      "name": "_pComponent.on_fire_onzoom",
      "params": [
        "/*zoomfactor",
        "from_comp",
        "from_refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_onorientationchange",
      "params": [
        "orientation"
      ],
      "calls": [
        "nexacro.OrientationChangeEventInfo",
        "this.onorientationchange._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_user_onaccessibilitygesture",
      "params": [
        "direction",
        "fire_comp",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_sys_onaccessibilitygesture",
      "params": [
        "direction",
        "fire_comp",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_fire_onhscroll",
      "params": [
        "eventid",
        "pos",
        "strType",
        "evtkind"
      ],
      "calls": [
        "nexacro.ScrollEventInfo",
        "this.onhscroll._fireEvent"
      ]
    },
    {
      "name": "_pComponent.on_fire_onvscroll",
      "params": [
        "eventid",
        "pos",
        "strType",
        "evtkind"
      ],
      "calls": [
        "nexacro.ScrollEventInfo",
        "this.onvscroll._fireEvent"
      ]
    },
    {
      "name": "_pComponent._on_extendedcommand",
      "params": [
        "eventid",
        "eventtype",
        "deviceid",
        "data",
        "event_bubbles"
      ],
      "calls": [
        "env.getDeviceAdaptor",
        "module.on_event_default_action",
        "nexacro.getEnvironment",
        "this._on_bubble_extendedcommand"
      ]
    },
    {
      "name": "_pComponent.on_extendedcommand_basic_action",
      "params": [
        "eventid",
        "eventtype",
        "data"
      ],
      "calls": []
    },
    {
      "name": "_pComponent.on_extendedcommand_default_action",
      "params": [
        "eventid",
        "eventtype",
        "data"
      ],
      "calls": []
    },
    {
      "name": "_pComponent._on_bubble_extendedcommand",
      "params": [
        "eventid",
        "eventtype",
        "deviceid",
        "data",
        "event_bubbles",
        "refer_comp",
        "bubble_scope"
      ],
      "calls": [
        "nexacro.getEnvironment",
        "p._on_bubble_extendedcommand",
        "p.on_fire_sys_onextendedcommand",
        "p.on_fire_user_onextendedcommand",
        "this._getParentForm",
        "this.on_extendedcommand_basic_action",
        "this.on_fire_sys_onextendedcommand",
        "this.on_fire_user_onextendedcommand"
      ]
    }
  ],
  "Data.js": [
    {
      "name": "nexacro._getXMLTagData",
      "params": [
        "xmlStr",
        "parse_pos",
        "startTag",
        "endTag"
      ],
      "calls": [
        "xmlStr.indexOf",
        "xmlStr.substring"
      ]
    },
    {
      "name": "nexacro._getXMLTagData2",
      "params": [
        "xmlStr",
        "parse_pos",
        "startTag",
        "endTag"
      ],
      "calls": [
        "xmlStr.charAt",
        "xmlStr.indexOf",
        "xmlStr.substring"
      ]
    },
    {
      "name": "nexacro._getXMLTagData3",
      "params": [
        "xmlStr",
        "parse_pos",
        "startTag",
        "endTag"
      ],
      "calls": [
        "xmlStr.charAt",
        "xmlStr.indexOf",
        "xmlStr.substring"
      ]
    },
    {
      "name": "nexacro._getXMLTagData4",
      "params": [
        "xmlStr",
        "parse_pos",
        "startTag"
      ],
      "calls": [
        "xmlStr.indexOf",
        "xmlStr.substring"
      ]
    },
    {
      "name": "nexacro._getXMLAttributeID",
      "params": [
        "attrStr"
      ],
      "calls": [
        "attrStr.indexOf",
        "attrStr.substring"
      ]
    },
    {
      "name": "nexacro._getXMLAttributeType",
      "params": [
        "attrStr"
      ],
      "calls": [
        "attrStr.indexOf",
        "attrStr.substring"
      ]
    },
    {
      "name": "nexacro._getXMLAttributeData",
      "params": [
        "attrStr",
        "attrid"
      ],
      "calls": [
        "attrStr.indexOf",
        "attrStr.substring"
      ]
    },
    {
      "name": "nexacro._appendCommContext",
      "params": [
        "context"
      ],
      "calls": [
        "nexacro._comm_contextlist.push"
      ]
    },
    {
      "name": "nexacro._removeCommContext",
      "params": [
        "context"
      ],
      "calls": []
    },
    {
      "name": "nexacro.__whileLoop",
      "params": [
        "thisArg",
        "_func"
      ],
      "calls": [
        "_func.call"
      ]
    },
    {
      "name": "nexacro.__forLoop",
      "params": [
        "thisArg",
        "i",
        "end",
        "_func"
      ],
      "calls": [
        "_func.call"
      ]
    },
    {
      "name": "nexacro.__reverseForLoop",
      "params": [
        "thisArg",
        "i",
        "end",
        "_func"
      ],
      "calls": [
        "_func.call"
      ]
    },
    {
      "name": "nexacro.Date",
      "params": [
        "year",
        "month",
        "day",
        "hours",
        "minutes",
        "seconds",
        "milliseconds"
      ],
      "calls": [
        "base_date.getFullYear",
        "nexacro._getDatatypeRule",
        "this.date.getFullYear",
        "this.date.setFullYear"
      ]
    },
    {
      "name": "_pDate.getFullYear",
      "params": [],
      "calls": [
        "this.date.getFullYear"
      ]
    },
    {
      "name": "_pDate.setFullYear",
      "params": [
        "year",
        "month",
        "day"
      ],
      "calls": [
        "this.date.setFullYear"
      ]
    },
    {
      "name": "_pDate.getYear",
      "params": [],
      "calls": [
        "this.date.getYear"
      ]
    },
    {
      "name": "_pDate.setYear",
      "params": [
        "year",
        "month",
        "day"
      ],
      "calls": [
        "this.date.setYear"
      ]
    },
    {
      "name": "_pDate.getMonth",
      "params": [],
      "calls": [
        "this.date.getMonth"
      ]
    },
    {
      "name": "_pDate.setMonth",
      "params": [
        "month",
        "day"
      ],
      "calls": [
        "this.date.setMonth"
      ]
    },
    {
      "name": "_pDate.getDate",
      "params": [],
      "calls": [
        "this.date.getDate"
      ]
    },
    {
      "name": "_pDate.setDate",
      "params": [
        "day"
      ],
      "calls": [
        "this.date.setDate"
      ]
    },
    {
      "name": "_pDate.getDay",
      "params": [],
      "calls": [
        "this.date.getDay"
      ]
    },
    {
      "name": "_pDate.getHours",
      "params": [],
      "calls": [
        "this.date.getHours"
      ]
    },
    {
      "name": "_pDate.getHalfHours",
      "params": [],
      "calls": [
        "this.date.getHours"
      ]
    },
    {
      "name": "_pDate.setHours",
      "params": [
        "hour",
        "min",
        "sec",
        "millisec"
      ],
      "calls": [
        "this.date.setHours"
      ]
    },
    {
      "name": "_pDate.getMinutes",
      "params": [],
      "calls": [
        "this.date.getMinutes"
      ]
    },
    {
      "name": "_pDate.setMinutes",
      "params": [
        "min",
        "sec",
        "millisec"
      ],
      "calls": [
        "this.date.setMinutes"
      ]
    },
    {
      "name": "_pDate.getSeconds",
      "params": [],
      "calls": [
        "this.date.getSeconds"
      ]
    },
    {
      "name": "_pDate.setSeconds",
      "params": [
        "sec",
        "millisec"
      ],
      "calls": [
        "this.date.setSeconds"
      ]
    },
    {
      "name": "_pDate.getMilliseconds",
      "params": [],
      "calls": [
        "this.date.getMilliseconds"
      ]
    },
    {
      "name": "_pDate.setMilliseconds",
      "params": [
        "millisec"
      ],
      "calls": [
        "this.date.setMilliseconds"
      ]
    },
    {
      "name": "_pDate.getTime",
      "params": [],
      "calls": [
        "this.date.getTime"
      ]
    },
    {
      "name": "_pDate.setTime",
      "params": [
        "millisec"
      ],
      "calls": [
        "this.date.setTime"
      ]
    },
    {
      "name": "_pDate.getTimezoneOffset",
      "params": [],
      "calls": [
        "this.date.getTimezoneOffset"
      ]
    },
    {
      "name": "_pDate.getUTCFullYear",
      "params": [],
      "calls": [
        "this.date.getUTCFullYear"
      ]
    },
    {
      "name": "_pDate.setUTCFullYear",
      "params": [
        "year",
        "month",
        "day"
      ],
      "calls": [
        "this.date.setUTCFullYear"
      ]
    },
    {
      "name": "_pDate.getUTCMonth",
      "params": [],
      "calls": [
        "this.date.getUTCMonth"
      ]
    },
    {
      "name": "_pDate.setUTCMonth",
      "params": [
        "month",
        "day"
      ],
      "calls": [
        "this.date.setUTCMonth"
      ]
    },
    {
      "name": "_pDate.getUTCDate",
      "params": [],
      "calls": [
        "this.date.getUTCDate"
      ]
    },
    {
      "name": "_pDate.setUTCDate",
      "params": [
        "day"
      ],
      "calls": [
        "this.date.setUTCDate"
      ]
    },
    {
      "name": "_pDate.getUTCDay",
      "params": [],
      "calls": [
        "this.date.getUTCDay"
      ]
    },
    {
      "name": "_pDate.getUTCHours",
      "params": [],
      "calls": [
        "this.date.getUTCHours"
      ]
    },
    {
      "name": "_pDate.setUTCHours",
      "params": [
        "hour",
        "min",
        "sec",
        "millisec"
      ],
      "calls": [
        "this.date.setUTCHours"
      ]
    },
    {
      "name": "_pDate.getUTCMinutes",
      "params": [],
      "calls": [
        "this.date.getUTCMinutes"
      ]
    },
    {
      "name": "_pDate.setUTCMinutes",
      "params": [
        "min",
        "sec",
        "millisec"
      ],
      "calls": [
        "this.date.setUTCMinutes"
      ]
    },
    {
      "name": "_pDate.getUTCSeconds",
      "params": [],
      "calls": [
        "this.date.getUTCSeconds"
      ]
    },
    {
      "name": "_pDate.setUTCSeconds",
      "params": [
        "sec",
        "millisec"
      ],
      "calls": [
        "this.date.setUTCSeconds"
      ]
    },
    {
      "name": "_pDate.getUTCMilliseconds",
      "params": [],
      "calls": [
        "this.date.getUTCMilliseconds"
      ]
    },
    {
      "name": "_pDate.setUTCMilliseconds",
      "params": [
        "millisec"
      ],
      "calls": [
        "this.date.setUTCMilliseconds"
      ]
    },
    {
      "name": "_pDate.parse",
      "params": [
        "datestring"
      ],
      "calls": [
        "Date.parse"
      ]
    },
    {
      "name": "_pDate.UTC",
      "params": [
        "year",
        "month",
        "day",
        "hours",
        "minutes",
        "seconds",
        "ms"
      ],
      "calls": [
        "Date.UTC"
      ]
    },
    {
      "name": "_pDate.valueOf",
      "params": [],
      "calls": [
        "this.toString"
      ]
    },
    {
      "name": "_pDate.toGMTString",
      "params": [],
      "calls": [
        "this.date.toGMTString"
      ]
    },
    {
      "name": "_pDate.toDateString",
      "params": [],
      "calls": [
        "this.date.toDateString"
      ]
    },
    {
      "name": "_pDate.toTimeString",
      "params": [],
      "calls": [
        "this.date.toTimeString"
      ]
    },
    {
      "name": "_pDate.toLocaleDateString",
      "params": [
        "locale"
      ],
      "calls": [
        "nexacro.Locale.getLocaleInfo",
        "this.date.toLocaleDateString",
        "this.getLocaleFormatString"
      ]
    },
    {
      "name": "_pDate.toLocaleTimeString",
      "params": [
        "locale"
      ],
      "calls": [
        "nexacro.Locale.getLocaleInfo",
        "this.date.toLocaleTimeString",
        "this.getLocaleFormatString"
      ]
    },
    {
      "name": "_pDate.toString",
      "params": [],
      "calls": [
        "this.date.valueOf",
        "this.getDate",
        "this.getFullYear",
        "this.getHours",
        "this.getMilliseconds",
        "this.getMinutes",
        "this.getMonth",
        "this.getSeconds",
        "this.toZeroDigitString"
      ]
    },
    {
      "name": "_pDate.toLocaleString",
      "params": [
        "locale"
      ],
      "calls": [
        "nexacro.Locale.getLocaleInfo",
        "this.getLocaleFormatString"
      ]
    },
    {
      "name": "_pDate.toUTCString",
      "params": [],
      "calls": [
        "this.date.toUTCString"
      ]
    },
    {
      "name": "_pDate.toZeroDigitString",
      "params": [
        "v",
        "d"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pDate.getLocaleFormatString",
      "params": [
        "locale",
        "format",
        "bLTRMark"
      ],
      "calls": [
        "format_string.replace",
        "nexacro.Locale.getLocaleInfo",
        "nexacro._toString",
        "this.getDate",
        "this.getFullYear",
        "this.getHalfHours",
        "this.getHours",
        "this.getMinutes",
        "this.getMonth",
        "this.getSeconds",
        "this.getYear",
        "this.toLocaleAMPMString",
        "this.toLocaleMonthString",
        "this.toLocaleWeekDayString"
      ]
    },
    {
      "name": "_pDate._getLocaleFormatString2",
      "params": [
        "locale",
        "format"
      ],
      "calls": [
        "format_string.replace",
        "nexacro.Locale.getLocaleInfo",
        "nexacro._toString",
        "this.getDate",
        "this.getFullYear",
        "this.getHalfHours",
        "this.getHours",
        "this.getMinutes",
        "this.getMonth",
        "this.getSeconds",
        "this.toLocaleAMPMString",
        "this.toLocaleMonthString",
        "this.toLocaleWeekDayString"
      ]
    },
    {
      "name": "_pDate.toLocaleWeekDayString",
      "params": [
        "locale",
        "option"
      ],
      "calls": [
        "nexacro.Locale.getLocaleInfo",
        "this.getDay"
      ]
    },
    {
      "name": "_pDate.toLocaleMonthString",
      "params": [
        "locale",
        "option"
      ],
      "calls": [
        "nexacro.Locale.getLocaleInfo",
        "this.getMonth"
      ]
    },
    {
      "name": "_pDate.toLocaleAMPMString",
      "params": [
        "locale"
      ],
      "calls": [
        "nexacro.Locale.getLocaleInfo",
        "this.getHours"
      ]
    },
    {
      "name": "_pDate.addYear",
      "params": [
        "v"
      ],
      "calls": [
        "this.date.getFullYear",
        "this.date.setFullYear"
      ]
    },
    {
      "name": "_pDate.addMonth",
      "params": [
        "v"
      ],
      "calls": [
        "this.date.getMonth",
        "this.date.setMonth"
      ]
    },
    {
      "name": "_pDate.addDate",
      "params": [
        "v"
      ],
      "calls": [
        "this.date.getDate",
        "this.date.setDate"
      ]
    },
    {
      "name": "_pDate.addHours",
      "params": [
        "v"
      ],
      "calls": [
        "this.date.getHours",
        "this.date.setHours"
      ]
    },
    {
      "name": "_pDate.addMinutes",
      "params": [
        "v"
      ],
      "calls": [
        "this.date.getMinutes",
        "this.date.setMinutes"
      ]
    },
    {
      "name": "_pDate.addSeconds",
      "params": [
        "v"
      ],
      "calls": [
        "this.date.getSeconds",
        "this.date.setSeconds"
      ]
    },
    {
      "name": "_pDate.addMilliseconds",
      "params": [
        "v"
      ],
      "calls": [
        "this.date.getMilliseconds",
        "this.date.setMilliseconds"
      ]
    },
    {
      "name": "_pDate._isInvalidDate",
      "params": [],
      "calls": [
        "this.date.getFullYear",
        "this.date.valueOf"
      ]
    },
    {
      "name": "_pDate.clone",
      "params": [],
      "calls": [
        "nexacro.Date",
        "this.date.getTime"
      ]
    },
    {
      "name": "nexacro.ExprParser",
      "params": [],
      "calls": []
    },
    {
      "name": "_pExprParser.append",
      "params": [
        "text",
        "type"
      ],
      "calls": []
    },
    {
      "name": "_pExprParser.tokenizeExpr",
      "params": [
        "expr_str"
      ],
      "calls": [
        "src.charAt",
        "this.append",
        "this.regexp_greek.test",
        "this.regexp_hangul.test",
        "this.regexp_hanja.test",
        "this.regexp_nipon.test",
        "this.regexp_num.test",
        "tok.charAt"
      ]
    },
    {
      "name": "_pExprParser.makeSubExpr",
      "params": [
        "ds",
        "from",
        "to"
      ],
      "calls": [
        "dataset.getColumn",
        "pthis.makeSubExpr"
      ]
    },
    {
      "name": "_pExprParser.makeSubExpr",
      "params": [
        "ds",
        "from",
        "to"
      ],
      "calls": [
        "dataset.__getParsedRow",
        "dataset.getColumn",
        "ds.getColIndex",
        "id.substring",
        "this.makeSubExpr"
      ]
    },
    {
      "name": "_pExprParser.makeExpr",
      "params": [
        "ds",
        "expr_str"
      ],
      "calls": [
        "this.makeSubExpr",
        "this.tokenizeExpr"
      ]
    },
    {
      "name": "_pExprParser.makeSubEval",
      "params": [
        "ds",
        "from",
        "to"
      ],
      "calls": []
    },
    {
      "name": "_pExprParser.makeEval",
      "params": [
        "ds",
        "expr_str"
      ],
      "calls": [
        "this.makeSubEval",
        "this.tokenizeExpr"
      ]
    },
    {
      "name": "_pExprParser._transferWhitespace",
      "params": [
        "edit_val"
      ],
      "calls": [
        "Object.keys",
        "edit_val.charAt",
        "replace_whitespace.push",
        "whitespace.push"
      ]
    },
    {
      "name": "nexacro.Variable",
      "params": [
        "id",
        "val",
        "type",
        "ntype",
        "size",
        "idx"
      ],
      "calls": []
    },
    {
      "name": "nexacro.VariableList",
      "params": [],
      "calls": [
        "nexacro.Collection.call"
      ]
    },
    {
      "name": "_pVariableList._updateID",
      "params": [
        "idx",
        "newID"
      ],
      "calls": [
        "this.update_id",
        "varinfo.set_id"
      ]
    },
    {
      "name": "_pVariableList.deleteItem",
      "params": [
        "id"
      ],
      "calls": [
        "this.delete_item"
      ]
    },
    {
      "name": "_pVariableList.getValue",
      "params": [
        "id"
      ],
      "calls": [
        "this.get_item"
      ]
    },
    {
      "name": "nexacro.ConstColumnVariable",
      "params": [
        "id",
        "val",
        "type",
        "ntype",
        "size",
        "datapath",
        "idx"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DSColumnInfo",
      "params": [
        "id",
        "type",
        "ntype",
        "size",
        "prop",
        "sumtext",
        "datapath",
        "idx"
      ],
      "calls": [
        "this._on_apply_columntype"
      ]
    },
    {
      "name": "_pDSColumnInfo.set_size",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDSColumnInfo.set_type",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.DataUtils._typeenums.indexOf",
        "nexacro._toString",
        "this._on_apply_columntype",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pDSColumnInfo.set_prop",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pDSColumnInfo.set_sumtext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pDSColumnInfo.set_datapath",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_datapath"
      ]
    },
    {
      "name": "_pDSColumnInfo.on_apply_datapath",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDSColumnInfo._on_apply_columntype",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.DSColumnInfoList",
      "params": [],
      "calls": [
        "nexacro.Collection.apply"
      ]
    },
    {
      "name": "_pDSColumnInfoList._updateID",
      "params": [
        "idx",
        "newID"
      ],
      "calls": [
        "colinfo.set_id",
        "this.update_id"
      ]
    },
    {
      "name": "_pDSColumnInfoList.deleteItem",
      "params": [
        "id"
      ],
      "calls": [
        "this.delete_item"
      ]
    },
    {
      "name": "nexacro.DSColChangeEventInfo",
      "params": [
        "obj",
        "id",
        "row",
        "col",
        "colidx",
        "columnid",
        "oldvalue",
        "newvalue"
      ],
      "calls": []
    },
    {
      "name": "_pDSColChangeEventInfo.set_newvalue",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DSLoadEventInfo",
      "params": [
        "obj",
        "id",
        "errorcode",
        "errormsg",
        "reason",
        "progressload"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DSRowPosChangeEventInfo",
      "params": [
        "obj",
        "id",
        "oldRow",
        "newRow",
        "reason"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DSRowsetChangeEventInfo",
      "params": [
        "obj",
        "id",
        "row",
        "count",
        "reason"
      ],
      "calls": []
    },
    {
      "name": "nexacro.Dataset",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro.DSColumnInfoList",
        "nexacro.VariableList",
        "nexacro._EventSinkObject.call",
        "nexacro._getDatatypeRule",
        "this._initDatasetRuleFuncs"
      ]
    },
    {
      "name": "_pDataset._isDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataset.destroy",
      "params": [],
      "calls": [
        "nexacro._EventSinkObject.prototype.destroy.call",
        "this._clearAllExprs",
        "this._clearRecordData",
        "this._constVars.clear",
        "this.colinfos.clear",
        "this.on_fire_sys_onload",
        "this.parent.removeChild"
      ]
    },
    {
      "name": "_pDataset.set_arguments",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.set_binddataobject",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.set_enableevent",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.DSColChangeEventInfo",
        "nexacro._toBoolean",
        "this.on_fire_onrowsetchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset.set_updatecontrol",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pDataset.set_rowposition",
      "params": [
        "v"
      ],
      "calls": [
        "this._setRowPosition"
      ]
    },
    {
      "name": "_pDataset.set_keystring",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_keystring"
      ]
    },
    {
      "name": "_pDataset.on_apply_keystring",
      "params": [],
      "calls": [
        "this.updateSortGroup"
      ]
    },
    {
      "name": "_pDataset.set_filterstr",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.filter"
      ]
    },
    {
      "name": "_pDataset.set_loadkeymode",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pDataset.set_loadfiltermode",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pDataset.set_reversesubsum",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_reversesubsum"
      ]
    },
    {
      "name": "_pDataset.on_apply_reversesubsum",
      "params": [],
      "calls": [
        "this.updateSortGroup"
      ]
    },
    {
      "name": "_pDataset.set_useclientlayout",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pDataset.set_savenan",
      "params": [
        "v"
      ],
      "calls": [
        "type_enum.indexOf",
        "v.toString"
      ]
    },
    {
      "name": "_pDataset.set_saveinfinity",
      "params": [
        "v"
      ],
      "calls": [
        "type_enum.indexOf",
        "v.toString"
      ]
    },
    {
      "name": "_pDataset.set_saveinvaliddate",
      "params": [
        "v"
      ],
      "calls": [
        "type_enum.indexOf",
        "v.toString"
      ]
    },
    {
      "name": "_pDataset.getSaveNan",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pDataset.getSaveInfinity",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pDataset.getSaveInvalidDate",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pDataset.set_collation",
      "params": [
        "v"
      ],
      "calls": [
        "collation_enum.indexOf",
        "this.on_apply_collation",
        "v.indexOf"
      ]
    },
    {
      "name": "_pDataset.on_apply_collation",
      "params": [
        "v"
      ],
      "calls": [
        "this.updateSortGroup"
      ]
    },
    {
      "name": "_pDataset.on_fire_onload",
      "params": [
        "errcode",
        "errmsg",
        "reason",
        "progressload"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.DSLoadEventInfo"
      ]
    },
    {
      "name": "_pDataset.on_fire_sys_onload",
      "params": [
        "errcode",
        "errmsg",
        "reason",
        "progressload"
      ],
      "calls": [
        "event._fireSysEvent",
        "nexacro.DSLoadEventInfo"
      ]
    },
    {
      "name": "_pDataset.on_fire_onrowsetchanged",
      "params": [
        "row",
        "count",
        "reason"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.DSRowsetChangeEventInfo"
      ]
    },
    {
      "name": "_pDataset.on_fire_canrowposchange",
      "params": [
        "evt"
      ],
      "calls": [
        "event._fireCheckEvent",
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pDataset.on_fire_onrowposchanged",
      "params": [
        "evt"
      ],
      "calls": [
        "event._fireEvent"
      ]
    },
    {
      "name": "_pDataset.on_fire_cancolumnchange",
      "params": [
        "evt"
      ],
      "calls": [
        "event._fireCheckEvent"
      ]
    },
    {
      "name": "_pDataset.on_fire_oncolumnchanged",
      "params": [
        "evt"
      ],
      "calls": [
        "event._fireEvent",
        "event._fireSysEvent"
      ]
    },
    {
      "name": "_pDataset.on_fire_onvaluechanged",
      "params": [
        "evt"
      ],
      "calls": [
        "event._fireEvent"
      ]
    },
    {
      "name": "_pDataset.clear",
      "params": [],
      "calls": [
        "this._clearAll",
        "this._forcesetRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset.getColCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataset.getConstCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataset.getRowCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataset.getRowCountNF",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataset.getDeletedRowCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataset.getDeletedRowset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataset.setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._setContents"
      ]
    },
    {
      "name": "_pDataset._setLayout",
      "params": [
        "ds"
      ],
      "calls": []
    },
    {
      "name": "_pDataset._setRawData",
      "params": [
        "rawRecords",
        "deletedData"
      ],
      "calls": []
    },
    {
      "name": "_pDataset._createExprFunc",
      "params": [
        "expr_str"
      ],
      "calls": [
        "nexacro.ExprParser",
        "nexacro._createInlineFunc",
        "parser.makeExpr"
      ]
    },
    {
      "name": "_pDataset._getColumnSize",
      "params": [
        "col"
      ],
      "calls": []
    },
    {
      "name": "_pDataset._getColumnType",
      "params": [
        "col"
      ],
      "calls": []
    },
    {
      "name": "_pDataset._isConstColumn",
      "params": [
        "col"
      ],
      "calls": []
    },
    {
      "name": "_pDataset._addConstColumn",
      "params": [
        "id",
        "value",
        "type",
        "size",
        "datapath"
      ],
      "calls": [
        "nexacro.ConstColumnVariable",
        "nexacro.DataUtils.convert",
        "nexacro._toString",
        "this._constVars.add",
        "this._constVars.indexOf"
      ]
    },
    {
      "name": "_pDataset.addConstColumn",
      "params": [
        "id",
        "value",
        "type",
        "size",
        "datapath"
      ],
      "calls": [
        "this._addConstColumn",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._addColumn",
      "params": [
        "id",
        "type",
        "size",
        "prop",
        "text",
        "datapath"
      ],
      "calls": [
        "nexacro.DSColumnInfo",
        "nexacro._toString",
        "this.colinfos.add"
      ]
    },
    {
      "name": "_pDataset.addColumn",
      "params": [
        "id",
        "type",
        "size",
        "datapath"
      ],
      "calls": [
        "this._addColumn",
        "this._clearAllExprs",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._addColumnInfo",
      "params": [
        "id",
        "colinfo"
      ],
      "calls": [
        "nexacro.DSColumnInfo",
        "this.colinfos.add"
      ]
    },
    {
      "name": "_pDataset.addColumnInfo",
      "params": [
        "id",
        "colinfo"
      ],
      "calls": [
        "this._addColumnInfo",
        "this._clearAllExprs",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._appendColList",
      "params": [
        "colList"
      ],
      "calls": [
        "nexacro.DSColumnInfo",
        "nexacro.__forLoop",
        "this.colinfos.add"
      ]
    },
    {
      "name": "_pDataset.appendColList",
      "params": [
        "collist"
      ],
      "calls": [
        "this._appendColList",
        "this._clearAllExprs",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._deleteColumn_Row",
      "params": [
        "idx",
        "Records"
      ],
      "calls": [
        "nexacro.__forLoop",
        "rowRow._orgrow.splice",
        "rowRow.splice",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._deleteColumn",
      "params": [
        "id"
      ],
      "calls": [
        "colList.delete_item",
        "constList.delete_item",
        "nexacro.__forLoop",
        "this._deleteColumn_Row",
        "this.getColIndex"
      ]
    },
    {
      "name": "_pDataset.deleteColumn",
      "params": [
        "id"
      ],
      "calls": [
        "this._clearAllExprs",
        "this._clearData",
        "this._deleteColumn",
        "this._forcesetRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset.getColID",
      "params": [
        "idx"
      ],
      "calls": [
        "colList.get_id",
        "this._constVars.get_id"
      ]
    },
    {
      "name": "_pDataset.getColIndex",
      "params": [
        "id"
      ],
      "calls": [
        "constList.indexOf"
      ]
    },
    {
      "name": "_pDataset.getConstColID",
      "params": [
        "idx"
      ],
      "calls": [
        "this._constVars.get_id"
      ]
    },
    {
      "name": "_pDataset.getConstColIndex",
      "params": [
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.getColumnInfo",
      "params": [
        "idx"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.updateColID",
      "params": [
        "idx",
        "newID"
      ],
      "calls": [
        "colList._updateID",
        "constList._updateID",
        "nexacro.DSColChangeEventInfo",
        "this._clearAllExprs",
        "this.getColIndex",
        "this.on_fire_onrowsetchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset.updateConstColID",
      "params": [
        "idx",
        "newID"
      ],
      "calls": [
        "constList._updateID",
        "nexacro.DSColChangeEventInfo",
        "this.on_fire_onrowsetchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset._copyRowData",
      "params": [
        "destRow",
        "srcRow"
      ],
      "calls": [
        "destRow.splice",
        "nexacro.__forLoop"
      ]
    },
    {
      "name": "_pDataset._copyConvRowData",
      "params": [
        "destRow",
        "srcRow"
      ],
      "calls": [
        "nexacro.__forLoop"
      ]
    },
    {
      "name": "_pDataset._copyTextData",
      "params": [
        "destRow",
        "srcRow"
      ],
      "calls": [
        "nexacro.__forLoop"
      ]
    },
    {
      "name": "_pDataset.__getParsedRow",
      "params": [
        "rowRow"
      ],
      "calls": [
        "nexacro._Array2DataUtil.isTypedArray",
        "this.__lazyParseRecordFn",
        "this._setColInfoFromCSVLine",
        "this._setColInfoFromSSVLines"
      ]
    },
    {
      "name": "_pDataset._makeIndexMap",
      "params": [
        "srcds",
        "strcolinfo"
      ],
      "calls": [
        "colList.indexOf",
        "nexacro.__forLoop",
        "srcList.indexOf",
        "srcds._isDataset",
        "strcolinfo.split"
      ]
    },
    {
      "name": "_pDataset._copyMappingRowData",
      "params": [
        "destRow",
        "srcRow",
        "idx_map"
      ],
      "calls": [
        "nexacro.__forLoop"
      ]
    },
    {
      "name": "_pDataset._copyMappingRowDataRowType",
      "params": [
        "destRow",
        "srcRow",
        "idx_map",
        "viewrow"
      ],
      "calls": [
        "nexacro.__forLoop",
        "this._copyRowData",
        "this._isEqualRow",
        "this._updateGroupRowData"
      ]
    },
    {
      "name": "_pDataset._adjustRawIdx",
      "params": [
        "start",
        "end"
      ],
      "calls": [
        "nexacro.__forLoop"
      ]
    },
    {
      "name": "_pDataset._removeRawRow",
      "params": [
        "rowRow"
      ],
      "calls": [
        "raw.indexOf",
        "rawRecords.splice",
        "this._addDirtyindex",
        "this._adjustRawIdx",
        "this._isTwowayDataobjectBindMode"
      ]
    },
    {
      "name": "_pDataset._removeEmptyRawRows",
      "params": [],
      "calls": [
        "nexacro.__reverseForLoop",
        "rawRecords.splice",
        "this._adjustRawIdx"
      ]
    },
    {
      "name": "_pDataset._removeDeleteRawRows",
      "params": [],
      "calls": [
        "nexacro.__reverseForLoop",
        "rawRecords.splice",
        "this._adjustRawIdx"
      ]
    },
    {
      "name": "_pDataset._clearRecordData",
      "params": [
        "records"
      ],
      "calls": [
        "nexacro.__forLoop",
        "records.splice",
        "rowRow._orgrow.splice",
        "rowRow.splice"
      ]
    },
    {
      "name": "_pDataset._initDatasetRuleFuncs",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDataset._compareValue",
      "params": [
        "val1",
        "val2",
        "coltype",
        "locale",
        "localeoption",
        "bSysLang"
      ],
      "calls": [
        "collation.replace",
        "nexacro.Decimal",
        "nexacro._localeCompare",
        "this._getLocale",
        "val1.date.valueOf",
        "val1.isZero",
        "val2.date.valueOf",
        "val2.isZero"
      ]
    },
    {
      "name": "_pDataset._isEqualValue",
      "params": [
        "value",
        "cmpval",
        "coltype"
      ],
      "calls": [
        "cmpval.date.valueOf",
        "value.date.valueOf"
      ]
    },
    {
      "name": "_pDataset._isInvalidValue",
      "params": [
        "value",
        "coltype"
      ],
      "calls": []
    },
    {
      "name": "_pDataset._isLikeValue",
      "params": [
        "value",
        "cmpval"
      ],
      "calls": [
        "nexacro._isString",
        "value.slice",
        "value.toString"
      ]
    },
    {
      "name": "_pDataset._isEqualRow",
      "params": [
        "Row1",
        "Row2",
        "chkcol",
        "chkval"
      ],
      "calls": [
        "nexacro.__forLoop",
        "val1.date.valueOf",
        "val2.date.valueOf"
      ]
    },
    {
      "name": "_pDataset._clearAllExprs",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataset._clearAll",
      "params": [],
      "calls": [
        "this._clearAllExprs",
        "this._clearKeyCols",
        "this._clearRecordData",
        "this._constVars.clear",
        "this._viewRecords.splice",
        "this.colinfos.clear"
      ]
    },
    {
      "name": "_pDataset.getRowType",
      "params": [
        "row"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.getRowTypeNF",
      "params": [
        "row"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.getRowLevel",
      "params": [
        "row"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.getRowLevelNF",
      "params": [
        "row"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.getGroupRangeStart",
      "params": [
        "row"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.getGroupRangeCount",
      "params": [
        "row"
      ],
      "calls": []
    },
    {
      "name": "_pDataset._setRowType",
      "params": [
        "rowRow",
        "type"
      ],
      "calls": [
        "this.__getParsedRow",
        "this._copyRowData",
        "type.toString"
      ]
    },
    {
      "name": "_pDataset.setRowType",
      "params": [
        "row",
        "type"
      ],
      "calls": [
        "this._setRowType",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset.setRowTypeNF",
      "params": [
        "row",
        "type"
      ],
      "calls": [
        "this._setRowType",
        "this._viewRecords.indexOf",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._appendRow",
      "params": [],
      "calls": [
        "this._addDirtyindex",
        "this._isTwowayDataobjectBindMode"
      ]
    },
    {
      "name": "_pDataset.appendRow",
      "params": [],
      "calls": [
        "this._appendRow",
        "this._binddataobject.addDataInPath",
        "this._isTwowayDataobjectBindMode",
        "this._setRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._insertRow",
      "params": [
        "row"
      ],
      "calls": [
        "rawRecords.slice",
        "rawRecords.splice",
        "this._addDirtyindex",
        "this._adjustRawIdx",
        "this._appendRow",
        "this._isTwowayDataobjectBindMode",
        "viewRecords.splice"
      ]
    },
    {
      "name": "_pDataset.insertRow",
      "params": [
        "row"
      ],
      "calls": [
        "this._binddataobject.insertDataInPath",
        "this._insertRow",
        "this._isTwowayDataobjectBindMode",
        "this._rowToData",
        "this._setRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._deleteRow",
      "params": [
        "row"
      ],
      "calls": [
        "this._copyRowData",
        "this._removeRawRow",
        "viewRecords.splice"
      ]
    },
    {
      "name": "_pDataset.deleteRow",
      "params": [
        "row"
      ],
      "calls": [
        "this._binddataobject.deleteDataInPath",
        "this._deleteRow",
        "this._forcesetRowPosition",
        "this._isTwowayDataobjectBindMode",
        "this._setRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._deleteAll",
      "params": [],
      "calls": [
        "delRecords.sort",
        "nexacro.__forLoop",
        "this._addDirtyindex",
        "this._copyRowData",
        "this._isTwowayDataobjectBindMode",
        "this._removeDeleteRawRows",
        "this._removeEmptyRawRows"
      ]
    },
    {
      "name": "_pDataset.deleteAll",
      "params": [],
      "calls": [
        "this._deleteAll",
        "this._forcesetRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._clearData",
      "params": [],
      "calls": [
        "this._clearKeyCols",
        "this._clearRecordData",
        "this._viewRecords.splice"
      ]
    },
    {
      "name": "_pDataset.clearData",
      "params": [],
      "calls": [
        "this._clearData",
        "this._forcesetRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._deleteMultiRows",
      "params": [
        "del_rows"
      ],
      "calls": [
        "nexacro.__reverseForLoop",
        "this._binddataobject.deleteDataInPath",
        "this._copyRowData",
        "this._isTwowayDataobjectBindMode",
        "this._removeEmptyRawRows",
        "this._removeRawRow",
        "viewRecords.splice"
      ]
    },
    {
      "name": "_pDataset.deleteMultiRows",
      "params": [
        "del_rows"
      ],
      "calls": [
        "a.indexOf",
        "a.push",
        "del_rows.reduce",
        "nexacro.DSColChangeEventInfo",
        "rows.sort",
        "this._deleteMultiRows",
        "this._forcesetRowPosition",
        "this._setRowPosition",
        "this._viewRecords.indexOf",
        "this.on_fire_onrowsetchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset._moveRow",
      "params": [
        "oldrow",
        "newrow"
      ],
      "calls": [
        "nexacro._isNull",
        "rawRecords.slice",
        "rawRecords.splice",
        "this._addDirtyindex",
        "this._adjustRawIdx",
        "this._binddataobject.deleteDataInPath",
        "this._binddataobject.insertData",
        "this._isTwowayDataobjectBindMode",
        "this._rowToData",
        "viewRecords.splice"
      ]
    },
    {
      "name": "_pDataset.moveRow",
      "params": [
        "oldrow",
        "newrow"
      ],
      "calls": [
        "this._moveRow",
        "this._setRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._exchangeRow",
      "params": [
        "row1",
        "row2"
      ],
      "calls": [
        "this._addDirtyindex",
        "this._binddataobject.deleteDataInPath",
        "this._binddataobject.insertDataInPath",
        "this._binddataobject.setDataInPath",
        "this._isTwowayDataobjectBindMode",
        "this._rowToData"
      ]
    },
    {
      "name": "_pDataset.exchangeRow",
      "params": [
        "row1",
        "row2"
      ],
      "calls": [
        "this._exchangeRow",
        "this._setRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._filterRow",
      "params": [
        "row"
      ],
      "calls": [
        "this._adjustGroupRowData",
        "this._rawRecords.slice",
        "viewRecords.splice"
      ]
    },
    {
      "name": "_pDataset.filterRow",
      "params": [
        "row"
      ],
      "calls": [
        "this._filterRow",
        "this._forcesetRowPosition",
        "this._setRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._forcesetRowPosition",
      "params": [
        "newpos",
        "reason"
      ],
      "calls": [
        "nexacro.DSColChangeEventInfo",
        "nexacro.DSRowPosChangeEventInfo",
        "this.on_fire_canrowposchange",
        "this.on_fire_onrowposchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset._setRowPosition",
      "params": [
        "newpos",
        "reason",
        "value_update"
      ],
      "calls": [
        "nexacro.DSColChangeEventInfo",
        "nexacro.DSRowPosChangeEventInfo",
        "this.on_fire_canrowposchange",
        "this.on_fire_onrowposchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset.__splitKeyCols",
      "params": [
        "str"
      ],
      "calls": [
        "str.charAt",
        "str.indexOf",
        "str.substr"
      ]
    },
    {
      "name": "_pDataset._clearKeyCols",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataset.__splitLocaleString",
      "params": [
        "str",
        "start_locale"
      ],
      "calls": [
        "str.lastIndexOf"
      ]
    },
    {
      "name": "_pDataset.__parseLocaleString",
      "params": [
        "str"
      ],
      "calls": [
        "locale.replace",
        "locale_option.replace",
        "nexacro._onSystemWarning",
        "nexacro._settracemsg",
        "nexacro._supportedLocalesOf",
        "str.indexOf",
        "str.substr"
      ]
    },
    {
      "name": "_pDataset._parseKeyCols",
      "params": [],
      "calls": [
        "key.charAt",
        "key.indexOf",
        "key.substr",
        "key.trim",
        "key2.charAt",
        "key2.substr",
        "key2.trim",
        "nexacro.__reverseForLoop",
        "str.indexOf",
        "str.split",
        "this.__parseLocaleString",
        "this.__splitKeyCols",
        "this.__splitLocaleString",
        "this.colinfos.indexOf"
      ]
    },
    {
      "name": "_pDataset._getLocale",
      "params": [],
      "calls": [
        "locale.indexOf",
        "locale.substr",
        "nexacro._getLocale",
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pDataset.__createSortFunc",
      "params": [],
      "calls": [
        "nexacro.__reverseForLoop",
        "pThis.__getParsedRow",
        "this._compareValue"
      ]
    },
    {
      "name": "_pDataset._sortData",
      "params": [],
      "calls": [
        "this.__createSortFunc",
        "this._rawRecords.slice",
        "viewRecords.sort"
      ]
    },
    {
      "name": "_pDataset._sortRawData",
      "params": [],
      "calls": [
        "rawRecords.sort",
        "this.__createSortFunc",
        "this._adjustRawIdx"
      ]
    },
    {
      "name": "_pDataset._reFilter",
      "params": [],
      "calls": [
        "exprfn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._createExprFunc"
      ]
    },
    {
      "name": "_pDataset.filter",
      "params": [
        "strkey"
      ],
      "calls": [
        "nexacro._toString",
        "this._forcesetRowPosition",
        "this._reFilter",
        "this._resetSortGroup",
        "this._setRowPosition",
        "this._viewRecords.indexOf",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._deleteAllGroupData",
      "params": [],
      "calls": [
        "nexacro.__reverseForLoop",
        "viewRecords.splice"
      ]
    },
    {
      "name": "_pDataset._calcGroupData",
      "params": [
        "grpRow",
        "col_levels"
      ],
      "calls": [
        "colprop.toLowerCase",
        "nexacro.__forLoop",
        "nexacro._forEach",
        "this._getAvgValue",
        "this._getCountValue",
        "this._getMaxValue",
        "this._getMinValue",
        "this._getSumValue"
      ]
    },
    {
      "name": "_pDataset._createGroupData",
      "params": [],
      "calls": [
        "nexacro.__forLoop",
        "nexacro.__reverseForLoop",
        "nexacro.__whileLoop",
        "this._calcGroupData",
        "this._isEqualValue",
        "viewRecords.splice"
      ]
    },
    {
      "name": "_pDataset._resetSortGroup",
      "params": [],
      "calls": [
        "this._createGroupData",
        "this._deleteAllGroupData",
        "this._parseKeyCols",
        "this._rawRecords.slice",
        "this._sortData"
      ]
    },
    {
      "name": "_pDataset._adjustGroupRowData",
      "params": [
        "row"
      ],
      "calls": [
        "nexacro.__whileLoop",
        "this._calcGroupData",
        "viewRecords.splice"
      ]
    },
    {
      "name": "_pDataset._updateGroupRowData",
      "params": [
        "row"
      ],
      "calls": [
        "nexacro.__forLoop",
        "nexacro.__reverseForLoop",
        "this._calcGroupData"
      ]
    },
    {
      "name": "_pDataset.updateSortGroup",
      "params": [
        "strkey",
        "apply_method"
      ],
      "calls": [
        "strkey.toString",
        "this._clearKeyCols",
        "this._deleteAllGroupData",
        "this._reFilter",
        "this._resetSortGroup",
        "this._setRowPosition",
        "this._viewRecords.indexOf",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset._isValidColumn",
      "params": [
        "col"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.getConstColumn",
      "params": [
        "id"
      ],
      "calls": [
        "this._getConstValueByDatapath"
      ]
    },
    {
      "name": "_pDataset.getColumn",
      "params": [
        "row",
        "col"
      ],
      "calls": [
        "nexacro._cloneObject",
        "this.__getParsedRow",
        "this._getConstValueByDatapath"
      ]
    },
    {
      "name": "_pDataset.getColumnNF",
      "params": [
        "row",
        "col"
      ],
      "calls": [
        "nexacro._cloneObject",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset.getOrgColumn",
      "params": [
        "row",
        "col"
      ],
      "calls": [
        "nexacro._cloneObject",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset.getOrgColumnNF",
      "params": [
        "row",
        "col"
      ],
      "calls": [
        "nexacro._cloneObject",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset.getDeletedColumn",
      "params": [
        "row",
        "col"
      ],
      "calls": [
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset.getColumnSet",
      "params": [
        "/*row",
        "col",
        "pivotidx*/"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.setConstColumn",
      "params": [
        "id",
        "value"
      ],
      "calls": [
        "constVar._fromVal",
        "nexacro.DSColChangeEventInfo",
        "this._addDirtyindex",
        "this._binddataobject.setDataValue",
        "this._isEqualValue",
        "this._isInvalidValue",
        "this._isTwowayDataobjectBindMode",
        "this.on_fire_cancolumnchange",
        "this.on_fire_oncolumnchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset._updateColumn",
      "params": [
        "viewrow",
        "rowRow",
        "colinfo",
        "value"
      ],
      "calls": [
        "this._copyRowData",
        "this._isEqualRow",
        "this._isInvalidValue",
        "this._updateGroupRowData"
      ]
    },
    {
      "name": "_pDataset._setColumn",
      "params": [
        "row",
        "rowRow",
        "colinfo",
        "value",
        "fail"
      ],
      "calls": [
        "colinfo._fromVal",
        "nexacro.DSColChangeEventInfo",
        "this._addDirtyindex",
        "this._binddataobject.setDataValue",
        "this._getPathFromColinfo",
        "this._isEqualValue",
        "this._isInvalidValue",
        "this._isTwowayDataobjectBindMode",
        "this._updateColumn",
        "this.on_fire_cancolumnchange",
        "this.on_fire_oncolumnchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset.setColumn",
      "params": [
        "row",
        "col",
        "value"
      ],
      "calls": [
        "this.__getParsedRow",
        "this._setColumn",
        "this.setConstColumn"
      ]
    },
    {
      "name": "_pDataset.setColumnNF",
      "params": [
        "row",
        "col",
        "value"
      ],
      "calls": [
        "colinfo._fromVal",
        "this.__getParsedRow",
        "this._setColumn",
        "this._updateColumn",
        "this._viewRecords.indexOf",
        "this.setConstColumn"
      ]
    },
    {
      "name": "_pDataset._copyConstColList",
      "params": [
        "constVars"
      ],
      "calls": [
        "nexacro.Variable",
        "nexacro.__forLoop",
        "this._constVars.add"
      ]
    },
    {
      "name": "_pDataset._appendConstColList",
      "params": [
        "constVars",
        "chkcol"
      ],
      "calls": [
        "Math.min",
        "constList.get_id",
        "constList.set_item",
        "constVars.indexOf",
        "nexacro.Variable",
        "nexacro.__forLoop"
      ]
    },
    {
      "name": "_pDataset._copyRowList",
      "params": [
        "srcds",
        "srcRecords"
      ],
      "calls": [
        "nexacro.__forLoop",
        "this._addDirtyindex",
        "this._binddataobject.addDataInPath",
        "this._copyRowData",
        "this._isTwowayDataobjectBindMode",
        "this._rowToData"
      ]
    },
    {
      "name": "_pDataset._appendRowList",
      "params": [
        "srcds",
        "chkcol"
      ],
      "calls": [
        "nexacro.__forLoop",
        "srcds.__getParsedRow",
        "this._addDirtyindex",
        "this._binddataobject.addDataInPath",
        "this._copyConvRowData",
        "this._copyMappingRowData",
        "this._isTwowayDataobjectBindMode",
        "this._makeIndexMap"
      ]
    },
    {
      "name": "_pDataset._copyData",
      "params": [
        "srcds",
        "isFiltered"
      ],
      "calls": [
        "this._appendColList",
        "this._copyConstColList",
        "this._copyRowList"
      ]
    },
    {
      "name": "_pDataset._appendData",
      "params": [
        "srcds",
        "chkcol",
        "bupdateconst"
      ],
      "calls": [
        "this._appendColList",
        "this._appendConstColList",
        "this._appendRowList",
        "this._copyConstColList"
      ]
    },
    {
      "name": "_pDataset.copyRow",
      "params": [
        "torow",
        "srcds",
        "fromrow",
        "strcolinfo"
      ],
      "calls": [
        "nexacro.DSColChangeEventInfo",
        "srcds.__getParsedRow",
        "srcds._isDataset",
        "this._addDirtyindex",
        "this._binddataobject.setDataInPath",
        "this._copyMappingRowDataRowType",
        "this._isTwowayDataobjectBindMode",
        "this._makeIndexMap",
        "this._rowToData",
        "this.on_fire_oncolumnchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset.copyData",
      "params": [
        "srcds",
        "isFiltered"
      ],
      "calls": [
        "nexacro.DSColChangeEventInfo",
        "nexacro._toBoolean",
        "srcds._isDataset",
        "this._clearAll",
        "this._clearKeyCols",
        "this._copyData",
        "this._deleteAllGroupData",
        "this._forcesetRowPosition",
        "this._reFilter",
        "this._resetSortGroup",
        "this._setRowPosition",
        "this.on_fire_onrowsetchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset._mergeData",
      "params": [
        "srcds"
      ],
      "calls": [
        "nexacro.__forLoop",
        "srcds.__getParsedRow",
        "this._addDirtyindex",
        "this._binddataobject.addDataInPath",
        "this._copyMappingRowData",
        "this._isTwowayDataobjectBindMode",
        "this._makeIndexMap"
      ]
    },
    {
      "name": "_pDataset.mergeData",
      "params": [
        "srcds"
      ],
      "calls": [
        "srcds._isDataset",
        "this._mergeData",
        "this._setRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset.appendData",
      "params": [
        "srcds",
        "chkcol",
        "bupdateconst"
      ],
      "calls": [
        "srcds._isDataset",
        "this._appendData",
        "this._setRowPosition",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset.applyChange",
      "params": [],
      "calls": [
        "nexacro.__reverseForLoop",
        "rawRecords.splice",
        "this._adjustRawIdx",
        "this._clearRecordData",
        "this._refreshDirty",
        "this.on_fire_onrowsetchanged"
      ]
    },
    {
      "name": "_pDataset.reset",
      "params": [],
      "calls": [
        "delRecords.splice",
        "nexacro.__reverseForLoop",
        "rawRecords.sort",
        "rawRecords.splice",
        "this._adjustRawIdx",
        "this._copyRowData",
        "this._forcesetRowPosition",
        "this._reFilter",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pDataset._assignRowList",
      "params": [
        "srcds",
        "srcRecords"
      ],
      "calls": [
        "nexacro.__forLoop",
        "srcds.__getParsedRow",
        "this._copyRowData"
      ]
    },
    {
      "name": "_pDataset._assign",
      "params": [
        "srcds"
      ],
      "calls": [
        "this._appendColList",
        "this._assignRowList",
        "this._copyConstColList"
      ]
    },
    {
      "name": "_pDataset.assign",
      "params": [
        "srcds"
      ],
      "calls": [
        "nexacro.DSColChangeEventInfo",
        "srcds._isDataset",
        "this._assign",
        "this._clearAll",
        "this._forcesetRowPosition",
        "this._setRowPosition",
        "this.filter",
        "this.on_apply_keystring",
        "this.on_fire_onrowsetchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset._identifyExpr",
      "params": [
        "expr"
      ],
      "calls": [
        "exp.substr",
        "exp.substring",
        "expr.substr",
        "exprfn.call",
        "this._createExprFunc"
      ]
    },
    {
      "name": "_pDataset._findRowColValue",
      "params": [
        "records",
        "colidx",
        "cmpval",
        "start",
        "end"
      ],
      "calls": [
        "colinfo._fromVal",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._isEqualValue"
      ]
    },
    {
      "name": "_pDataset._findRowValueArgs",
      "params": [
        "records",
        "exprfn",
        "cmpval",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "colinfo._fromVal",
        "exprfn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._isEqualValue"
      ]
    },
    {
      "name": "_pDataset._findRowExpr",
      "params": [
        "records",
        "exprfn",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "exprfn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset.findRow",
      "params": [
        "expr",
        "cmpval",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._findRow"
      ]
    },
    {
      "name": "_pDataset._findRow",
      "params": [
        "records",
        "expr",
        "cmpval",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "expr.indexOf",
        "this._createExprFunc",
        "this._findRowColValue",
        "this._findRowExprValue",
        "this._findRowValueArgs"
      ]
    },
    {
      "name": "_pDataset.findRowNF",
      "params": [
        "expr",
        "cmpval",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._findRow"
      ]
    },
    {
      "name": "_pDataset.findRowExpr",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._createExprFunc",
        "this._findRowExpr"
      ]
    },
    {
      "name": "_pDataset.findRowExprNF",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._createExprFunc",
        "this._findRowExpr"
      ]
    },
    {
      "name": "_pDataset._findRowAsValue",
      "params": [
        "records",
        "colidx",
        "cmpval",
        "start",
        "end"
      ],
      "calls": [
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._isLikeValue"
      ]
    },
    {
      "name": "_pDataset._findRowAsValueArgs",
      "params": [
        "records",
        "exprfn",
        "cmpval",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "colinfo._fromVal",
        "exprfn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._isLikeValue"
      ]
    },
    {
      "name": "_pDataset._findRowAsExpr",
      "params": [
        "records",
        "exprfn",
        "cmpval",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "exprfn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._isLikeValue"
      ]
    },
    {
      "name": "_pDataset.findRowAs",
      "params": [
        "expr",
        "cmpval",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._findRowAs"
      ]
    },
    {
      "name": "_pDataset._findRowAs",
      "params": [
        "records",
        "expr",
        "cmpval",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "expr.indexOf",
        "this._createExprFunc",
        "this._findRowAsExpr",
        "this._findRowAsValue",
        "this._findRowAsValueArgs",
        "this._isLikeValue"
      ]
    },
    {
      "name": "_pDataset.findRowAsNF",
      "params": [
        "expr",
        "cmpval",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._findRowAs"
      ]
    },
    {
      "name": "_pDataset.findNFRowIndex",
      "params": [
        "row"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.lookup",
      "params": [
        "expr",
        "cmpval",
        "outcol",
        "args"
      ],
      "calls": [
        "this._identifyExpr",
        "this.findRow",
        "this.getColumn"
      ]
    },
    {
      "name": "_pDataset.lookupNF",
      "params": [
        "expr",
        "cmpval",
        "outcol",
        "args"
      ],
      "calls": [
        "this._identifyExpr",
        "this.findRowNF",
        "this.getColumnNF"
      ]
    },
    {
      "name": "_pDataset.lookupAs",
      "params": [
        "expr",
        "cmpval",
        "outcol",
        "args"
      ],
      "calls": [
        "this._findRowAs",
        "this._identifyExpr",
        "this.getColumn"
      ]
    },
    {
      "name": "_pDataset.lookupAsNF",
      "params": [
        "expr",
        "cmpval",
        "outcol",
        "args"
      ],
      "calls": [
        "this._findRowAs",
        "this._identifyExpr",
        "this.getColumnNF"
      ]
    },
    {
      "name": "_pDataset._extractRowsExpr",
      "params": [
        "records",
        "exprfn",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "exprfn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset.__extractRows",
      "params": [
        "records",
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._createExprFunc",
        "this._extractRowsExpr"
      ]
    },
    {
      "name": "_pDataset.extractRows",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__extractRows"
      ]
    },
    {
      "name": "_pDataset.extractRowsNF",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__extractRows"
      ]
    },
    {
      "name": "_pDataset.__getCount",
      "params": [
        "records",
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._createExprFunc",
        "this._getCountExpr",
        "this._getCountValue"
      ]
    },
    {
      "name": "_pDataset.getCount",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getCount"
      ]
    },
    {
      "name": "_pDataset.getCountNF",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getCount"
      ]
    },
    {
      "name": "_pDataset.__getRowsCount",
      "params": [
        "records",
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this._createExprFunc",
        "this._getRowsCountExpr",
        "this._getRowsCountValue"
      ]
    },
    {
      "name": "_pDataset.getRowsCount",
      "params": [
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this.__getRowsCount"
      ]
    },
    {
      "name": "_pDataset.getRowsCountNF",
      "params": [
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this.__getRowsCount"
      ]
    },
    {
      "name": "_pDataset.__getCaseCount",
      "params": [
        "records",
        "cmpExpr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._createExprFunc",
        "this._getCaseCount",
        "this._getTrueCount"
      ]
    },
    {
      "name": "_pDataset.getCaseCount",
      "params": [
        "cmpExpr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getCaseCount"
      ]
    },
    {
      "name": "_pDataset.getCaseCountNF",
      "params": [
        "cmpExpr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getCaseCount"
      ]
    },
    {
      "name": "_pDataset.__getTrueCount",
      "params": [
        "records",
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._createExprFunc",
        "this._getTrueCountExpr",
        "this._getTrueCountValue"
      ]
    },
    {
      "name": "_pDataset.getTrueCount",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getTrueCount"
      ]
    },
    {
      "name": "_pDataset.getTrueCountNF",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getTrueCount"
      ]
    },
    {
      "name": "_pDataset.__getRowsTrueCount",
      "params": [
        "records",
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this._createExprFunc",
        "this._getRowsTrueCountExpr",
        "this._getRowsTrueCountValue"
      ]
    },
    {
      "name": "_pDataset.getRowsTrueCount",
      "params": [
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this.__getRowsTrueCount"
      ]
    },
    {
      "name": "_pDataset.getRowsTrueCountNF",
      "params": [
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this.__getRowsTrueCount"
      ]
    },
    {
      "name": "_pDataset._getCountValue",
      "params": [
        "records",
        "colidx",
        "start",
        "end",
        "coltype"
      ],
      "calls": [
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getCountExpr",
      "params": [
        "records",
        "exprFn",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "exprFn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getRowsCountValue",
      "params": [
        "records",
        "rows",
        "colidx",
        "coltype"
      ],
      "calls": [
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getRowsCountExpr",
      "params": [
        "records",
        "rows",
        "exprFn",
        "args"
      ],
      "calls": [
        "exprFn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getCaseCount",
      "params": [
        "records",
        "cmpFn",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "cmpFn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getTrueCountValue",
      "params": [
        "records",
        "colidx",
        "start",
        "end"
      ],
      "calls": [
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getTrueCountExpr",
      "params": [
        "records",
        "exprFn",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "exprFn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getRowsTrueCountValue",
      "params": [
        "records",
        "rows",
        "colidx"
      ],
      "calls": [
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getRowsTrueCountExpr",
      "params": [
        "records",
        "rows",
        "exprFn",
        "args"
      ],
      "calls": [
        "exprFn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset.__getSum",
      "params": [
        "records",
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this._createExprFunc",
        "this._getSumExpr",
        "this._getSumValue"
      ]
    },
    {
      "name": "_pDataset.getSum",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getSum"
      ]
    },
    {
      "name": "_pDataset.getSumNF",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getSum"
      ]
    },
    {
      "name": "_pDataset.__getRowsSum",
      "params": [
        "records",
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this._createExprFunc",
        "this._getRowsSumExpr",
        "this._getRowsSumValue"
      ]
    },
    {
      "name": "_pDataset.getRowsSum",
      "params": [
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this.__getRowsSum"
      ]
    },
    {
      "name": "_pDataset.getRowsSumNF",
      "params": [
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this.__getRowsSum"
      ]
    },
    {
      "name": "_pDataset.__getCaseSum",
      "params": [
        "records",
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getSum",
        "this._createExprFunc",
        "this._getCaseCount",
        "this._getCaseSumExpr",
        "this._getCaseSumValue"
      ]
    },
    {
      "name": "_pDataset.getCaseSum",
      "params": [
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getCaseSum"
      ]
    },
    {
      "name": "_pDataset.getCaseSumNF",
      "params": [
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getCaseSum"
      ]
    },
    {
      "name": "_pDataset._getSumValue",
      "params": [
        "records",
        "colidx",
        "start",
        "end",
        "coltype"
      ],
      "calls": [
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.isNaN",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getSumExpr",
      "params": [
        "records",
        "exprFn",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "exprFn.call",
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.isNaN",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getRowsSumValue",
      "params": [
        "records",
        "rows",
        "colidx",
        "coltype"
      ],
      "calls": [
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.isNaN",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getRowsSumExpr",
      "params": [
        "records",
        "rows",
        "exprFn",
        "args"
      ],
      "calls": [
        "exprFn.call",
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getCaseSumValue",
      "params": [
        "records",
        "cmpFn",
        "colidx",
        "start",
        "end",
        "coltype",
        "args"
      ],
      "calls": [
        "cmpFn.call",
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.isNaN",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getCaseSumExpr",
      "params": [
        "records",
        "cmpFn",
        "valFn",
        "start",
        "end",
        "cmpargs",
        "valargs"
      ],
      "calls": [
        "cmpFn.call",
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.isNaN",
        "this.__getParsedRow",
        "valFn.call"
      ]
    },
    {
      "name": "_pDataset.__getMin",
      "params": [
        "records",
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "min.isNaN",
        "this._createExprFunc",
        "this._getMinExpr",
        "this._getMinValue"
      ]
    },
    {
      "name": "_pDataset.getMin",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getMin"
      ]
    },
    {
      "name": "_pDataset.getMinNF",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getMin"
      ]
    },
    {
      "name": "_pDataset.__getRowsMin",
      "params": [
        "records",
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "min.isNaN",
        "this._createExprFunc",
        "this._getRowsMinExpr",
        "this._getRowsMinValue"
      ]
    },
    {
      "name": "_pDataset.getRowsMin",
      "params": [
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this.__getRowsMin"
      ]
    },
    {
      "name": "_pDataset.getRowsMinNF",
      "params": [
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this.__getRowsMin"
      ]
    },
    {
      "name": "_pDataset.__getCaseMin",
      "params": [
        "records",
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getMin",
        "this._createExprFunc",
        "this._findRowExpr",
        "this._getCaseMinExpr",
        "this._getCaseMinValue"
      ]
    },
    {
      "name": "_pDataset.getCaseMin",
      "params": [
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getCaseMin"
      ]
    },
    {
      "name": "_pDataset.getCaseMinNF",
      "params": [
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getCaseMin"
      ]
    },
    {
      "name": "_pDataset._getMinValue",
      "params": [
        "records",
        "colidx",
        "start",
        "end",
        "coltype"
      ],
      "calls": [
        "colinfo._fromVal",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getMinExpr",
      "params": [
        "records",
        "exprfn",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "exprfn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._compareValue"
      ]
    },
    {
      "name": "_pDataset._getRowsMinValue",
      "params": [
        "records",
        "rows",
        "colidx",
        "coltype"
      ],
      "calls": [
        "colinfo._fromVal",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getRowsMinExpr",
      "params": [
        "records",
        "rows",
        "exprfn",
        "args"
      ],
      "calls": [
        "exprfn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._compareValue"
      ]
    },
    {
      "name": "_pDataset._getCaseMinValue",
      "params": [
        "records",
        "cmpFn",
        "colidx",
        "start",
        "end",
        "coltype",
        "args"
      ],
      "calls": [
        "cmpFn.call",
        "colinfo._fromVal",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getCaseMinExpr",
      "params": [
        "records",
        "cmpFn",
        "valFn",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "cmpFn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._compareValue",
        "valFn.call"
      ]
    },
    {
      "name": "_pDataset.__getMax",
      "params": [
        "records",
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "max.isNaN",
        "this._createExprFunc",
        "this._getMaxExpr",
        "this._getMaxValue"
      ]
    },
    {
      "name": "_pDataset.getMax",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getMax"
      ]
    },
    {
      "name": "_pDataset.getMaxNF",
      "params": [
        "expr",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "this.__getMax"
      ]
    },
    {
      "name": "_pDataset.__getRowsMax",
      "params": [
        "records",
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "max.isNaN",
        "this._createExprFunc",
        "this._getRowsMaxExpr",
        "this._getRowsMaxValue"
      ]
    },
    {
      "name": "_pDataset.getRowsMax",
      "params": [
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this.__getRowsMax"
      ]
    },
    {
      "name": "_pDataset.getRowsMaxNF",
      "params": [
        "rows",
        "expr",
        "args"
      ],
      "calls": [
        "this.__getRowsMax"
      ]
    },
    {
      "name": "_pDataset.__getCaseMax",
      "params": [
        "records",
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getMax",
        "this._createExprFunc",
        "this._findRowExpr",
        "this._getCaseMaxExpr",
        "this._getCaseMaxValue"
      ]
    },
    {
      "name": "_pDataset.getCaseMax",
      "params": [
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getCaseMax"
      ]
    },
    {
      "name": "_pDataset.getCaseMaxNF",
      "params": [
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getCaseMax"
      ]
    },
    {
      "name": "_pDataset._getMaxValue",
      "params": [
        "records",
        "colidx",
        "start",
        "end",
        "coltype"
      ],
      "calls": [
        "colinfo._fromVal",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getMaxExpr",
      "params": [
        "records",
        "exprfn",
        "start",
        "end",
        "args"
      ],
      "calls": [
        "exprfn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._compareValue"
      ]
    },
    {
      "name": "_pDataset._getRowsMaxValue",
      "params": [
        "records",
        "rows",
        "colidx",
        "coltype"
      ],
      "calls": [
        "colinfo._fromVal",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getRowsMaxExpr",
      "params": [
        "records",
        "rows",
        "exprfn",
        "args"
      ],
      "calls": [
        "exprfn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._compareValue"
      ]
    },
    {
      "name": "_pDataset._getCaseMaxValue",
      "params": [
        "records",
        "cmpFn",
        "colidx",
        "start",
        "end",
        "coltype",
        "args"
      ],
      "calls": [
        "cmpFn.call",
        "colinfo._fromVal",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getCaseMaxExpr",
      "params": [
        "records",
        "cmpFn",
        "valFn",
        "start",
        "end",
        "args",
        "valargs"
      ],
      "calls": [
        "cmpFn.call",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this._compareValue",
        "valFn.call"
      ]
    },
    {
      "name": "_pDataset.__getAvg",
      "params": [
        "records",
        "expr",
        "start",
        "end",
        "excludeNaN",
        "args"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._createExprFunc",
        "this._getAvgExpr",
        "this._getAvgValue"
      ]
    },
    {
      "name": "_pDataset.getAvg",
      "params": [
        "expr",
        "start",
        "end",
        "excludeNaN",
        "args"
      ],
      "calls": [
        "this.__getAvg"
      ]
    },
    {
      "name": "_pDataset.getAvgNF",
      "params": [
        "expr",
        "start",
        "end",
        "excludeNaN",
        "args"
      ],
      "calls": [
        "this.__getAvg"
      ]
    },
    {
      "name": "_pDataset.__getRowsAvg",
      "params": [
        "records",
        "rows",
        "expr",
        "excludeNaN",
        "args"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._createExprFunc",
        "this._getRowsAvgExpr",
        "this._getRowsAvgValue"
      ]
    },
    {
      "name": "_pDataset.getRowsAvg",
      "params": [
        "rows",
        "expr",
        "excludeNaN",
        "args"
      ],
      "calls": [
        "this.__getRowsAvg"
      ]
    },
    {
      "name": "_pDataset.getRowsAvgNF",
      "params": [
        "rows",
        "expr",
        "excludeNaN",
        "args"
      ],
      "calls": [
        "this.__getRowsAvg"
      ]
    },
    {
      "name": "_pDataset.__getCaseAvg",
      "params": [
        "records",
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "excludeNaN",
        "args",
        "valargs"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.__getAvg",
        "this._createExprFunc",
        "this._findRowExpr",
        "this._getCaseAvgExpr",
        "this._getCaseAvgValue"
      ]
    },
    {
      "name": "_pDataset.getCaseAvg",
      "params": [
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "excludeNaN",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getCaseAvg"
      ]
    },
    {
      "name": "_pDataset.getCaseAvgNF",
      "params": [
        "cmpExpr",
        "valExpr",
        "start",
        "end",
        "excludeNaN",
        "args",
        "valargs"
      ],
      "calls": [
        "this.__getCaseAvg"
      ]
    },
    {
      "name": "_pDataset._getAvgValue",
      "params": [
        "records",
        "colidx",
        "start",
        "end",
        "coltype",
        "excludeNaN"
      ],
      "calls": [
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.divDouble",
        "sum.isNaN",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getAvgExpr",
      "params": [
        "records",
        "exprFn",
        "start",
        "end",
        "excludeNaN",
        "args"
      ],
      "calls": [
        "exprFn.call",
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.divDouble",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getRowsAvgValue",
      "params": [
        "records",
        "rows",
        "colidx",
        "coltype",
        "excludeNaN"
      ],
      "calls": [
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.divDouble",
        "sum.isNaN",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getRowsAvgExpr",
      "params": [
        "records",
        "rows",
        "exprFn",
        "excludeNaN",
        "args"
      ],
      "calls": [
        "colval.isNaN",
        "exprFn.call",
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.divDouble",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getCaseAvgValue",
      "params": [
        "records",
        "cmpFn",
        "colidx",
        "start",
        "end",
        "coltype",
        "excludeNaN",
        "args"
      ],
      "calls": [
        "cmpFn.call",
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.divDouble",
        "sum.isNaN",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset._getCaseAvgExpr",
      "params": [
        "records",
        "cmpFn",
        "valFn",
        "start",
        "end",
        "excludeNaN",
        "args",
        "valargs"
      ],
      "calls": [
        "cmpFn.call",
        "nexacro.Decimal",
        "nexacro.__forLoop",
        "sum.addDecimal",
        "sum.addDouble",
        "sum.divDouble",
        "this.__getParsedRow",
        "valFn.call"
      ]
    },
    {
      "name": "_pDataset.__findMaxLengthRow",
      "params": [
        "records",
        "colid",
        "start",
        "end"
      ],
      "calls": [
        "this._findMaxLengthRow",
        "this.getColIndex"
      ]
    },
    {
      "name": "_pDataset.findMaxLengthRow",
      "params": [
        "colid",
        "start",
        "end"
      ],
      "calls": [
        "this.__findMaxLengthRow"
      ]
    },
    {
      "name": "_pDataset.findMaxLengthRowNF",
      "params": [
        "colid",
        "start",
        "end"
      ],
      "calls": [
        "this.__findMaxLengthRow"
      ]
    },
    {
      "name": "_pDataset._findMaxLengthRow",
      "params": [
        "records",
        "colidx",
        "start",
        "end"
      ],
      "calls": [
        "colval.toString",
        "nexacro.__forLoop",
        "this.__getParsedRow"
      ]
    },
    {
      "name": "_pDataset.__createKeyRowsSortFunc",
      "params": [
        "keyList",
        "keyCnt"
      ],
      "calls": [
        "nexacro.__forLoop",
        "pThis._compareValue"
      ]
    },
    {
      "name": "_pDataset._createDataset",
      "params": [
        "records",
        "dataset_id",
        "select_list",
        "where_expr",
        "start",
        "end"
      ],
      "calls": [
        "nexacro.NormalDataset",
        "nexacro.__forLoop",
        "outDS._addColumn",
        "outDS._addColumnInfo",
        "outDS._addConstColumn",
        "selcol.exprFn.call",
        "selectitem.indexOf",
        "selectitem.substring",
        "selectitem.trim",
        "selval.indexOf",
        "selval.substring",
        "this.__getParsedRow",
        "this._createExprFunc",
        "this.getColIndex",
        "whereFn.call"
      ]
    },
    {
      "name": "_pDataset.createDataset",
      "params": [
        "dataset_id",
        "select_list",
        "where_expr",
        "start",
        "end"
      ],
      "calls": [
        "this._createDataset"
      ]
    },
    {
      "name": "_pDataset.createDatasetNF",
      "params": [
        "dataset_id",
        "select_list",
        "where_expr",
        "start",
        "end"
      ],
      "calls": [
        "this._createDataset"
      ]
    },
    {
      "name": "_pDataset._createGrouppingDataset",
      "params": [
        "records",
        "dataset_id",
        "select_list",
        "where_expr",
        "groupby",
        "start",
        "end"
      ],
      "calls": [
        "groupby.split",
        "keyRecords.sort",
        "nexacro.NormalDataset",
        "nexacro.__forLoop",
        "outDS._addColumn",
        "outDS._addColumnInfo",
        "outDS._addConstColumn",
        "selcol.exprFn.call",
        "selectitem.indexOf",
        "selectitem.substring",
        "selectitem.trim",
        "selval.indexOf",
        "selval.substring",
        "this.__createKeyRowsSortFunc",
        "this.__getParsedRow",
        "this._clearRecordData",
        "this._compareValue",
        "this._createExprFunc",
        "this._getRowsAvgExpr",
        "this._getRowsAvgValue",
        "this._getRowsCountExpr",
        "this._getRowsCountValue",
        "this._getRowsMaxExpr",
        "this._getRowsMaxValue",
        "this._getRowsMinExpr",
        "this._getRowsMinValue",
        "this._getRowsSumExpr",
        "this._getRowsSumValue",
        "this.getColIndex",
        "whereFn.call"
      ]
    },
    {
      "name": "_pDataset.createGrouppingDataset",
      "params": [
        "dataset_id",
        "select_list",
        "where_expr",
        "groupby",
        "start",
        "end"
      ],
      "calls": [
        "this._createGrouppingDataset"
      ]
    },
    {
      "name": "_pDataset.createGrouppingDatasetNF",
      "params": [
        "dataset_id",
        "select_list",
        "where_expr",
        "groupby",
        "start",
        "end"
      ],
      "calls": [
        "this._createGrouppingDataset"
      ]
    },
    {
      "name": "_pDataset._endLoad",
      "params": [
        "errorcode",
        "errormsg",
        "reason"
      ],
      "calls": [
        "nexacro.DSColChangeEventInfo",
        "nexacro.DSRowPosChangeEventInfo",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload",
        "this.on_fire_onrowposchanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataset._setContents",
      "params": [
        "contents"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._loadDataObject",
        "this._loadFromJSONObj",
        "this._loadFromXMLStr",
        "this.on_created",
        "this.updateSortGroup"
      ]
    },
    {
      "name": "_pDataset._loadFromDOM",
      "params": [
        "dsDOM",
        "curIdx",
        "loadCnt",
        "bOrgLayout",
        "bClear"
      ],
      "calls": [
        "this._clearAll",
        "this._clearData",
        "this._loadRecordFromDOM",
        "this._setColInfoFromDOM"
      ]
    },
    {
      "name": "_pDataset._setColInfoFromDOM",
      "params": [
        "dsDOM",
        "bOrgLayout"
      ],
      "calls": [
        "_colElem.getAttribute",
        "dsDOM.getElementsByTagName",
        "nexacro.__forLoop",
        "this._addColumn",
        "this._addConstColumn"
      ]
    },
    {
      "name": "_pDataset._loadRecordFromDOM",
      "params": [
        "dsDOM",
        "curIdx",
        "loadCnt"
      ],
      "calls": [
        "_colElem.getAttribute",
        "_rowElem.getAttribute",
        "_rowElem.getElementsByTagName",
        "colinfo._fromText",
        "dsDOM.getElementsByTagName",
        "nexacro.__forLoop",
        "templateRow.slice",
        "type.charAt"
      ]
    },
    {
      "name": "_pDataset.loadFromDOM",
      "params": [
        "doc",
        "bClear",
        "bAppend",
        "errorcode",
        "errormsg"
      ],
      "calls": [
        "doc.getElementsByTagName",
        "nexacro._toBoolean",
        "this._forcesetRowPosition",
        "this._loadFromDOM",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pDataset._setConstColInfoFromXMLStr",
      "params": [
        "xmlStr",
        "bOrgLayout"
      ],
      "calls": [
        "nexacro.__whileLoop",
        "nexacro._decodeXml",
        "nexacro._getXMLAttributeData",
        "nexacro._getXMLAttributeID",
        "nexacro._getXMLAttributeType",
        "nexacro._getXMLTagData",
        "nexacro._getXMLTagData2",
        "this._addConstColumn"
      ]
    },
    {
      "name": "_pDataset._setColInfoFromXMLStr",
      "params": [
        "xmlStr"
      ],
      "calls": [
        "nexacro.__whileLoop",
        "nexacro._decodeXml",
        "nexacro._getXMLAttributeData",
        "nexacro._getXMLAttributeID",
        "nexacro._getXMLAttributeType",
        "nexacro._getXMLTagData",
        "nexacro._getXMLTagData2",
        "nexacro._getXMLTagData4",
        "this._addColumn",
        "this._addConstColumn"
      ]
    },
    {
      "name": "_pDataset._loadRecordFromXMLStr",
      "params": [
        "xmlStr",
        "xml_parse_pos",
        "loadCnt"
      ],
      "calls": [
        "colinfo._fromXMLText",
        "nexacro.__forLoop",
        "nexacro.__whileLoop",
        "nexacro._getXMLAttributeID",
        "nexacro._getXMLAttributeType",
        "nexacro._getXMLTagData",
        "nexacro._getXMLTagData2",
        "nexacro._getXMLTagData3",
        "rowStr.substring",
        "templateRow.slice",
        "type.charAt"
      ]
    },
    {
      "name": "_pDataset._loadFromXMLStr",
      "params": [
        "xmlStr",
        "xml_parse_pos",
        "loadCnt",
        "bOrgLayout",
        "bClear"
      ],
      "calls": [
        "this._clearAll",
        "this._clearData",
        "this._loadRecordFromXMLStr",
        "this._setColInfoFromXMLStr",
        "this._setConstColInfoFromXMLStr",
        "xmlStr.indexOf"
      ]
    },
    {
      "name": "_pDataset.loadFromXMLStr",
      "params": [
        "xmlStr",
        "bClear",
        "bAppend",
        "errorcode",
        "errormsg"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._forcesetRowPosition",
        "this._loadFromXMLStr",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pDataset.loadXML",
      "params": [
        "strxml",
        "bClear"
      ],
      "calls": [
        "this.loadFromXMLStr"
      ]
    },
    {
      "name": "_pDataset.__writeXMLData",
      "params": [
        "list",
        "str",
        "depth"
      ],
      "calls": [
        "list.push"
      ]
    },
    {
      "name": "_pDataset.__writeXMLNormalRow",
      "params": [
        "list",
        "rowRow",
        "depth"
      ],
      "calls": [
        "this.__writeXMLData",
        "this.__writeXMLRowData"
      ]
    },
    {
      "name": "_pDataset.__writeXMLCrudRow",
      "params": [
        "list",
        "rowRow",
        "depth"
      ],
      "calls": [
        "this.__writeXMLData",
        "this.__writeXMLRowData"
      ]
    },
    {
      "name": "_pDataset.__writeXMLRowData",
      "params": [
        "list",
        "rowRow",
        "depth"
      ],
      "calls": [
        "colinfo._toXMLText",
        "nexacro.__forLoop",
        "this.__writeXMLData",
        "this._convertValueBySaveProp"
      ]
    },
    {
      "name": "_pDataset._saveXML",
      "params": [
        "id",
        "type",
        "depth",
        "savenan",
        "saveinfinity",
        "saveinvaliddate"
      ],
      "calls": [
        "list.join",
        "nexacro.DataUtils.toTypeName",
        "nexacro.__forLoop",
        "nexacro._encodeXml",
        "this.__getParsedRow",
        "this.__writeXMLCrudRow",
        "this.__writeXMLData",
        "this.__writeXMLNormalRow",
        "this._constVars.get_id",
        "this._convertValueBySaveProp",
        "this._setSaveProp"
      ]
    },
    {
      "name": "_pDataset.saveXML",
      "params": [
        "id",
        "type",
        "savenan",
        "saveinfinity",
        "saveinvaliddate"
      ],
      "calls": [
        "this._saveXML"
      ]
    },
    {
      "name": "_pDataset._saveJSON",
      "params": [
        "id",
        "type",
        "depth",
        "savenan",
        "saveinfinity",
        "saveinvaliddate"
      ],
      "calls": [
        "colVal.replace",
        "list.join",
        "nexacro.DataUtils.toTypeName",
        "nexacro.__forLoop",
        "this.__addStringJSONData",
        "this.__getParsedRow",
        "this.__writeJSONCrudRow",
        "this.__writeJSONData",
        "this.__writeJSONNormalRow",
        "this._constVars.get_id",
        "this._convertValueBySaveProp",
        "this._setSaveProp"
      ]
    },
    {
      "name": "_pDataset.__writeJSONData",
      "params": [
        "list",
        "str",
        "depth"
      ],
      "calls": [
        "list.push"
      ]
    },
    {
      "name": "_pDataset.__addStringJSONData",
      "params": [
        "list",
        "str",
        "depth"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.__writeJSONNormalRow",
      "params": [
        "list",
        "rowRow",
        "depth"
      ],
      "calls": [
        "this.__writeJSONRowData"
      ]
    },
    {
      "name": "_pDataset.__writeJSONCrudRow",
      "params": [
        "list",
        "rowRow",
        "depth"
      ],
      "calls": [
        "this.__addStringJSONData",
        "this.__writeJSONData",
        "this.__writeJSONRowData"
      ]
    },
    {
      "name": "_pDataset.__writeJSONRowData",
      "params": [
        "list",
        "buffer",
        "rowRow",
        "depth"
      ],
      "calls": [
        "colinfo._toText",
        "nexacro.__forLoop",
        "this.__addStringJSONData",
        "this.__writeJSONData",
        "this._convertValueBySaveProp",
        "value.replace"
      ]
    },
    {
      "name": "_pDataset.saveJSON",
      "params": [
        "id",
        "type",
        "savenan",
        "saveinfinity",
        "saveinvaliddate"
      ],
      "calls": [
        "this._saveJSON"
      ]
    },
    {
      "name": "_pDataset.loadFromDataObject",
      "params": [
        "/*dataobject",
        "jsonpath*/"
      ],
      "calls": [
        "this._clearData",
        "this._endLoad",
        "this._loadFromJSONObject"
      ]
    },
    {
      "name": "_pDataset._loadFromJSONObject",
      "params": [
        "jsonobj",
        "jsonpath"
      ],
      "calls": [
        "this._loadRecordFromJSONObj"
      ]
    },
    {
      "name": "_pDataset._loadRecordFromJSONObj",
      "params": [
        "jsonobj",
        "jsonpath",
        "_convertFn"
      ],
      "calls": [
        "JSON.parse",
        "JSON.stringify",
        "_dpath.lastIndexOf",
        "_dpath.slice",
        "datapath.match",
        "nexacro._JSONPath",
        "nexacro.__forLoop",
        "rawRecords.splice",
        "templateRow.slice",
        "this.__parseRecordFromJSONObject",
        "this._clearData",
        "this._reFilter",
        "this._resetSortGroup"
      ]
    },
    {
      "name": "_pDataset._getConstValueByDatapath",
      "params": [
        "constvar",
        "dataobject"
      ],
      "calls": [
        "Array.from",
        "dataobject.getObject",
        "datapath.match",
        "datapath.slice",
        "matcher.exec",
        "nexacro._JSONPath",
        "this._getValueByColtype"
      ]
    },
    {
      "name": "_pDataset._isTwowayDataobjectBindMode",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataset.loadJSON",
      "params": [
        "strJSON",
        "bClear"
      ],
      "calls": [
        "this._loadFromJSONStr"
      ]
    },
    {
      "name": "_pDataset._loadFromJSONStr",
      "params": [
        "JSONStr",
        "bClear",
        "bAppend",
        "errorcode",
        "errormsg"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.__loadFromJSONStr",
        "this._forcesetRowPosition",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pDataset._loadFromJSONObj",
      "params": [
        "jsonobj",
        "bClear",
        "bAppend",
        "errorcode",
        "errormsg",
        "bContents"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.__loadFromJSONObj",
        "this._forcesetRowPosition",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pDataset.__loadFromJSONStr",
      "params": [
        "JSONStr",
        "JSON_parse_pos",
        "loadCnt",
        "bOrgLayout",
        "bClear"
      ],
      "calls": [
        "JSON.parse",
        "this._clearAll",
        "this._clearData",
        "this._loadRecordFromJSONObject",
        "this._setColInfoFromJSONObj",
        "this._setConstColInfoFromJSONObj"
      ]
    },
    {
      "name": "_pDataset.__loadFromJSONObj",
      "params": [
        "jsonobj",
        "JSON_parse_pos",
        "loadCnt",
        "bOrgLayout",
        "bClear",
        "bContents"
      ],
      "calls": [
        "this._clearAll",
        "this._clearData",
        "this._loadRecordFromJSONObject",
        "this._setColInfoFromJSONObj",
        "this._setConstColInfoFromJSONObj"
      ]
    },
    {
      "name": "_pDataset._setConstColInfoFromJSONObj",
      "params": [
        "jsonobj",
        "bOrgLayout"
      ],
      "calls": [
        "nexacro.__whileLoop",
        "nexacro._isArray",
        "this._addConstColumn"
      ]
    },
    {
      "name": "_pDataset._setColInfoFromJSONObj",
      "params": [
        "jsonobj"
      ],
      "calls": [
        "nexacro.__whileLoop",
        "nexacro._isArray",
        "this._addColumn",
        "this._addConstColumn"
      ]
    },
    {
      "name": "_pDataset._loadRecordFromJSONObject",
      "params": [
        "rowsobj",
        "bContents"
      ],
      "calls": [
        "_rowCol.push",
        "colinfo._fromText",
        "nexacro.__forLoop",
        "nexacro.__whileLoop",
        "nexacro._isString",
        "templateRow.slice",
        "value.replace"
      ]
    },
    {
      "name": "_pDataset._getValueFromDataObject",
      "params": [
        "obj",
        "arrDatapath",
        "colinfo"
      ],
      "calls": [
        "this._getValueFromArray",
        "this._getValueFromRootJSON"
      ]
    },
    {
      "name": "_pDataset._getValueByColtype",
      "params": [
        "value",
        "coltype"
      ],
      "calls": [
        "nexacro.DataUtils.toBlobFromText",
        "nexacro.DataUtils.toDateFromText",
        "nexacro.DataUtils.toDateTimeFromText",
        "nexacro.DataUtils.toDecimalFromText",
        "nexacro.DataUtils.toFloatFromText",
        "nexacro.DataUtils.toIntFromText",
        "nexacro.DataUtils.toTextFromVariant",
        "nexacro.DataUtils.toTimeFromText"
      ]
    },
    {
      "name": "_pDataset._getValueFromArray",
      "params": [
        "obj",
        "arr",
        "coltype"
      ],
      "calls": [
        "JSON.stringify",
        "this._getValueByColtype"
      ]
    },
    {
      "name": "_pDataset._getValueFromRootJSON",
      "params": [
        "obj",
        "datapath",
        "coltype"
      ],
      "calls": [
        "nexacro._JSONPath",
        "this._getValueByColtype"
      ]
    },
    {
      "name": "_pDataset.__makeJSONDataMappingFunc",
      "params": [
        "rowRow",
        "rowData"
      ],
      "calls": [
        "colinfo.datapath.match",
        "this._getValueFromDataObject"
      ]
    },
    {
      "name": "_pDataset.__parseRecordFromJSONObject",
      "params": [
        "rowRow",
        "rowData"
      ],
      "calls": [
        "colinfo.datapath.match",
        "this._getValueFromDataObject"
      ]
    },
    {
      "name": "_pDataset._lazyParseRecordFromJSONObject",
      "params": [
        "rowRow",
        "_convertFn"
      ],
      "calls": [
        "this.__parseRecordFromJSONObject"
      ]
    },
    {
      "name": "_pDataset.__makeDataConvertFunc",
      "params": [
        "type"
      ],
      "calls": [
        "String.fromCharCode",
        "nexacro.DataUtils.toBlobFromText",
        "nexacro.DataUtils.toDateFromText",
        "nexacro.DataUtils.toDateTimeFromText",
        "nexacro.DataUtils.toDecimalFromText",
        "nexacro.DataUtils.toFloatFromText",
        "nexacro.DataUtils.toIntFromText",
        "nexacro.DataUtils.toTextFromvariant",
        "nexacro.DataUtils.toTimeFromText",
        "nexacro._executeGlobalEvalStr"
      ]
    },
    {
      "name": "_pDataset.__makeDataMappingFunc",
      "params": [
        "colArr",
        "colCnt",
        "type"
      ],
      "calls": [
        "String.fromCharCode",
        "nexacro.DataUtils.toBlobFromText",
        "nexacro.DataUtils.toDateFromText",
        "nexacro.DataUtils.toDateTimeFromText",
        "nexacro.DataUtils.toDecimalFromText",
        "nexacro.DataUtils.toFloatFromText",
        "nexacro.DataUtils.toIntFromText",
        "nexacro.DataUtils.toTextFromvariant",
        "nexacro.DataUtils.toTimeFromText",
        "nexacro._executeGlobalEvalStr"
      ]
    },
    {
      "name": "_pDataset.__ssvSetConstColInfo",
      "params": [
        "strColInfo"
      ],
      "calls": [
        "String.fromCharCode",
        "colInfo.split",
        "colStr.split",
        "nexacro.__forLoop",
        "nexacro._getSSVUnitSeparator",
        "strColInfo.split",
        "this._addConstColumn",
        "type.indexOf",
        "type.substring"
      ]
    },
    {
      "name": "_pDataset.__ssvSetColInfo",
      "params": [
        "strColInfo"
      ],
      "calls": [
        "String.fromCharCode",
        "colInfo.indexOf",
        "colInfo.substring",
        "colStr.split",
        "nexacro.__forLoop",
        "nexacro._getSSVUnitSeparator",
        "strColInfo.split",
        "this._addColumn"
      ]
    },
    {
      "name": "_pDataset._loadFromSSVArray",
      "params": [
        "ssvColLines",
        "ssvLines",
        "curIdx",
        "loadCnt",
        "bOrgLayout",
        "bClear",
        "convertFn"
      ],
      "calls": [
        "String.fromCharCode",
        "this._clearAll",
        "this._clearData",
        "this._loadRecordFromSSVLines",
        "this._setColInfoFromSSVLines"
      ]
    },
    {
      "name": "_pDataset._loadFromSSVUint8Array",
      "params": [
        "data",
        "offset",
        "ssvColLines",
        "loadCnt",
        "bOrgLayout",
        "bClear",
        "convertFn"
      ],
      "calls": [
        "this._clearAll",
        "this._clearData",
        "this._loadRecordFromSSVLines",
        "this._loadRecordFromSSVUint8Array",
        "this._setColInfoFromSSVLines"
      ]
    },
    {
      "name": "_pDataset._getColLinesFromSSVLines",
      "params": [
        "ssvLines",
        "curIdx"
      ],
      "calls": [
        "ssvLines.slice"
      ]
    },
    {
      "name": "_pDataset._getColLinesFromSSVLines_with_arraybuffer",
      "params": [
        "data",
        "offset",
        "sep",
        "colLines"
      ],
      "calls": [
        "colLines.push",
        "curStr.substring",
        "nexacro._Array2DataUtil.substringOf",
        "nexacro._getSSVRecordSeparator"
      ]
    },
    {
      "name": "_pDataset._setColInfoFromSSVLines",
      "params": [
        "colLines",
        "bOrgLayout"
      ],
      "calls": [
        "String.fromCharCode",
        "colArr.shift",
        "nexacro._getSSVUnitSeparator",
        "this.__makeDataConvertFunc",
        "this.__makeDataMappingFunc",
        "this.__ssvSetColInfo",
        "this.__ssvSetConstColInfo"
      ]
    },
    {
      "name": "_pDataset._lazyParseRecordFromSSVLine",
      "params": [
        "rowRow",
        "_convertFn"
      ],
      "calls": [
        "String.fromCharCode",
        "nexacro._getSSVUnitSeparator",
        "rowData.shift",
        "rowRow._data.split",
        "rowRow._orgdata.split"
      ]
    },
    {
      "name": "_pDataset._lazyParseRecordFromSSVLine_with_Uint8Array",
      "params": [
        "rowRow",
        "_convertFn"
      ],
      "calls": [
        "String.fromCharCode",
        "curData.split",
        "nexacro._Array2DataUtil.substring",
        "nexacro._getSSVUnitSeparator",
        "orgData.split",
        "rowData.shift"
      ]
    },
    {
      "name": "_pDataset._loadRecordFromSSVLines",
      "params": [
        "ssvLines",
        "curIdx",
        "loadCnt",
        "_convertFn"
      ],
      "calls": [
        "String.fromCharCode",
        "curLine.charAt",
        "curLine.indexOf",
        "curLine.split",
        "curSSVData.shift",
        "nexacro.__forLoop",
        "nexacro._getSSVUnitSeparator"
      ]
    },
    {
      "name": "_pDataset._loadRecordFromSSVUint8Array",
      "params": [
        "data",
        "offset",
        "loadCnt",
        "_convertFn"
      ],
      "calls": [
        "_rs_.charCodeAt",
        "curLine.split",
        "curSSVData.shift",
        "data.subarray",
        "nexacro._Array2DataUtil.getCh",
        "nexacro._Array2DataUtil.indexOf",
        "nexacro._Array2DataUtil.substr",
        "nexacro.__whileLoop",
        "nexacro._getSSVRecordSeparator",
        "nexacro._getSSVUnitSeparator",
        "nexacro._substringFromUtf8ArrayOf",
        "substr.toUpperCase"
      ]
    },
    {
      "name": "_pDataset.loadFromSSVArray",
      "params": [
        "ssvLine",
        "lineCnt",
        "curIdx",
        "bClear",
        "bAppend",
        "errorcode",
        "errormsg"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._forcesetRowPosition",
        "this._getColLinesFromSSVLines",
        "this._loadFromSSVArray",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pDataset.loadSSVFromUint8Array",
      "params": [
        "data",
        "offset",
        "bClear",
        "bAppend",
        "errorcode",
        "errormsg"
      ],
      "calls": [
        "nexacro._getSSVRecordSeparator",
        "nexacro._getSSVUnitSeparator",
        "nexacro._toBoolean",
        "this._forcesetRowPosition",
        "this._getColLinesFromSSVLines_with_arraybuffer",
        "this._loadFromSSVUint8Array",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pDataset.loadSSV",
      "params": [
        "strssv",
        "bClear"
      ],
      "calls": [
        "String.fromCharCode",
        "nexacro._getSSVRecordSeparator",
        "strssv.split",
        "this.loadFromSSVArray"
      ]
    },
    {
      "name": "_pDataset.__writeData",
      "params": [
        "list",
        "str"
      ],
      "calls": [
        "list.push"
      ]
    },
    {
      "name": "_pDataset.__getRowTypeChar",
      "params": [
        "_rtype"
      ],
      "calls": []
    },
    {
      "name": "_pDataset.__writeSSVNormalRow",
      "params": [
        "list",
        "rowRow"
      ],
      "calls": [
        "this.__writeSSVRowData"
      ]
    },
    {
      "name": "_pDataset.__writeSSVCrudRow",
      "params": [
        "list",
        "rowRow"
      ],
      "calls": [
        "this.__getRowTypeChar",
        "this.__writeSSVRowData"
      ]
    },
    {
      "name": "_pDataset.__writeSSVRowData",
      "params": [
        "list",
        "type",
        "rowRow"
      ],
      "calls": [
        "String.fromCharCode",
        "colinfo._toText",
        "nexacro.__forLoop",
        "nexacro._getSSVRecordSeparator",
        "nexacro._getSSVUnitSeparator",
        "this.__writeData",
        "this._convertValueBySaveProp"
      ]
    },
    {
      "name": "_pDataset.saveSSV",
      "params": [
        "id",
        "type",
        "savenan",
        "saveinfinity",
        "saveinvaliddate"
      ],
      "calls": [
        "String.fromCharCode",
        "list.join",
        "nexacro.DataUtils.toTypeName",
        "nexacro.__forLoop",
        "nexacro._getSSVRecordSeparator",
        "nexacro._getSSVUnitSeparator",
        "this.__getParsedRow",
        "this.__writeData",
        "this.__writeSSVCrudRow",
        "this.__writeSSVNormalRow",
        "this._constVars.get_id",
        "this._convertValueBySaveProp",
        "this._setSaveProp"
      ]
    },
    {
      "name": "_pDataset.__makePPXDataMappingFunc",
      "params": [
        "colLines"
      ],
      "calls": [
        "String.fromCharCode",
        "curStr.charAt",
        "curStr.split",
        "nexacro.DataUtils.toBlobFromText",
        "nexacro.DataUtils.toDateFromText",
        "nexacro.DataUtils.toDateTimeFromText",
        "nexacro.DataUtils.toDecimalFromText",
        "nexacro.DataUtils.toFloatFromText",
        "nexacro.DataUtils.toIntFromText",
        "nexacro.DataUtils.toTextFromvariant",
        "nexacro.DataUtils.toTimeFromText",
        "nexacro.__forLoop",
        "nexacro._executeGlobalEvalStr",
        "nexacro._getSSVUnitSeparator"
      ]
    },
    {
      "name": "_pDataset._setColInfoFromPPXLines",
      "params": [
        "colLines"
      ],
      "calls": [
        "String.fromCharCode",
        "curStr.charAt",
        "curStr.split",
        "nexacro.__forLoop",
        "nexacro._getSSVUnitSeparator",
        "this._addColumn",
        "this._addConstColumn"
      ]
    },
    {
      "name": "_pDataset._loadFromPPXArray",
      "params": [
        "ppxColLines",
        "ppxLines",
        "curIdx",
        "loadCnt",
        "bOrgLayout",
        "bClear"
      ],
      "calls": [
        "this.__makeDataConvertFunc",
        "this.__makePPXDataMappingFunc",
        "this._clearAll",
        "this._clearData",
        "this._loadRecordFromSSVLines",
        "this._setColInfoFromPPXLines"
      ]
    },
    {
      "name": "_pDataset._getColLinesFromPPXLines",
      "params": [
        "ppxLines",
        "curIdx"
      ],
      "calls": [
        "ppxLines.slice"
      ]
    },
    {
      "name": "_pDataset.loadFromPPXArray",
      "params": [
        "ppxLine",
        "lineCnt",
        "curIdx",
        "bClear",
        "bAppend",
        "errorcode",
        "errormsg"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._forcesetRowPosition",
        "this._getColLinesFromPPXLines",
        "this._loadFromPPXArray",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pDataset.__splitCSVRowData",
      "params": [
        "strRow",
        "base_colCnt"
      ],
      "calls": [
        "colStr.charAt",
        "nexacro.__forLoop",
        "nexacro._unQuoteStr",
        "strRow.split"
      ]
    },
    {
      "name": "_pDataset.__csvSetColInfo",
      "params": [
        "strColInfo"
      ],
      "calls": [
        "colInfo.indexOf",
        "colInfo.substring",
        "colStr.split",
        "nexacro.__forLoop",
        "strColInfo.split",
        "this._addColumn"
      ]
    },
    {
      "name": "_pDataset._setColInfoFromCSVLine",
      "params": [
        "csvColLine",
        "bOrgLayout"
      ],
      "calls": [
        "csvColLine.split",
        "this.__csvSetColInfo",
        "this.__makeDataConvertFunc",
        "this.__makeDataMappingFunc"
      ]
    },
    {
      "name": "_pDataset._lazyParseRecordFromCSVLine",
      "params": [
        "rowRow",
        "_convertFn"
      ],
      "calls": [
        "this.__splitCSVRowData"
      ]
    },
    {
      "name": "_pDataset._lazyParseRecordFromCSVLine_with_Uint8Array",
      "params": [
        "rowRow",
        "_convertFn"
      ],
      "calls": [
        "nexacro._Array2DataUtil.substring",
        "this.__splitCSVRowData"
      ]
    },
    {
      "name": "_pDataset._loadRecordFromCSVLines",
      "params": [
        "csvLines",
        "curIdx",
        "loadCnt",
        "_convertFn"
      ],
      "calls": [
        "curLine.substring",
        "nexacro.__forLoop",
        "this.__splitCSVRowData"
      ]
    },
    {
      "name": "_pDataset._loadRecordFromCSVUint8Array",
      "params": [
        "data",
        "offset",
        "loadCnt",
        "_convertFn",
        "rs"
      ],
      "calls": [
        "data.subarray",
        "nexacro._Array2DataUtil.getCh",
        "nexacro._Array2DataUtil.indexOf",
        "nexacro._Array2DataUtil.substr",
        "nexacro.__whileLoop",
        "rs.charCodeAt"
      ]
    },
    {
      "name": "_pDataset._loadFromCSVUint8Array",
      "params": [
        "data",
        "offset",
        "csvColLines",
        "loadCnt",
        "bOrgLayout",
        "bClear",
        "convertFn",
        "rs"
      ],
      "calls": [
        "this._clearAll",
        "this._clearData",
        "this._loadRecordFromCSVUint8Array",
        "this._loadRecordFromSSVLines",
        "this._setColInfoFromCSVLine"
      ]
    },
    {
      "name": "_pDataset._loadFromCSVArray",
      "params": [
        "csvColLine",
        "csvLines",
        "curIdx",
        "loadCnt",
        "bOrgLayout",
        "bClear",
        "convertFn"
      ],
      "calls": [
        "this._clearAll",
        "this._clearData",
        "this._loadRecordFromCSVLines",
        "this._setColInfoFromCSVLine"
      ]
    },
    {
      "name": "_pDataset.loadFromCSVArray",
      "params": [
        "csvLine",
        "lineCnt",
        "curIdx",
        "bClear",
        "bAppend",
        "errorcode",
        "errormsg"
      ],
      "calls": [
        "nexacro.__forLoop",
        "nexacro._toBoolean",
        "this._forcesetRowPosition",
        "this._loadFromCSVArray",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pDataset._getColLinesFromCSVLines_with_arraybuffer",
      "params": [
        "data",
        "offset",
        "sep",
        "colLines"
      ],
      "calls": [
        "colLines.push",
        "nexacro._Array2DataUtil.substringOf"
      ]
    },
    {
      "name": "_pDataset.loadCSVFromUint8Array",
      "params": [
        "data",
        "offset",
        "bClear",
        "bAppend",
        "errorcode",
        "errormsg",
        "rs"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._forcesetRowPosition",
        "this._getColLinesFromCSVLines_with_arraybuffer",
        "this._loadFromCSVUint8Array",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pDataset.loadCSV",
      "params": [
        "strcsv",
        "bClear"
      ],
      "calls": [
        "strcsv.split",
        "this.loadFromCSVArray"
      ]
    },
    {
      "name": "_pDataset.__writeCSVRowData",
      "params": [
        "list",
        "rowRow"
      ],
      "calls": [
        "colinfo._toText",
        "nexacro.__forLoop",
        "nexacro._quoteStr",
        "this.__writeData",
        "this._convertValueBySaveProp"
      ]
    },
    {
      "name": "_pDataset.saveCSV",
      "params": [
        "id",
        "savenan",
        "saveinfinity",
        "saveinvaliddate"
      ],
      "calls": [
        "list.join",
        "nexacro.DataUtils.toTypeName",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this.__writeCSVRowData",
        "this.__writeData",
        "this._setSaveProp"
      ]
    },
    {
      "name": "_pDataset.__makeBINDataConvertFunc",
      "params": [
        "type"
      ],
      "calls": [
        "nexacro.DataUtils.toDecimalFromText",
        "nexacro._executeGlobalEvalStr"
      ]
    },
    {
      "name": "_pDataset.__makeBINDataMappingFunc",
      "params": [
        "colArr",
        "colCnt",
        "type"
      ],
      "calls": [
        "nexacro.DataUtils.toDate",
        "nexacro.DataUtils.toDateFromText",
        "nexacro.DataUtils.toDateTime",
        "nexacro.DataUtils.toDateTimeFromText",
        "nexacro.DataUtils.toDecimal",
        "nexacro.DataUtils.toDecimalFromText",
        "nexacro.DataUtils.toFloatFromText",
        "nexacro.DataUtils.toIntFromText",
        "nexacro.DataUtils.toTextFromDateTime",
        "nexacro.DataUtils.toTextFromFloat",
        "nexacro.DataUtils.toTextFromInt",
        "nexacro.DataUtils.toTime",
        "nexacro.DataUtils.toTimeFromText",
        "nexacro._executeGlobalEvalStr",
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pDataset._loadFromBINUint8Array",
      "params": [
        "data",
        "offset",
        "binColLines",
        "loadCnt",
        "bOrgLayout",
        "bClear",
        "convertFn"
      ],
      "calls": [
        "this._clearAll",
        "this._clearData",
        "this._loadRecordFromBINUint8Array"
      ]
    },
    {
      "name": "_pDataset._lazyParseRecordFromBINLine_with_Uint8Array",
      "params": [
        "rowRow",
        "_convertFn"
      ],
      "calls": [
        "dataview.getFloat64",
        "dataview.getInt16",
        "dataview.getInt32",
        "dataview.getUint16",
        "nexacro._Array2DataUtil.getDatetimeFromUint8Array",
        "nexacro._Array2DataUtil.getLenFromUint8Array",
        "nexacro._Array2DataUtil.substr"
      ]
    },
    {
      "name": "_pDataset._loadRecordFromBINUint8Array",
      "params": [
        "data",
        "offset",
        "loadCnt",
        "_convertFn"
      ],
      "calls": [
        "data.slice",
        "dataview.getUint16",
        "nexacro._Array2DataUtil.getLenFromUint8Array",
        "nexacro.__whileLoop"
      ]
    },
    {
      "name": "_pDataset.loadBIN",
      "params": [
        "binData"
      ],
      "calls": [
        "nexacro._datasetFromBINString"
      ]
    },
    {
      "name": "_pDataset.saveBIN",
      "params": [
        "id",
        "strSaveType",
        "savenan",
        "saveinfinity",
        "saveinvaliddate"
      ],
      "calls": [
        "nexacro._datasetToBINString"
      ]
    },
    {
      "name": "_pDataset._saveBINUint8Array",
      "params": [
        "id",
        "type",
        "savenan",
        "saveinfinity",
        "saveinvaliddate"
      ],
      "calls": [
        "colVal.charCodeAt",
        "colinfo.prop.toLowerCase",
        "dv.getUint8",
        "dv.setFloat64",
        "dv.setInt32",
        "dv.setUint16",
        "list.push",
        "list.unshift",
        "nexacro.DataUtils.convert",
        "nexacro._Array2DataUtil.addDatetimeToUint8Array",
        "nexacro._Array2DataUtil.addLenStrToUint8Array",
        "nexacro._Array2DataUtil.addLenToUint8Array",
        "nexacro.__forLoop",
        "this.__getParsedRow",
        "this.__writeBINCrudRow",
        "this.__writeBINNormalRow",
        "this._constVars.get_id",
        "this._convertValueBySaveProp",
        "this._setSaveProp",
        "var_list.forEach",
        "var_list.push"
      ]
    },
    {
      "name": "_pDataset.__writeBINNormalRow",
      "params": [
        "list",
        "rowRow"
      ],
      "calls": [
        "list.push",
        "rowRow._data.forEach",
        "this.__writeBINRowData"
      ]
    },
    {
      "name": "_pDataset.__writeBINCrudRow",
      "params": [
        "list",
        "rowRow"
      ],
      "calls": [
        "this.__writeBINRowData"
      ]
    },
    {
      "name": "_pDataset.__writeBINRowData",
      "params": [
        "list",
        "type",
        "rowRow"
      ],
      "calls": [
        "colinfo._fromVal",
        "colinfo._toText",
        "dv.getUint8",
        "dv.setFloat64",
        "dv.setInt32",
        "dv.setUint16",
        "list.push",
        "nexacro._Array2DataUtil.addDatetimeToUint8Array",
        "nexacro._Array2DataUtil.addLenStrToUint8Array",
        "nexacro._Array2DataUtil.addLenToUint8Array",
        "nexacro.__forLoop",
        "this._convertValueBySaveProp",
        "value.charCodeAt",
        "var_list.forEach",
        "var_list.push"
      ]
    },
    {
      "name": "_pDataset._setSaveProp",
      "params": [
        "savenan",
        "saveinfinity",
        "saveinvaliddate"
      ],
      "calls": [
        "nexacro._isNull",
        "this.getSaveInfinity",
        "this.getSaveInvalidDate",
        "this.getSaveNan"
      ]
    },
    {
      "name": "_pDataset._convertValueBySaveProp",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isNull",
        "v.isInfinity",
        "v.isNaN",
        "v.valueOf"
      ]
    },
    {
      "name": "_pDataset._addDirtyindex",
      "params": [
        "idx",
        "type",
        "_row"
      ],
      "calls": [
        "dirtylist.push"
      ]
    },
    {
      "name": "_pDataset._refreshDirty",
      "params": [],
      "calls": [
        "dirty_rows.push",
        "obj.setDataInPath",
        "this._rowToData"
      ]
    },
    {
      "name": "_pDataset._rowToData",
      "params": [
        "srcRow"
      ],
      "calls": [
        "JSON.parse",
        "nexacro.__forLoop",
        "this._getPathFromColumninfo",
        "this._setDataInPath"
      ]
    },
    {
      "name": "_pDataset._setDataInPath",
      "params": [
        "target",
        "path",
        "data"
      ],
      "calls": [
        "path.indexOf",
        "path.match"
      ]
    },
    {
      "name": "_pDataset._getPathFromColumninfo",
      "params": [
        "colitem"
      ],
      "calls": [
        "colitem.datapath.match"
      ]
    },
    {
      "name": "nexacro.TransactionItem",
      "params": [
        "path",
        "context",
        "svcid",
        "inDatasetsParam",
        "outDatasetsParam",
        "argsParam",
        "datatype",
        "async",
        "last_modified",
        "version"
      ],
      "calls": [
        "nexacro._CommunicationItem.call",
        "nexacro._hasCookieVariables",
        "this._hasFirstCountDs",
        "this._parseDSParam",
        "this._parseVarParam",
        "this._serializeData"
      ]
    },
    {
      "name": "_pTransactionItem.on_start",
      "params": [],
      "calls": [
        "application.on_fire_oncommunication",
        "nexacro._appendCommContext",
        "nexacro.getApplication",
        "this._showWaitCursor"
      ]
    },
    {
      "name": "_pTransactionItem.on_load_data",
      "params": [
        "data",
        "cookie",
        "last_modified"
      ],
      "calls": [
        "application.on_fire_oncommunication",
        "callbackList.splice",
        "data._loadData",
        "datasets.add_item",
        "datasets.indexOf",
        "item.callback.call",
        "loadmanager.getDataItem",
        "manager._notifyTrigger",
        "nexacro.Collection",
        "nexacro._DataCache",
        "nexacro._DataSetCache",
        "nexacro._removeCommContext",
        "nexacro.getApplication",
        "this._addCookieToCookieVariable",
        "this._deserializeData",
        "this._hideWaitCursor",
        "this.on_decrypt",
        "this.on_progress_data",
        "view.getViewDataset"
      ]
    },
    {
      "name": "_pTransactionItem.on_load_arraybuffer",
      "params": [
        "data",
        "cookie",
        "last_modified"
      ],
      "calls": [
        "application.on_fire_oncommunication",
        "callbackList.splice",
        "data._loadData",
        "datasets.add_item",
        "datasets.indexOf",
        "item.callback.call",
        "loadmanager.getDataItem",
        "manager._notifyTrigger",
        "nexacro.Collection",
        "nexacro._DataCache",
        "nexacro._DataSetCache",
        "nexacro._removeCommContext",
        "nexacro.getApplication",
        "this._addCookieToCookieVariable",
        "this._deserializeUint8Array",
        "this._hideWaitCursor",
        "this.on_decrypt",
        "this.on_decrypt_arraybuffer",
        "this.on_progress_arraybuffer_chunk",
        "view.getViewDataset"
      ]
    },
    {
      "name": "_pTransactionItem.on_load_xmldom",
      "params": [
        "xmldom",
        "cookie",
        "last_modified"
      ],
      "calls": [
        "application.on_fire_oncommunication",
        "callbackList.splice",
        "item.callback.call",
        "manager._notifyTrigger",
        "nexacro._DataCache",
        "nexacro._removeCommContext",
        "nexacro.getApplication",
        "this.__deserializeXML",
        "this._addCookieToCookieVariable",
        "this._hideWaitCursor",
        "view.getViewDataset"
      ]
    },
    {
      "name": "_pTransactionItem.on_progress_data",
      "params": [
        "data",
        "bFinal"
      ],
      "calls": [
        "data.charAt",
        "nexacro._ProgressDataCSV",
        "nexacro._ProgressDataPPX",
        "nexacro._ProgressDataSSV",
        "nexacro._ProgressDataXML",
        "nexacro.trimLeft",
        "this._getStreamType",
        "this._progress_data._on_progress"
      ]
    },
    {
      "name": "_pTransactionItem._async_progress_data",
      "params": [],
      "calls": [
        "this.on_progress_data"
      ]
    },
    {
      "name": "_pTransactionItem.on_progress_arraybuffer_chunk",
      "params": [
        "data",
        "bFinal"
      ],
      "calls": []
    },
    {
      "name": "_pTransactionItem.on_error",
      "params": [
        "errstatus",
        "fireerrorcode",
        "returncode",
        "locationurl",
        "extramsg"
      ],
      "calls": [
        "application.on_fire_oncommunication",
        "callbackList.splice",
        "item.callback.call",
        "loadmanager.getDataItem",
        "manager._notifyTrigger",
        "nexacro._removeCommContext",
        "nexacro.getApplication",
        "this._hideWaitCursor",
        "this._showWaitCursor",
        "view.getViewDataset"
      ]
    },
    {
      "name": "_pTransactionItem._loadFromData",
      "params": [
        "data"
      ],
      "calls": [
        "callbackList.splice",
        "item.callback.call",
        "nexacro._Array2DataUtil.isTypedArray",
        "nexacro._DataCache",
        "this._deserializeData",
        "this._deserializeUint8Array"
      ]
    },
    {
      "name": "_pTransactionItem._showWaitCursor",
      "params": [
        "context"
      ],
      "calls": [
        "context._waitCursor"
      ]
    },
    {
      "name": "_pTransactionItem._hideWaitCursor",
      "params": [
        "context"
      ],
      "calls": [
        "context._waitCursor"
      ]
    },
    {
      "name": "_pTransactionItem._parseDSParam",
      "params": [
        "paramStr"
      ],
      "calls": [
        "list.push",
        "paramStr.match",
        "value.indexOf",
        "value.substring"
      ]
    },
    {
      "name": "_pTransactionItem._parseVarParam",
      "params": [
        "paramStr"
      ],
      "calls": [
        "list.push",
        "nexacro.stripQuote",
        "paramStr.match",
        "paramStr.replace"
      ]
    },
    {
      "name": "_pTransactionItem._serializeData",
      "params": [],
      "calls": [
        "this.__serializeBIN",
        "this.__serializeJSON",
        "this.__serializeSSV",
        "this.__serializeXML"
      ]
    },
    {
      "name": "_pTransactionItem.__serializeXML",
      "params": [],
      "calls": [
        "cookievar.push",
        "ds._saveXML",
        "list.join",
        "list.push",
        "nexacro._encodeXml",
        "nexacro._getCookieVariables",
        "this._writeData",
        "this.context._getDatasetObject"
      ]
    },
    {
      "name": "_pTransactionItem.__serializeSSV",
      "params": [],
      "calls": [
        "String.fromCharCode",
        "cookievar.push",
        "ds.saveSSV",
        "list.join",
        "list.push",
        "nexacro._getCookieVariables",
        "nexacro._getSSVRecordSeparator",
        "this.context._getDatasetObject"
      ]
    },
    {
      "name": "_pTransactionItem.__serializeBIN",
      "params": [],
      "calls": [
        "bin_list.set",
        "cookievar.push",
        "document.location.href.indexOf",
        "ds._saveBINUint8Array",
        "dsdata.forEach",
        "dv.getUint8",
        "dv.setUint16",
        "list.push",
        "nexacro._Array2DataUtil.addLenStrToUint8Array",
        "nexacro._Array2DataUtil.addLenToUint8Array",
        "nexacro._convertStreamSSVToBIN",
        "nexacro._getCookieVariables",
        "nexacro._isHybrid",
        "this.__serializeSSV",
        "this.context._getDatasetObject",
        "var_list.forEach",
        "var_list.push"
      ]
    },
    {
      "name": "_pTransactionItem.__serializeJSON",
      "params": [],
      "calls": [
        "cookievar.push",
        "ds._saveJSON",
        "list.join",
        "list.push",
        "nexacro._encodeXml",
        "nexacro._getCookieVariables",
        "this._addStringJSONData",
        "this._writeData",
        "this.context._getDatasetObject",
        "val.replace"
      ]
    },
    {
      "name": "_pTransactionItem._deserializeData",
      "params": [
        "strRecvData"
      ],
      "calls": []
    },
    {
      "name": "_pTransactionItem._deserializeUint8Array",
      "params": [
        "data_array"
      ],
      "calls": [
        "cinfo.string.substring",
        "nexacro.Collection",
        "nexacro._Array2DataUtil.getString",
        "nexacro._Array2DataUtil.indexOf",
        "nexacro._Array2DataUtil.substr",
        "nexacro._Array2DataUtil.substring",
        "nexacro._Array2DataUtil.substringOf",
        "nexacro._Array2DataUtil.trimLeft",
        "nexacro._getSSVRecordSeparator",
        "this.__deserializeCSVFromUint8Array",
        "this.__deserializeJSONFromStr",
        "this.__deserializeSSVFromUint8Array",
        "this.__deserializeXMLFromStr",
        "this._getStreamType"
      ]
    },
    {
      "name": "_pTransactionItem._setParamter",
      "params": [
        "id",
        "val"
      ],
      "calls": [
        "app._existVariable",
        "nexacro._hasEnvironmentVariable",
        "nexacro._isNull",
        "nexacro._isObject",
        "nexacro.getApplication",
        "nexacro.setEnvironmentVariable"
      ]
    },
    {
      "name": "_pTransactionItem._getDataset",
      "params": [
        "id"
      ],
      "calls": [
        "form._getDatasetObject"
      ]
    },
    {
      "name": "_pTransactionItem._hasFirstCountDs",
      "params": [],
      "calls": [
        "form._getDatasetObject"
      ]
    },
    {
      "name": "_pTransactionItem.__deserializeXML",
      "params": [
        "strRecvData",
        "doc"
      ],
      "calls": [
        "datasets.add_item",
        "doc.getElementsByTagName",
        "ds.applyChange",
        "ds.loadFromDOM",
        "dsId.indexOf",
        "dsId.push",
        "dsType.push",
        "fstr.indexOf",
        "nexacro.Collection",
        "nexacro.Dataset",
        "nexacro._DataSetCache",
        "nexacro._ParametersCache",
        "nexacro._parseXMLDocument",
        "nexacro._replaceAll",
        "paramElem.getAttribute",
        "strRecvData.indexOf",
        "strRecvData.substr",
        "this.__deserializeXMLFromStr",
        "this._setParamter",
        "this.context._getDatasetObject"
      ]
    },
    {
      "name": "_pTransactionItem.__deserializeXMLFromStr",
      "params": [
        "strRecvData"
      ],
      "calls": [
        "app._existVariable",
        "datasets.add_item",
        "ds.applyChange",
        "ds.loadFromXMLStr",
        "dsId.indexOf",
        "dsId.push",
        "dsType.push",
        "form._getDatasetObject",
        "nexacro.Collection",
        "nexacro._DataSetCache",
        "nexacro._ParametersCache",
        "nexacro._decodeXml",
        "nexacro._getXMLAttributeID",
        "nexacro._getXMLTagData",
        "nexacro._getXMLTagData2",
        "nexacro._hasEnvironmentVariable",
        "nexacro._isNull",
        "nexacro._isObject",
        "nexacro.getApplication",
        "nexacro.getEnvironment",
        "nexacro.setEnvironmentVariable",
        "strRecvData.indexOf",
        "strRecvData.substring"
      ]
    },
    {
      "name": "_pTransactionItem.__deserializePPX",
      "params": [
        "strRecvData"
      ],
      "calls": [
        "String.fromCharCode",
        "app._existVariable",
        "curStr.charAt",
        "curStr.split",
        "datasets.add_item",
        "ds.applyChange",
        "ds.loadFromPPXArray",
        "dsId.indexOf",
        "dsId.push",
        "dsType.push",
        "nexacro.Collection",
        "nexacro._DataSetCache",
        "nexacro._ParametersCache",
        "nexacro.__forLoop",
        "nexacro._getSSVRecordSeparator",
        "nexacro._getSSVUnitSeparator",
        "nexacro._hasEnvironmentVariable",
        "nexacro._isNull",
        "nexacro._isObject",
        "nexacro.getApplication",
        "nexacro.getEnvironment",
        "nexacro.setEnvironmentVariable",
        "strRecvData.split",
        "this.context._getDatasetObject"
      ]
    },
    {
      "name": "__find_next_dataset_loopFn",
      "params": [
        "i"
      ],
      "calls": []
    },
    {
      "name": "_pTransactionItem.__deserializeSSV",
      "params": [
        "strRecvData"
      ],
      "calls": [
        "String.fromCharCode",
        "app._existVariable",
        "curStr.indexOf",
        "curStr.split",
        "curStr.substring",
        "datasets.add_item",
        "ds.applyChange",
        "ds.loadFromSSVArray",
        "dsId.indexOf",
        "dsId.push",
        "dsType.push",
        "nexacro.Collection",
        "nexacro._DataSetCache",
        "nexacro._ParametersCache",
        "nexacro.__forLoop",
        "nexacro._getSSVRecordSeparator",
        "nexacro._getSSVUnitSeparator",
        "nexacro._hasEnvironmentVariable",
        "nexacro._isNull",
        "nexacro._isObject",
        "nexacro.getApplication",
        "nexacro.getEnvironment",
        "nexacro.setEnvironmentVariable",
        "paramStr.indexOf",
        "paramStr.substring",
        "strRecvData.split",
        "this.context._getDatasetObject",
        "varInfo.indexOf",
        "varInfo.substring"
      ]
    },
    {
      "name": "__find_next_dataset_loopFn",
      "params": [
        "i"
      ],
      "calls": []
    },
    {
      "name": "_pTransactionItem.__deserializeCSV",
      "params": [
        "strRecvData"
      ],
      "calls": [
        "app._existVariable",
        "curStr.indexOf",
        "curStr.split",
        "curStr.substring",
        "datasets.add_item",
        "ds.applyChange",
        "ds.loadFromCSVArray",
        "dsId.indexOf",
        "dsId.push",
        "dsType.push",
        "nexacro.Collection",
        "nexacro._DataSetCache",
        "nexacro._ParametersCache",
        "nexacro.__forLoop",
        "nexacro._hasEnvironmentVariable",
        "nexacro._isNull",
        "nexacro._isObject",
        "nexacro.getApplication",
        "nexacro.getEnvironment",
        "nexacro.setEnvironmentVariable",
        "paramStr.charAt",
        "paramStr.indexOf",
        "paramStr.substring",
        "strRecvData.split",
        "this.context._getDatasetObject",
        "varInfo.indexOf",
        "varInfo.substring"
      ]
    },
    {
      "name": "__find_next_dataset_loopFn",
      "params": [
        "i"
      ],
      "calls": []
    },
    {
      "name": "_pTransactionItem.__deserializeJSON",
      "params": [
        "strRecvData",
        "doc"
      ],
      "calls": []
    },
    {
      "name": "_pTransactionItem.__deserializeJSONFromStr",
      "params": [
        "strRecvData"
      ],
      "calls": [
        "JSON.parse",
        "app._existVariable",
        "datasets.add_item",
        "ds._loadFromJSONObj",
        "ds.applyChange",
        "dsId.indexOf",
        "dsId.push",
        "dsType.push",
        "form._getDatasetObject",
        "nexacro.Collection",
        "nexacro._DataSetCache",
        "nexacro._ParametersCache",
        "nexacro._hasEnvironmentVariable",
        "nexacro._isNull",
        "nexacro._isObject",
        "nexacro.getApplication",
        "nexacro.getEnvironment",
        "nexacro.setEnvironmentVariable"
      ]
    },
    {
      "name": "_pTransactionItem.__deserializeCSVFromUint8Array",
      "params": [
        "data",
        "offset",
        "rs"
      ],
      "calls": [
        "app._existVariable",
        "curStr.indexOf",
        "curStr.split",
        "curStr.substring",
        "datasets.add_item",
        "ds.applyChange",
        "ds.loadCSVFromUint8Array",
        "dsId.indexOf",
        "dsId.push",
        "dsType.push",
        "nexacro.Collection",
        "nexacro._Array2DataUtil.substringOf",
        "nexacro._DataSetCache",
        "nexacro._ParametersCache",
        "nexacro._hasEnvironmentVariable",
        "nexacro._isNull",
        "nexacro._isObject",
        "nexacro.getApplication",
        "nexacro.getEnvironment",
        "nexacro.setEnvironmentVariable",
        "paramStr.indexOf",
        "paramStr.substring",
        "this.context._getDatasetObject",
        "varInfo.indexOf",
        "varInfo.substring"
      ]
    },
    {
      "name": "_pTransactionItem.__deserializeSSVFromUint8Array",
      "params": [
        "data",
        "offset"
      ],
      "calls": [
        "String.fromCharCode",
        "app._existVariable",
        "curStr.indexOf",
        "curStr.split",
        "curStr.substring",
        "datasets.add_item",
        "ds.applyChange",
        "ds.loadSSVFromUint8Array",
        "dsId.indexOf",
        "dsId.push",
        "dsType.push",
        "nexacro.Collection",
        "nexacro._Array2DataUtil.substringOf",
        "nexacro._DataSetCache",
        "nexacro._ParametersCache",
        "nexacro._getSSVRecordSeparator",
        "nexacro._getSSVUnitSeparator",
        "nexacro._hasEnvironmentVariable",
        "nexacro._isNull",
        "nexacro._isObject",
        "nexacro.getApplication",
        "nexacro.getEnvironment",
        "nexacro.setEnvironmentVariable",
        "paramStr.indexOf",
        "paramStr.substring",
        "this.context._getDatasetObject",
        "varInfo.indexOf",
        "varInfo.substring"
      ]
    },
    {
      "name": "_pTransactionItem._writeData",
      "params": [
        "list",
        "str",
        "depth"
      ],
      "calls": []
    },
    {
      "name": "_pTransactionItem._addStringJSONData",
      "params": [
        "list",
        "str",
        "depth"
      ],
      "calls": []
    },
    {
      "name": "_pTransactionItem._dsUpdate",
      "params": [
        "ds"
      ],
      "calls": [
        "ds._reFilter",
        "ds._resetSortGroup"
      ]
    },
    {
      "name": "_pTransactionItem._dsOnload",
      "params": [
        "ds",
        "reason"
      ],
      "calls": [
        "ds.on_fire_onload"
      ]
    },
    {
      "name": "_pTransactionItem._getStreamType",
      "params": [
        "strRecvData"
      ],
      "calls": [
        "data.slice",
        "strRecvData.trim",
        "type.indexOf"
      ]
    },
    {
      "name": "_pTransactionItem._destroy",
      "params": [],
      "calls": []
    }
  ],
  "DataObject.js": [
    {
      "name": "nexacro.DataObjectLoadEventInfo",
      "params": [
        "obj",
        "id",
        "url",
        "reason"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DataObjectErrorEventInfo",
      "params": [
        "obj",
        "id",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri",
        "errordata"
      ],
      "calls": [
        "nexacro.ErrorEventInfo.call"
      ]
    },
    {
      "name": "nexacro.DataObjectEventInfo",
      "params": [
        "obj",
        "id",
        "response",
        "svcid",
        "url",
        "reason",
        "method",
        "statuscode"
      ],
      "calls": []
    },
    {
      "name": "_pDataObjectEventInfo.getAllResponseHeaders",
      "params": [],
      "calls": [
        "this._parseResponseHeaders"
      ]
    },
    {
      "name": "_pDataObjectEventInfo._parseResponseHeaders",
      "params": [
        "allheaders"
      ],
      "calls": [
        "allheaders.trim",
        "parts.join",
        "parts.shift"
      ]
    },
    {
      "name": "nexacro.DataObjectDataChangedEventInfo",
      "params": [
        "obj",
        "id",
        "url",
        "reason",
        "infoarray"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DataObjectValueChangedEventInfo",
      "params": [
        "obj",
        "id",
        "reason",
        "uid",
        "path",
        "index",
        "key",
        "newvalue",
        "dsid"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DataObjectLoadDatasetsEventInfo",
      "params": [
        "obj",
        "id",
        "reason"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DataObject",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro._EventSinkObject.call"
      ]
    },
    {
      "name": "_pDataObject.create",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataObject._addCallbackContext",
      "params": [
        "context"
      ],
      "calls": [
        "this._context_list.push"
      ]
    },
    {
      "name": "_pDataObject._removeCallbackContext",
      "params": [
        "context"
      ],
      "calls": [
        "nexacro._indexOf",
        "this._context_list.splice"
      ]
    },
    {
      "name": "_pDataObject.on_created",
      "params": [],
      "calls": [
        "keys.join",
        "keys.push",
        "loadmanager.getPreloadDataObjectModule",
        "nexacro.RESTAPIItem",
        "nexacro._getServiceLocation",
        "this._endLoad",
        "tritem._loadFromDataObject"
      ]
    },
    {
      "name": "_pDataObject.destroy",
      "params": [],
      "calls": [
        "nexacro._EventSinkObject.prototype.destroy.call",
        "this._p_parent.removeChild"
      ]
    },
    {
      "name": "_pDataObject.set_data",
      "params": [
        "data"
      ],
      "calls": [
        "JSON.parse",
        "this.on_apply_data"
      ]
    },
    {
      "name": "_pDataObject.on_apply_data",
      "params": [],
      "calls": [
        "this._endLoad"
      ]
    },
    {
      "name": "_pDataObject.set_url",
      "params": [
        "url"
      ],
      "calls": [
        "this.on_apply_url"
      ]
    },
    {
      "name": "_pDataObject.on_apply_url",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataObject.set_preload",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pDataObject.set_enableevent",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_enableevent"
      ]
    },
    {
      "name": "_pDataObject.on_apply_enableevent",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.DSColChangeEventInfo",
        "this.on_fire_onchangeddata",
        "this.on_fire_ondatachanged",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataObject.set_updatecontrol",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pDataset.set_updateresetcontrol",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pDataObject.serializeToString",
      "params": [
        "replacer",
        "space"
      ],
      "calls": [
        "JSON.stringify"
      ]
    },
    {
      "name": "_pDataObject.load",
      "params": [
        "async"
      ],
      "calls": [
        "loadmanager.loadDataObjectModule",
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "this._endLoad",
        "this._refform._getRefFormBaseUrl"
      ]
    },
    {
      "name": "_pDataObject.getObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataObject.getObjectByPath",
      "params": [
        "path"
      ],
      "calls": [
        "this._jsonPath"
      ]
    },
    {
      "name": "_pDataObject.request",
      "params": [
        "svcid",
        "method",
        "url",
        "jsonparam"
      ],
      "calls": [
        "loadmanager.loadDataObjectModule",
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "this._endLoad",
        "this._refform._getRefFormBaseUrl"
      ]
    },
    {
      "name": "_pDataObject.getAllResponseHeaders",
      "params": [],
      "calls": [
        "this._parseResponseHeaders"
      ]
    },
    {
      "name": "_pDataObject.getResponseHeader",
      "params": [
        "headername"
      ],
      "calls": [
        "this._parseResponseHeaders"
      ]
    },
    {
      "name": "_pDataObject.getResponse",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataObject.setDataValue",
      "params": [
        "path",
        "value",
        "index",
        "key",
        "srcdsid"
      ],
      "calls": [
        "nexacro._random",
        "this._setPathValue",
        "this._setValueInKey",
        "this._updatelist.push",
        "this.getObjectByPath",
        "this.on_fire_onvaluechanged"
      ]
    },
    {
      "name": "_pDataObject.setDataInPath",
      "params": [
        "path",
        "data",
        "index",
        "sourcedatasetid"
      ],
      "calls": [
        "nexacro._random",
        "this._addRowData",
        "this._copyRowData",
        "this._deleteRowData",
        "this._setPathValue",
        "this._updatelist.push",
        "this.getObjectByPath",
        "this.on_fire_ondatachanged",
        "updatalist.push"
      ]
    },
    {
      "name": "_pDataObject.addDataInPath",
      "params": [
        "path",
        "data",
        "index",
        "srcdsid"
      ],
      "calls": [
        "nexacro._random",
        "this._addRowData",
        "this._updatelist.push",
        "this.getObjectByPath",
        "this.on_fire_ondatachanged"
      ]
    },
    {
      "name": "_pDataObject.deleteDataInPath",
      "params": [
        "path",
        "data",
        "index",
        "srcdsid"
      ],
      "calls": [
        "nexacro._random",
        "this._deleteRowData",
        "this._updatelist.push",
        "this.getObjectByPath",
        "this.on_fire_ondatachanged"
      ]
    },
    {
      "name": "_pDataObject.insertDataInPath",
      "params": [
        "path",
        "data",
        "index",
        "srcdsid"
      ],
      "calls": [
        "nexacro._random",
        "this._addRowData",
        "this._updatelist.push",
        "this.getObjectByPath",
        "this.on_fire_ondatachanged"
      ]
    },
    {
      "name": "_pDataObject.setData",
      "params": [
        "path",
        "type",
        "index",
        "data",
        "srcdsid"
      ],
      "calls": [
        "nexacro._random",
        "this._addRowData",
        "this._copyRowData",
        "this._deleteRowData",
        "this._updatelist.push",
        "this.getObjectByPath",
        "this.on_fire_ondatachanged"
      ]
    },
    {
      "name": "_pDataObject.setDataList",
      "params": [
        "path",
        "datalist",
        "srcdsid"
      ],
      "calls": [
        "nexacro._random",
        "this._addRowData",
        "this._copyRowData",
        "this._deleteRowData",
        "this.getObjectByPath",
        "this.on_fire_ondatachanged",
        "updatalist.push"
      ]
    },
    {
      "name": "_pDataObject.getChangedInfo",
      "params": [],
      "calls": [
        "this._appendArray"
      ]
    },
    {
      "name": "_pDataObject.clearChangedInfo",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataObject.removeChangedInfo",
      "params": [
        "uid"
      ],
      "calls": [
        "updatelist.splice"
      ]
    },
    {
      "name": "_pDataObject.on_fire_onload",
      "params": [
        "errcode",
        "errmsg",
        "reason",
        "url"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.DataObjectLoadEventInfo"
      ]
    },
    {
      "name": "_pDataObject.on_fire_ondatachanged",
      "params": [
        "errcode",
        "errmsg",
        "reason",
        "datalist"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.DataObjectDataChangedEventInfo",
        "this._appendArray"
      ]
    },
    {
      "name": "_pDataObject.on_fire_onvaluechanged",
      "params": [
        "errcode",
        "errmsg",
        "reason",
        "uid",
        "datapath",
        "index",
        "key",
        "newvalue",
        "srcdsid"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.DataObjectValueChangedEventInfo",
        "this._appendArray"
      ]
    },
    {
      "name": "_pDataObject.on_fire_onchanged",
      "params": [
        "errcode",
        "errmsg",
        "reason",
        "progressload"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.DataObjectLoadEventInfo"
      ]
    },
    {
      "name": "_pDataObject.on_fire_onsuccess",
      "params": [
        "response",
        "svcid",
        "url",
        "reason",
        "method",
        "statuscode"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.DataObjectEventInfo"
      ]
    },
    {
      "name": "_pDataObject.on_fire_onerror",
      "params": [
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri",
        "svcid"
      ],
      "calls": [
        "nexacro.DataObjectErrorEventInfo",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "_pDataObject.on_fire_onloaddatasets",
      "params": [
        "errcode",
        "errmsg",
        "reason"
      ],
      "calls": [
        "nexacro.DataObjectLoadDatasetsEventInfo",
        "this.onloaddatasets._fireEvent"
      ]
    },
    {
      "name": "_pDataObject._on_success",
      "params": [
        "response",
        "svcid",
        "url",
        "jsonobj",
        "method",
        "statuscode"
      ],
      "calls": [
        "this.on_fire_onsuccess",
        "this.on_onsuccess_default_action"
      ]
    },
    {
      "name": "_pDataObject.on_onsuccess_default_action",
      "params": [
        "jsonobj",
        "url"
      ],
      "calls": [
        "this._endLoad",
        "this._setContents",
        "this.set_contents"
      ]
    },
    {
      "name": "_pDataObject._setContents",
      "params": [
        "data",
        "reason",
        "url"
      ],
      "calls": [
        "JSON.parse",
        "this._endLoad"
      ]
    },
    {
      "name": "_pDataObject._parse",
      "params": [
        "strobj"
      ],
      "calls": [
        "JSON.parse"
      ]
    },
    {
      "name": "_pDataObject._jsonPath",
      "params": [
        "expr"
      ],
      "calls": [
        "nexacro._JSONPath"
      ]
    },
    {
      "name": "_pDataObject._endLoad",
      "params": [
        "errorcode",
        "errormsg",
        "reason",
        "url"
      ],
      "calls": [
        "context.on_notify_onload_dataobject.call",
        "this.on_fire_onload",
        "this.on_fire_onloaddatasets"
      ]
    },
    {
      "name": "_pDataObject._endChanged",
      "params": [
        "errorcode",
        "errormsg",
        "reason"
      ],
      "calls": [
        "context.on_notify_onload_dataobject.call",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pDataObject.on_preload_dataobject",
      "params": [
        "url",
        "errstatus",
        "data",
        "fireerrorcode",
        "returncode",
        "requesturi",
        "locationuri",
        "extramsg"
      ],
      "calls": [
        "keys.join",
        "keys.push",
        "nexacro.RESTAPIItem",
        "nexacro._onHttpSystemError",
        "this._onDataObjectRequestError",
        "tritem._loadFromDataObject"
      ]
    },
    {
      "name": "_pDataObject._onDataObjectRequestError",
      "params": [
        "obj",
        "bfireevent",
        "errorobj",
        "errortype",
        "url",
        "returncode",
        "requesturi",
        "locationuri",
        "extramsg",
        "svcid",
        "response",
        "response_headers"
      ],
      "calls": [
        "environment.on_fire_onerror",
        "nexacro.MakeCommunicationError",
        "nexacro.getEnvironment",
        "this._addResponseInfo",
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pDataObject._addDataset",
      "params": [
        "dataset"
      ],
      "calls": [
        "datasets.push",
        "nexacro._indexOf"
      ]
    },
    {
      "name": "_pDataObject._removeDataset",
      "params": [
        "dataset"
      ],
      "calls": [
        "nexacro._indexOf",
        "this._datasets.splice"
      ]
    },
    {
      "name": "_pDataObject._addResponseInfo",
      "params": [
        "response",
        "response_headers"
      ],
      "calls": []
    },
    {
      "name": "_pDataObject._clearResponseInfo",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataObject._parseResponseHeaders",
      "params": [
        "allheaders",
        "headername"
      ],
      "calls": [
        "_headername.toLowerCase",
        "allheaders.trim",
        "headername.toLowerCase",
        "name.indexOf",
        "parts.join",
        "parts.pop",
        "parts.shift"
      ]
    },
    {
      "name": "_pDataObject._appendArray",
      "params": [
        "srcarr",
        "tararr"
      ],
      "calls": [
        "tararr.concat"
      ]
    },
    {
      "name": "_pDataObject._getAbsolutePathByDataobectpath",
      "params": [
        "dataobjectpath"
      ],
      "calls": [
        "dataobjectpath.match"
      ]
    },
    {
      "name": "_pDataObject._copyRowData",
      "params": [
        "destRow",
        "srcRow"
      ],
      "calls": [
        "this._copyRowData",
        "this.getObjectByPath"
      ]
    },
    {
      "name": "_pDataObject._addRowData",
      "params": [
        "datapath",
        "srcRow",
        "index"
      ],
      "calls": [
        "rootobj.push",
        "rootobj.splice",
        "this._copyRowData",
        "this._getRootObjectByPath"
      ]
    },
    {
      "name": "_pDataObject._insertRowData",
      "params": [
        "datapath",
        "srcRow",
        "index",
        "colList"
      ],
      "calls": [
        "nexacro.__forLoop",
        "rootobj.splice",
        "this._getPath",
        "this._getRootObjectByPath"
      ]
    },
    {
      "name": "_pDataObject._deleteRowData",
      "params": [
        "datapath",
        "index"
      ],
      "calls": [
        "rootobj.splice",
        "this._getRootObjectByPath"
      ]
    },
    {
      "name": "_pDataObject._deleteAllRowData",
      "params": [
        "datapath"
      ],
      "calls": [
        "this._getRootObjectByPath"
      ]
    },
    {
      "name": "_pDataObject._getPath",
      "params": [
        "arr"
      ],
      "calls": []
    },
    {
      "name": "_pDataObject._getRootObjectByPath",
      "params": [
        "datapath"
      ],
      "calls": [
        "datapath.lastIndexOf",
        "datapath.match",
        "datapath.slice"
      ]
    },
    {
      "name": "_pDataObject._setValueInKey",
      "params": [
        "target",
        "key",
        "value"
      ],
      "calls": [
        "key.indexOf",
        "key.match"
      ]
    },
    {
      "name": "_pDataObject._setPathValue",
      "params": [
        "path",
        "value"
      ],
      "calls": [
        "path.match"
      ]
    },
    {
      "name": "_pDataObject._addbindDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDataObject._removeBindDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.RESTAPIItem",
      "params": [
        "path",
        "context",
        "svcid",
        "method",
        "outDataobject",
        "argsJSONParam",
        "datatype",
        "async",
        "last_modified",
        "version"
      ],
      "calls": [
        "nexacro._CommunicationItem.call",
        "nexacro._hasCookieVariables",
        "this._hasFirstCountDs",
        "this._parseDOParam",
        "this._parseDSParam",
        "this._parseJSONParam",
        "this._parseVarParam",
        "this._serializeData"
      ]
    },
    {
      "name": "_pRESTAPIItem.on_load_dataobject",
      "params": [
        "data",
        "cookie",
        "last_modified",
        "response_header",
        "status"
      ],
      "calls": [
        "Date.now",
        "application.on_fire_oncommunication",
        "callbackList.splice",
        "data._loadDataObject",
        "dataobject._addResponseInfo",
        "dataobject._clearResponseInfo",
        "dataobject._on_success",
        "dataobject._setContents",
        "item.callback.call",
        "loadmanager.getDataItem",
        "nexacro._DataObjectCache",
        "nexacro._removeCommContext",
        "nexacro.getApplication",
        "this._addCookieToCookieVariable",
        "this._deserializeData",
        "this._hideWaitCursor",
        "this.on_decrypt"
      ]
    },
    {
      "name": "_pRESTAPIItem._parseDOParam",
      "params": [
        "outdataobj"
      ],
      "calls": []
    },
    {
      "name": "_pRESTAPIItem._parseJSONParam",
      "params": [],
      "calls": [
        "this._parseVarParam"
      ]
    },
    {
      "name": "_pRESTAPIItem._deserializeData",
      "params": [
        "strRecvData"
      ],
      "calls": [
        "nexacro.Collection",
        "strRecvData.charAt",
        "strRecvData.trim",
        "this.__deserializeJSON"
      ]
    },
    {
      "name": "_pRESTAPIItem._loadFromDataObject",
      "params": [
        "data",
        "dataobject"
      ],
      "calls": [
        "callbackList.splice",
        "dataobject._clearResponseInfo",
        "dataobject._on_success",
        "dataobject._setContents",
        "item.callback.call",
        "nexacro._DataObjectCache",
        "this._deserializeData"
      ]
    },
    {
      "name": "_pRESTAPIItem.__deserializeJSON",
      "params": [
        "strRecvData",
        "doc"
      ],
      "calls": [
        "JSON.parse"
      ]
    },
    {
      "name": "_pRESTAPIItem.on_error",
      "params": [
        "errstatus",
        "fireerrorcode",
        "returncode",
        "locationurl",
        "extramsg",
        "response",
        "responseheaders"
      ],
      "calls": [
        "application.on_fire_oncommunication",
        "callbackList.splice",
        "item.callback.call",
        "loadmanager.getDataItem",
        "nexacro._removeCommContext",
        "nexacro.getApplication",
        "this._hideWaitCursor",
        "this._showWaitCursor"
      ]
    }
  ],
  "Dataset.js": [
    {
      "name": "nexacro.NormalDataset",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro.Dataset.call"
      ]
    },
    {
      "name": "_pNormalDataset.on_created",
      "params": [],
      "calls": [
        "keys.join",
        "keys.push",
        "loadmanager.getPreloadDataModule",
        "nexacro.TransactionItem",
        "nexacro._getServiceLocation",
        "this._endLoad",
        "this._findDataObject",
        "this._loadDataObject",
        "tritem._loadFromData"
      ]
    },
    {
      "name": "_pNormalDataset.destroy",
      "params": [],
      "calls": [
        "nexacro.Dataset.prototype.destroy.call"
      ]
    },
    {
      "name": "_pNormalDataset.set_url",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pNormalDataset.set_arguments",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pNormalDataset.set_firefirstcount",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pNormalDataset.set_firenextcount",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pNormalDataset.set_progressload",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pNormalDataset.set_preload",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pNormalDataset.set_serverdatasetid",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pNormalDataset._getRowcount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pNormalDataset.on_notify_onload_dataobject",
      "params": [
        "/*dataobj",
        "reason*/"
      ],
      "calls": [
        "this._loadDataObject"
      ]
    },
    {
      "name": "_pNormalDataset.on_notify_onvaluechanged_dataobject",
      "params": [
        "dataobject",
        "evtinfo"
      ],
      "calls": [
        "this.__getParsedRow",
        "this._getColIDFromDataobjectkey",
        "this._isUpdatedBinddata",
        "this._setColumn",
        "this.loadFromDataObject"
      ]
    },
    {
      "name": "_pNormalDataset._getColIDFromDataobjectkey",
      "params": [
        "key"
      ],
      "calls": []
    },
    {
      "name": "_pNormalDataset.on_notify_ondatachanged_dataobject",
      "params": [
        "dataobject",
        "evtinfo"
      ],
      "calls": [
        "rawRecords.splice",
        "this._addDataObjectRowData",
        "this._adjustRawIdx",
        "this._appendRow",
        "this._copyDataObjectRowData",
        "this._deleteRow",
        "this._forcesetRowPosition",
        "this._isUpdatedBinddata",
        "this._reFilter",
        "this._resetSortGroup",
        "this._setRowPosition",
        "this.addRow",
        "this.deleteRow",
        "this.loadFromDataObject",
        "this.on_fire_onrowsetchanged",
        "viewRecords.splice"
      ]
    },
    {
      "name": "_pNormalDataset._isUpdatedBinddata",
      "params": [
        "changeddatapath"
      ],
      "calls": [
        "datapath.indexOf"
      ]
    },
    {
      "name": "_pNormalDataset._copyDataObjectRowData",
      "params": [
        "destRow",
        "srcRow"
      ],
      "calls": [
        "Object.keys",
        "nexacro.__forLoop",
        "this._getPath"
      ]
    },
    {
      "name": "_pNormalDataset._addDataObjectRowData",
      "params": [
        "destRow",
        "srcRow"
      ],
      "calls": [
        "nexacro.__forLoop",
        "this._getPath"
      ]
    },
    {
      "name": "_pNormalDataset._getPath",
      "params": [
        "arr"
      ],
      "calls": []
    },
    {
      "name": "_pNormalDataset._getPathFromColinfo",
      "params": [
        "colinfo"
      ],
      "calls": [
        "colinfo._p_datapath.match"
      ]
    },
    {
      "name": "_pNormalDataset.set_binddataobject",
      "params": [
        "str"
      ],
      "calls": [
        "binddataobject._setEventHandler",
        "prev_binddataobject._removeBindDataset",
        "prev_binddataobject._removeEventHandler",
        "this._findDataObject",
        "this.on_apply_binddataobject"
      ]
    },
    {
      "name": "_pNormalDataset.on_apply_binddataobject",
      "params": [],
      "calls": [
        "this._binddataobject._addbindDataset",
        "this._loadDataObject"
      ]
    },
    {
      "name": "_pNormalDataset._on_apply_binddataobject",
      "params": [],
      "calls": [
        "binddataobject._setEventHandler",
        "this._findDataObject"
      ]
    },
    {
      "name": "_pNormalDataset.set_dataobjectpath",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_dataobjectpath"
      ]
    },
    {
      "name": "_pNormalDataset.on_apply_dataobjectpath",
      "params": [
        "v"
      ],
      "calls": [
        "this._loadDataObject"
      ]
    },
    {
      "name": "_pNormalDataset.set_dataobjectbindmode",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pNormalDataset.load",
      "params": [
        "async",
        "datatype"
      ],
      "calls": [
        "loadmanager.loadDataModule",
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "this._endLoad",
        "this._refform._getRefFormBaseUrl"
      ]
    },
    {
      "name": "_pNormalDataset.append",
      "params": [
        "url"
      ],
      "calls": [
        "this._append"
      ]
    },
    {
      "name": "_pNormalDataset._append",
      "params": [
        "svcurl",
        "async",
        "datatype"
      ],
      "calls": [
        "loadmanager.loadDataModule",
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "this._endLoad",
        "this._refform._getRefFormBaseUrl"
      ]
    },
    {
      "name": "_pNormalDataset.on_preload_data",
      "params": [
        "url",
        "errstatus",
        "data",
        "fireerrorcode",
        "returncode",
        "requesturi",
        "locationuri",
        "extramsg"
      ],
      "calls": [
        "keys.join",
        "keys.push",
        "nexacro.TransactionItem",
        "nexacro._onHttpSystemError",
        "tritem._loadFromData"
      ]
    },
    {
      "name": "_pNormalDataset._findDataObject",
      "params": [
        "id"
      ],
      "calls": [
        "this._refform.lookup"
      ]
    },
    {
      "name": "_pNormalDataset._loadDataObject",
      "params": [
        "fireevent",
        "reason"
      ],
      "calls": [
        "manager._notifyTrigger",
        "nexacro.Component.prototype._getRootComponent.call",
        "this._findDataObject",
        "this._forcesetRowPosition",
        "this._loadFromJSONObject",
        "this._reFilter",
        "this._resetSortGroup",
        "this.on_fire_onload",
        "view.getViewDataset"
      ]
    }
  ],
  "DateField.js": [
    {
      "name": "nexacro.DateField",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.TextField.call",
        "nexacro._EditMaskTypeDate"
      ]
    },
    {
      "name": "_pDateField.on_create_contents",
      "params": [],
      "calls": [
        "input_elem.setElementInputType",
        "maskobj.setInputMode",
        "maskobj.setUseEditBuffer",
        "nexacro.TextField.prototype.on_create_contents.call",
        "nexacro._isDesktop",
        "nexacro._isHybrid",
        "nexacro._isMobile",
        "this._getInputElement",
        "this.on_apply_iconbuttonsize",
        "this.on_apply_usedropbutton"
      ]
    },
    {
      "name": "_pDateField.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.TextField.prototype.on_created_contents.call"
      ]
    },
    {
      "name": "_pDateField.on_after_created_ext",
      "params": [],
      "calls": [
        "control_elem.setElementAccessibilityStatHidden",
        "nexacro.TextField.prototype.on_after_created_ext.call",
        "this._getLocale",
        "this._on_apply_expr",
        "this._setAccessibilityActiveDescendant",
        "this.getElement",
        "this.on_apply_displaynulltext",
        "this.on_apply_locale",
        "this.on_apply_readonly",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pDateField.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.TextField.prototype.on_destroy_contents.call",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pDateField._correctInvalidValue",
      "params": [
        "value"
      ],
      "calls": [
        "this._masktypeobj.changeNormalizeValue",
        "value.replace"
      ]
    },
    {
      "name": "_pDateField.on_input_focus",
      "params": [],
      "calls": [
        "this._selectAll",
        "this._setDatePickerValue",
        "this._setInitCaret",
        "this._showPopup"
      ]
    },
    {
      "name": "_pDateField._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.setElementFocus",
        "input_elem.setElementSetSelect",
        "input_elem.setElementText",
        "input_elem.setElementValue",
        "maskobj.setEditStatus",
        "nexacro._notifyAccessibilityInputElement",
        "this._clearTypingRange",
        "this._findRangeFromPos",
        "this._getAccessibilityReadLabel",
        "this._getEmptyText",
        "this._getMaskObj",
        "this._isComponentKeydownAction",
        "this._makeBufferTextFromValue"
      ]
    },
    {
      "name": "_pDateField._setEventHandlerToTrailingButton",
      "params": [],
      "calls": [
        "dropbutton._setEventHandler"
      ]
    },
    {
      "name": "_pDateField.set_inputtype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_inputtype",
        "this.on_apply_value",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pDateField._makeAMPM",
      "params": [],
      "calls": [
        "nexacro.Locale._getAmPm"
      ]
    },
    {
      "name": "_pDateField.on_apply_inputtype",
      "params": [],
      "calls": [
        "editformat.indexOf",
        "input_elem.setElementInputType",
        "nexacro.Locale._makeDateMaskStringFromIntl",
        "nexacro.Locale._makeTimeMaskStringFromIntl",
        "nexacro._EditInputType",
        "this._analyzeFormatRange",
        "this._getEmptyText",
        "this._getInputElement",
        "this._makeAMPM",
        "this._masktypeobj.setDateMask",
        "this._masktypeobj.setEditMask",
        "this._p_format.indexOf",
        "this._p_inputtype.indexOf"
      ]
    },
    {
      "name": "_pDateField.set_maskchar",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDateField.set_invalidvalueaction",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDateField.set_useheadline",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDateField.set_headlinedateformat",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDateField.set_headlinetimeformat",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDateField.set_headlineposition",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDateField.set_headlinesize",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDateField.set_closebuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pDateField.set_okbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_okbuttontext"
      ]
    },
    {
      "name": "_pDateField.on_apply_okbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "datepicker.set_okbuttontext"
      ]
    },
    {
      "name": "_pDateField.set_cancelbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_cancelbuttontext"
      ]
    },
    {
      "name": "_pDateField.on_apply_cancelbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "datepicker.set_cancelbuttontext"
      ]
    },
    {
      "name": "_pDateField.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem._getInputValue",
        "this._checkApplyValidate",
        "this._convertToDateObject",
        "this._convertValueType",
        "this._getCurrentDateVal",
        "this._getInputElement",
        "this._invalidStatus",
        "this._makeBufferTextFromValue",
        "this._setValue",
        "this._validStatus",
        "this.applyto_bindSource",
        "this.on_invalid",
        "this.on_valid",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pDateField._setValue",
      "params": [
        "v",
        "no_chk_valid",
        "check"
      ],
      "calls": [
        "this._checkApplyValidate",
        "this._clearTypingRange",
        "this._convertToDateObject",
        "this._convertValueType",
        "this._invalidStatus",
        "this._validStatus",
        "this.on_apply_value",
        "this.on_invalid",
        "this.on_valid"
      ]
    },
    {
      "name": "_pDateField.on_apply_value",
      "params": [
        "value",
        "check"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.setElementSetSelect",
        "input_elem.setElementText",
        "input_elem.setElementValue",
        "nexacro._isNull",
        "nexacro._toString",
        "this._checkApplyValidate",
        "this._findRangeFromPos",
        "this._getEmptyText",
        "this._getInputElement",
        "this._isContainsText",
        "this._isFocused",
        "this._makeBufferTextFromValue",
        "this._refreshLabel",
        "this._setLabelFloating",
        "this._updateAccessibilityLabel",
        "this.getDisplayText"
      ]
    },
    {
      "name": "_pDateField._on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "exprfn.call",
        "nexacro.Date",
        "nexacro._toString",
        "this._convertToDateObject",
        "this._convertValueType",
        "this._isInvalidValue",
        "this._p_expr.substring",
        "this.on_apply_prop_accessibilitylabel",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pDateField.on_apply_text",
      "params": [
        "v"
      ],
      "calls": [
        "expr.substring",
        "nexacro.Date",
        "this._convertToDateObject",
        "this._convertValueType",
        "this._isInvalidValue",
        "this.on_apply_value",
        "this.set_value"
      ]
    },
    {
      "name": "_pDateField.set_usedropbutton",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usedropbutton"
      ]
    },
    {
      "name": "_pDateField.on_apply_usedropbutton",
      "params": [],
      "calls": [
        "this.set_usetrailingbutton"
      ]
    },
    {
      "name": "_pDateField._isInvalidValue",
      "params": [
        "v"
      ],
      "calls": [
        "dateobj._isInvalidDate",
        "dateobj.getFullYear",
        "dateobj.valueOf",
        "nexacro._isNull",
        "this._convertToDateObject"
      ]
    },
    {
      "name": "_pDateField._checkApplyValidate",
      "params": [
        "value"
      ],
      "calls": [
        "this._isInvalidValue"
      ]
    },
    {
      "name": "_pDateField.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._setValue"
      ]
    },
    {
      "name": "_pDateField.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "dateobj.toString",
        "ds.getColumn",
        "maskobj.changeNormalizeValue",
        "maskobj.setDate",
        "this._checkApplyValidate",
        "this._convertToDateObject",
        "this._convertValueType",
        "this._invalidStatus",
        "this._isInvalidValue",
        "this._makeBufferTextFromValue",
        "this._on_apply_text",
        "this._setValue",
        "this._validStatus",
        "this.on_apply_value",
        "this.on_invalid",
        "this.on_valid"
      ]
    },
    {
      "name": "_pDateField._beginValueChange",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateField._finalValueChange",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateField._convertToDateObject",
      "params": [
        "v"
      ],
      "calls": [
        "dateobj.getDate",
        "dateobj.getFullYear",
        "dateobj.getHours",
        "dateobj.getMilliseconds",
        "dateobj.getMinutes",
        "dateobj.getMonth",
        "dateobj.getSeconds",
        "dateobj.valueOf",
        "maskobj.convertToDateObject",
        "nexacro.Date",
        "nexacro._isNull",
        "nexacro._toString",
        "this.on_apply_inputtype",
        "v.substr"
      ]
    },
    {
      "name": "_pDateField._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey/*",
        "shiftKey*/"
      ],
      "calls": []
    },
    {
      "name": "_pDateField._getCurrentDateStr",
      "params": [],
      "calls": [
        "maskobj.applyMask",
        "this._getCurrentDateVal"
      ]
    },
    {
      "name": "_pDateField._getCurrentDateVal",
      "params": [],
      "calls": [
        "maskobj.getCurrentDate",
        "maskobj.getEditFormatType",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pDateField._setLocale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pDateField._setInitCaret",
      "params": [],
      "calls": [
        "input_elem.setElementFocus",
        "this._input_element.setElementBlur",
        "this._isPopupVisible",
        "this._popupcontrol._attached_comp._setFocus",
        "this.setSelect"
      ]
    },
    {
      "name": "_pDateField._getDateMaskObj",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateField._getCurrentDate",
      "params": [],
      "calls": [
        "maskobj.getCurrentDate"
      ]
    },
    {
      "name": "_pDateField._getFormatType",
      "params": [],
      "calls": [
        "maskobj.getEditFormatType"
      ]
    },
    {
      "name": "_pDateField._getEndDay",
      "params": [
        "y",
        "m"
      ],
      "calls": [
        "maskobj.getEndDay"
      ]
    },
    {
      "name": "_pDateField._isPopupVisible",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateField.set_popuptype",
      "params": [
        "v"
      ],
      "calls": [
        "popuptype_enum.indexOf",
        "this.on_apply_popuptype"
      ]
    },
    {
      "name": "_pDateField.on_apply_popuptype",
      "params": [],
      "calls": [
        "maskobj.setInputMode",
        "maskobj.setUseEditBuffer",
        "nexacro._isDesktop",
        "nexacro._isHybrid",
        "nexacro._isMobile"
      ]
    },
    {
      "name": "_pDateField.set_popupsize",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDateField.set_displayformat",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_displayformat",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pDateField.on_apply_displayformat",
      "params": [],
      "calls": [
        "maskobj.setDateMask",
        "nexacro.Locale._makeDateMaskStringFromIntl",
        "nexacro.Locale._makeTimeMaskStringFromIntl",
        "this._p_displayformat.indexOf",
        "this._p_inputtype.indexOf",
        "this.on_apply_inputtype"
      ]
    },
    {
      "name": "_pDateField.set_format",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_format",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pDateField.on_apply_format",
      "params": [],
      "calls": [
        "this.on_apply_inputtype"
      ]
    },
    {
      "name": "_pDateField.set_innerdataset",
      "params": [
        "v"
      ],
      "calls": [
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset"
      ]
    },
    {
      "name": "_pDateField.on_apply_innerdataset",
      "params": [
        "ds"
      ],
      "calls": [
        "ds._setEventHandler",
        "this._p_datetimepicker.set_innerdataset"
      ]
    },
    {
      "name": "_pDateField._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset"
      ]
    },
    {
      "name": "_pDateField.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateField.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pDateField._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pDateField.set_backgroundcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_backgroundcolumn"
      ]
    },
    {
      "name": "_pDateField.on_apply_backgroundcolumn",
      "params": [],
      "calls": [
        "this._p_datetimepicker.set_backgroundcolumn"
      ]
    },
    {
      "name": "_pDateField.set_bordercolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_bordercolumn"
      ]
    },
    {
      "name": "_pDateField.on_apply_bordercolumn",
      "params": [],
      "calls": [
        "this._p_datetimepicker.set_bordercolumn"
      ]
    },
    {
      "name": "_pDateField.set_datecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datecolumn"
      ]
    },
    {
      "name": "_pDateField.on_apply_datecolumn",
      "params": [],
      "calls": [
        "this._p_datetimepicker.set_datecolumn"
      ]
    },
    {
      "name": "_pDateField.set_textcolorcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_textcolorcolumn"
      ]
    },
    {
      "name": "_pDateField.on_apply_textcolorcolumn",
      "params": [],
      "calls": [
        "this._p_datetimepicker.set_textcolorcolumn"
      ]
    },
    {
      "name": "_pDateField.set_hintingcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_hintingcolumn"
      ]
    },
    {
      "name": "_pDateField.on_apply_hintingcolumn",
      "params": [],
      "calls": [
        "this._p_datetimepicker.set_hintingcolumn"
      ]
    },
    {
      "name": "_pDateField.set_readonlycolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_readonlycolumn"
      ]
    },
    {
      "name": "_pDateField.on_apply_readonlycolumn",
      "params": [],
      "calls": [
        "this._p_datetimepicker.set_readonlycolumn"
      ]
    },
    {
      "name": "_pDateField._makeCalendarText",
      "params": [
        "value"
      ],
      "calls": [
        "date.charAt",
        "mask.charAt",
        "matchStr.indexOf",
        "this._makeDateObj",
        "this._makeMask",
        "this._makeMaskValue",
        "this._on_apply_mask",
        "value.toString"
      ]
    },
    {
      "name": "_pDateField._isValidDate",
      "params": [
        "val",
        "editmask_type",
        "edit_type_buf"
      ],
      "calls": [
        "maskobj.getEndDay",
        "val.substr"
      ]
    },
    {
      "name": "_pDateField._on_getDisplayText",
      "params": [],
      "calls": [
        "this._makeBufferTextFromValue"
      ]
    },
    {
      "name": "_pDateField._isContainsText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateField.dropdown",
      "params": [],
      "calls": [
        "this._isPopupVisible",
        "this._setFocus",
        "this._setInitCaret",
        "this._showPopup"
      ]
    },
    {
      "name": "_pDateField.isDropdown",
      "params": [],
      "calls": [
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pDateField._analyzeFormatRange",
      "params": [],
      "calls": [
        "format.indexOf",
        "format.replace",
        "format.trim",
        "range.ampm.format.toLowerCase",
        "range.day.format.toUpperCase",
        "range.hour.format.toLowerCase",
        "range.min.format.toLowerCase",
        "range.month.format.toUpperCase",
        "range.msec.format.toLowerCase",
        "range.sec.format.toLowerCase",
        "range.week.format.toUpperCase",
        "range.year.format.toUpperCase",
        "this._masktypeobj.setEditMask",
        "this._ranges_order.push",
        "this._ranges_order.sort"
      ]
    },
    {
      "name": "_pDateField._setRangetext",
      "params": [
        "text",
        "range"
      ],
      "calls": []
    },
    {
      "name": "_pDateField._clearRangeBuffers",
      "params": [],
      "calls": [
        "editformat.indexOf"
      ]
    },
    {
      "name": "_pDateField._arrangeRangeBeginPos",
      "params": [
        "range",
        "adjust"
      ],
      "calls": []
    },
    {
      "name": "_pDateField._replaceRangeInputText",
      "params": [
        "input_elem",
        "text",
        "range"
      ],
      "calls": [
        "input_elem.replaceElementText",
        "this._arrangeRangeBeginPos"
      ]
    },
    {
      "name": "_pDateField._replaceRangeBufferText",
      "params": [
        "text",
        "range"
      ],
      "calls": [
        "this._replaceRangeInputText",
        "this._setRangetext"
      ]
    },
    {
      "name": "_pDateField._getLastDay",
      "params": [
        "year",
        "month"
      ],
      "calls": []
    },
    {
      "name": "_pDateField._getDayOfWeekText",
      "params": [
        "year",
        "month",
        "day"
      ],
      "calls": [
        "dt.toLocaleWeekDayString",
        "nexacro.Date"
      ]
    },
    {
      "name": "_pDateField._replaceRangeDate",
      "params": [
        "text",
        "range"
      ],
      "calls": [
        "this._getDayOfWeekText",
        "this._getLastDay",
        "this._padNumberWithZero",
        "this._replaceRangeInputText",
        "this._setRangetext",
        "this.setSelect"
      ]
    },
    {
      "name": "_pDateField._cancelValue",
      "params": [],
      "calls": [
        "this._setValue"
      ]
    },
    {
      "name": "_pDateField._confirmValue",
      "params": [],
      "calls": [
        "input_elem._getInputValue",
        "this._getEmptyText",
        "this._getInputElement",
        "this._invalidStatus",
        "this._makeBufferTextFromValue",
        "this._makeValueFromBuffer",
        "this._on_value_change",
        "this.on_valid"
      ]
    },
    {
      "name": "_pDateField._validateValueLength",
      "params": [
        "value",
        "inputtype"
      ],
      "calls": [
        "value.substring"
      ]
    },
    {
      "name": "_pDateField._makeValueFromBuffer",
      "params": [
        "b_invalid_correct",
        "no_adjust"
      ],
      "calls": [
        "preval.substring",
        "this._format.indexOf",
        "this._getLastDay",
        "this._input_type.indexOf",
        "this._padNumberWithZero",
        "value.substring"
      ]
    },
    {
      "name": "_pDateField._procEmptyValue",
      "params": [
        "val",
        "range"
      ],
      "calls": [
        "val.replace"
      ]
    },
    {
      "name": "_pDateField._makeBufferTextFromValue",
      "params": [
        "value",
        "is_display",
        "inputtype",
        "no_adjust"
      ],
      "calls": [
        "dt.toLocaleMonthString",
        "dt.toLocaleWeekDayString",
        "format.indexOf",
        "format.replace",
        "inputtype.indexOf",
        "nexacro.Date",
        "nexacro.Locale.getLocaleInfo",
        "text.replace",
        "this._clearRangeBuffers",
        "this._getEmptyText",
        "this._getLastDay",
        "this._padNumberWithZero",
        "this._procEmptyValue",
        "this._replaceRangeBufferText",
        "this._validateValueLength",
        "this.getValidStatus",
        "value.substring",
        "year.substring"
      ]
    },
    {
      "name": "_pDateField._padNumberWithZero",
      "params": [
        "number",
        "length"
      ],
      "calls": [
        "padded_number.padLeft"
      ]
    },
    {
      "name": "_pDateField._findRangeFromPos",
      "params": [
        "pos"
      ],
      "calls": []
    },
    {
      "name": "_pDateField._findNextRange",
      "params": [
        "endpos",
        "area"
      ],
      "calls": [
        "this._findRangeFromPos",
        "this._input_element._getInputValue"
      ]
    },
    {
      "name": "_pDateField._findPrevRange",
      "params": [
        "begpos",
        "area"
      ],
      "calls": [
        "this._findRangeFromPos"
      ]
    },
    {
      "name": "_pDateField.set_locale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pDateField.on_apply_locale",
      "params": [
        "locale"
      ],
      "calls": [
        "maskobj.setLocale",
        "this._makeAMPM",
        "this.on_apply_displayformat",
        "this.on_apply_format"
      ]
    },
    {
      "name": "_pDateField.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.set_visible.call",
        "this._closePopup",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pDateField.getYear",
      "params": [],
      "calls": [
        "dateobj.getFullYear",
        "this._convertToDateObject"
      ]
    },
    {
      "name": "_pDateField.getMonth",
      "params": [],
      "calls": [
        "dateobj.getMonth",
        "this._convertToDateObject"
      ]
    },
    {
      "name": "_pDateField.getDay",
      "params": [],
      "calls": [
        "dateobj.getDate",
        "this._convertToDateObject"
      ]
    },
    {
      "name": "_pDateField.getDayOfWeek",
      "params": [],
      "calls": [
        "dateobj.getDay",
        "this._convertToDateObject"
      ]
    },
    {
      "name": "_pDateField._getPopupSizeArr",
      "params": [],
      "calls": [
        "nexacro._getMobileOrientation",
        "size.split"
      ]
    },
    {
      "name": "_pDateField._getElementPosition",
      "params": [],
      "calls": [
        "nexacro._getElementPositionInFrame",
        "this.getElement"
      ]
    },
    {
      "name": "_pDateField._updatePopupControlPosition",
      "params": [],
      "calls": [
        "popup_control_elem.setElementPosition",
        "popupcontrol.getElement",
        "this._getElementPosition",
        "this._getHelperLineHeight",
        "this.getElement"
      ]
    },
    {
      "name": "_pDateField._createDatePicker",
      "params": [],
      "calls": [
        "datepicker._setControl",
        "datepicker._setPopupContains",
        "datepicker.createComponent",
        "datepicker.destroy",
        "datepicker.set_displaymonthcount",
        "datepicker.set_displaytype",
        "datepicker.set_type",
        "nexacro.DateRangePicker"
      ]
    },
    {
      "name": "_pDateField._createPopupControl",
      "params": [],
      "calls": [
        "nexacro._DateFieldPopupControl",
        "popupcontrol.createComponent"
      ]
    },
    {
      "name": "_pDateField._createPopupDatePickerControl",
      "params": [],
      "calls": [
        "datepicker.on_created",
        "datepicker.set_locale",
        "datepicker.set_useheadline",
        "popupcontrol._attach",
        "popupcontrol.on_created",
        "this._applyDatePickerProps",
        "this._createDatePicker",
        "this._createPopupControl",
        "this._setEventHandlerToDatePicker"
      ]
    },
    {
      "name": "_pDateField._applyDatePickerProps",
      "params": [],
      "calls": [
        "datepicker._setEnable",
        "datepicker.on_apply_value",
        "datepicker.set_backgroundcolumn",
        "datepicker.set_bordercolumn",
        "datepicker.set_cancelbuttontext",
        "datepicker.set_closebuttonsize",
        "datepicker.set_closebuttontext",
        "datepicker.set_datecolumn",
        "datepicker.set_headlinedateformat",
        "datepicker.set_headlineposition",
        "datepicker.set_headlinesize",
        "datepicker.set_headlinetimeformat",
        "datepicker.set_hintingcolumn",
        "datepicker.set_innerdataset",
        "datepicker.set_locale",
        "datepicker.set_okbuttontext",
        "datepicker.set_readonly",
        "datepicker.set_readonlycolumn",
        "datepicker.set_startdate",
        "datepicker.set_textcolorcolumn"
      ]
    },
    {
      "name": "_pDateField._setEventHandlerToDatePicker",
      "params": [],
      "calls": [
        "datepicker._setEventHandler"
      ]
    },
    {
      "name": "_pDateField._on_datepicker_ondayclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pDateField._on_datepicker_onchanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._makeBufferTextFromValue",
        "this._on_value_change"
      ]
    },
    {
      "name": "_pDateField._releaseCaptureLock",
      "params": [],
      "calls": [
        "_window._releaseCaptureLock",
        "this._getWindow"
      ]
    },
    {
      "name": "_pDateField._on_datepicker_oncloseup",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._box._trailbutton._changeStatus",
        "this._changeStatus",
        "this._closePopup",
        "this._input_element.setElementFocus",
        "this._isPopupVisible",
        "this._makeBufferTextFromValue",
        "this._on_value_change",
        "this._releaseCaptureLock",
        "this.on_fire_oncloseup"
      ]
    },
    {
      "name": "_pDateField.on_fire_ondayclick",
      "params": [
        "postdate"
      ],
      "calls": [
        "nexacro.DateFieldDayClickEventInfo",
        "this.ondayclick._fireEvent"
      ]
    },
    {
      "name": "_pDateField._showPopup",
      "params": [],
      "calls": [
        "Math.round",
        "_window._setCaptureLock",
        "control_elem.setElementAccessibilityActiveDescendant",
        "frame.getElement",
        "nexacro._getDevicePixelRatio",
        "nexacro._getElementPositionInFrame",
        "popupcontrol._getPopupParentPos",
        "popupcontrol._popup",
        "popupcontrol._popupBy",
        "this._createPopupDatePickerControl",
        "this._getElementPosition",
        "this._getHelperLineHeight",
        "this._getPopupSizeArr",
        "this._getWindow",
        "this.getElement",
        "this.on_fire_ondropdown"
      ]
    },
    {
      "name": "_pDateField._applyZoomPopup",
      "params": [],
      "calls": [
        "this._isPopupVisible",
        "this._showPopup"
      ]
    },
    {
      "name": "_pDateField._closePopup",
      "params": [
        "autoskip",
        "no_apply"
      ],
      "calls": [
        "nexacro._closeSystemCalendar",
        "popupcontrol._closePopup",
        "this._input_element.setElementFocus",
        "this._setFocusToNextComponent"
      ]
    },
    {
      "name": "_pDateField._convertValueType",
      "params": [
        "v",
        "dateobj",
        "bapplyrule"
      ],
      "calls": [
        "nexacro._getDatatypeRule",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pDateField.on_keydown_default_specialkey_process",
      "params": [
        "keycode"
      ],
      "calls": [
        "nexacro.TextField.prototype.on_keydown_default_specialkey_process.call"
      ]
    },
    {
      "name": "_pDateField._on_value_change",
      "params": [
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "this._beginValueChange",
        "this._checkApplyValidate",
        "this._closePopup",
        "this._finalValueChange",
        "this._invalidStatus",
        "this._isPopupVisible",
        "this._setValue",
        "this._updateAccessibilityLabel",
        "this._validStatus",
        "this.applyto_bindSource",
        "this.on_apply_value",
        "this.on_fire_canchange",
        "this.on_fire_onchanged",
        "this.on_invalid",
        "this.on_valid"
      ]
    },
    {
      "name": "_pDateField.on_fire_onchanged",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pDateField.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.EditClickEventInfo",
        "this._getClientXY",
        "this._on_edit_oneditclick",
        "this.getCaretPos",
        "this.oneditclick._fireEvent"
      ]
    },
    {
      "name": "_pDateField._on_edit_oneditclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._isDesktop",
        "nexacro._isHybrid",
        "nexacro._isMobile",
        "nexacro._openSystemCalendar",
        "this._box._trailbutton._control_element.setElementFocus",
        "this._getConfirmValue",
        "this._setDatePickerValue",
        "this._setInitCaret",
        "this._showPopup",
        "this.getElement",
        "this.on_fire_ondropdown"
      ]
    },
    {
      "name": "_pDateField._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oninnerdatachanged"
      ]
    },
    {
      "name": "_pDateField.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pDateField._on_notify_mobile_valuechanged",
      "params": [
        "v"
      ],
      "calls": [
        "maskobj.changeNormalizeValue",
        "maskobj.changeNormalizeValueFromBuffer",
        "this._makeBufferTextFromValue",
        "this._on_value_change",
        "this._setCalendarEditValue",
        "this.on_fire_oninput"
      ]
    },
    {
      "name": "_pDateField.on_keyinput_basic_action",
      "params": [
        "input_text"
      ],
      "calls": [
        "cur_value.substr",
        "this._getEmptyText",
        "this._input_element._getInputValue",
        "this._isEnable",
        "this._isPopupVisible",
        "this._makeBufferTextFromValue",
        "this._makeValueFromBuffer",
        "this._on_value_change",
        "this._setDatePickerValue",
        "this._updateAccessibilityLabel",
        "this.set_value",
        "time_val.slice",
        "time_val.substr"
      ]
    },
    {
      "name": "_pDateField.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.InputEventInfo",
        "this._checkInputValidate",
        "this._invalidStatus",
        "this._validStatus",
        "this.on_invalid",
        "this.on_valid",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pDateField._getRangeMaxVal",
      "params": [
        "range"
      ],
      "calls": [
        "this._getLastDay"
      ]
    },
    {
      "name": "_pDateField._getRangeMinVal",
      "params": [
        "range"
      ],
      "calls": []
    },
    {
      "name": "_pDateField._clearTypingRange",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateField.on_keydown_basic_process",
      "params": [
        "keycode",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "refercomp",
        "metakey"
      ],
      "calls": [
        "input_elem.stopSysEvent",
        "input_handle.blur",
        "input_handle.focus"
      ]
    },
    {
      "name": "_pDateField.on_keydown_default_process",
      "params": [
        "keycode",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "refercomp",
        "metakey"
      ],
      "calls": [
        "input_elem._getInputValue",
        "input_elem.getElementCaretPos",
        "input_elem.stopSysEvent",
        "input_value.substring",
        "num.toString",
        "pre_n.toString",
        "range.format.replace",
        "s_max.substring",
        "this._cancelValue",
        "this._clearTypingRange",
        "this._closePopup",
        "this._completeRangeDate",
        "this._confirmValue",
        "this._findNextRange",
        "this._findPrevRange",
        "this._findRangeFromPos",
        "this._getRangeMaxVal",
        "this._getRangeMinVal",
        "this._input_element._getInputValue",
        "this._input_element.stopSysEvent",
        "this._isChar",
        "this._isEnable",
        "this._isPopupVisible",
        "this._on_input_autoskip",
        "this._p_datetimepicker._datepicker_group.on_keydown_basic_action",
        "this._p_datetimepicker._timepicker_group.on_keydown_basic_action",
        "this._p_datetimepicker.on_keydown_basic_action",
        "this._padNumberWithZero",
        "this._replaceRangeDate",
        "this._replaceRangeInputText",
        "this._selectAll",
        "this._setDatePickerValue",
        "this._setInitCaret",
        "this._setRangetext",
        "this._showPopup",
        "this.setSelect"
      ]
    },
    {
      "name": "_pDateField.on_keyup_default_action",
      "params": [
        "keycode",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "refercomp",
        "metakey"
      ],
      "calls": []
    },
    {
      "name": "_pDateField.__debugBuffer",
      "params": [
        "textcomp"
      ],
      "calls": [
        "nexacro._OnceCallbackTimer.callonce",
        "textcomp.set_value"
      ]
    },
    {
      "name": "_pDateField.__debugPasteBuffer",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateField.__debugSelectBuffer",
      "params": [
        "textcomp"
      ],
      "calls": [
        "nexacro._OnceCallbackTimer.callonce",
        "textcomp.set_value"
      ]
    },
    {
      "name": "_pDateField._completeRangeDate",
      "params": [],
      "calls": [
        "input_value.substring",
        "this._input_element._getInputValue",
        "this._padNumberWithZero",
        "this._replaceRangeDate"
      ]
    },
    {
      "name": "_pDateField._getCurrentSelectRange",
      "params": [],
      "calls": [
        "input_element.getElementCaretPos",
        "this._findRangeFromPos"
      ]
    },
    {
      "name": "_pDateField._on_input_autoskip",
      "params": [],
      "calls": [
        "this._getCurrentSelectRange",
        "this._setFocusToNextComponent"
      ]
    },
    {
      "name": "_pDateField._beforeinput_process_with_HTMLEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "input_elem._getInputValue",
        "input_value.substring",
        "maskobj.applyMaskEx",
        "maskobj.arrangeMask",
        "maskobj.findNearEditablePos",
        "maskobj.isFilterCharEx",
        "ret.push",
        "this._getMaskObj",
        "this._on_paste",
        "this.on_invalid"
      ]
    },
    {
      "name": "_pDateField._beforeinput_process_with_NexacroInputEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "input_elem.setElementValue",
        "input_elem.stopSysEvent",
        "input_text.split",
        "maskobj.applyMask",
        "maskobj.getCurrentText",
        "maskobj.removeMask",
        "this._cancelValue",
        "this._getMaskObj",
        "this._on_paste",
        "this.on_invalid",
        "value.substring"
      ]
    },
    {
      "name": "_pDateField._setDatePickerValue",
      "params": [
        "value"
      ],
      "calls": [
        "datepicker.set_startdate"
      ]
    },
    {
      "name": "_pDateField._on_dblclick",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype._on_dblclick.call",
        "this._selectAreaWidthCurPos"
      ]
    },
    {
      "name": "_pDateField._selectAll",
      "params": [],
      "calls": [
        "this.setSelect"
      ]
    },
    {
      "name": "_pDateField._selectAreaWidthCurPos",
      "params": [],
      "calls": [
        "this._findRangeFromPos",
        "this._input_element.getElementCaretPos",
        "this._selectDate",
        "this._selectTime"
      ]
    },
    {
      "name": "_pDateField._selectDate",
      "params": [],
      "calls": [
        "this._setAreaSelect"
      ]
    },
    {
      "name": "_pDateField._selectTime",
      "params": [],
      "calls": [
        "this._setAreaSelect"
      ]
    },
    {
      "name": "_pDateField.setSelect",
      "params": [
        "start",
        "end",
        "_no_adjust"
      ],
      "calls": [
        "nexacro.TextField.prototype.setSelect.call",
        "this._initSelectRanges",
        "this._isPopupVisible",
        "this._p_datetimepicker._changeTab"
      ]
    },
    {
      "name": "_pDateField._setAreaSelect",
      "params": [
        "area",
        "no_input_select"
      ],
      "calls": [
        "nexacro.TextField.prototype.setSelect.call",
        "select_ranges.push"
      ]
    },
    {
      "name": "_pDateField._initSelectRanges",
      "params": [],
      "calls": [
        "input_elem.getElementCaretPos",
        "this._findNextRange",
        "this._findPrevRange",
        "this._findRangeFromPos",
        "this._select_ranges.concat",
        "this._select_ranges.push"
      ]
    },
    {
      "name": "_pDateField._on_paste",
      "params": [
        "value"
      ],
      "calls": [
        "adjust_value.slice",
        "format.includes",
        "nexacro._OnceCallbackTimer.callonce",
        "prev_value.substring",
        "select_area.indexOf",
        "select_format.charAt",
        "select_format.includes",
        "this._getLastDay",
        "this._input_element.getElementCaretPos",
        "this._input_element.setElementValue",
        "this._invalid_value.substring",
        "this._makeBufferTextFromValue",
        "this._makeValueFromBuffer",
        "this._p_value.substring",
        "this._padNumberWithZero",
        "this.setSelect",
        "value.charAt",
        "value.replace",
        "value.substring"
      ]
    },
    {
      "name": "_pDateField._startSelectionTimer",
      "params": [
        "applytime",
        "beg",
        "end"
      ],
      "calls": [
        "nexacro._CallbackTimer",
        "pthis._callbackSelectionTimer",
        "this._selectiontask.start",
        "this._stopSelectionTimer"
      ]
    },
    {
      "name": "_pDateField._stopSelectionTimer",
      "params": [],
      "calls": [
        "this._selectiontask.destroy"
      ]
    },
    {
      "name": "_pDateField._callbackSelectionTimer",
      "params": [
        "beg",
        "end"
      ],
      "calls": [
        "this._clearTypingRange",
        "this._completeRangeDate",
        "this._findRangeFromPos",
        "this._input_element.getElementCaretPos",
        "this._stopSelectionTimer",
        "this.setSelect"
      ]
    },
    {
      "name": "_pDateField._getConfirmValue",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "this._getCurrentDateVal"
      ]
    },
    {
      "name": "_pDateField.on_mousemove_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.TextField.prototype.on_mousemove_basic_action.call",
        "nexacro._OnceCallbackTimer.callonce",
        "this._input_element.getElementCaretPos",
        "this.setSelect"
      ]
    },
    {
      "name": "_pDateField.on_drag",
      "params": [
        "canvasX"
      ],
      "calls": [
        "this._stopSelectionTimer"
      ]
    },
    {
      "name": "_pDateField.on_lbuttondown_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.TextField.prototype.on_lbuttondown_default_action.call",
        "nexacro.TextField.prototype.setCaretPos.call",
        "this._closePopup",
        "this._input_element.getElementCaretPos",
        "this._input_element.stopSysEvent",
        "this._isEnable",
        "this._isPopupVisible",
        "this._startSelectionTimer"
      ]
    },
    {
      "name": "_pDateField.on_lbuttonup_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.TextField.prototype.on_lbuttonup_default_action.call",
        "nexacro._OnceCallbackTimer.callonce",
        "this._findNextRange",
        "this._findPrevRange",
        "this._input_element.getElementCaretPos",
        "this._input_element.setElementBlur",
        "this._isEnable",
        "this._stopSelectionTimer",
        "this.setSelect"
      ]
    },
    {
      "name": "_pDateField._on_drop_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._closePopup",
        "this._getConfirmValue",
        "this._isPopupVisible",
        "this._setDatePickerValue",
        "this._setInitCaret",
        "this._showPopup"
      ]
    },
    {
      "name": "_pDateField._on_drop_mobile_onclick",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "this._closePopup",
        "this._getConfirmValue",
        "this._isPopupVisible",
        "this._setDatePickerValue",
        "this._showPopup"
      ]
    },
    {
      "name": "_pDateField._on_drop_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._closePopup",
        "this._getConfirmValue",
        "this._isPopupVisible",
        "this._setDatePickerValue",
        "this._setInitCaret",
        "this._showPopup"
      ]
    },
    {
      "name": "_pDateField._getMaskObj",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateField._getEmptyText",
      "params": [],
      "calls": [
        "empty.replace",
        "format.replace"
      ]
    },
    {
      "name": "_pDateField.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.TextField.prototype.on_focus_basic_action.call"
      ]
    },
    {
      "name": "_pDateField.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "nexacro.TextField.prototype.on_killfocus_basic_action.call",
        "this._clearTypingRange",
        "this._closePopup",
        "this._completeRangeDate",
        "this._input_element.setElementValue",
        "this._isPopupVisible",
        "this.getDisplayText"
      ]
    },
    {
      "name": "_pDateField.on_fire_sys_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onmousewheel.call",
        "this._popupcontrol._is_popup"
      ]
    },
    {
      "name": "_pDateField.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslide.call",
        "this._updatePopupControlPosition"
      ]
    },
    {
      "name": "_pDateField.on_fire_sys_onfling",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onfling.call",
        "this._updatePopupControlPosition"
      ]
    },
    {
      "name": "_pDateField.on_fire_oncloseup",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.DateFieldCloseUpEventInfo",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pDateField.on_fire_ondropdown",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.Event",
        "this.ondropdown._fireCheckEvent"
      ]
    },
    {
      "name": "nexacro.DateFieldBox",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.TextFieldBox.call"
      ]
    },
    {
      "name": "_pDateFieldBox.on_lbuttondown_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_lbuttondown_default_action"
      ]
    },
    {
      "name": "_pDateFieldBox.on_lbuttonup_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_lbuttonup_default_action"
      ]
    },
    {
      "name": "_pDateFieldBox.on_beforekeyinput_basic_action",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "this._p_parent.on_beforekeyinput_basic_action"
      ]
    },
    {
      "name": "_pDateFieldBox._on_dblclick",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._p_parent._on_dblclick"
      ]
    },
    {
      "name": "_pDateFieldBox._on_drag",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro.TextFieldBox.prototype._on_drag.call",
        "this._p_parent.on_drag"
      ]
    },
    {
      "name": "_pDateFieldBox.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_onclick"
      ]
    },
    {
      "name": "nexacro._DateFieldPopupControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.PopupControl.call"
      ]
    },
    {
      "name": "_pDateFieldPopupControl._getPopupParentPos",
      "params": [],
      "calls": [
        "DateField.getElement",
        "nexacro._getElementPositionInFrame",
        "rootframe.getElement",
        "this._getRootFrame"
      ]
    },
    {
      "name": "nexacro.DateFieldDayClickEventInfo",
      "params": [
        "obj",
        "id",
        "date"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DateFieldCloseUpEventInfo",
      "params": [
        "obj",
        "id",
        "pretext",
        "posttext",
        "prevalue",
        "postvalue/*",
        "isselect*/"
      ],
      "calls": []
    }
  ],
  "DatePicker.js": [
    {
      "name": "nexacro.DatePickerControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pDatePickerControl.on_create_contents",
      "params": [],
      "calls": [
        "body.createComponent",
        "head.createComponent",
        "nexacro._DatePickerBodyControl",
        "nexacro._DatePickerHeadControl",
        "this.getElement",
        "this.on_apply_datepickerchangetype"
      ]
    },
    {
      "name": "_pDatePickerControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "body._setEventHandler",
        "body.on_created",
        "head._setEventHandler",
        "head.on_created",
        "this._recalcLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pDatePickerControl.on_create_contents_command",
      "params": [],
      "calls": [
        "body.createCommand",
        "head.createCommand"
      ]
    },
    {
      "name": "_pDatePickerControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "body._setEventHandler",
        "body.attachHandle",
        "head._setEventHandler",
        "head.attachHandle",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDatePickerControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this.body.destroy",
        "this.head.destroy"
      ]
    },
    {
      "name": "_pDatePickerControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDatePickerControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "body._setEnable",
        "head._setEnable"
      ]
    },
    {
      "name": "_pDatePickerControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pDatePickerControl.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "body.set_readonly",
        "head.set_readonly",
        "this._changeStatus"
      ]
    },
    {
      "name": "_pDatePickerControl.on_apply_datepickerchangetype",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isDesktop"
      ]
    },
    {
      "name": "_pDatePickerControl._on_head_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._changeDate",
        "this._changeMonth",
        "this._changeYear",
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pDatePickerControl._on_head_onheadclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "body._setDate",
        "calendar.on_fire_onclick"
      ]
    },
    {
      "name": "_pDatePickerControl._on_head_onheadspin",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "body._setDate"
      ]
    },
    {
      "name": "_pDatePickerControl._on_body_ondayclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pDatePickerControl._on_body_onmonthclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_datepicker_onmonthclick"
      ]
    },
    {
      "name": "_pDatePickerControl._on_body_onyearclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_datepicker_onyearclick"
      ]
    },
    {
      "name": "_pDatePickerControl._on_body_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._changeDate",
        "this._changeMonth",
        "this._changeYear",
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pDatePickerControl.on_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "control_name.indexOf",
        "this._refreshSpindate"
      ]
    },
    {
      "name": "_pDatePickerControl.on_touchend_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "control_name.indexOf",
        "this._refreshSpindate"
      ]
    },
    {
      "name": "_pDatePickerControl._closeUp",
      "params": [],
      "calls": [
        "body._months_visible",
        "body._years_visible",
        "body.weekband.set_visible",
        "monthstatic.set_visible",
        "this.body._setDate",
        "this.head._setDate"
      ]
    },
    {
      "name": "_pDatePickerControl.on_fire_oncloseup",
      "params": [
        "obj"
      ],
      "calls": [
        "this._closeUp",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pDatePickerControl.on_fire_ondayclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.CalendarDayClickEventInfo",
        "this.body._getDayItem",
        "this.ondayclick._fireEvent"
      ]
    },
    {
      "name": "_pDatePickerControl._on_datepicker_onmonthclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "body.weekband.set_visible",
        "from_comp.text.padLeft",
        "head._recalcYearStatic",
        "head._setFocus",
        "monthstatic.set_text",
        "monthstatic.set_visible",
        "yearstatic.set_text"
      ]
    },
    {
      "name": "_pDatePickerControl._on_datepicker_onyearclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "from_comp.text.padLeft",
        "head._recalcYearStatic",
        "head._setFocus",
        "head.yearstatic.set_text"
      ]
    },
    {
      "name": "_pDatePickerControl.on_killfocus_basic_action",
      "params": [],
      "calls": [
        "body._months_visible",
        "body._years_visible",
        "body.weekband.set_visible",
        "head.monthstatic.set_visible"
      ]
    },
    {
      "name": "_pDatePickerControl._on_button_onnextlbuttondown",
      "params": [],
      "calls": [
        "head._refreshSpindate",
        "head._setDate",
        "this._on_head_onheadclick"
      ]
    },
    {
      "name": "_pDatePickerControl._on_button_onprevlbuttondown",
      "params": [],
      "calls": [
        "head._refreshSpindate",
        "head._setDate",
        "this._on_head_onheadclick"
      ]
    },
    {
      "name": "_pDatePickerControl._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pDatePickerControl.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "body._setDate",
        "head._recalcLayout",
        "head._setDate",
        "value.substr"
      ]
    },
    {
      "name": "_pDatePickerControl._setHeadformatText",
      "params": [],
      "calls": [
        "head._recalcLayout",
        "head._setDate"
      ]
    },
    {
      "name": "_pDatePickerControl._setWeekformatText",
      "params": [],
      "calls": [
        "body._setWeekformatText"
      ]
    },
    {
      "name": "_pDatePickerControl._getInnerDataset",
      "params": [],
      "calls": [
        "calendar.getInnerDataset"
      ]
    },
    {
      "name": "_pDatePickerControl._getBackgroundcolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getBordercolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getDatecolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getTextcolorcolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getHeadheight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getDaysize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getHeadformat",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getWeekformat",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getUsetrailingday",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getShowmonthspin",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getShowyearspin",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControl._getCurrentDate",
      "params": [],
      "calls": [
        "calendar._getCurrentDate"
      ]
    },
    {
      "name": "_pDatePickerControl._getEndDay",
      "params": [
        "year",
        "month"
      ],
      "calls": [
        "calendar._getEndDay"
      ]
    },
    {
      "name": "_pDatePickerControl._changeDate",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "calendaredit._setAccessibilityLabel",
        "date.getDate",
        "date.getFullYear",
        "date.getMonth",
        "item._setAccessibilityLabel",
        "nexacro.Date",
        "nexacro._toString",
        "this._getEndDay",
        "this._p_parent._closePopup",
        "this._setValue",
        "this.body._getDayItem",
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pDatePickerControl._changeMonth",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "body._days_visible",
        "body._months_visible",
        "body._setDate",
        "body.weekband.set_visible",
        "head._recalcYearStatic",
        "monthstatic.set_text",
        "monthstatic.set_visible",
        "this.head.yearstatic.set_text",
        "yearstatic.set_text"
      ]
    },
    {
      "name": "_pDatePickerControl._changeYear",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "body._months_visible",
        "body._years_visible",
        "this.head._recalcYearStatic",
        "this.head.yearstatic.set_text",
        "this.head.yearstatic.text.split"
      ]
    },
    {
      "name": "_pDatePickerControl._recalcLayout",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getHeadheight",
        "this.body.move",
        "this.head.move"
      ]
    },
    {
      "name": "_pDatePickerControl._refreshSpindate",
      "params": [],
      "calls": [
        "head._refreshSpindate"
      ]
    },
    {
      "name": "_pDatePickerControl._refreshDay",
      "params": [],
      "calls": [
        "body._refreshDay"
      ]
    },
    {
      "name": "_pDatePickerControl._on_beforerepeat",
      "params": [
        "refer_comp"
      ],
      "calls": [
        "head._on_beforerepeat"
      ]
    },
    {
      "name": "nexacro._DatePickerHeadControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pDatePickerHeadControl.on_create_contents",
      "params": [],
      "calls": [
        "monthspin._setControl",
        "monthspin.createComponent",
        "monthspin.set_circulation",
        "monthspin.set_displaycomma",
        "monthspin.set_max",
        "monthspin.set_min",
        "monthspin.set_visible",
        "monthstatic._setControl",
        "monthstatic.createComponent",
        "nexacro.Button",
        "nexacro.Static",
        "nexacro._MonthSpinControl",
        "nexacro._YearSpinControl",
        "nextbutton._setControl",
        "nextbutton.createComponent",
        "prevbutton._setControl",
        "prevbutton.createComponent",
        "yearspin._setControl",
        "yearspin.createComponent",
        "yearspin.set_circulation",
        "yearspin.set_displaycomma",
        "yearspin.set_max",
        "yearspin.set_min",
        "yearspin.set_visible",
        "yearstatic._setControl",
        "yearstatic.createComponent"
      ]
    },
    {
      "name": "_pDatePickerHeadControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "monthspin._setEnableView",
        "monthspin._setEventHandler",
        "monthspin.on_created",
        "monthspin.set_value",
        "monthstatic._setEventHandler",
        "monthstatic.on_created",
        "nextbutton._setEventHandler",
        "nextbutton.on_created",
        "prevbutton._setEventHandler",
        "prevbutton.on_created",
        "this._refreshSpindate",
        "this.on_apply_prop_enable",
        "yearspin._setEnableView",
        "yearspin._setEventHandler",
        "yearspin.on_created",
        "yearspin.set_value",
        "yearstatic._setEventHandler",
        "yearstatic.on_created"
      ]
    },
    {
      "name": "_pDatePickerHeadControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this._refreshSpindate",
        "this.monthspin.createCommand",
        "this.monthstatic.createCommand",
        "this.nextbutton.createCommand",
        "this.prevbutton.createCommand",
        "this.yearspin.createCommand",
        "this.yearstatic.createCommand"
      ]
    },
    {
      "name": "_pDatePickerHeadControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "monthspin._setEnableView",
        "monthspin._setEventHandler",
        "monthspin.attachHandle",
        "monthspin.set_value",
        "monthstatic._setEventHandler",
        "monthstatic.attachHandle",
        "nextbutton._setEventHandler",
        "nextbutton.attachHandle",
        "prevbutton._setEventHandler",
        "prevbutton.attachHandle",
        "yearspin._setEnableView",
        "yearspin._setEventHandler",
        "yearspin.attachHandle",
        "yearspin.set_value",
        "yearstatic._setEventHandler",
        "yearstatic.attachHandle"
      ]
    },
    {
      "name": "_pDatePickerHeadControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this.monthspin.destroy",
        "this.monthstatic.destroy",
        "this.nextbutton.destroy",
        "this.prevbutton.destroy",
        "this.yearspin.destroy",
        "this.yearstatic.destroy"
      ]
    },
    {
      "name": "_pDatePickerHeadControl.on_change_containerRect",
      "params": [
        "widht",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDatePickerHeadControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this.monthspin._setEnable",
        "this.monthstatic._setEnable",
        "this.nextbutton._setEnable",
        "this.prevbutton._setEnable",
        "this.yearspin._setEnable",
        "this.yearstatic._setEnable"
      ]
    },
    {
      "name": "_pDatePickerHeadControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pDatePickerHeadControl.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "monthspin.set_readonly",
        "this._changeStatus",
        "this.getElement",
        "yearspin.set_readonly"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._on_static_mobile_before_onclick",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerHeadControl._on_static_mobile_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "body._days_visible",
        "body._months_visible",
        "body._years_visible",
        "calendar.on_fire_onclick",
        "monthspin.set_visible",
        "monthstatic.set_visible",
        "this._on_static_mobile_before_onclick",
        "this._recalcYearStatic",
        "yearspin.set_visible",
        "yearstatic.set_text",
        "yearstatic.set_visible"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._on_static_before_onlbuttondown",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerHeadControl._on_static_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "body._days_visible",
        "body._months_visible",
        "body._years_visible",
        "body.weekband.set_visible",
        "monthspin.set_visible",
        "monthstatic.set_visible",
        "this._on_static_before_onlbuttondown",
        "this._recalcYearStatic",
        "yearspin.set_visible",
        "yearstatic.set_text",
        "yearstatic.set_visible"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._on_button_onprevclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "body._setDate",
        "body._years_visible",
        "calendar.on_fire_onclick",
        "this._recalcYearStatic",
        "this._refreshSpindate",
        "this._setDate",
        "this.on_fire_onclick",
        "this.yearstatic.set_text",
        "this.yearstatic.text.split"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._on_button_onnextclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "body._setDate",
        "body._years_visible",
        "calendar.on_fire_onclick",
        "this._recalcYearStatic",
        "this._refreshSpindate",
        "this._setDate",
        "this.on_fire_onclick",
        "this.yearstatic.set_text",
        "this.yearstatic.text.split"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._on_spin_onspin",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro._toString",
        "this._setDate",
        "this.on_fire_onspin"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._on_spin_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._setDate",
        "this.on_fire_onspin"
      ]
    },
    {
      "name": "_pDatePickerHeadControl.on_fire_onspin",
      "params": [
        "obj",
        "preText",
        "preValue",
        "postText",
        "postValue",
        "isUp"
      ],
      "calls": [
        "nexacro.SpinEventInfo",
        "this.onspin._fireEvent"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._refreshSpindate",
      "params": [],
      "calls": [
        "monthspin.set_visible",
        "monthstatic.set_visible",
        "this._getShowmonthspin",
        "this._getShowyearspin",
        "yearspin.set_visible",
        "yearstatic.set_visible"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._recalcLayout",
      "params": [],
      "calls": [
        "monthspin.move",
        "monthstatic._on_getFitSize",
        "monthstatic.move",
        "nextbutton.move",
        "prevbutton.move",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getHeadformat",
        "this._getSpinControlSize",
        "yearspin.move",
        "yearstatic._on_getFitSize",
        "yearstatic.move"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._recalcYearStatic",
      "params": [
        "month"
      ],
      "calls": [
        "monthstatic._on_getFitSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getHeadformat",
        "yearstatic._on_getFitSize",
        "yearstatic.move"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._on_beforerepeat",
      "params": [
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerHeadControl._setDate",
      "params": [
        "year",
        "month"
      ],
      "calls": [
        "monthspin.set_value",
        "monthstatic.set_text",
        "nexacro._toString",
        "this._getHeadformat",
        "yearspin.set_value",
        "yearstatic.set_text"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._getHeadheight",
      "params": [],
      "calls": [
        "datepicker._getHeadheight"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._getHeadformat",
      "params": [],
      "calls": [
        "datepicker._getHeadformat"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._getShowyearspin",
      "params": [],
      "calls": [
        "calendar._getShowyearspin"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._getShowmonthspin",
      "params": [],
      "calls": [
        "datepicker._getShowmonthspin"
      ]
    },
    {
      "name": "_pDatePickerHeadControl._getSpinControlSize",
      "params": [
        "type"
      ],
      "calls": [
        "border._getBorderWidth",
        "control._getCurrentStyleBorder",
        "control._getCurrentStylePadding",
        "spinedit._on_getFitSize"
      ]
    },
    {
      "name": "nexacro._DatePickerBodyControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_create_contents",
      "params": [],
      "calls": [
        "daystatic._setDaysOfWeek",
        "daystatic.createComponent",
        "monthstat.createComponent",
        "monthstat.set_text",
        "monthstat.set_textAlign",
        "monthstat.set_visible",
        "nexacro.Static",
        "nexacro._DatePickerDayItemControl",
        "nexacro._DatePickerMonthItemControl",
        "nexacro._DatePickerWeekItemControl",
        "nexacro._DatePickerYearItemControl",
        "this._getMonthformat",
        "this._getWeekformat",
        "this._getYearformat",
        "this._p_parent.on_apply_datepickerchangetype",
        "this.getElement",
        "weekband._setControl",
        "weekband.createComponent",
        "weekstatic._setDaysOfWeek",
        "weekstatic.createComponent",
        "weekstatic.set_text",
        "yearstat.createComponent",
        "yearstat.set_text",
        "yearstat.set_textAlign",
        "yearstat.set_visible"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this.getElement",
        "this.weekband.on_created"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_create_contents_command",
      "params": [],
      "calls": [
        "weekband.createCommand"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "weekband.attachHandle"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this.weekband.destroy"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_apply_prop_enable",
      "params": [
        "enable"
      ],
      "calls": [
        "this.weekband._setEnable"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._on_dayitem_ondayclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "calendar.on_fire_onclick",
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_fire_ondayclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.ondayclick._fireEvent"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._on_monthitem_onmonthclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._days_visible",
        "this._months_visible",
        "this._setDate",
        "this.on_fire_onmonthclick"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_fire_onmonthclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.onmonthclick._fireEvent"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._on_yearitem_onyearclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._months_visible",
        "this._p_parent.head.yearstatic.set_text",
        "this._p_parent.head.yearstatic.text.split",
        "this._years_visible",
        "this.on_fire_onyearclick"
      ]
    },
    {
      "name": "_pDatePickerBodyControl.on_fire_onyearclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.onyearclick._fireEvent"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._days_visible",
      "params": [
        "v"
      ],
      "calls": [
        "this.weekband.set_visible"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._months_visible",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerBodyControl._years_visible",
      "params": [
        "v",
        "min_year"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerBodyControl._recalcLayout",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth",
        "this._getDaysize",
        "this._getMonthsize",
        "this._getYearsize",
        "this.weekband.move"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._refreshDay",
      "params": [],
      "calls": [
        "tempDate.getDay",
        "tempDate.setFullYear",
        "this._getDayInfo",
        "this._getInnerDataset",
        "this._getLeapYear",
        "this._getUseTrailingDayInfo",
        "this._getUsetrailingday",
        "this._initChangedDays",
        "this._isSelectedDay",
        "this._isToday",
        "this._on_apply_day",
        "this._setCalendarAccessibility",
        "this._setDatasetStyle",
        "this._setDayItemInfo",
        "this.getElement"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._on_apply_day",
      "params": [
        "flag"
      ],
      "calls": [
        "currtDate.getDate",
        "dayObj._changeDayUserStatus",
        "dayObj._changeUserStatus",
        "nexacro._toString",
        "predayObj._changeDayUserStatus",
        "predayObj._changeUserStatus",
        "this._getDayItem",
        "this._isToday",
        "todayObj._changeUserStatus"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._initChangedDays",
      "params": [],
      "calls": [
        "this._changedDays.pop"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._setDate",
      "params": [
        "year",
        "month",
        "day"
      ],
      "calls": [
        "day.padLeft",
        "month.padLeft",
        "this._refreshDay",
        "year.padLeft"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._setDayItemInfo",
      "params": [
        "day",
        "text",
        "visible",
        "year",
        "month",
        "trailingday"
      ],
      "calls": [
        "day.set_text",
        "day.set_visible",
        "day.set_wordWrap"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._setWeekformatText",
      "params": [],
      "calls": [
        "this._getWeekformat",
        "this.getElement"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._setDatasetStyle",
      "params": [
        "ds"
      ],
      "calls": [
        "day_item.set_background",
        "day_item.set_border",
        "day_item.set_color",
        "day_item.text.padLeft",
        "ds.getColumn",
        "ds.getRowCount",
        "this._getInnerDatasetColumns"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getLeapYear",
      "params": [
        "year"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerBodyControl._getCurrentDate",
      "params": [],
      "calls": [
        "datepicker._getCurrentDate"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getWeekformat",
      "params": [],
      "calls": [
        "datepicker._getWeekformat",
        "format.split",
        "nexacro.Locale.getLocaleInfo",
        "this._getLocale"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getMonthformat",
      "params": [],
      "calls": [
        "nexacro.Locale.getLocaleInfo",
        "this._getLocale"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getYearformat",
      "params": [],
      "calls": [
        "cur_year.push",
        "cur_year.unshift",
        "today.getFullYear"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getDaysize",
      "params": [],
      "calls": [
        "datepicker._getDaysize",
        "size.split",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getMonthsize",
      "params": [],
      "calls": [
        "size.split",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getYearsize",
      "params": [],
      "calls": [
        "size.split",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getDayInfo",
      "params": [
        "text",
        "trailingday",
        "visible",
        "year",
        "month"
      ],
      "calls": [
        "day.padLeft",
        "month.padLeft",
        "nexacro._toString",
        "year.padLeft"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getDayItem",
      "params": [
        "day"
      ],
      "calls": [
        "text.padLeft"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getMonthItem",
      "params": [
        "month"
      ],
      "calls": [
        "text.padLeft"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getYearItem",
      "params": [
        "year"
      ],
      "calls": [
        "text.padLeft"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getUsetrailingday",
      "params": [],
      "calls": [
        "datepicker._getUsetrailingday"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getUseTrailingDayInfo",
      "params": [
        "year",
        "month",
        "dateObj",
        "endDay"
      ],
      "calls": [
        "dateObj.getDay",
        "dateObj.setDate",
        "this._getLeapYear"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getInnerDataset",
      "params": [],
      "calls": [
        "datepicker._getInnerDataset"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._getInnerDatasetColumns",
      "params": [],
      "calls": [
        "datepicker._getBackgroundcolumn",
        "datepicker._getBordercolumn",
        "datepicker._getDatecolumn",
        "datepicker._getTextcolorcolumn"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._isToday",
      "params": [
        "v"
      ],
      "calls": [
        "this._getCurrentDate"
      ]
    },
    {
      "name": "_pDatePickerBodyControl._isSelectedDay",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerBodyControl._setCalendarAccessibility",
      "params": [],
      "calls": [
        "calendar._masktypeobj.applyMask",
        "nexacro._notifyAccessibilityValue",
        "this._p_parent._setAccessibilityLabel",
        "this._setAccessibilityLabel"
      ]
    },
    {
      "name": "nexacro._DatePickerDayItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pDatePickerDayItemControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pDatePickerDayItemControl.on_apply_readonly",
      "params": [],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pDatePickerDayItemControl._setDaysOfWeek",
      "params": [
        "daysofweek"
      ],
      "calls": [
        "this._on_apply_daysofweek"
      ]
    },
    {
      "name": "_pDatePickerDayItemControl._changeDayUserStatus",
      "params": [
        "week",
        "value"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pDatePickerDayItemControl._on_apply_daysofweek",
      "params": [
        "v"
      ],
      "calls": [
        "this._changeDayUserStatus",
        "this._changeUserStatus",
        "this._p_parent._isSelectedDay",
        "this._p_parent._isToday"
      ]
    },
    {
      "name": "_pDatePickerDayItemControl.on_changeStatus",
      "params": [
        "changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerDayItemControl.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerDayItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerDayItemControl.on_keydown_basic_action",
      "params": [],
      "calls": [
        "nexacro.Button.prototype.on_apply_accessibility.call"
      ]
    },
    {
      "name": "nexacro._DatePickerWeekItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Static.call"
      ]
    },
    {
      "name": "_pDatePickerWeekItemControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pDatePickerWeekItemControl.on_apply_readonly",
      "params": [],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pDatePickerWeekItemControl._setDaysOfWeek",
      "params": [
        "daysofweek"
      ],
      "calls": [
        "this._on_apply_daysofweek"
      ]
    },
    {
      "name": "_pDatePickerWeekItemControl._changeDayUserStatus",
      "params": [
        "week",
        "value"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pDatePickerWeekItemControl._on_apply_daysofweek",
      "params": [
        "v"
      ],
      "calls": [
        "this._changeDayUserStatus"
      ]
    },
    {
      "name": "_pDatePickerWeekItemControl.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerWeekItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._DatePickerMonthItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pDatePickerMonthItemControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pDatePickerMonthItemControl.on_apply_readonly",
      "params": [],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pDatePickerMonthItemControl.on_changeStatus",
      "params": [
        "changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerMonthItemControl.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerMonthItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerMonthItemControl.on_keydown_basic_action",
      "params": [],
      "calls": [
        "nexacro.Button.prototype.on_apply_accessibility.call"
      ]
    },
    {
      "name": "nexacro._DatePickerYearItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pDatePickerYearItemControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pDatePickerYearItemControl.on_apply_readonly",
      "params": [],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pDatePickerYearItemControl.on_changeStatus",
      "params": [
        "changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerYearItemControl.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerYearItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerYearItemControl.on_keydown_basic_action",
      "params": [],
      "calls": [
        "nexacro.Button.prototype.on_apply_accessibility.call"
      ]
    },
    {
      "name": "nexacro._YearSpinControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Spin.call"
      ]
    },
    {
      "name": "_pYearSpinControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._SpinButtonControl",
        "nexacro._SpinEditControl",
        "spindownbutton.createComponent",
        "spinedit.createComponent",
        "spinedit.set_limitbymask",
        "spinupbutton.createComponent",
        "this.getElement"
      ]
    },
    {
      "name": "nexacro._MonthSpinControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Spin.call"
      ]
    },
    {
      "name": "_pMonthSpinControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._SpinButtonControl",
        "nexacro._SpinEditControl",
        "spindownbutton.createComponent",
        "spinedit.createComponent",
        "spinedit.set_limitbymask",
        "spinupbutton.createComponent",
        "this.getElement"
      ]
    }
  ],
  "DateRangePicker.js": [
    {
      "name": "nexacro.RangeDateChangedEventInfo",
      "params": [
        "obj",
        "id",
        "prestartdate",
        "poststartdate",
        "preenddate",
        "postenddate"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DateRangePicker",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pDateRangePicker.on_create_contents",
      "params": [],
      "calls": [
        "this._updateButtons",
        "this._updateHeadLine",
        "this._updatePicker",
        "this._updateTabButtons",
        "this.on_apply_backgroundcolumn",
        "this.on_apply_bordercolumn",
        "this.on_apply_datecolumn",
        "this.on_apply_direction",
        "this.on_apply_displaymonthcount",
        "this.on_apply_hintingcolumn",
        "this.on_apply_innerdataset",
        "this.on_apply_maxdate",
        "this.on_apply_mindate",
        "this.on_apply_readonlycolumn",
        "this.on_apply_textcolorcolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._cancelbutton.on_created",
        "this._closebutton.on_created",
        "this._datepicker_group.on_created",
        "this._datetabbutton.on_created",
        "this._headline.on_created",
        "this._okbutton.on_created",
        "this._timepicker_group.on_created",
        "this._timetabbutton.on_created",
        "this.on_apply_datepickerheadheight"
      ]
    },
    {
      "name": "_pDateRangePicker.on_after_created",
      "params": [],
      "calls": [
        "this._getGroup",
        "this._recalcLayout",
        "this._updatePicker",
        "this.on_apply_displaymonthcount",
        "this.on_apply_enddate",
        "this.on_apply_headlinedateformat",
        "this.on_apply_headlinetimeformat",
        "this.on_apply_startdate",
        "this.on_apply_type"
      ]
    },
    {
      "name": "_pDateRangePicker.on_create_contents_command",
      "params": [],
      "calls": [
        "this._cancelbutton.createCommand",
        "this._closebutton.createCommand",
        "this._datepicker_group.createCommand",
        "this._datetabbutton.createCommand",
        "this._headline.createCommand",
        "this._okbutton.createCommand",
        "this._timepicker_group.createCommand",
        "this._timetabbutton.createCommand"
      ]
    },
    {
      "name": "_pDateRangePicker.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._cancelbutton._setAccessibilityStatHidden",
        "this._cancelbutton.attachHandle",
        "this._closebutton._setAccessibilityStatHidden",
        "this._closebutton.attachHandle",
        "this._datepicker_group._setAccessibilityStatHidden",
        "this._datepicker_group.attachHandle",
        "this._datetabbutton._setAccessibilityStatHidden",
        "this._datetabbutton.attachHandle",
        "this._headline._setAccessibilityStatHidden",
        "this._headline.attachHandle",
        "this._okbutton._setAccessibilityStatHidden",
        "this._okbutton.attachHandle",
        "this._timepicker_group._setAccessibilityStatHidden",
        "this._timepicker_group.attachHandle",
        "this._timetabbutton._setAccessibilityStatHidden",
        "this._timetabbutton.attachHandle",
        "this.on_apply_datepickerheadheight"
      ]
    },
    {
      "name": "_pDateRangePicker.on_destroy_contents",
      "params": [],
      "calls": [
        "this._destroyHeadLine",
        "this._destroyPicker",
        "this._destroyTabButtons",
        "this._destroyUsedButtons",
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pDateRangePicker._updateTabButtons",
      "params": [
        "create_only"
      ],
      "calls": [
        "datetabbutton._setControl",
        "datetabbutton._setEventHandler",
        "datetabbutton.createComponent",
        "nexacro.Button",
        "this._destroyTabButtons",
        "this._updateTabStatus",
        "this.on_apply_datetabbuttontext",
        "this.on_apply_timetabbuttontext",
        "timetabbutton._setControl",
        "timetabbutton._setEventHandler",
        "timetabbutton.createComponent"
      ]
    },
    {
      "name": "_pDateRangePicker._destroyTabButtons",
      "params": [],
      "calls": [
        "this._datetabbutton.destroy",
        "this._timetabbutton.destroy"
      ]
    },
    {
      "name": "_pDateRangePicker._updateHeadLine",
      "params": [
        "create_only"
      ],
      "calls": [
        "headline._p_enddatebutton._setEventHandler",
        "headline._p_endsubdatebutton._setEventHandler",
        "headline._p_startdatebutton._setEventHandler",
        "headline._p_startsubdatebutton._setEventHandler",
        "headline.createComponent",
        "headline.set_displaytype",
        "headline.set_userange",
        "nexacro.PickerHeadLineControl",
        "this._destroyHeadLine",
        "this.on_apply_headlineenddatenulltext",
        "this.on_apply_headlinestartdatenulltext",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pDateRangePicker._destroyHeadLine",
      "params": [],
      "calls": [
        "this._headline.destroy"
      ]
    },
    {
      "name": "_pDateRangePicker._updatePicker",
      "params": [
        "create_only"
      ],
      "calls": [
        "datepicker._setControl",
        "datepicker._setEventHandler",
        "datepicker.createComponent",
        "datepicker.set_direction",
        "datepicker.set_enddate",
        "datepicker.set_rangeposition",
        "datepicker.set_type",
        "datepicker.set_visible",
        "displaytype.indexOf",
        "nexacro.DatePickerGroup",
        "nexacro.TimePickerGroup",
        "this._datepicker_group.destroy",
        "this._timepicker_group.destroy",
        "this.on_apply_datepickerheadheight",
        "this.on_apply_defaultrangeposition",
        "timepicker._setControl",
        "timepicker._setEventHandler",
        "timepicker.createComponent",
        "timepicker.set_direction",
        "timepicker.set_visible"
      ]
    },
    {
      "name": "_pDateRangePicker._destroyPicker",
      "params": [],
      "calls": [
        "this._datepicker_group.destroy",
        "this._timepicker_group.destroy"
      ]
    },
    {
      "name": "_pDateRangePicker._isUseCloseButton",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateRangePicker._isUseOKButton",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateRangePicker._updateButtons",
      "params": [
        "create_only"
      ],
      "calls": [
        "cancelbutton._setControl",
        "cancelbutton._setEventHandler",
        "cancelbutton.createComponent",
        "cancelbutton.set_text",
        "closebutton._setControl",
        "closebutton._setEventHandler",
        "closebutton.createComponent",
        "closebutton.set_text",
        "nexacro.Button",
        "okbutton._setControl",
        "okbutton._setEventHandler",
        "okbutton.createComponent",
        "okbutton.set_text",
        "this._destroyUsedButtons",
        "this._isUseCloseButton",
        "this._isUseOKButton",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDateRangePicker._destroyUsedButtons",
      "params": [],
      "calls": [
        "this._cancelbutton.destroy",
        "this._closebutton.destroy",
        "this._okbutton.destroy"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._cancelbutton._setEnable",
        "this._closebutton._setEnable",
        "this._datepicker_group._setEnable",
        "this._datetabbutton._setEnable",
        "this._headline._setEnable",
        "this._isEnable",
        "this._okbutton._setEnable",
        "this._timepicker_group._setEnable",
        "this._timetabbutton._setEnable"
      ]
    },
    {
      "name": "_pDateRangePicker.set_defaultrangeposition",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_defaultrangeposition"
      ]
    },
    {
      "name": "_pDateRangePicker.set_datepickerheadheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datepickerheadheight"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_datepickerheadheight",
      "params": [],
      "calls": [
        "_datepicker_group._setDatepickerheadheight",
        "this._recalcLayout",
        "this.on_apply_rangeposition"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_defaultrangeposition",
      "params": [],
      "calls": [
        "this._datepicker_group.set_defaultrangeposition"
      ]
    },
    {
      "name": "_pDateRangePicker.set_rangeposition",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_rangeposition"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_rangeposition",
      "params": [],
      "calls": [
        "this._datepicker_group.set_rangeposition"
      ]
    },
    {
      "name": "_pDateRangePicker.set_locale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_locale",
      "params": [
        "locale"
      ],
      "calls": [
        "this._getLocale",
        "this._headline.set_locale"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this.on_apply_datetabbuttontext",
        "this.on_apply_headlineenddatenulltext",
        "this.on_apply_headlinestartdatenulltext",
        "this.on_apply_timetabbuttontext"
      ]
    },
    {
      "name": "_pDateRangePicker.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDateRangePicker._recalcLayout",
      "params": [],
      "calls": [
        "cancelbutton._on_getFitSize",
        "cancelbutton.move",
        "closebutton._on_getFitSize",
        "closebutton.move",
        "datepicker.move",
        "headline.move",
        "nexacro._getMobileOrientation",
        "nexacro.getWheelZoom",
        "okbutton._on_getFitSize",
        "okbutton.move",
        "this._datetabbutton.move",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._p_cancelbuttonsize.split",
        "this._p_closebuttonsize.split",
        "this._p_okbuttonsize.split",
        "this._timetabbutton.move",
        "timepicker.move"
      ]
    },
    {
      "name": "_pDateRangePicker.on_notify_ondatechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._confirmValue",
        "this._timepicker_group.set_enddate"
      ]
    },
    {
      "name": "_pDateRangePicker.on_notify_close",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oncloseup"
      ]
    },
    {
      "name": "_pDateRangePicker.on_notify_cancel",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oncloseup"
      ]
    },
    {
      "name": "_pDateRangePicker.on_notify_headline_onstartdateclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._changeTab",
        "this._datepicker_group._animateScroll",
        "this._datepicker_group._cancelSelectYearMonth"
      ]
    },
    {
      "name": "_pDateRangePicker.on_notify_headline_onenddateclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._changeTab",
        "this._datepicker_group._animateScroll",
        "this._datepicker_group._cancelSelectYearMonth"
      ]
    },
    {
      "name": "_pDateRangePicker.on_notify_headline_onstartsubdateclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._changeTab"
      ]
    },
    {
      "name": "_pDateRangePicker.on_notify_headline_onendsubdateclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._changeTab"
      ]
    },
    {
      "name": "_pDateRangePicker.on_notify_datetabbuttonclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._changeTab"
      ]
    },
    {
      "name": "_pDateRangePicker.on_notify_timetabbuttonclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._changeTab"
      ]
    },
    {
      "name": "_pDateRangePicker._updateTabStatus",
      "params": [],
      "calls": [
        "this._datepicker_group.set_visible",
        "this._datetabbutton._changeUserStatus",
        "this._timepicker_group.set_visible",
        "this._timetabbutton._changeUserStatus"
      ]
    },
    {
      "name": "_pDateRangePicker._changeTab",
      "params": [
        "kind"
      ],
      "calls": [
        "this._getGroup",
        "this._updateTabStatus"
      ]
    },
    {
      "name": "_pDateRangePicker._getGroup",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateRangePicker.on_notify_onstartdateclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oncloseup",
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pDateRangePicker.on_notify_onenddateclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pDateRangePicker.on_fire_oncloseup",
      "params": [
        "obj",
        "apply",
        "self_call"
      ],
      "calls": [
        "nexacro.EventInfo",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pDateRangePicker._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oninnerdatachanged"
      ]
    },
    {
      "name": "_pDateRangePicker.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pDateRangePicker.on_fire_ondayclick",
      "params": [
        "postdate",
        "rangepos"
      ],
      "calls": [
        "nexacro.DateRangePickerDayClickEventInfo",
        "this.ondayclick._fireEvent"
      ]
    },
    {
      "name": "_pDateRangePicker.on_fire_onchanged",
      "params": [
        "prestartdate",
        "poststartdate",
        "preenddate",
        "postenddate"
      ],
      "calls": [
        "nexacro.RangeDateChangedEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pDateRangePicker._notify_frame_resize",
      "params": [],
      "calls": [
        "this._datepicker_group._scrollCurrent"
      ]
    },
    {
      "name": "_pDateRangePicker.on_fire_user_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onkeydown.call"
      ]
    },
    {
      "name": "_pDateRangePicker.set_type",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_type",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_type",
      "params": [],
      "calls": [
        "this._datepicker_group.set_type",
        "this._headline.set_userange",
        "this._recalcLayout",
        "this._timepicker_group.set_type",
        "this._updatePicker",
        "this.on_apply_startdate"
      ]
    },
    {
      "name": "_pDateRangePicker.set_displaytype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_displaytype",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_displaytype",
      "params": [],
      "calls": [
        "this._changeTab",
        "this._headline.set_displaytype",
        "this._recalcLayout",
        "this._updateButtons",
        "this._updatePicker",
        "this._updateTabButtons",
        "this.on_apply_displaymonthcount",
        "this.on_apply_startdate",
        "this.on_apply_type"
      ]
    },
    {
      "name": "_pDateRangePicker.set_closebuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_closebuttontext"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_closebuttontext",
      "params": [],
      "calls": [
        "this._closebutton.set_text"
      ]
    },
    {
      "name": "_pDateRangePicker.set_okbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_okbuttontext"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_okbuttontext",
      "params": [],
      "calls": [
        "this._okbutton.set_text",
        "this._updateButtons"
      ]
    },
    {
      "name": "_pDateRangePicker.set_cancelbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_cancelbuttontext"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_cancelbuttontext",
      "params": [],
      "calls": [
        "this._cancelbutton.set_text",
        "this._updateButtons"
      ]
    },
    {
      "name": "_pDateRangePicker.set_useheadline",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_useheadline"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_useheadline",
      "params": [],
      "calls": [
        "this._recalcLayout",
        "this._updateButtons",
        "this._updateHeadLine"
      ]
    },
    {
      "name": "_pDateRangePicker.set_tabbuttonheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tabbuttonheight"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_tabbuttonheight",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDateRangePicker.set_headlinesize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_headlinesize"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_headlinesize",
      "params": [],
      "calls": [
        "headlinesize.toString",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDateRangePicker.set_closebuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_closebuttonsize"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_closebuttonsize",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDateRangePicker.set_headlinedateformat",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_headlinedateformat"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_headlinedateformat",
      "params": [],
      "calls": [
        "this._headline.set_dateformat"
      ]
    },
    {
      "name": "_pDateRangePicker.set_headlinetimeformat",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_headlinetimeformat"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_headlinetimeformat",
      "params": [],
      "calls": [
        "this._headline.set_timeformat"
      ]
    },
    {
      "name": "_pDateRangePicker.set_direction",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_direction",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_direction",
      "params": [],
      "calls": [
        "this._datepicker_group.set_direction",
        "this._timepicker_group.set_direction"
      ]
    },
    {
      "name": "_pDateRangePicker.set_displaymonthcount",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_displaymonthcount"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_displaymonthcount",
      "params": [],
      "calls": [
        "this._datepicker_group.set_displaymonthcount"
      ]
    },
    {
      "name": "_pDateRangePicker.set_innerdataset",
      "params": [
        "v"
      ],
      "calls": [
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_innerdataset",
      "params": [
        "ds"
      ],
      "calls": [
        "ds._setEventHandler",
        "this._datepicker_group.set_innerdataset"
      ]
    },
    {
      "name": "_pDateRangePicker._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset"
      ]
    },
    {
      "name": "_pDateRangePicker.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateRangePicker.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pDateRangePicker.set_backgroundcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_backgroundcolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_backgroundcolumn",
      "params": [],
      "calls": [
        "this._datepicker_group.set_backgroundcolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.set_bordercolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_bordercolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_bordercolumn",
      "params": [],
      "calls": [
        "this._datepicker_group.set_bordercolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.set_datecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datecolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_datecolumn",
      "params": [],
      "calls": [
        "this._datepicker_group.set_datecolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.set_textcolorcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_textcolorcolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_textcolorcolumn",
      "params": [],
      "calls": [
        "this._datepicker_group.set_textcolorcolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.set_hintingcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_hintingcolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_hintingcolumn",
      "params": [],
      "calls": [
        "this._datepicker_group.set_hintingcolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.set_readonlycolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_readonlycolumn"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_readonlycolumn",
      "params": [],
      "calls": [
        "this._datepicker_group.set_readonlycolumn"
      ]
    },
    {
      "name": "_pDateRangePicker._getDateValue",
      "params": [
        "date"
      ],
      "calls": [
        "date.getDate",
        "date.getFullYear",
        "date.getMonth"
      ]
    },
    {
      "name": "_pDateRangePicker._getTimeValue",
      "params": [
        "date"
      ],
      "calls": [
        "date.getHours",
        "date.getMilliseconds",
        "date.getMinutes",
        "date.getSeconds"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_value",
      "params": [],
      "calls": [
        "this._convValueToDateObj",
        "this._datepicker_group._cancelSelectYearMonth",
        "this._headline.set_dateobj",
        "this._headline.set_enddateobj"
      ]
    },
    {
      "name": "_pDateRangePicker._convValueToDateObj",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro.DataUtils.toDate",
        "nexacro.DataUtils.toTime",
        "value.substr"
      ]
    },
    {
      "name": "_pDateRangePicker._convDisplayTypeValue",
      "params": [
        "datestr"
      ],
      "calls": [
        "curr.toString",
        "date.substr",
        "datestr.padRight",
        "nexacro.DataUtils.toDate",
        "nexacro.DataUtils.toDateTime",
        "nexacro.DataUtils.toTime",
        "nexacro.Date",
        "sdate.substr"
      ]
    },
    {
      "name": "_pDateRangePicker._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey/*",
        "shiftKey*/"
      ],
      "calls": []
    },
    {
      "name": "_pDateRangePicker.set_startdate",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_startdate"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_startdate",
      "params": [],
      "calls": [
        "this._convDisplayTypeValue",
        "this._datepicker_group._setInvalidDate",
        "this._datepicker_group.set_startdate",
        "this._timepicker_group.set_startdate",
        "this.on_apply_enddate"
      ]
    },
    {
      "name": "_pDateRangePicker.set_enddate",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_enddate"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_enddate",
      "params": [],
      "calls": [
        "this._convDisplayTypeValue",
        "this._datepicker_group._setInvalidDate",
        "this._datepicker_group.set_enddate",
        "this._timepicker_group.set_enddate",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pDateRangePicker.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": []
    },
    {
      "name": "_pDateRangePicker._isInvalidValue",
      "params": [
        "v"
      ],
      "calls": [
        "dateobj._isInvalidDate",
        "dateobj.getFullYear",
        "dateobj.valueOf",
        "nexacro.DataUtils.toDate",
        "nexacro._isNull"
      ]
    },
    {
      "name": "_pDateRangePicker._convertValueType",
      "params": [
        "v",
        "dateobj",
        "bapplyrule"
      ],
      "calls": [
        "nexacro._getDatatypeRule",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pDateRangePicker.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "nexacro.DataUtils.toDate",
        "this._convertValueType",
        "this._isInvalidValue",
        "this.on_apply_rangeposition"
      ]
    },
    {
      "name": "_pDateRangePicker.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateRangePicker.on_notify_ontimechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._confirmValue",
        "this._datepicker_group._updateRangeDate"
      ]
    },
    {
      "name": "_pDateRangePicker._on_rangedate_change",
      "params": [
        "prestartdate",
        "poststartdate",
        "preenddate",
        "postenddate"
      ],
      "calls": [
        "this._on_date_change",
        "this._updateAccessibilityLabel",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pDateRangePicker._on_date_change",
      "params": [
        "prevalue",
        "postvalue",
        "propname"
      ],
      "calls": [
        "this._beginValueChange",
        "this._finalValueChange",
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pDateRangePicker._beginValueChange",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateRangePicker._finalValueChange",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDateRangePicker.set_maxdate",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_maxdate"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_maxdate",
      "params": [],
      "calls": [
        "this._datepicker_group.set_maxdate"
      ]
    },
    {
      "name": "_pDateRangePicker.set_mindate",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_mindate"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_mindate",
      "params": [],
      "calls": [
        "this._datepicker_group.set_mindate"
      ]
    },
    {
      "name": "_pDateRangePicker.set_headlinestartdatenulltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_headlinestartdatenulltext"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_headlinestartdatenulltext",
      "params": [],
      "calls": [
        "this._getStringResourceProperty",
        "this._headline.set_startdatenulltext"
      ]
    },
    {
      "name": "_pDateRangePicker.set_headlineenddatenulltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_headlineenddatenulltext"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_headlineenddatenulltext",
      "params": [],
      "calls": [
        "this._getStringResourceProperty",
        "this._headline.set_enddatenulltext"
      ]
    },
    {
      "name": "_pDateRangePicker.set_datetabbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_datetabbuttontext"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_datetabbuttontext",
      "params": [],
      "calls": [
        "this._datetabbutton.set_text",
        "this._getStringResourceProperty"
      ]
    },
    {
      "name": "_pDateRangePicker.set_timetabbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_timetabbuttontext"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_timetabbuttontext",
      "params": [],
      "calls": [
        "this._getStringResourceProperty",
        "this._timetabbutton.set_text"
      ]
    },
    {
      "name": "_pDateRangePicker.set_headlineposition",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_headlineposition",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_headlineposition",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDateRangePicker.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pDateRangePicker.on_apply_readonly",
      "params": [],
      "calls": [
        "this._datepicker_group.set_readonly"
      ]
    },
    {
      "name": "_pDateRangePicker.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this._datepicker_group._initSelectOrder"
      ]
    },
    {
      "name": "_pDateRangePicker.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._changeTab",
        "this.on_fire_oncloseup"
      ]
    },
    {
      "name": "_pDateRangePicker.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslide.call"
      ]
    },
    {
      "name": "_pDateRangePicker.on_fire_sys_onfling",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onfling.call"
      ]
    },
    {
      "name": "_pDateRangePicker._confirmValue",
      "params": [
        "only"
      ],
      "calls": [
        "this._on_rangedate_change",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pDateRangePicker._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call",
        "this._getGroup"
      ]
    },
    {
      "name": "_pDateRangePicker._getCurrentDateValue",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.PickerHeadLineControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_create_contents",
      "params": [],
      "calls": [
        "this._updateEndButton",
        "this._updateStartButton",
        "this.on_apply_locale"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._p_enddatebutton.on_created",
        "this._p_endsubdatebutton.on_created",
        "this._p_startdatebutton.on_created",
        "this._p_startsubdatebutton.on_created",
        "this._splitline.on_created"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this._p_enddatebutton.createCommand",
        "this._p_endsubdatebutton.createCommand",
        "this._p_startdatebutton.createCommand",
        "this._p_startsubdatebutton.createCommand",
        "this._splitline.createCommand"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._p_enddatebutton._setAccessibilityStatHidden",
        "this._p_enddatebutton.attachHandle",
        "this._p_endsubdatebutton._setAccessibilityStatHidden",
        "this._p_endsubdatebutton.attachHandle",
        "this._p_startdatebutton._setAccessibilityStatHidden",
        "this._p_startdatebutton.attachHandle",
        "this._p_startsubdatebutton._setAccessibilityStatHidden",
        "this._p_startsubdatebutton.attachHandle",
        "this._splitline._setAccessibilityStatHidden",
        "this._splitline.attachHandle"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._p_enddatebutton.destroy",
        "this._p_endsubdatebutton.destroy",
        "this._p_startdatebutton.destroy",
        "this._p_startsubdatebutton.destroy",
        "this._splitline.destroy"
      ]
    },
    {
      "name": "_pPickerHeadLineControl._updateStartButton",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.Button",
        "startdatebutton._setControl",
        "startdatebutton.createComponent",
        "startdatebutton.set_border",
        "startsubdatebutton._setControl",
        "startsubdatebutton.createComponent",
        "startsubdatebutton.set_border",
        "this._p_displaytype.indexOf",
        "this._p_startdatebutton.destroy",
        "this._p_startsubdatebutton.destroy"
      ]
    },
    {
      "name": "_pPickerHeadLineControl._updateEndButton",
      "params": [
        "create_only"
      ],
      "calls": [
        "enddatebutton._setControl",
        "enddatebutton.createComponent",
        "enddatebutton.set_border",
        "endsubdatebutton._setControl",
        "endsubdatebutton.createComponent",
        "endsubdatebutton.set_border",
        "nexacro.Button",
        "nexacro.DatePickerSplitLine",
        "splitline.createComponent",
        "this._destroyEndButton",
        "this._p_endsubdatebutton.destroy",
        "this._splitline.destroy"
      ]
    },
    {
      "name": "_pPickerHeadLineControl._destroyEndButton",
      "params": [],
      "calls": [
        "this._p_enddatebutton.destroy",
        "this._p_endsubdatebutton.destroy"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._isEnable",
        "this._p_enddatebutton._setEnable",
        "this._p_endsubdatebutton._setEnable",
        "this._p_startdatebutton._setEnable",
        "this._p_startsubdatebutton._setEnable"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.set_startdatenulltext",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_startdatenulltext"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_apply_startdatenulltext",
      "params": [],
      "calls": [
        "this.on_apply_dateobj"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.set_enddatenulltext",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_enddatenulltext"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_apply_enddatenulltext",
      "params": [],
      "calls": [
        "this.on_apply_dateobj"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.set_dateformat",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_dateformat"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_apply_dateformat",
      "params": [],
      "calls": [
        "this.on_apply_dateobj"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.set_timeformat",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_timeformat"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_apply_timeformat",
      "params": [],
      "calls": [
        "this.on_apply_dateobj"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.set_displaytype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_displaytype"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_apply_displaytype",
      "params": [],
      "calls": [
        "this._updateEndButton",
        "this._updateStartButton",
        "this.on_apply_dateobj"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.set_userange",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_userange"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_apply_userange",
      "params": [],
      "calls": [
        "this._updateEndButton",
        "this.on_apply_dateobj"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.set_locale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_apply_locale",
      "params": [],
      "calls": [
        "this._getLocale",
        "this.on_apply_dateobj"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.set_dateobj",
      "params": [
        "date",
        "time"
      ],
      "calls": [
        "this.on_apply_dateobj"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.set_enddateobj",
      "params": [
        "date",
        "time"
      ],
      "calls": [
        "this.on_apply_dateobj"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_apply_dateobj",
      "params": [
        "is_end"
      ],
      "calls": [
        "dateobj._getLocaleFormatString2",
        "datetext.trim",
        "nexacro.DataUtils.toTime",
        "nexacro.Locale._makeDateMaskStringFromIntl",
        "nexacro.Locale._makeTimeMaskStringFromIntl",
        "this._p_displaytype.indexOf",
        "this._updateAll",
        "this.on_apply_dateobj",
        "this.on_apply_locale",
        "timeobj._getLocaleFormatString2",
        "timetext.trim"
      ]
    },
    {
      "name": "_pPickerHeadLineControl._updateAll",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this._p_enddatebutton.move",
        "this._p_enddatebutton.set_text",
        "this._p_endsubdatebutton.move",
        "this._p_endsubdatebutton.set_text",
        "this._p_endsubdatebutton.set_visible",
        "this._p_startdatebutton.move",
        "this._p_startdatebutton.set_text",
        "this._p_startsubdatebutton.move",
        "this._p_startsubdatebutton.set_text",
        "this._p_startsubdatebutton.set_visible",
        "this._splitline._getCurrentStyleBorder",
        "this._splitline._setDirection",
        "this._splitline.move"
      ]
    },
    {
      "name": "_pPickerHeadLineControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._updateAll"
      ]
    },
    {
      "name": "nexacro.PickerGroup",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pPickerGroup._getPickerCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup._getRangePicker",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call",
        "this._curr_picker._setFocus"
      ]
    },
    {
      "name": "_pPickerGroup._setCurrentPicker",
      "params": [
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPickerGroup._getCurrentPicker",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup._updatePickers",
      "params": [
        "create_only"
      ],
      "calls": [
        "control.createComponent",
        "picker_list.push",
        "this._destroyPickers",
        "this._getPickerCount",
        "this._setChildEventHandler",
        "this._setPickerCreateInfo"
      ]
    },
    {
      "name": "_pPickerGroup._getSplitCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup._updateSplitLines",
      "params": [],
      "calls": [
        "nexacro.DatePickerSplitLine",
        "split_line.createComponent",
        "split_line_list.push",
        "this._destroySplits",
        "this._getSplitCount"
      ]
    },
    {
      "name": "_pPickerGroup._setPickerCreateInfo",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup._destroyPickers",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup._destroySplits",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.on_create_contents",
      "params": [],
      "calls": [
        "this._updatePickers",
        "this.on_apply_direction",
        "this.on_apply_locale"
      ]
    },
    {
      "name": "_pPickerGroup.on_created_contents",
      "params": [
        "win"
      ],
      "calls": []
    },
    {
      "name": "_pPickerGroup.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": []
    },
    {
      "name": "_pPickerGroup.on_destroy_contents",
      "params": [],
      "calls": [
        "this._destroyPickers",
        "this._destroySplits"
      ]
    },
    {
      "name": "_pPickerGroup._setChildEventHandler",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_type",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_type",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_type",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_startdate",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_startdate"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_startdate",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_enddate",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_enddate"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_enddate",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_maxdate",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_maxdate"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_maxdate",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_mindate",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_mindate"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_mindate",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_readonly",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_readonly",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_direction",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_direction"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_direction",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pPickerGroup.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "picker._keyAction",
        "this._getCurrentPicker",
        "this._goBackCurrentFocus"
      ]
    },
    {
      "name": "_pPickerGroup._goBackCurrentFocus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.on_fire_onchanged",
      "params": [
        "prestartdate",
        "poststartdate",
        "preenddate",
        "postenddate"
      ],
      "calls": [
        "nexacro.RangeDateChangedEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pPickerGroup.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pPickerGroup.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this._removeEventHandlerToInnerDataset",
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pPickerGroup.set_innerdataset",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_innerdataset",
      "params": [
        "ds"
      ],
      "calls": [
        "ds._setEventHandler"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._isEnable"
      ]
    },
    {
      "name": "_pPickerGroup.set_backgroundcolumn",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_backgroundcolumn"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_backgroundcolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_bordercolumn",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_bordercolumn"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_bordercolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_datecolumn",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_datecolumn"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_datecolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_textcolorcolumn",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_textcolorcolumn"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_textcolorcolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_hintingcolumn",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_hintingcolumn"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_hintingcolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.set_readonlycolumn",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_readonlycolumn"
      ]
    },
    {
      "name": "_pPickerGroup.on_apply_readonlycolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pPickerGroup._on_dataset_onvaluechanged",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup._on_dataset_onrowsetchanged",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPickerGroup.on_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_lbuttondown_basic_action.call",
        "this._common_down_action"
      ]
    },
    {
      "name": "_pPickerGroup.on_touch_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_touch_lbuttondown_basic_action.call",
        "this._common_down_action"
      ]
    },
    {
      "name": "_pPickerGroup.on_touchstart_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_touchstart_basic_action.call",
        "nexacro._getFirstTouchInfo",
        "this._common_down_action"
      ]
    },
    {
      "name": "_pPickerGroup._common_down_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._setCurrentPicker"
      ]
    },
    {
      "name": "_pPickerGroup.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pPickerGroup.on_fire_user_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_user_onkeydown"
      ]
    },
    {
      "name": "nexacro.DatePickerGroup",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "arr.pop",
        "arr.push",
        "arr.shift",
        "arr.unshift",
        "curr.toString",
        "date.toString",
        "nexacro.DataUtils.toDate",
        "nexacro.Date",
        "nexacro.PickerGroup.call",
        "picker.set_left",
        "picker.set_top"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_after_created",
      "params": [],
      "calls": [
        "this._moveButtonON",
        "this._scrollCurrent",
        "this._setChildEventHandler",
        "this._updateSplitLines"
      ]
    },
    {
      "name": "_pDatePickerGroup._setChildEventHandler",
      "params": [],
      "calls": [
        "picker._setEventHandler",
        "picker.head.nextbutton._removeEventHandler",
        "picker.head.nextbutton._setEventHandler",
        "picker.head.prevbutton._removeEventHandler",
        "picker.head.prevbutton._setEventHandler"
      ]
    },
    {
      "name": "_pDatePickerGroup._switchingEventHandler",
      "params": [
        "picker",
        "b_org"
      ],
      "calls": [
        "picker.head.nextbutton._removeEventHandler",
        "picker.head.nextbutton._setEventHandler",
        "picker.head.prevbutton._removeEventHandler",
        "picker.head.prevbutton._setEventHandler"
      ]
    },
    {
      "name": "_pDatePickerGroup._on_button_onprevclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._movePrev"
      ]
    },
    {
      "name": "_pDatePickerGroup._on_button_onnextclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._moveNext"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.PickerGroup.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pDatePickerGroup._getSplitCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._setDatepickerheadheight",
      "params": [
        "v"
      ],
      "calls": [
        "picker._recalcLayout"
      ]
    },
    {
      "name": "_pDatePickerGroup._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._refreshDayAllPicker",
        "this.on_fire_oninnerdatachanged"
      ]
    },
    {
      "name": "_pDatePickerGroup._refreshDayAllPicker",
      "params": [],
      "calls": [
        "datepicker._refreshDay"
      ]
    },
    {
      "name": "_pDatePickerGroup._setInvalidDate",
      "params": [
        "invalid_sdate",
        "invalid_edate"
      ],
      "calls": [
        "invalid_edate.substr",
        "invalid_sdate.substr"
      ]
    },
    {
      "name": "_pDatePickerGroup._on_dataset_onrowsetchanged",
      "params": [],
      "calls": [
        "this._refreshDayAllPicker"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_backgroundcolumn",
      "params": [],
      "calls": [
        "this._refreshDayAllPicker"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_bordercolumn",
      "params": [],
      "calls": [
        "this._refreshDayAllPicker"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_datecolumn",
      "params": [],
      "calls": [
        "this._refreshDayAllPicker"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_textcolorcolumn",
      "params": [],
      "calls": [
        "this._refreshDayAllPicker"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_hintingcolumn",
      "params": [],
      "calls": [
        "this._refreshDayAllPicker"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_readonlycolumn",
      "params": [],
      "calls": [
        "this._refreshDayAllPicker"
      ]
    },
    {
      "name": "_pDatePickerGroup._recalcLayout",
      "params": [],
      "calls": [
        "e_date.toString",
        "s_date.toString",
        "this._control_element.setElementScrollMaxSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getCurrentStylePadding",
        "this._onResetScrollBar",
        "this._scrollCurrent"
      ]
    },
    {
      "name": "_pDatePickerGroup._setFocusedDay",
      "params": [
        "year",
        "month",
        "day"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._animateScroll",
      "params": [
        "kind",
        "chk_alldate",
        "no_ani",
        "is_popup_act"
      ],
      "calls": [
        "Math.min",
        "Math.pow",
        "aniframe.start",
        "nexacro.AnimationFrame",
        "performance.now",
        "pthis._animateScrollEnd",
        "pthis._scrollTo",
        "this._animateScrollEnd",
        "this._getClientWidth",
        "this._initRangePos",
        "this._isShowAllDate",
        "this._isShowEndDate",
        "this._isShowStartDate",
        "this._scrollTo",
        "this._updateRangeDate"
      ]
    },
    {
      "name": "_pDatePickerGroup._animateScrollEnd",
      "params": [
        "kind",
        "is_popup_act"
      ],
      "calls": [
        "nexacro.DataUtils.toDate",
        "nextdate.getFullYear",
        "nextdate.getMonth",
        "nextdate.setMonth",
        "nextpicker._setYearMonth",
        "prevdate.getFullYear",
        "prevdate.getMonth",
        "prevdate.setMonth",
        "prevpicker._setYearMonth",
        "slot.next.setPicker",
        "slot.prev.setPicker",
        "slot.show.addPicker",
        "this._curr_picker._setFocus",
        "this._initRangePos",
        "this._moveButtonON",
        "this._picker_ctrl_list.sort",
        "this._scrollCurrent",
        "this._updateMinMaxDate",
        "this._updateRangeDate"
      ]
    },
    {
      "name": "_pDatePickerGroup._setVScrollDefaultAction",
      "params": [
        "wheelDelta"
      ],
      "calls": [
        "this._moveNext",
        "this._movePrev"
      ]
    },
    {
      "name": "_pDatePickerGroup._setHScrollDefaultAction",
      "params": [
        "wheelDelta"
      ],
      "calls": [
        "this._moveNext",
        "this._movePrev"
      ]
    },
    {
      "name": "_pDatePickerGroup._isShowAllDate",
      "params": [],
      "calls": [
        "enddate.substr",
        "startdate.substr"
      ]
    },
    {
      "name": "_pDatePickerGroup._isShowStartDate",
      "params": [],
      "calls": [
        "startdate.substr"
      ]
    },
    {
      "name": "_pDatePickerGroup._isShowEndDate",
      "params": [],
      "calls": [
        "enddate.substr",
        "startdate.substr"
      ]
    },
    {
      "name": "_pDatePickerGroup._isShowMonth",
      "params": [
        "year",
        "month"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._scrollCurrent",
      "params": [
        "ani"
      ],
      "calls": [
        "this._scrollTo"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_slideend_basic_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": [
        "this._moveNext",
        "this._movePrev"
      ]
    },
    {
      "name": "_pDatePickerGroup._on_beforescroll",
      "params": [
        "prehpos",
        "prevpos",
        "posthpos",
        "postvpos",
        "evttype",
        "evtkind"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._movePrev",
      "params": [
        "no_ani"
      ],
      "calls": [
        "this._animateScroll",
        "this._getStartShowPicker",
        "this._moveButtonOFF"
      ]
    },
    {
      "name": "_pDatePickerGroup._moveNext",
      "params": [
        "no_ani"
      ],
      "calls": [
        "this._animateScroll",
        "this._getEndShowPicker",
        "this._moveButtonOFF"
      ]
    },
    {
      "name": "_pDatePickerGroup._goBackCurrentSelect",
      "params": [],
      "calls": [
        "this._animateScroll"
      ]
    },
    {
      "name": "_pDatePickerGroup._goBackCurrentFocus",
      "params": [],
      "calls": [
        "nexacro.Date",
        "this._initRangePos",
        "this._isShowMonth",
        "this._updateRangeDate"
      ]
    },
    {
      "name": "_pDatePickerGroup._moveButtonOFF",
      "params": [],
      "calls": [
        "head.nextbutton.set_visible",
        "head.prevbutton.set_visible"
      ]
    },
    {
      "name": "_pDatePickerGroup._moveButtonON",
      "params": [],
      "calls": [
        "ep.head.nextbutton.set_visible",
        "ep.head.prevbutton.set_visible",
        "head.nextbutton.set_visible",
        "head.prevbutton.set_visible",
        "sp.head.nextbutton.set_visible",
        "sp.head.prevbutton.set_visible",
        "this._getEndShowPicker",
        "this._getStartShowPicker"
      ]
    },
    {
      "name": "_pDatePickerGroup._getStartShowPicker",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._getEndShowPicker",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup.on_apply_startdate",
      "params": [],
      "calls": [
        "this._getWindow",
        "this._setStartDate"
      ]
    },
    {
      "name": "_pDatePickerGroup._setStartDate",
      "params": [
        "v",
        "move"
      ],
      "calls": [
        "curr.toString",
        "date.toString",
        "nexacro.DataUtils.toDate",
        "nexacro.Date",
        "this._initRangePos",
        "this._setEndDate",
        "this._updateRangeDate",
        "v.substr"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_enddate",
      "params": [],
      "calls": [
        "this._setEndDate"
      ]
    },
    {
      "name": "_pDatePickerGroup._setEndDate",
      "params": [
        "v",
        "move"
      ],
      "calls": [
        "date.toString",
        "nexacro.DataUtils.toDate",
        "this._initRangePos",
        "this._setStartDate",
        "this._updateRangeDate",
        "v.substr"
      ]
    },
    {
      "name": "_pDatePickerGroup.set_rangeposition",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_rangeposition"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_rangeposition",
      "params": [],
      "calls": [
        "this._initRangePos",
        "this._updateRangeDate"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_type",
      "params": [],
      "calls": [
        "this._updateMinMaxDate",
        "this._updateRangeDate"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_direction",
      "params": [],
      "calls": [
        "this._initSlotInfo",
        "this._recalcLayout",
        "this.set_scrolltype"
      ]
    },
    {
      "name": "_pDatePickerGroup._getEndDay",
      "params": [
        "year",
        "month"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._initRangePos",
      "params": [
        "posi",
        "adjust_month",
        "target_date"
      ],
      "calls": [
        "Math.max",
        "Math.min",
        "this._initRangeDatePos"
      ]
    },
    {
      "name": "_pDatePickerGroup._initRangeDatePos",
      "params": [
        "posi",
        "adjust_month",
        "target_date",
        "defaultrangeposition"
      ],
      "calls": [
        "date.getFullYear",
        "date.getMonth",
        "date.setDate",
        "date.setMonth",
        "slot.next.picker._setYearMonth",
        "slot.prev.picker._setYearMonth",
        "target_date.clone"
      ]
    },
    {
      "name": "_pDatePickerGroup._updateRangeDate",
      "params": [],
      "calls": [
        "e_date.getFullYear",
        "e_date.getMonth",
        "e_date.toString",
        "nexacro._traceV8CallStack",
        "s_date.getFullYear",
        "s_date.getMonth",
        "s_date.toString"
      ]
    },
    {
      "name": "_pDatePickerGroup._updateMinMaxDate",
      "params": [],
      "calls": [
        "this._getDisplayType"
      ]
    },
    {
      "name": "_pDatePickerGroup._getDisplayType",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup.set_displaymonthcount",
      "params": [
        "v",
        "_force"
      ],
      "calls": [
        "this.on_apply_displaymonthcount"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_displaymonthcount",
      "params": [],
      "calls": [
        "this._moveButtonON",
        "this._recalcLayout",
        "this._updatePickers",
        "this._updateSplitLines",
        "this.on_apply_rangeposition"
      ]
    },
    {
      "name": "_pDatePickerGroup.set_defaultrangeposition",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_defaultrangeposition"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_defaultrangeposition",
      "params": [],
      "calls": [
        "this.on_apply_rangeposition"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_maxdate",
      "params": [],
      "calls": [
        "this._updateMinMaxDate",
        "this._updateRangeDate"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_apply_mindate",
      "params": [],
      "calls": [
        "this._updateMinMaxDate",
        "this._updateRangeDate"
      ]
    },
    {
      "name": "_pDatePickerGroup._getPickerCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._getPrevShowPicker",
      "params": [
        "picker"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._getNextShowPicker",
      "params": [
        "picker"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._updatePickers",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.PickerGroup.prototype._updatePickers.call",
        "this._slot.show.pickerarr.pop",
        "this._slot.show.pickerarr.shift"
      ]
    },
    {
      "name": "_pDatePickerGroup._cancelSelectYearMonth",
      "params": [],
      "calls": [
        "this._curr_picker._cancelSelectYearMonth",
        "this._modalYearMonthPicker"
      ]
    },
    {
      "name": "_pDatePickerGroup._modalYearMonthPicker",
      "params": [
        "picker",
        "show"
      ],
      "calls": [
        "cur_picker._displayNoneSelection",
        "cur_picker._lock",
        "cur_picker.head.nextbutton.set_visible",
        "cur_picker.head.prevbutton.set_visible",
        "this._moveButtonON",
        "this._rearrangeYearMonth",
        "this._switchingEventHandler"
      ]
    },
    {
      "name": "_pDatePickerGroup._rearrangeYearMonth",
      "params": [
        "picker",
        "y",
        "m"
      ],
      "calls": [
        "curr.clone",
        "nexacro.Date",
        "next.getFullYear",
        "next.getMonth",
        "next.setMonth",
        "picker._setYearMonth",
        "prev.getFullYear",
        "prev.getMonth",
        "prev.setMonth",
        "this._updateMinMaxDate",
        "this._updateRangeDate"
      ]
    },
    {
      "name": "_pDatePickerGroup._getAttachComponent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._setZeroCaret",
      "params": [],
      "calls": [
        "edit.setCaretPos",
        "nexacro._checkActiveElement",
        "this._getAttachComponent"
      ]
    },
    {
      "name": "_pDatePickerGroup._common_down_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "refer_comp._isEnable",
        "refer_comp.text.padLeft",
        "this._setCurrentPicker"
      ]
    },
    {
      "name": "_pDatePickerGroup._common_move_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "refer_comp._isEnable",
        "refer_comp.text.padLeft",
        "this._doSelectDay",
        "this._drag_day_info.movecomp._setFocus",
        "this._setFocusedDay"
      ]
    },
    {
      "name": "_pDatePickerGroup._common_up_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._OnceCallbackTimer.callonce"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_mousemove_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_mousemove_basic_action.call",
        "this._common_move_action"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_touchmove_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_touchmove_basic_action.call",
        "nexacro._getFirstTouchInfo",
        "this._common_move_action"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_lbuttonup_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_lbuttonup_basic_action.call",
        "this._common_up_action"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_touchend_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_touchend_basic_action.call",
        "nexacro._getFirstTouchInfo",
        "this._common_up_action"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this._getRootComponent",
        "this._initSelectOrder"
      ]
    },
    {
      "name": "_pDatePickerGroup._initSelectOrder",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._initSlotInfo",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pDatePickerGroup.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._initSlotInfo",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDatePickerGroup._getCurrentDate",
      "params": [],
      "calls": [
        "currDate.getDate",
        "currDate.getFullYear",
        "currDate.getMonth"
      ]
    },
    {
      "name": "_pDatePickerGroup.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._on_datepicker_ondayclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "dayitem.text.padLeft",
        "this._doSelectDay",
        "this._on_fire_onenddateclick",
        "this._on_fire_onstartdateclick"
      ]
    },
    {
      "name": "_pDatePickerGroup._doSelectDay",
      "params": [
        "dayitem",
        "is_startselect",
        "kind"
      ],
      "calls": [
        "dayitem.text.padLeft",
        "this._range.end.toString",
        "this._range.start.toString",
        "this._setEndDate",
        "this._setStartDate",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pDatePickerGroup._lockOffAll",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._on_fire_onstartdateclick",
      "params": [
        "date",
        "kind",
        "actk"
      ],
      "calls": [
        "nexacro.EventInfo",
        "this.onstartdateclick._fireEvent"
      ]
    },
    {
      "name": "_pDatePickerGroup._on_fire_onenddateclick",
      "params": [
        "date",
        "kind"
      ],
      "calls": [
        "nexacro.EventInfo",
        "this.onenddateclick._fireEvent"
      ]
    },
    {
      "name": "_pDatePickerGroup._getCanHscroll",
      "params": [
        "hscrollbar",
        "dragscrolltype",
        "xdeltavalue"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerGroup._getCanVscroll",
      "params": [
        "vscrollbar",
        "dragscrolltype",
        "ydeltavalue"
      ],
      "calls": []
    },
    {
      "name": "nexacro.TimePickerGroup",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.PickerGroup.call"
      ]
    },
    {
      "name": "_pTimePickerGroup.on_after_created",
      "params": [],
      "calls": [
        "this._setChildEventHandler",
        "this._updateSplitLines"
      ]
    },
    {
      "name": "_pTimePickerGroup.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.PickerGroup.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pTimePickerGroup._setPickerCreateInfo",
      "params": [
        "timepicker"
      ],
      "calls": []
    },
    {
      "name": "_pTimePickerGroup._updatePickers",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.PickerGroup.prototype._updatePickers.call",
        "this.on_apply_enddate",
        "this.on_apply_startdate"
      ]
    },
    {
      "name": "_pTimePickerGroup._getPickerCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTimePickerGroup._getSplitCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTimePickerGroup._setChildEventHandler",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTimePickerGroup._isNeedValidate",
      "params": [],
      "calls": [
        "this._getRangePicker"
      ]
    },
    {
      "name": "_pTimePickerGroup._on_timepicker_starttime_changed",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._isNeedValidate",
        "this.on_apply_enddate",
        "this.on_apply_startdate",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTimePickerGroup._on_timepicker_endtime_changed",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._isNeedValidate",
        "this.on_apply_enddate",
        "this.on_apply_startdate",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTimePickerGroup.on_apply_startdate",
      "params": [],
      "calls": [
        "this._setStartDate"
      ]
    },
    {
      "name": "_pTimePickerGroup._setStartDate",
      "params": [
        "v"
      ],
      "calls": [
        "date.toString",
        "nexacro.DataUtils.toTime"
      ]
    },
    {
      "name": "_pTimePickerGroup.on_apply_enddate",
      "params": [],
      "calls": [
        "this._setEndDate"
      ]
    },
    {
      "name": "_pTimePickerGroup._setEndDate",
      "params": [
        "v"
      ],
      "calls": [
        "date.toString",
        "nexacro.DataUtils.toTime"
      ]
    },
    {
      "name": "_pTimePickerGroup.on_apply_type",
      "params": [],
      "calls": [
        "this._recalcLayout",
        "this._updatePickers",
        "this._updateSplitLines"
      ]
    },
    {
      "name": "_pTimePickerGroup.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTimePickerGroup._recalcLayout",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getCurrentStylePadding"
      ]
    },
    {
      "name": "_pTimePickerGroup.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.PickerGroup.prototype.on_keydown_basic_action.call",
        "this._getCurrentPicker",
        "this._setCurrentPicker"
      ]
    },
    {
      "name": "nexacro.DatePickerControlEx",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.DatePickerControl.call"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControlEx.on_create_contents",
      "params": [],
      "calls": [
        "body.createComponent",
        "currtDate.getDate",
        "datepicker._getBackgroundcolumn",
        "datepicker._getBordercolumn",
        "datepicker._getDatecolumn",
        "datepicker._getHintingcolumn",
        "datepicker._getTextcolorcolumn",
        "datepicker._getreadonlycolumn",
        "dayObj._changeDayUserStatus",
        "dayObj._changeUserStatus",
        "day_item.set_background",
        "day_item.set_border",
        "day_item.set_color",
        "day_item.set_enable",
        "day_item.set_tooltiptext",
        "day_item.text.padLeft",
        "ds.getColumn",
        "ds.getRowCount",
        "head.createComponent",
        "nexacro.RangeSelectionControl",
        "nexacro._DatePickerBodyControl",
        "nexacro._DatePickerBodyControl.prototype._refreshDay.call",
        "nexacro._DatePickerBodyControl.prototype.on_attach_contents_handle.call",
        "nexacro._DatePickerBodyControl.prototype.on_create_contents.call",
        "nexacro._DatePickerBodyControl.prototype.on_create_contents_command.call",
        "nexacro._DatePickerBodyControl.prototype.on_created_contents.call",
        "nexacro._DatePickerBodyControl.prototype.on_destroy_contents.call",
        "nexacro._DatePickerHeadControl",
        "nexacro._toBoolean",
        "nexacro._toString",
        "predayObj._changeDayUserStatus",
        "predayObj._changeUserStatus",
        "selection._control_element.setElementDisplay",
        "selection.createComponent",
        "this._changedDays.pop",
        "this._getDayItem",
        "this._getInnerDatasetColumns",
        "this._isToday",
        "this._p_parent._on_head_onYearMonthDown",
        "this._p_parent.on_fire_user_onkeydown",
        "this.getElement",
        "this.on_apply_datepickerchangetype",
        "this.parent._refreshBodyEndDay",
        "todayObj._changeUserStatus"
      ]
    },
    {
      "name": "head._on_static_before_onlbuttondown",
      "params": [],
      "calls": [
        "this._p_parent._on_head_onYearMonthDown"
      ]
    },
    {
      "name": "head._on_static_mobile_before_onclick",
      "params": [],
      "calls": [
        "this._p_parent._on_head_onYearMonthDown"
      ]
    },
    {
      "name": "body.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.RangeSelectionControl",
        "nexacro._DatePickerBodyControl.prototype.on_create_contents.call",
        "selection._control_element.setElementDisplay",
        "selection.createComponent"
      ]
    },
    {
      "name": "body.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._DatePickerBodyControl.prototype.on_created_contents.call",
        "this.getElement"
      ]
    },
    {
      "name": "body.on_create_contents_command",
      "params": [],
      "calls": [
        "nexacro._DatePickerBodyControl.prototype.on_create_contents_command.call"
      ]
    },
    {
      "name": "body.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._DatePickerBodyControl.prototype.on_attach_contents_handle.call"
      ]
    },
    {
      "name": "body.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro._DatePickerBodyControl.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "body._getSelections",
      "params": [],
      "calls": []
    },
    {
      "name": "body._getInnerDatasetColumns",
      "params": [],
      "calls": [
        "datepicker._getBackgroundcolumn",
        "datepicker._getBordercolumn",
        "datepicker._getDatecolumn",
        "datepicker._getHintingcolumn",
        "datepicker._getTextcolorcolumn",
        "datepicker._getreadonlycolumn"
      ]
    },
    {
      "name": "body._setDatasetStyle",
      "params": [
        "ds"
      ],
      "calls": [
        "day_item.set_background",
        "day_item.set_border",
        "day_item.set_color",
        "day_item.set_enable",
        "day_item.set_tooltiptext",
        "day_item.text.padLeft",
        "ds.getColumn",
        "ds.getRowCount",
        "nexacro._toBoolean",
        "this._getInnerDatasetColumns"
      ]
    },
    {
      "name": "body._initChangedDays",
      "params": [],
      "calls": [
        "this._changedDays.pop"
      ]
    },
    {
      "name": "body._on_apply_day",
      "params": [
        "flag"
      ],
      "calls": [
        "currtDate.getDate",
        "dayObj._changeDayUserStatus",
        "dayObj._changeUserStatus",
        "nexacro._toString",
        "predayObj._changeDayUserStatus",
        "predayObj._changeUserStatus",
        "this._getDayItem",
        "this._isToday",
        "todayObj._changeUserStatus"
      ]
    },
    {
      "name": "body._refreshDay",
      "params": [],
      "calls": [
        "nexacro._DatePickerBodyControl.prototype._refreshDay.call",
        "this.parent._refreshBodyEndDay"
      ]
    },
    {
      "name": "body.on_fire_user_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_user_onkeydown"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.DatePickerControl.prototype.on_destroy_contents.call",
        "this._overlay.destroy"
      ]
    },
    {
      "name": "_pDatePickerControlEx._on_body_onmonthclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.DatePickerControl.prototype._on_body_onmonthclick.call",
        "this._p_parent._modalYearMonthPicker"
      ]
    },
    {
      "name": "_pDatePickerControlEx._on_body_ondayclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._focusDate",
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pDatePickerControlEx._on_head_onYearMonthDown",
      "params": [],
      "calls": [
        "this._p_parent._modalYearMonthPicker"
      ]
    },
    {
      "name": "_pDatePickerControlEx._on_head_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerControlEx._keyAction",
      "params": [
        "e",
        "kind"
      ],
      "calls": [
        "this._changeMonth",
        "this._changeYear",
        "this._focusDate",
        "this._p_parent._modalYearMonthPicker",
        "this.on_fire_ondayclick"
      ]
    },
    {
      "name": "_pDatePickerControlEx._focusDate",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "curpicker.body._getDayItem",
        "e.fromreferenceobject.text.padLeft",
        "item._setAccessibilityLabel",
        "item._setFocus",
        "nexacro._toString",
        "pickergroup._getCurrentDate",
        "pickergroup._rearrangeYearMonth",
        "pickergroup._setCurrentPicker",
        "pickergroup._setFocusedDay",
        "pickergroup._startdate.substr",
        "this._getEndDay",
        "this._getNextPicker",
        "this._getPrevPicker",
        "this._getWeekLastDayItem",
        "this._getWeekStartDayItem"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DatePickerControl.prototype.on_lbuttondown_basic_action.call",
        "this._common_down_action"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_touch_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.DatePickerControl.prototype.on_touch_lbuttondown_basic_action.call",
        "this._common_down_action"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_touchstart_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "nexacro.DatePickerControl.prototype.on_touchstart_basic_action.call",
        "nexacro._getFirstTouchInfo",
        "this._common_down_action"
      ]
    },
    {
      "name": "_pDatePickerControlEx._common_down_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "pickergroup._setFocusedDay",
        "refer_comp.text.padLeft"
      ]
    },
    {
      "name": "_pDatePickerControlEx._getWeekStartDayItem",
      "params": [
        "day"
      ],
      "calls": [
        "item.id.replace",
        "this.body._getDayItem"
      ]
    },
    {
      "name": "_pDatePickerControlEx._getWeekLastDayItem",
      "params": [
        "day"
      ],
      "calls": [
        "item.id.replace",
        "this._getEndDay",
        "this.body._getDayItem"
      ]
    },
    {
      "name": "_pDatePickerControlEx._getPrevPicker",
      "params": [],
      "calls": [
        "this.parent._getPrevShowPicker",
        "this.parent._isShowMonth",
        "this.parent._movePrev"
      ]
    },
    {
      "name": "_pDatePickerControlEx._getNextPicker",
      "params": [],
      "calls": [
        "this.parent._getNextShowPicker",
        "this.parent._isShowMonth",
        "this.parent._moveNext"
      ]
    },
    {
      "name": "_pDatePickerControlEx._cancelSelectYearMonth",
      "params": [],
      "calls": [
        "body._days_visible",
        "body._months_visible",
        "body._years_visible",
        "body.weekband.set_visible",
        "head.monthstatic.set_visible",
        "head.yearstatic.set_visible"
      ]
    },
    {
      "name": "_pDatePickerControlEx._getHeadheight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControlEx.set_overlaybackground",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControlEx.set_overlayopacity",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDatePickerControlEx._getHintingcolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControlEx._getreadonlycolumn",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerControlEx._lock",
      "params": [
        "show"
      ],
      "calls": [
        "nexacro.Component",
        "overlay._setControl",
        "overlay.createComponent",
        "overlay.set_background",
        "overlay.set_opacity",
        "this._overlay.destroy"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.DatePickerControl.prototype.on_change_containerRect.call",
        "this._overlay.resize"
      ]
    },
    {
      "name": "_pDatePickerControlEx._setYearMonth",
      "params": [
        "year",
        "month"
      ],
      "calls": [
        "this._setValue"
      ]
    },
    {
      "name": "_pDatePickerControlEx._getYearMonthStr",
      "params": [],
      "calls": [
        "this._year_month.month.toString",
        "this._year_month.year.toString"
      ]
    },
    {
      "name": "_pDatePickerControlEx._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "this._getYearMonthStr",
        "this._value.substr",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "body._setDate",
        "head._recalcLayout",
        "head._setDate",
        "value.substr"
      ]
    },
    {
      "name": "_pDatePickerControlEx._setEndValue",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_endvalue"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_apply_endvalue",
      "params": [],
      "calls": [
        "body._refreshDay"
      ]
    },
    {
      "name": "_pDatePickerControlEx._refreshBodyEndDay",
      "params": [],
      "calls": [
        "body._getDayItem",
        "endvalue.substr",
        "item._changeUserStatus"
      ]
    },
    {
      "name": "_pDatePickerControlEx._updateInvalidDisplay",
      "params": [
        "invaild_startdate",
        "invalid_enddate"
      ],
      "calls": [
        "body._getDayItem",
        "invaild_startdate.substr",
        "invalid_enddate.substr",
        "item._changeUserStatus",
        "this._getYearMonthStr"
      ]
    },
    {
      "name": "_pDatePickerControlEx.set_userange",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_userange"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_apply_userange",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_endvalue"
      ]
    },
    {
      "name": "_pDatePickerControlEx._updateMinMaxDay",
      "params": [
        "mindate",
        "maxdate"
      ],
      "calls": [
        "text.padLeft",
        "this._getYearMonthStr"
      ]
    },
    {
      "name": "_pDatePickerControlEx._updateSelection",
      "params": [
        "startdate",
        "enddate"
      ],
      "calls": [
        "_control_element.setElementDisplay",
        "enddate.substr",
        "startdate.substr",
        "this._displayNoneSelection",
        "this._getYearMonthStr",
        "this.body._getSelections"
      ]
    },
    {
      "name": "_pDatePickerControlEx._displayNoneSelection",
      "params": [],
      "calls": [
        "_control_element.setElementDisplay",
        "this.body._getSelections"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_fire_ondayclick",
      "params": [
        "obj",
        "e",
        "kind"
      ],
      "calls": [
        "nexacro.CalendarDayClickEventInfo",
        "this.body._getDayItem",
        "this.ondayclick._fireEvent"
      ]
    },
    {
      "name": "_pDatePickerControlEx._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "item._setFocus",
        "nexacro.Component.prototype._on_focus.call",
        "this.body._getDayItem",
        "this.body._setFocus"
      ]
    },
    {
      "name": "_pDatePickerControlEx.on_fire_user_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_user_onkeydown"
      ]
    },
    {
      "name": "_pDatePickerControlEx._getCanHscroll",
      "params": [
        "hscrollbar",
        "dragscrolltype",
        "xdeltavalue"
      ],
      "calls": [
        "this.getHScrollPos"
      ]
    },
    {
      "name": "_pDatePickerControlEx._getCanVscroll",
      "params": [
        "vscrollbar",
        "dragscrolltype",
        "ydeltavalue"
      ],
      "calls": [
        "this.getVScrollPos"
      ]
    },
    {
      "name": "nexacro.RangeSelectionControl",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pRangeSelectionControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.DatePickerSplitLine",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pDatePickerSplitLine.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDatePickerSplitLine.on_create_contents",
      "params": [],
      "calls": [
        "this._setDirection"
      ]
    },
    {
      "name": "_pDatePickerSplitLine._setDirection",
      "params": [
        "is_horz"
      ],
      "calls": [
        "this._control_element.setElementBorderNone"
      ]
    },
    {
      "name": "nexacro.DateRangePickerDayClickEventInfo",
      "params": [
        "obj",
        "id",
        "date",
        "rangeposition"
      ],
      "calls": []
    }
  ],
  "Div.js": [
    {
      "name": "nexacro.Div",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "nexacro._InnerForm",
        "this._p_form._initLayoutManager"
      ]
    },
    {
      "name": "_pDiv.on_create_contents",
      "params": [],
      "calls": [
        "this._on_apply_fittocontents",
        "this._p_form.createComponent"
      ]
    },
    {
      "name": "_pDiv._applyElementVisible",
      "params": [
        "v"
      ],
      "calls": [
        "this._applyScrollPos",
        "this._control_element.setElementDisplay",
        "this._control_element.setElementLayoutFluidPos",
        "this._isFluidContainer",
        "this._isSelfCalculationPosition"
      ]
    },
    {
      "name": "_pDiv.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "form.createComponent",
        "form.loadForm",
        "form.on_created",
        "this._on_created_accessibility_contents",
        "this._recalcLayout",
        "this.on_apply_fittocontents",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pDiv.on_destroy_contents",
      "params": [],
      "calls": [
        "this._destroyFormControl",
        "this._destroyTextElement"
      ]
    },
    {
      "name": "_pDiv.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDiv.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "form.createComponent",
        "form.on_created",
        "this._on_attach_accessibility_contents_handle",
        "this._recalcLayout",
        "this.on_apply_fittocontents",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pDiv.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._cell_elem.setElementSize",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pDiv.on_change_containerPos",
      "params": [
        "/*left",
        "top*/"
      ],
      "calls": []
    },
    {
      "name": "_pDiv.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_form._setEnable"
      ]
    },
    {
      "name": "_pDiv.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "cell_elem.create",
        "cell_elem.setElementSize",
        "cell_elem.setElementText",
        "cell_elem.setElementTextAlign",
        "cell_elem.setElementVerticalAlign",
        "form.getElement",
        "nexacro.TextBoxElement",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getWindow",
        "this.getElement"
      ]
    },
    {
      "name": "_pDiv.set_url",
      "params": [
        "v"
      ],
      "calls": [
        "this.beginTransitionEffect",
        "this.on_apply_url"
      ]
    },
    {
      "name": "_pDiv.on_apply_url",
      "params": [
        "reload"
      ],
      "calls": [
        "form.createComponent",
        "form.loadForm",
        "form.set_tooltiptext",
        "manager.destroyLayoutContainerInfo",
        "nexacro._InnerForm",
        "nexacro._getLayoutManager",
        "this._checkAndConfirmClose",
        "this._destroyFormControl",
        "this._destroyTextElement",
        "this._getFormPosition",
        "this._on_beforeclose",
        "this._on_close",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pDiv.set_urlchangeeffect",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.TransitionEffectObject"
      ]
    },
    {
      "name": "_pDiv.set_async",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pDiv._on_apply_formscroll",
      "params": [],
      "calls": [
        "form.on_apply_scrollbarbarminsize",
        "form.on_apply_scrollbarbaroutsize",
        "form.on_apply_scrollbardecbuttonsize",
        "form.on_apply_scrollbarincbuttonsize",
        "form.on_apply_scrollbarsize",
        "form.on_apply_scrollbartrackbarsize",
        "form.on_apply_scrollindicatorsize",
        "form.on_apply_scrolltype",
        "this.on_apply_formscrollbartype"
      ]
    },
    {
      "name": "_pDiv.on_apply_fittocontents",
      "params": [],
      "calls": [
        "manager.calcLayout",
        "manager.setContainerFitType",
        "nexacro._getLayoutManager",
        "this._on_apply_fittocontents",
        "this._p_form._setFittocontents"
      ]
    },
    {
      "name": "_pDiv.set_formscrollbarbarminsize",
      "params": [
        "formscrollbarbarminsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbarbarminsize.call",
        "this._p_form.on_apply_scrollbarbarminsize"
      ]
    },
    {
      "name": "_pDiv.set_formscrollbarbaroutsize",
      "params": [
        "formscrollbarbaroutsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbarbaroutsize.call",
        "this._p_form.on_apply_scrollbarbaroutsize"
      ]
    },
    {
      "name": "_pDiv.set_formscrollbardecbuttonsize",
      "params": [
        "formscrollbardecbuttonsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbardecbuttonsize.call",
        "this._p_form.on_apply_scrollbardecbuttonsize"
      ]
    },
    {
      "name": "_pDiv.set_formscrollbarincbuttonsize",
      "params": [
        "formscrollbarincbuttonsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbarincbuttonsize.call",
        "this._p_form.on_apply_scrollbarincbuttonsize"
      ]
    },
    {
      "name": "_pDiv.set_formscrollbarsize",
      "params": [
        "formscrollbarsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbarsize.call",
        "this._p_form.on_apply_scrollbarsize"
      ]
    },
    {
      "name": "_pDiv.set_formscrollbartrackbarsize",
      "params": [
        "formscrollbartrackbarsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbartrackbarsize.call",
        "this._p_form.on_apply_scrollbartrackbarsize"
      ]
    },
    {
      "name": "_pDiv.set_formscrollbartype",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbartype.call",
        "nexacro._toString",
        "this.on_apply_formscrollbartype"
      ]
    },
    {
      "name": "_pDiv.on_apply_formscrollbartype",
      "params": [],
      "calls": [
        "nexacro._toString",
        "this._p_form.on_apply_scrollbartype",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pDiv.set_formscrollindicatorsize",
      "params": [
        "formscrollindicatorsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollindicatorsize.call",
        "this._p_form.on_apply_scrollbarsize"
      ]
    },
    {
      "name": "_pDiv.set_formscrolltype",
      "params": [
        "formscrolltype"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrolltype.call",
        "this._p_form.on_apply_scrolltype"
      ]
    },
    {
      "name": "_pDiv.set_semantictag",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pDiv.destroy",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "nexacro.Component.prototype.destroy.call",
        "this._checkAndConfirmClose",
        "this._on_beforeclose",
        "this._on_close"
      ]
    },
    {
      "name": "_pDiv.reload",
      "params": [],
      "calls": [
        "this.on_apply_url"
      ]
    },
    {
      "name": "_pDiv.getFocus",
      "params": [],
      "calls": [
        "this.parent.getFocus"
      ]
    },
    {
      "name": "_pDiv.getParentContext",
      "params": [],
      "calls": []
    },
    {
      "name": "_pDiv.getSetter",
      "params": [
        "name",
        "fnname"
      ],
      "calls": [
        "nexacro.PropBinder",
        "nexacro.SetterBinder"
      ]
    },
    {
      "name": "_pDiv.addEventHandler",
      "params": [
        "evt_id",
        "func",
        "target"
      ],
      "calls": [
        "form._addEventHandler",
        "nexacro.Component.prototype.addEventHandler.call"
      ]
    },
    {
      "name": "_pDiv.getOwnerFrame",
      "params": [],
      "calls": [
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pDiv.addChild",
      "params": [
        "id",
        "obj"
      ],
      "calls": [
        "form.addChild"
      ]
    },
    {
      "name": "_pDiv.insertChild",
      "params": [
        "idx",
        "id",
        "obj"
      ],
      "calls": [
        "form.insertChild"
      ]
    },
    {
      "name": "_pDiv.removeChild",
      "params": [
        "id"
      ],
      "calls": [
        "_window._indexOfCurrentFocusPaths",
        "_window._removeFromCurrentFocusPath",
        "form.removeChild",
        "obj._control_element._removeFromContainer",
        "obj._on_deactivate",
        "this._getWindow"
      ]
    },
    {
      "name": "_pDiv.addLayout",
      "params": [
        "name",
        "obj"
      ],
      "calls": [
        "form.addLayout"
      ]
    },
    {
      "name": "_pDiv.setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._setContents"
      ]
    },
    {
      "name": "_pDiv.scrollTo",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "this._p_form.scrollTo"
      ]
    },
    {
      "name": "_pDiv._on_activate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_activate.call",
        "this._p_form._on_activate"
      ]
    },
    {
      "name": "_pDiv._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_deactivate.call",
        "this._p_form._on_deactivate"
      ]
    },
    {
      "name": "_pDiv._on_orientationchange",
      "params": [
        "orientation"
      ],
      "calls": [
        "this._p_form._on_orientationchange"
      ]
    },
    {
      "name": "_pDiv._on_innerform_contextmenu",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "obj.parent._context_func.call"
      ]
    },
    {
      "name": "_pDiv._on_beforeclose",
      "params": [
        "root_closing_comp"
      ],
      "calls": [
        "form._on_beforeclose"
      ]
    },
    {
      "name": "_pDiv._on_bubble_beforeclose",
      "params": [
        "root_closing_comp",
        "event_bubbles",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "p_form._on_bubble_beforeclose",
        "this._getParentForm"
      ]
    },
    {
      "name": "_pDiv._on_close",
      "params": [],
      "calls": [
        "form._on_close"
      ]
    },
    {
      "name": "_pDiv._on_bubble_close",
      "params": [
        "event_bubbles",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "p_form._on_bubble_close",
        "this._getParentForm"
      ]
    },
    {
      "name": "_pDiv._destroy",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this.destroyComponent"
      ]
    },
    {
      "name": "_pDiv._checkAndConfirmClose",
      "params": [
        "confirm_message"
      ],
      "calls": [
        "this._p_form._checkAndConfirmClose"
      ]
    },
    {
      "name": "_pDiv._loadedForm",
      "params": [],
      "calls": [
        "this._getLastFocused",
        "this._on_apply_formscroll",
        "this.on_apply_fittocontents"
      ]
    },
    {
      "name": "_pDiv._destroyTextElement",
      "params": [],
      "calls": [
        "this._cell_elem.destroy"
      ]
    },
    {
      "name": "_pDiv._destroyFormControl",
      "params": [],
      "calls": [
        "this._p_form._destroy"
      ]
    },
    {
      "name": "_pDiv._loadInclude",
      "params": [
        "mainurl",
        "url",
        "notuseasync",
        "service_url"
      ],
      "calls": [
        "parent_context._getAsync",
        "parent_context.getParentContext",
        "this._loadIncludeJS.call",
        "this.getParentContext"
      ]
    },
    {
      "name": "_pDiv._loadIncludeJS",
      "params": [
        "mainurl",
        "url",
        "asyncmode",
        "service_url"
      ],
      "calls": [
        "nexacro._getServiceObject",
        "this._load_manager.loadIncludeModule"
      ]
    },
    {
      "name": "_pDiv._on_getFitSize",
      "params": [],
      "calls": [
        "form._on_getFitSize",
        "this._on_getFitSize_style"
      ]
    },
    {
      "name": "_pDiv._on_getAbsoluteContainerSize",
      "params": [
        "contents_max_rect"
      ],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._adjustPosition",
        "this._calcArrangePosition",
        "this._getCurrentStyleBorder",
        "this._parseArrangeInfo"
      ]
    },
    {
      "name": "_pDiv._on_getFluidHorizontalContainerSize",
      "params": [
        "contents_max_rect"
      ],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getCurrentStyleBorder",
        "this._p_form._getHScrollBarSize",
        "this._p_form._on_getFitSize_scroll"
      ]
    },
    {
      "name": "_pDiv._on_getFluidTableContainerSize",
      "params": [
        "contents_max_rect",
        "contents_scroll_rect"
      ],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getCurrentStyleBorder",
        "this._p_form._getHScrollBarSize",
        "this._p_form._getVScrollBarSize"
      ]
    },
    {
      "name": "_pDiv._closeForm",
      "params": [],
      "calls": [
        "this._destroyFormControl"
      ]
    },
    {
      "name": "_pDiv._recalcLayout",
      "params": [],
      "calls": [
        "form._setPos",
        "form._setSize",
        "this._getFormPosition"
      ]
    },
    {
      "name": "_pDiv._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "doc.getElementsByTagName",
        "layouts.getElementsByTagName",
        "nexacro._documentToXml",
        "nexacro._executeGlobalEvalStr",
        "nexacro._getRegisterClass",
        "nexacro._parseXMLDocument",
        "obj._setContents",
        "obj.show",
        "this._p_form.addChild"
      ]
    },
    {
      "name": "_pDiv._onApplyTabletemplate",
      "params": [
        "prev_layout_name"
      ],
      "calls": [
        "control_element.setElementTableTemplate",
        "form.getElement",
        "manager.calcFluidLayoutContents",
        "manager.getCurrentLayout",
        "manager.getLayout",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pDiv._getFormPosition",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this._initControlElementCssInfo"
      ]
    },
    {
      "name": "_pDiv._getComponentsByTaborder",
      "params": [
        "/*p",
        "b_include_all*/"
      ],
      "calls": [
        "this._p_form._isEnable"
      ]
    },
    {
      "name": "_pDiv._searchNextTabFocus",
      "params": [
        "current",
        "bSearchFromFirst",
        "opt_force_cycle",
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._searchNextTabFocus.call"
      ]
    },
    {
      "name": "_pDiv._searchPrevTabFocus",
      "params": [
        "current",
        "bSearchFromLast",
        "opt_force_cycle",
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._searchPrevTabFocus.call"
      ]
    },
    {
      "name": "_pDiv._getTabOrderNext",
      "params": [
        "current",
        "direction",
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._getTabOrderNext.call"
      ]
    },
    {
      "name": "_pDiv._getTabOrderFirst",
      "params": [
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._getTabOrderFirst.call"
      ]
    },
    {
      "name": "_pDiv._getTabOrderLast",
      "params": [
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._getTabOrderLast.call"
      ]
    },
    {
      "name": "_pDiv._getSizeInfo",
      "params": [],
      "calls": [
        "this._getAdjustFitPositionHeight",
        "this._getAdjustFitPositionWidth",
        "this._getParentComponent",
        "this._on_getFitSize"
      ]
    }
  ],
  "DomObject.js": [
    {
      "name": "nexacro.DomParseErrorEventInfo",
      "params": [
        "obj",
        "id",
        "level",
        "line",
        "column",
        "message",
        "description"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DomParser",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro._EventSinkObject.call"
      ]
    },
    {
      "name": "_pDomParser.parseFromString",
      "params": [
        "strText",
        "strMineType"
      ],
      "calls": [
        "nexacro._getParserError",
        "nexacro._parseXMLDocument",
        "this.on_fire_onparseerror"
      ]
    },
    {
      "name": "_pDomParser.on_fire_onparseerror",
      "params": [
        "level",
        "line",
        "column",
        "message",
        "description"
      ],
      "calls": [
        "nexacro.DomParseErrorEventInfo",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "nexacro.XmlSerializer",
      "params": [
        "id",
        "parent"
      ],
      "calls": []
    },
    {
      "name": "_pXmlSerializer.serializeToString",
      "params": [
        "xmldoc"
      ],
      "calls": [
        "nexacro._documentToXml"
      ]
    }
  ],
  "Edit.js": [
    {
      "name": "nexacro.Edit",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pEdit.on_create_contents",
      "params": [],
      "calls": [
        "input_elem.setElementAutoSelect",
        "input_elem.setElementAutoSkip",
        "input_elem.setElementDisplayNullText",
        "input_elem.setElementImeAction",
        "input_elem.setElementImeMode",
        "input_elem.setElementMaxLength",
        "input_elem.setElementPadding",
        "input_elem.setElementPosition",
        "input_elem.setElementReadonly",
        "input_elem.setElementSize",
        "input_elem.setElementTextAlign",
        "input_elem.setElementTextDecoration",
        "input_elem.setElementUseIme",
        "input_elem.setElementVerticalAlign",
        "nexacro.InputElement",
        "nexacro.TextBoxElement",
        "nexacro._EditUndoStack",
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth",
        "this._getStringResourceProperty",
        "this.getElement"
      ]
    },
    {
      "name": "_pEdit.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "input_elem.create",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._on_created_accessibility_contents",
        "this.on_apply_inputtype",
        "this.on_apply_usesoftkeyboard",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pEdit.on_destroy_contents",
      "params": [],
      "calls": [
        "input_elem.destroy",
        "undostack.destroy"
      ]
    },
    {
      "name": "_pEdit.on_create_contents_command",
      "params": [],
      "calls": [
        "input_elem.createCommand",
        "this.on_apply_inputtype",
        "this.on_apply_prop_enable",
        "this.on_apply_usesoftkeyboard",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pEdit.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "input_elem.attachHandle",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._on_attach_accessibility_contents_handle"
      ]
    },
    {
      "name": "_pEdit.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "input_elem.setElementSize"
      ]
    },
    {
      "name": "_pEdit.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "input_elem.setElementPosition"
      ]
    },
    {
      "name": "_pEdit._getInputElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pEdit._apply_setfocus",
      "params": [
        "evt_name",
        "self_flag"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.on_apply_force_imeSet",
        "input_elem.on_apply_imeSet",
        "input_elem.setElementFocus",
        "input_elem.setElementSetSelect",
        "nexacro._isDesktop",
        "nexacro._notifyAccessibilityInputElement",
        "this._changeUserStatus",
        "this._getAccessibilityReadLabel",
        "this._isComponentKeydownAction"
      ]
    },
    {
      "name": "_pEdit.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pEdit.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementEnable",
        "this._getCSSStyleValue"
      ]
    },
    {
      "name": "_pEdit.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._getStringResourceProperty",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pEdit.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._setValue",
        "this._undostack.clear"
      ]
    },
    {
      "name": "_pEdit.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "input_elem.getElementCaretPos",
        "input_elem.setElementSetSelect",
        "this._convertValueType",
        "this._setValue",
        "this._undostack.clear"
      ]
    },
    {
      "name": "_pEdit.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus/*",
        "currentstatus",
        "currentuserstatus*/"
      ],
      "calls": []
    },
    {
      "name": "_pEdit._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": []
    },
    {
      "name": "_pEdit._getDragData",
      "params": [],
      "calls": [
        "this.getSelectedText"
      ]
    },
    {
      "name": "_pEdit._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getTextSize",
        "this._getCurrentStyleBorder",
        "this._getCurrentStyleInheritValue",
        "this._getCurrentStylePadding",
        "this._getReferenceAbsoluteFont",
        "this.getElement"
      ]
    },
    {
      "name": "_pEdit.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._convertValueType",
        "this._setValue",
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pEdit.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "_form.getFocus",
        "input_elem.getElementCaretPos",
        "input_elem.getElementText",
        "input_elem.setElementText",
        "input_elem.setElementValue",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._getForm",
        "this._getRootComponent",
        "this._getStringResourceProperty",
        "this._undostack.push",
        "this._updateAccessibilityLabel"
      ]
    },
    {
      "name": "_pEdit.set_displaynulltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pEdit.on_apply_displaynulltext",
      "params": [
        "displaynulltext"
      ],
      "calls": [
        "input_elem.setElementDisplayNullText",
        "this._getStringResourceProperty",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pEdit.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pEdit.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "input_elem.setElementReadonly",
        "this._changeStatus"
      ]
    },
    {
      "name": "_pEdit.set_autoselect",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoselect"
      ]
    },
    {
      "name": "_pEdit.on_apply_autoselect",
      "params": [
        "autoselect"
      ],
      "calls": [
        "input_elem.setElementAutoSelect"
      ]
    },
    {
      "name": "_pEdit.set_autoskip",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoskip"
      ]
    },
    {
      "name": "_pEdit.on_apply_autoskip",
      "params": [
        "autoskip"
      ],
      "calls": [
        "input_elem.setElementAutoSkip"
      ]
    },
    {
      "name": "_pEdit.set_inputmode",
      "params": [
        "v"
      ],
      "calls": [
        "inputmode_enum.indexOf"
      ]
    },
    {
      "name": "_pEdit.set_inputfilter",
      "params": [
        "v"
      ],
      "calls": [
        "inputfilter_enum.indexOf",
        "this.on_apply_inputfilter",
        "v.split"
      ]
    },
    {
      "name": "_pEdit.on_apply_inputfilter",
      "params": [
        "inputfilter"
      ],
      "calls": [
        "nexacro._EditInputFilter"
      ]
    },
    {
      "name": "_pEdit.set_inputtype",
      "params": [
        "v"
      ],
      "calls": [
        "inputtype_enum.indexOf",
        "this.on_apply_inputtype",
        "v.split"
      ]
    },
    {
      "name": "_pEdit.on_apply_inputtype",
      "params": [],
      "calls": [
        "input_elem.setElementInputType",
        "input_type.indexOf",
        "nexacro._EditInputType"
      ]
    },
    {
      "name": "_pEdit.set_imeaction",
      "params": [
        "v"
      ],
      "calls": [
        "imeaction_enum.indexOf",
        "this.on_apply_imeaction",
        "v.split"
      ]
    },
    {
      "name": "_pEdit.on_apply_imeaction",
      "params": [
        "imeaction"
      ],
      "calls": [
        "input_elem.setElementImeAction"
      ]
    },
    {
      "name": "_pEdit.set_maxlength",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_maxlength"
      ]
    },
    {
      "name": "_pEdit.on_apply_maxlength",
      "params": [
        "maxlength"
      ],
      "calls": [
        "input_elem.setElementMaxLength"
      ]
    },
    {
      "name": "_pEdit.set_password",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_password"
      ]
    },
    {
      "name": "_pEdit.on_apply_password",
      "params": [
        "password"
      ],
      "calls": [
        "input_elem.setElementInputType"
      ]
    },
    {
      "name": "_pEdit.set_useime",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_useime"
      ]
    },
    {
      "name": "_pEdit.on_apply_useime",
      "params": [
        "useime"
      ],
      "calls": [
        "input_elem.setElementUseIme"
      ]
    },
    {
      "name": "_pEdit.set_usesoftkeyboard",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pEdit.on_apply_usesoftkeyboard",
      "params": [],
      "calls": [
        "input_elem.setElementUseSoftKeyboard",
        "this._getUseSoftKeyboardValue"
      ]
    },
    {
      "name": "_pEdit.set_imemode",
      "params": [
        "v"
      ],
      "calls": [
        "imemode_enum.indexOf",
        "this.on_apply_imemode"
      ]
    },
    {
      "name": "_pEdit.on_apply_imemode",
      "params": [
        "imemode"
      ],
      "calls": [
        "input_elem.setElementImeMode"
      ]
    },
    {
      "name": "_pEdit.set_usecontextmenu",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pEdit.set_cursor",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.CursorObject",
        "this.on_apply_cursor"
      ]
    },
    {
      "name": "_pEdit.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": [
        "input_elem.setElementTextAlign"
      ]
    },
    {
      "name": "_pEdit.on_apply_padding",
      "params": [
        "padding"
      ],
      "calls": [
        "input_elem.setElementPadding"
      ]
    },
    {
      "name": "_pEdit.on_apply_textDecoration",
      "params": [
        "textDecoration"
      ],
      "calls": [
        "input_elem.setElementTextDecoration"
      ]
    },
    {
      "name": "_pEdit.getLength",
      "params": [],
      "calls": []
    },
    {
      "name": "_pEdit.getCaretPos",
      "params": [],
      "calls": [
        "input_elem.getElementCaretPos",
        "this._isEnable"
      ]
    },
    {
      "name": "_pEdit.setCaretPos",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "nexacro._toInt",
        "this._isEnable"
      ]
    },
    {
      "name": "_pEdit.getSelect",
      "params": [],
      "calls": [
        "input_elem.getElementSelectionRange"
      ]
    },
    {
      "name": "_pEdit.setSelect",
      "params": [
        "start",
        "end"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "nexacro._isNull",
        "nexacro._isNumber",
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pEdit.getSelectedText",
      "params": [],
      "calls": [
        "input_elem.getElementSelectionRange",
        "text.substring"
      ]
    },
    {
      "name": "_pEdit.setSelectedText",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.getElementSelectionRange",
        "input_elem.setElementSetSelect",
        "newtext.substring",
        "nexacro._toString",
        "this._inputtype_obj.test",
        "this._p_text.substring",
        "this.set_value",
        "v.substring"
      ]
    },
    {
      "name": "_pEdit.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pEdit.on_deactivate_process",
      "params": [],
      "calls": [
        "input_elem._setElementLastSelectionRange",
        "input_elem.getElementSelectionRange",
        "input_elem.setCompositionComplete"
      ]
    },
    {
      "name": "_pEdit._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_deactivate.call",
        "this.on_deactivate_process.call"
      ]
    },
    {
      "name": "_pEdit._on_value_change",
      "params": [
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "this.applyto_bindSource",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pEdit._on_input_undo",
      "params": [
        "item"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "input_elem.updateElementText",
        "this._isEnable"
      ]
    },
    {
      "name": "_pEdit._on_input_redo",
      "params": [
        "item"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "input_elem.updateElementText",
        "this._isEnable"
      ]
    },
    {
      "name": "_pEdit.on_keydown_basic_before_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pEdit.on_keydown_basic_specialkey_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "input_elem._applyMaxlength",
        "input_elem.isComposing",
        "input_elem.setCompositionComplete",
        "input_elem.stopSysEvent",
        "this._undostack.redo",
        "this._undostack.undo"
      ]
    },
    {
      "name": "_pEdit.on_keydown_basic_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.isComposing",
        "this._undostack.update"
      ]
    },
    {
      "name": "_pEdit.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._isEnable",
        "this.on_keydown_basic_before_process.call",
        "this.on_keydown_basic_process.call",
        "this.on_keydown_basic_specialkey_process.call"
      ]
    },
    {
      "name": "_pEdit.on_keydown_default_before_process",
      "params": [
        "keycode"
      ],
      "calls": []
    },
    {
      "name": "_pEdit.on_keydown_default_specialkey_process",
      "params": [
        "keycode"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.isComposing",
        "input_elem.setCompositionComplete",
        "input_elem.setElementSetSelect",
        "input_elem.setElementValue",
        "this._on_value_change"
      ]
    },
    {
      "name": "_pEdit.on_keydown_default_process",
      "params": [
        "keycode"
      ],
      "calls": []
    },
    {
      "name": "_pEdit.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._isEnable",
        "this.on_keydown_default_before_process.call",
        "this.on_keydown_default_process.call",
        "this.on_keydown_default_specialkey_process.call"
      ]
    },
    {
      "name": "_pEdit.on_keypress_basic_before_process",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key/*",
        "shift_key*/"
      ],
      "calls": []
    },
    {
      "name": "_pEdit.on_keypress_basic_specialkey_process",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key/*",
        "shift_key*/"
      ],
      "calls": [
        "input_elem.stopSysEvent",
        "this._getDlgCode",
        "this._getRootComponent",
        "view._p_parent._trigger_manager._notifyTrigger"
      ]
    },
    {
      "name": "_pEdit.on_keypress_basic_process",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key/*",
        "shift_key*/"
      ],
      "calls": [
        "String.fromCharCode",
        "input_elem.stopSysEvent",
        "this._isFilterChar"
      ]
    },
    {
      "name": "_pEdit.on_keypress_basic_action",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key/*",
        "shift_key*/"
      ],
      "calls": [
        "this.on_keypress_basic_before_process.call",
        "this.on_keypress_basic_process.call",
        "this.on_keypress_basic_specialkey_process.call"
      ]
    },
    {
      "name": "_pEdit.on_beforekeyinput_basic_action",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "this._beforeinput_process_with_HTMLEvent",
        "this._beforeinput_process_with_NexacroInputEvent",
        "this._isEnable"
      ]
    },
    {
      "name": "_pEdit.on_keyinput_basic_before_process",
      "params": [
        "input_text"
      ],
      "calls": []
    },
    {
      "name": "_pEdit.on_keyinput_basic_process",
      "params": [
        "input_text"
      ],
      "calls": [
        "input_elem._getInputValue",
        "input_elem.getElementCaretPos",
        "input_elem.isComposing",
        "this._undostack.push",
        "this.set_value"
      ]
    },
    {
      "name": "_pEdit.on_keyinput_basic_action",
      "params": [
        "input_text"
      ],
      "calls": [
        "this._isEnable",
        "this._updateAccessibilityLabel",
        "this.on_keyinput_basic_before_process.call",
        "this.on_keyinput_basic_process.call"
      ]
    },
    {
      "name": "_pEdit.on_killfocus_basic_process",
      "params": [],
      "calls": [
        "_win._indexOfCurrentFocusPaths",
        "input_elem.getElementCaretPos",
        "input_elem.setElementBlur",
        "input_elem.setElementSetSelect",
        "input_elem.setElementValue",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._getRootWindow",
        "this._on_value_change",
        "this._setAccessibilityStatKillFocus"
      ]
    },
    {
      "name": "_pEdit.on_killfocus_basic_action",
      "params": [
        "/*new_focus",
        "new_refer_focus*/"
      ],
      "calls": [
        "input_elem._setElementLastSelectionRange",
        "input_elem.getElementSelectionRange",
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this.on_killfocus_basic_process.call"
      ]
    },
    {
      "name": "_pEdit.on_fire_onkillfocus",
      "params": [
        "obj",
        "fromObj"
      ],
      "calls": [
        "input_elem._updateElementValue",
        "nexacro.Component.prototype.on_fire_onkillfocus.call",
        "this._setValue"
      ]
    },
    {
      "name": "_pEdit.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.EditClickEventInfo",
        "this._getClientXY",
        "this.getCaretPos",
        "this.oneditclick._fireEvent"
      ]
    },
    {
      "name": "_pEdit.on_fire_canchange",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.canchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pEdit.on_fire_onchanged",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pEdit.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.InputEventInfo",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pEdit._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro.Component.prototype._convertValueType.call",
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pEdit._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pEdit._setReadonlyView",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementReadonly"
      ]
    },
    {
      "name": "_pEdit._setFocusToNextComponent",
      "params": [],
      "calls": [
        "next_comp._setDefaultCaret",
        "next_comp.setFocus",
        "this._getForm",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pEdit._isFilterChar",
      "params": [
        "ch"
      ],
      "calls": [
        "this._inputfilter_obj.test",
        "this._inputtype_obj.test"
      ]
    },
    {
      "name": "_pEdit.on_beforeinput_process_with_HTMLEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "input_elem._checkMaxLength",
        "input_elem._getInputValue",
        "input_elem.setElementSetSelect",
        "input_value.substring",
        "ret.push",
        "this._getWindow",
        "this._inputfilter_obj.apply",
        "this._inputtype_obj.apply",
        "update_value.replace",
        "update_value.substring",
        "value.replace"
      ]
    },
    {
      "name": "_pEdit._beforeinput_process_with_HTMLEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "this.on_beforeinput_process_with_HTMLEvent.call"
      ]
    },
    {
      "name": "_pEdit.on_beforeinput_process_with_NexacroInputEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end"
      ],
      "calls": [
        "input_elem.replaceElementText",
        "input_elem.updateElementText",
        "nexacro._is_hangul",
        "this._inputfilter_obj.apply",
        "this._inputtype_obj.apply",
        "update_value.toLowerCase",
        "update_value.toUpperCase",
        "value.substring"
      ]
    },
    {
      "name": "_pEdit._beforeinput_process_with_NexacroInputEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end"
      ],
      "calls": [
        "this.on_beforeinput_process_with_NexacroInputEvent.call"
      ]
    },
    {
      "name": "_pEdit._on_input_compositionend",
      "params": [
        "value",
        "_pos"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "this._undostack.push"
      ]
    },
    {
      "name": "_pEdit.on_apply_imeSet",
      "params": [],
      "calls": [
        "input_elem._imelocale.getLocale"
      ]
    }
  ],
  "EditBase.js": [
    {
      "name": "nexacro.InputEventInfo",
      "params": [
        "obj",
        "id"
      ],
      "calls": []
    },
    {
      "name": "nexacro.EditClickEventInfo",
      "params": [
        "obj",
        "id",
        "caretpos",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.ClickEventInfo.call"
      ]
    },
    {
      "name": "nexacro._substrByUnit",
      "params": [
        "str",
        "start",
        "length",
        "unit"
      ],
      "calls": [
        "Math.max",
        "nexacro._substrByAscii",
        "nexacro._substrByUtf8",
        "str.substr"
      ]
    },
    {
      "name": "nexacro._getLengthByUnit",
      "params": [
        "str",
        "unit"
      ],
      "calls": [
        "nexacro._getAsciiLength",
        "nexacro._getUtf8Length"
      ]
    },
    {
      "name": "nexacro.__utf8Len",
      "params": [
        "codePoint"
      ],
      "calls": []
    },
    {
      "name": "nexacro.__isHighSurrogate",
      "params": [
        "codeUnit"
      ],
      "calls": []
    },
    {
      "name": "nexacro.__isLowSurrogate",
      "params": [
        "codeUnit"
      ],
      "calls": []
    },
    {
      "name": "nexacro.__toCodepoint",
      "params": [
        "highCodeUnit",
        "lowCodeUnit"
      ],
      "calls": [
        "nexacro.__isHighSurrogate",
        "nexacro.__isLowSurrogate"
      ]
    },
    {
      "name": "nexacro._substrByUtf8",
      "params": [
        "str",
        "start",
        "length"
      ],
      "calls": [
        "nexacro.__isHighSurrogate",
        "nexacro.__toCodepoint",
        "nexacro.__utf8Len",
        "str.charCodeAt",
        "str.substring"
      ]
    },
    {
      "name": "nexacro._substrByAscii",
      "params": [
        "str",
        "start",
        "length"
      ],
      "calls": [
        "str.charCodeAt",
        "str.substring"
      ]
    },
    {
      "name": "nexacro._getUtf8Length",
      "params": [
        "str"
      ],
      "calls": [
        "nexacro.__isHighSurrogate",
        "nexacro.__utf8Len",
        "nexacro.toCodepoint",
        "str.charCodeAt"
      ]
    },
    {
      "name": "nexacro._getAsciiLength",
      "params": [
        "str"
      ],
      "calls": [
        "str.charCodeAt"
      ]
    },
    {
      "name": "nexacro._getWCharLen",
      "params": [
        "v"
      ],
      "calls": [
        "v.charCodeAt"
      ]
    },
    {
      "name": "nexacro._is_hangul",
      "params": [
        "v"
      ],
      "calls": [
        "r.test"
      ]
    },
    {
      "name": "nexacro._is_english",
      "params": [
        "v"
      ],
      "calls": [
        "r.test"
      ]
    },
    {
      "name": "nexacro._is_half_japaness",
      "params": [
        "v"
      ],
      "calls": [
        "r.test"
      ]
    },
    {
      "name": "nexacro._is_japanese",
      "params": [
        "keycode",
        "v"
      ],
      "calls": [
        "regexp_ascii.test",
        "regexp_greek.test",
        "regexp_hanja.test",
        "regexp_nipon.test"
      ]
    },
    {
      "name": "nexacro._ImeLocale",
      "params": [],
      "calls": [
        "nexacro.System.locale.substring"
      ]
    },
    {
      "name": "_pImeLocale._find_imeLocale",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.System.locale.substring",
        "r.test",
        "this._locale.substring"
      ]
    },
    {
      "name": "_pImeLocale.setLocale",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pImeLocale.getLocale",
      "params": [],
      "calls": []
    },
    {
      "name": "_pImeLocale.IsChangeLocale",
      "params": [],
      "calls": []
    },
    {
      "name": "_pImeLocale.updateLocale",
      "params": [
        "v"
      ],
      "calls": [
        "this._find_imeLocale"
      ]
    },
    {
      "name": "nexacro._CompositionState",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCompositeState.isComposing",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCompositeState.setStatus",
      "params": [
        "status",
        "offset",
        "skip_caret"
      ],
      "calls": []
    },
    {
      "name": "_pCompositeState.setDelayStatus",
      "params": [
        "status",
        "pos"
      ],
      "calls": []
    },
    {
      "name": "_pCompositeState.setOffset",
      "params": [
        "begin",
        "end"
      ],
      "calls": []
    },
    {
      "name": "_pCompositeState.getOffset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCompositeState.isHasCandiateWindow",
      "params": [
        "chars",
        "recheck"
      ],
      "calls": [
        "chars.match"
      ]
    },
    {
      "name": "nexacro._EditInputFilter",
      "params": [
        "filter"
      ],
      "calls": [
        "this._parse"
      ]
    },
    {
      "name": "_pEditInputFilter.init",
      "params": [
        "filter"
      ],
      "calls": [
        "this._parse"
      ]
    },
    {
      "name": "_pEditInputFilter._parse",
      "params": [
        "filter"
      ],
      "calls": [
        "filter.split"
      ]
    },
    {
      "name": "_pEditInputFilter.test",
      "params": [
        "ch"
      ],
      "calls": [
        "this.pattern.test"
      ]
    },
    {
      "name": "_pEditInputFilter.apply",
      "params": [
        "value"
      ],
      "calls": [
        "text.join",
        "text.push",
        "this.pattern.test",
        "value.split"
      ]
    },
    {
      "name": "nexacro._EditInputType",
      "params": [
        "type"
      ],
      "calls": [
        "this._parse"
      ]
    },
    {
      "name": "_pEditInputType.init",
      "params": [
        "type"
      ],
      "calls": [
        "this._parse"
      ]
    },
    {
      "name": "_pEditInputType._parse",
      "params": [
        "type"
      ],
      "calls": [
        "arrType.push",
        "arrTypeFilter.push",
        "type.indexOf",
        "type.split"
      ]
    },
    {
      "name": "_pEditInputType.test",
      "params": [
        "ch"
      ],
      "calls": [
        "this.filterpattern.test",
        "this.typepattern.test"
      ]
    },
    {
      "name": "_pEditInputType.apply",
      "params": [
        "value"
      ],
      "calls": [
        "text.join",
        "text.push",
        "this.filterpattern.test",
        "this.typepattern.test",
        "value.replace",
        "value.split"
      ]
    },
    {
      "name": "nexacro._EditUndoStack",
      "params": [
        "target"
      ],
      "calls": [
        "nexacro.Object.call"
      ]
    },
    {
      "name": "_pEditUndoStack.push",
      "params": [
        "value",
        "start",
        "end"
      ],
      "calls": [
        "stack.splice",
        "this.stack.push"
      ]
    },
    {
      "name": "_pEditUndoStack.update",
      "params": [
        "start",
        "end"
      ],
      "calls": []
    },
    {
      "name": "_pEditUndoStack.undo",
      "params": [],
      "calls": [
        "target._on_input_undo"
      ]
    },
    {
      "name": "_pEditUndoStack.redo",
      "params": [],
      "calls": [
        "target._on_input_redo"
      ]
    },
    {
      "name": "_pEditUndoStack.clear",
      "params": [],
      "calls": []
    },
    {
      "name": "_pEditUndoStack.destroy",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._EditMaskType",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskType.setMask",
      "params": [
        "mask"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.setLocale",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.setLimitType",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.setMaskChar",
      "params": [
        "ch"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.setFillChar",
      "params": [
        "ch"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.setEditStatus",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.setPostfixtext",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.applyMask",
      "params": [
        "value"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.arrangeMask",
      "params": [
        "input_text",
        "begin",
        "end"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.removeMask",
      "params": [
        "masked_text"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.keyPressed",
      "params": [
        "/*ch",
        "pos*/"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.findNearEditablePos",
      "params": [
        "pos/*",
        "direction*/"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.isDeletableChar",
      "params": [
        "/*ch",
        "pos*/"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.isFilterChar",
      "params": [
        "/*ch",
        "pos*/"
      ],
      "calls": []
    },
    {
      "name": "_pMaskType.isFilled",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskType.getInputMode",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskType.getEditStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._EditMaskTypeNumber",
      "params": [],
      "calls": [
        "nexacro._EditMaskType.call",
        "this._init"
      ]
    },
    {
      "name": "nexacro._EditMaskTypeNumber._put_thousand_seperator",
      "params": [
        "text",
        "grouping"
      ],
      "calls": [
        "grouping.shift",
        "nexacro._EditMaskTypeNumber._put_thousand_seperator",
        "reg.test",
        "text.replace"
      ]
    },
    {
      "name": "_pMaskTypeNumber._init",
      "params": [],
      "calls": [
        "this._init_digits"
      ]
    },
    {
      "name": "_pMaskTypeNumber._init_digits",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskTypeNumber.setMask",
      "params": [
        "mask"
      ],
      "calls": [
        "this._parseMask"
      ]
    },
    {
      "name": "_pMaskTypeNumber.setUseGrouping",
      "params": [
        "bgroup"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeNumber._parseMask",
      "params": [
        "mask"
      ],
      "calls": [
        "dec_part.indexOf",
        "dec_part.lastIndexOf",
        "dec_part.replace",
        "int_part.indexOf",
        "int_part.split",
        "mask.indexOf",
        "mask.substring",
        "nexacro._EditMaskTypeNumber._put_thousand_seperator",
        "reg_valid.test",
        "this._grouping.slice",
        "this._init_digits",
        "this.setUseGrouping"
      ]
    },
    {
      "name": "_pMaskTypeNumber.setLocale",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Locale.getLocaleInfo"
      ]
    },
    {
      "name": "_pMaskTypeNumber.setLimitType",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeNumber.applyMask",
      "params": [
        "value"
      ],
      "calls": [
        "dec_part.padLeft",
        "dec_part.slice",
        "dec_part.substring",
        "int_part.lastIndexOf",
        "int_part.padLeft",
        "int_part.replace",
        "int_part.split",
        "nexacro._EditMaskTypeNumber._put_thousand_seperator",
        "nexacro._toString",
        "text.indexOf",
        "text.replace",
        "text.substring",
        "this._grouping.slice"
      ]
    },
    {
      "name": "_pMaskTypeNumber.arrangeMask",
      "params": [
        "input_text",
        "begin",
        "end"
      ],
      "calls": [
        "dec_buf.join",
        "dec_buf.push",
        "dec_buf.splice",
        "input_text.substring",
        "int_buf.join",
        "int_buf.push",
        "int_buf.splice",
        "int_part.replace",
        "nexacro._EditMaskTypeNumber._put_thousand_seperator",
        "nexacro._toString",
        "result_buf.join",
        "result_buf.push",
        "text.replace",
        "text.substring",
        "this._grouping.slice"
      ]
    },
    {
      "name": "_pMaskTypeNumber.removeMask",
      "params": [
        "masked_text"
      ],
      "calls": [
        "dec_buf.join",
        "dec_buf.push",
        "nexacro._toString",
        "result_buf.join",
        "result_buf.push",
        "text.replace"
      ]
    },
    {
      "name": "_pMaskTypeNumber.isDeletableChar",
      "params": [
        "ch/*",
        "pos*/"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeNumber.isFilterChar",
      "params": [
        "ch/*",
        "pos*/"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeNumber.isFilled",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._EditMaskTypeString",
      "params": [],
      "calls": [
        "nexacro._EditMaskType.call",
        "this._init"
      ]
    },
    {
      "name": "_pMaskTypeString._init",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskTypeString.setMask",
      "params": [
        "mask"
      ],
      "calls": [
        "this._parseMask"
      ]
    },
    {
      "name": "_pMaskTypeString._parseMask",
      "params": [
        "mask"
      ],
      "calls": [
        "empty_buf.join",
        "empty_buf.push",
        "mask_buf.push",
        "this._init",
        "value_buf.push"
      ]
    },
    {
      "name": "_pMaskTypeString.setMaskChar",
      "params": [
        "ch"
      ],
      "calls": [
        "this._parseMask"
      ]
    },
    {
      "name": "_pMaskTypeString.applyMask",
      "params": [
        "value"
      ],
      "calls": [
        "mask.test",
        "nexacro._executeEvalStr",
        "nexacro._toString",
        "result_buf.join",
        "result_buf.push",
        "strval.replace",
        "val.replace"
      ]
    },
    {
      "name": "_pMaskTypeString.arrangeMask",
      "params": [
        "input_text",
        "begin",
        "end"
      ],
      "calls": [
        "mask.test",
        "nexacro._executeEvalStr",
        "nexacro._toString",
        "text.split",
        "text.substr",
        "text_buf.join",
        "text_buf.splice",
        "val.replace"
      ]
    },
    {
      "name": "_pMaskTypeString.removeMask",
      "params": [
        "masked_text"
      ],
      "calls": [
        "nexacro._toString",
        "result_buf.join",
        "result_buf.push"
      ]
    },
    {
      "name": "_pMaskTypeString.keyPressed",
      "params": [
        "ch",
        "pos"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeString.findNearEditablePos",
      "params": [
        "pos",
        "direction"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeString.isDeletableChar",
      "params": [
        "ch",
        "pos"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeString.isFilterChar",
      "params": [
        "ch",
        "pos"
      ],
      "calls": [
        "mask.test"
      ]
    },
    {
      "name": "_pMaskTypeString.isFilled",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._EditMaskTypeDate",
      "params": [],
      "calls": [
        "nexacro._EditMaskType.call",
        "this._init"
      ]
    },
    {
      "name": "_pMaskTypeDate._init",
      "params": [],
      "calls": [
        "this._initdate",
        "this._initdatemask",
        "this._initeditmask"
      ]
    },
    {
      "name": "_pMaskTypeDate._initdate",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate._initeditmask",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate._initdatemask",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.setInputMode",
      "params": [
        "mode"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.setUseEditBuffer",
      "params": [
        "use"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.setDate",
      "params": [
        "date"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate._parseDate",
      "params": [
        "date"
      ],
      "calls": [
        "_obj.getFullYear",
        "_obj.setFullYear",
        "base_date.getFullYear",
        "date.substr",
        "info.push",
        "this._initdate",
        "this.getDateFormatType",
        "this.getEditFormatType"
      ]
    },
    {
      "name": "_pMaskTypeDate.setEditMask",
      "params": [
        "mask"
      ],
      "calls": [
        "this._parseDate",
        "this._parseEditMask",
        "this.changeTypeToDate"
      ]
    },
    {
      "name": "_pMaskTypeDate._parseEditMask",
      "params": [
        "mask"
      ],
      "calls": [
        "empty_buf.join",
        "empty_buf.push",
        "empty_buf.splice",
        "info.push",
        "mask_buf.push",
        "mask_buf.splice",
        "nexacro.Locale._makeDateMaskString",
        "nexacro._isNull",
        "this._getLocale",
        "this._initeditmask",
        "this.changeMaskToType",
        "this.isMaskChar",
        "type_buf.push",
        "type_buf.splice",
        "updateinfos.push",
        "value_buf.push",
        "value_buf.splice"
      ]
    },
    {
      "name": "_pMaskTypeDate.setDateMask",
      "params": [
        "mask"
      ],
      "calls": [
        "this._parseDateMask"
      ]
    },
    {
      "name": "_pMaskTypeDate._parseDateMask",
      "params": [
        "mask"
      ],
      "calls": [
        "empty_buf.join",
        "empty_buf.push",
        "info.push",
        "mask_buf.push",
        "nexacro.Locale._makeDateMaskString",
        "nexacro._isNull",
        "this._getLocale",
        "this._initdatemask",
        "this.changeMaskToType",
        "this.isMaskChar",
        "type_buf.push",
        "value_buf.push"
      ]
    },
    {
      "name": "_pMaskTypeDate.setLocale",
      "params": [
        "locale"
      ],
      "calls": [
        "nexacro.Locale.getLocaleInfo",
        "this._parseDateMask",
        "this._parseEditMask"
      ]
    },
    {
      "name": "_pMaskTypeDate.applyMask",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro._toString",
        "this._appliedMaskString",
        "this._edit_char_buf.concat",
        "this._parseDate",
        "this.setDate",
        "tmpStr.split"
      ]
    },
    {
      "name": "_pMaskTypeDate.applyMaskEx",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro._toString",
        "this._appliedMaskString",
        "this._edit_char_buf.concat",
        "this._editmask.slice",
        "this._parseDate",
        "this.setDate",
        "tmpStr.split"
      ]
    },
    {
      "name": "_pMaskTypeDate.applyMaskSpin",
      "params": [
        "caretPos",
        "diff"
      ],
      "calls": [
        "changeidx_buf.push",
        "char_buf.join",
        "intVal.toString",
        "nexacro._isNull",
        "this._appliedMaskString",
        "this._edit_type_buf.slice",
        "this.getEndDay",
        "tmpStr.split"
      ]
    },
    {
      "name": "_pMaskTypeDate.arrangeMask",
      "params": [
        "input_text",
        "begin",
        "end",
        "end_sel"
      ],
      "calls": [
        "mask.test",
        "nexacro._toString",
        "nexacro.toNumber",
        "text.split",
        "text_buf.join",
        "text_buf.splice"
      ]
    },
    {
      "name": "_pMaskTypeDate.removeMask",
      "params": [
        "char_buf",
        "_is_date"
      ],
      "calls": [
        "nexacro._isNull",
        "result_buf.join",
        "this._getRemoveMaskString",
        "tmp_str.concat"
      ]
    },
    {
      "name": "_pMaskTypeDate.keyPressed",
      "params": [
        "ch",
        "pos"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.findNearEditablePos",
      "params": [
        "pos",
        "direction"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.isDeletableChar",
      "params": [
        "ch",
        "pos"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.isFilterChar",
      "params": [
        "ch",
        "pos_begin",
        "pos_end",
        "skip_maxday"
      ],
      "calls": [
        "ch.replace",
        "regexp_num.test",
        "this._edit_char_buf.slice",
        "this.changeTypeToDate",
        "this.getEditFormatType",
        "this.getEndDay",
        "this.removeMask",
        "val.substr"
      ]
    },
    {
      "name": "_pMaskTypeDate.isFilterCharEx",
      "params": [
        "ch",
        "pos_begin",
        "pos_end"
      ],
      "calls": [
        "ch.replace",
        "regexp_num.test",
        "this._edit_char_buf.slice",
        "this.changeTypeToDate",
        "this.editmask.substr",
        "this.editmask_logical.substr",
        "this.getEditFormatType",
        "this.getEndDay",
        "this.isMaskChar",
        "this.removeMask",
        "val.substr"
      ]
    },
    {
      "name": "_pMaskTypeDate.isFilled",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.isMaskChar",
      "params": [
        "ch"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.isMaskString",
      "params": [
        "str"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.getEditFormatType",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.getEditFormatStringType",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.getDateFormatType",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.getCurrentText",
      "params": [],
      "calls": [
        "this._edit_char_buf.join"
      ]
    },
    {
      "name": "_pMaskTypeDate.getEmptyText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.getDatePickerValue",
      "params": [],
      "calls": [
        "currentDate.getDate",
        "currentDate.getFullYear",
        "currentDate.getMonth",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pMaskTypeDate.getCurrentDate",
      "params": [],
      "calls": [
        "currDate.getDate",
        "currDate.getFullYear",
        "currDate.getMonth"
      ]
    },
    {
      "name": "_pMaskTypeDate.getEndDay",
      "params": [
        "y",
        "m"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate.changeNormalizeValue",
      "params": [
        "v"
      ],
      "calls": [
        "M.padLeft",
        "d.padLeft",
        "date.toString",
        "h.padLeft",
        "m.padLeft",
        "nexacro.Date",
        "nexacro._isNull",
        "s.padLeft",
        "ss.padLeft",
        "this.getEditFormatType",
        "v.substr",
        "v.toString",
        "v.trim",
        "y.padLeft"
      ]
    },
    {
      "name": "_pMaskTypeDate.changeNormalizeValueFromBuffer",
      "params": [],
      "calls": [
        "M.padLeft",
        "d.padLeft",
        "date_obj.toString",
        "h.padLeft",
        "m.padLeft",
        "ms.padLeft",
        "nexacro.Date",
        "nexacro._isNull",
        "nexacro.replaceAll",
        "normal_format.indexOf",
        "normal_format.pop",
        "s.padLeft",
        "this.changeTypeToDate",
        "this.getEditFormatStringType",
        "y.padLeft"
      ]
    },
    {
      "name": "_pMaskTypeDate.convertToDateObject",
      "params": [
        "v",
        "type"
      ],
      "calls": [
        "M.padLeft",
        "d.padLeft",
        "h.padLeft",
        "m.padLeft",
        "nexacro.Date",
        "nexacro._isNull",
        "s.padLeft",
        "ss.padLeft",
        "this.getEditFormatType",
        "v.substr",
        "v.toString",
        "v.trim",
        "y.padLeft"
      ]
    },
    {
      "name": "_pMaskTypeDate.changeMaskToType",
      "params": [
        "mask"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pMaskTypeDate.changeTypeToDate",
      "params": [
        "type"
      ],
      "calls": []
    },
    {
      "name": "_pMaskTypeDate._appliedMaskString",
      "params": [
        "info",
        "text"
      ],
      "calls": [
        "_obj.getFullYear",
        "_obj.setFullYear",
        "base_date.getFullYear",
        "jsDate.getDay",
        "nexacro._toString",
        "val.padLeft",
        "val.substr"
      ]
    },
    {
      "name": "_pMaskTypeDate._getRemoveMaskString",
      "params": [
        "type",
        "val"
      ],
      "calls": [
        "val.padLeft",
        "val.trim"
      ]
    },
    {
      "name": "_pMaskTypeDate._getLocale",
      "params": [],
      "calls": [
        "nexacro._getLocale"
      ]
    },
    {
      "name": "nexacro._GridMaskTypeNumber",
      "params": [],
      "calls": [
        "nexacro._EditMaskTypeNumber.call",
        "this._init"
      ]
    },
    {
      "name": "_pGridMaskTypeNumber.setMask",
      "params": [
        "mask"
      ],
      "calls": []
    },
    {
      "name": "_pGridMaskTypeNumber._parseMask",
      "params": [
        "mask"
      ],
      "calls": []
    },
    {
      "name": "_pGridMaskTypeNumber.applyMask",
      "params": [
        "value"
      ],
      "calls": []
    }
  ],
  "Element_HTML5.js": [
    {
      "name": "nexacro.__createCanvasElementHandle",
      "params": [
        "element",
        "_doc",
        "left",
        "top",
        "width",
        "height"
      ],
      "calls": [
        "_doc.createElement",
        "handle.getContext",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size"
      ]
    },
    {
      "name": "nexacro.__destroyCanvasElementHandle",
      "params": [
        "_parent_handle",
        "handle"
      ],
      "calls": [
        "_parent_handle.removeChild"
      ]
    },
    {
      "name": "nexacro.__setLastFocusedElement",
      "params": [
        "elem"
      ],
      "calls": [
        "elem.linkedcontrol._getWindow",
        "elem.parent_elem.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "nexacro.Element",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMStyle_PaddingObject",
        "nexacro.__setDOMStyle_TextDecorationObject",
        "owner_elem._getRootWindowHandle",
        "this._getElementClassName",
        "this._refreshCommonStyleProps",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getHTMLStyle_PaddingObject",
        "nexacro.__getHTMLStyle_TextDecorationObject",
        "this._getCommonStyleStr",
        "this._getElementClassName",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pElement._removeElementHandle",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "_pElement._destroyElementHandle",
      "params": [],
      "calls": [
        "this._removeElementHandle"
      ]
    },
    {
      "name": "_pElement.destroy",
      "params": [],
      "calls": [
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "_pElement.isInputElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement.stopSysEvent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement._appendToContainer",
      "params": [
        "owner_elem"
      ],
      "calls": [
        "nexacro.__appendDOMNode"
      ]
    },
    {
      "name": "_pElement._insertToContainer",
      "params": [
        "owner_elem",
        "before_elem"
      ],
      "calls": [
        "nexacro.__insertDOMNode"
      ]
    },
    {
      "name": "_pElement._removeFromContainer",
      "params": [],
      "calls": [
        "linkedcontrol._findOwnerElementHandle",
        "nexacro.__removeDOMNode",
        "nexacro.__unlinkDOMNode"
      ]
    },
    {
      "name": "_pElement.getContainerElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement._getRootWindowHandle",
      "params": [],
      "calls": [
        "this.owner_elem._getRootWindowHandle"
      ]
    },
    {
      "name": "_pElement._isRtl",
      "params": [
        "bPosition"
      ],
      "calls": [
        "this.parent.getElement"
      ]
    },
    {
      "name": "_pElement._isParentRtl",
      "params": [],
      "calls": [
        "this.parent.getElement"
      ]
    },
    {
      "name": "_pElement._checkUpdateElementByRTL",
      "params": [
        "handle",
        "prop"
      ],
      "calls": [
        "this._isParentRtl",
        "this._isRtl"
      ]
    },
    {
      "name": "_pElement.setElementLayoutType",
      "params": [
        "layouttype"
      ],
      "calls": [
        "client_elem._setElementLayoutType"
      ]
    },
    {
      "name": "_pElement.setElementLayoutFluidPos",
      "params": [
        "visible"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_LayoutFluidPos",
        "nexacro.__clearDOMStyle_Pos",
        "nexacro.__setDOMStyle_LayoutFluidPos",
        "nexacro.__setDOMStyle_Pos"
      ]
    },
    {
      "name": "_pElement.setElementLayoutHorizontalGap",
      "params": [
        "layouthorizontalgap"
      ],
      "calls": [
        "client_elem._setElementLayoutHorizontalGap"
      ]
    },
    {
      "name": "_pElement.setElementLayoutVerticalGap",
      "params": [
        "layoutverticalgap"
      ],
      "calls": [
        "client_elem._setElementLayoutVerticalGap"
      ]
    },
    {
      "name": "_pElement.setElementFlexMainAxisAlign",
      "params": [
        "flexmainaxisalign"
      ],
      "calls": [
        "client_elem._setElementFlexMainAxisAlign",
        "this._getPropertyFlexAlign"
      ]
    },
    {
      "name": "_pElement.setElementFlexCrossAxisAlign",
      "params": [
        "flexcrossaxisalign"
      ],
      "calls": [
        "client_elem._setElementFlexCrossAxisAlign",
        "this._getPropertyFlexAlign"
      ]
    },
    {
      "name": "_pElement.setElementFlexCrossAxisWrapAlign",
      "params": [
        "flexcrossaxiswrapalign"
      ],
      "calls": [
        "client_elem._setElementFlexCrossAxisWrapAlign",
        "this._getPropertyFlexAlign"
      ]
    },
    {
      "name": "_pElement.setElementTableCellAlign",
      "params": [
        "tablecellalign"
      ],
      "calls": [
        "client_elem._setElementTableCellAlign"
      ]
    },
    {
      "name": "_pElement.setElementTableCellinCompAlign",
      "params": [
        "tablecellincompalign"
      ],
      "calls": [
        "client_elem._setElementTableCellinCompAlign"
      ]
    },
    {
      "name": "_pElement._getPropertyFlexAlign",
      "params": [
        "name"
      ],
      "calls": []
    },
    {
      "name": "_pElement._parseLayoutCellAlign",
      "params": [
        "tablealign"
      ],
      "calls": [
        "tablealign.trim",
        "this._getPropertyFlexAlign",
        "val.split"
      ]
    },
    {
      "name": "_pElement._compareLayoutBasis",
      "params": [
        "layoutbasis1",
        "layoutbasis2"
      ],
      "calls": []
    },
    {
      "name": "_pElement.setElementFlexWrap",
      "params": [
        "flexwrap"
      ],
      "calls": [
        "client_elem._setElementFlexWrap"
      ]
    },
    {
      "name": "_pElement.setElementFlexGrow",
      "params": [
        "flexgrow"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexGrow"
      ]
    },
    {
      "name": "_pElement.setElementFlexShrink",
      "params": [
        "flexshrink"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexShrink"
      ]
    },
    {
      "name": "_pElement.setElementTableTemplate",
      "params": [
        "tabletemplate"
      ],
      "calls": [
        "client_elem._setElementTableTemplate",
        "tabletemplate.split"
      ]
    },
    {
      "name": "_pElement.setElementTableTemplateArea",
      "params": [
        "tabletemplatearea"
      ],
      "calls": [
        "client_elem._setElementTableTemplateArea"
      ]
    },
    {
      "name": "_pElement.setElementTableDirection",
      "params": [
        "tabledirection"
      ],
      "calls": [
        "client_elem._setElementTableDirection"
      ]
    },
    {
      "name": "_pElement.setElementLayoutSpacing",
      "params": [
        "layoutspacing"
      ],
      "calls": [
        "client_elem._setElementLayoutSpacing",
        "nexacro.PaddingObject",
        "this._setElementLayoutSpacing"
      ]
    },
    {
      "name": "_pElement.setElementPosition",
      "params": [
        "left",
        "top",
        "bforce"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_Translate",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Translate",
        "this._checkUpdateElementByRTL",
        "this._isFluid",
        "this._isParentRtl"
      ]
    },
    {
      "name": "_pElement._isFluid",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement._forceApplyPosTop",
      "params": [
        "top"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Pos",
        "this._isParentRtl"
      ]
    },
    {
      "name": "_pElement._forceApplyPosLeft",
      "params": [],
      "calls": [
        "nexacro.__setDOMStyle_Pos",
        "this._isParentRtl"
      ]
    },
    {
      "name": "_pElement.setElementSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_Size",
        "nexacro.__setDOMStyle_Size"
      ]
    },
    {
      "name": "_pElement.setElementVisible",
      "params": [
        "visible"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Visible",
        "nexacro.__setDOMStyle_Zindex"
      ]
    },
    {
      "name": "_pElement.setElementVisible",
      "params": [
        "visible"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Visible"
      ]
    },
    {
      "name": "_pElement.setElementVisible",
      "params": [
        "visible"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Visible"
      ]
    },
    {
      "name": "_pElement.setElementRtl",
      "params": [
        "rtl"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Direction"
      ]
    },
    {
      "name": "_pElement.setElementTypeCSSSelector",
      "params": [
        "typename"
      ],
      "calls": [
        "nexacro.__setDOMNode_ClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pElement.setElementClassCSSSelector",
      "params": [
        "classname"
      ],
      "calls": [
        "nexacro.__setDOMNode_ClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pElement.setElementTextAlignByClassCSSSelector",
      "params": [
        "textalign"
      ],
      "calls": [
        "this._isRtl",
        "this.setElementClassCSSSelector"
      ]
    },
    {
      "name": "_pElement._getElementClassName",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement._getElementNexaClassName",
      "params": [
        "type",
        "id"
      ],
      "calls": [
        "this._isRtl"
      ]
    },
    {
      "name": "_pElement.setElementStatus",
      "params": [
        "status"
      ],
      "calls": [
        "nexacro.__setDOMNode_Status"
      ]
    },
    {
      "name": "_pElement.setElementUserStatus",
      "params": [
        "userstatus"
      ],
      "calls": [
        "nexacro.__setDOMNode_UserStatus"
      ]
    },
    {
      "name": "_pElement._getWindow",
      "params": [],
      "calls": [
        "this.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "_pElement.setElementColor",
      "params": [
        "color"
      ],
      "calls": [
        "nexacro.__setDOMStyle_ColorObject"
      ]
    },
    {
      "name": "_pElement.setElementFont",
      "params": [
        "font"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FontObject"
      ]
    },
    {
      "name": "_pElement.setElementTextDecoration",
      "params": [
        "decoration"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TextDecorationObject"
      ]
    },
    {
      "name": "_pElement.setElementWordSpacing",
      "params": [
        "wordspacing"
      ],
      "calls": [
        "nexacro.__setDOMStyle_WordSpacingObject"
      ]
    },
    {
      "name": "_pElement.setElementLetterSpacing",
      "params": [
        "letterspacing"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LetterSpacingObject"
      ]
    },
    {
      "name": "_pElement.setElementWordWrap",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setDOMNodeStyle_WordWrap"
      ]
    },
    {
      "name": "_pElement.setElementPointerEvents",
      "params": [
        "pointerevent"
      ],
      "calls": [
        "nexacro.__setDOMNodeStylePointerEvents"
      ]
    },
    {
      "name": "_pElement._refreshCommonStyleProps",
      "params": [
        "handle_style",
        "no_size"
      ],
      "calls": [
        "control._getReferenceAbsoluteFont",
        "nexacro.__setDOMNodeStylePointerEvents",
        "nexacro.__setDOMStyle_ColorObject",
        "nexacro.__setDOMStyle_Direction",
        "nexacro.__setDOMStyle_Display",
        "nexacro.__setDOMStyle_FontObject",
        "nexacro.__setDOMStyle_LetterSpacingObject",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setDOMStyle_TextDecorationObject",
        "nexacro.__setDOMStyle_Translate",
        "nexacro.__setDOMStyle_Visible",
        "nexacro.__setDOMStyle_WordSpacingObject",
        "nexacro.__setDOMStyle_WordWrap",
        "this._isFluid",
        "this._isParentRtl"
      ]
    },
    {
      "name": "_pElement._getCommonStyleStr",
      "params": [
        "no_size"
      ],
      "calls": [
        "control._getForm",
        "control._isFluidContainer",
        "control._isFluidContainerCalculation",
        "manager.getLayoutProperty",
        "nexacro.__getHTMLStyleAbsolute",
        "nexacro.__getHTMLStyle_ColorObject",
        "nexacro.__getHTMLStyle_Direction",
        "nexacro.__getHTMLStyle_Display",
        "nexacro.__getHTMLStyle_FlexGrow",
        "nexacro.__getHTMLStyle_FlexShrink",
        "nexacro.__getHTMLStyle_FluidLayoutDefaultPosition",
        "nexacro.__getHTMLStyle_FluidSize",
        "nexacro.__getHTMLStyle_FontObject",
        "nexacro.__getHTMLStyle_LayoutBasis",
        "nexacro.__getHTMLStyle_LayoutOrder",
        "nexacro.__getHTMLStyle_LetterSpacingObject",
        "nexacro.__getHTMLStyle_PointerEvents",
        "nexacro.__getHTMLStyle_Pos",
        "nexacro.__getHTMLStyle_Size",
        "nexacro.__getHTMLStyle_TableCellArea",
        "nexacro.__getHTMLStyle_TextDecorationObject",
        "nexacro.__getHTMLStyle_Visible",
        "nexacro.__getHTMLStyle_WordSpacingObject",
        "nexacro.__getHTMLStyle_WordWrap",
        "nexacro._getLayoutManager",
        "this._getAccessibilityStyleStr",
        "this._isFluid",
        "this._isParentRtl"
      ]
    },
    {
      "name": "_pElement._getOverflowScrollSize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement._contains",
      "params": [
        "oDescendant"
      ],
      "calls": []
    },
    {
      "name": "_pElement._getPositionInWindow",
      "params": [],
      "calls": [
        "nexacro._getElementXYInWindow"
      ]
    },
    {
      "name": "_pElement._on_createAccessibilityCommand",
      "params": [
        "acc_command"
      ],
      "calls": []
    },
    {
      "name": "_pElement._getAccessibilityStyleStr",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement._clearLayoutBasis",
      "params": [],
      "calls": [
        "this._client_elem._clearLayoutBasiss"
      ]
    },
    {
      "name": "_pElement._setElementFittocontents",
      "params": [
        "fittocontents"
      ],
      "calls": []
    },
    {
      "name": "nexacro._EdgeImageElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "__pEdgeImageElement.create",
      "params": [
        "_doc"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__insertDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMStyle_EdgeObject",
        "owner_elem._getRootWindowHandle",
        "this._getElementNexaClassName"
      ]
    },
    {
      "name": "__pEdgeImageElement.setElementSize",
      "params": [
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "__pEdgeImageElement.setElementInfo",
      "params": [
        "edgeImage",
        "edge_info"
      ],
      "calls": [
        "nexacro.__setDOMStyle_EdgeObject"
      ]
    },
    {
      "name": "__pEdgeImageElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getHTMLStyle_EdgeObject",
        "this._getElementNexaClassName"
      ]
    },
    {
      "name": "__pEdgeImageElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "win._doc.getElementById"
      ]
    },
    {
      "name": "__pEdgeImageElement.attach_handle_fromparent",
      "params": [
        "_parent"
      ],
      "calls": []
    },
    {
      "name": "__pEdgeImageElement.destroy",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "nexacro.TextBoxElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pTextBoxElement._createTextElementHandle",
      "params": [
        "_doc"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__setDOMNode_ClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pTextBoxElement._getComputedStyle",
      "params": [
        "prop",
        "noflush"
      ],
      "calls": [
        "style.getPropertyValue",
        "this.setElementText",
        "window.getComputedStyle"
      ]
    },
    {
      "name": "_pTextBoxElement._is_accept_touch",
      "params": [
        "win"
      ],
      "calls": [
        "lastfocus_elem.isComposing",
        "lastfocus_elem.isInputElement"
      ]
    },
    {
      "name": "_pTextBoxElement._refreshCommonStyleProps",
      "params": [
        "handle_style"
      ],
      "calls": [
        "nexacro.Element.prototype._refreshCommonStyleProps.call",
        "nexacro.__setDOMStyle_Size"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_Size",
        "nexacro.__setDOMStyle_Size"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementMove",
      "params": [
        "left",
        "top",
        "width",
        "height",
        "bforce"
      ],
      "calls": [
        "this.setElementPosition",
        "this.setElementSize"
      ]
    },
    {
      "name": "_pTextBoxElement._getComputedStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._getComputedStyle"
      ]
    },
    {
      "name": "_pTextBoxElement._createElementHandle",
      "params": [
        "owner_elem",
        "_doc"
      ],
      "calls": [
        "nexacro.__appendDOMNode",
        "nexacro.__insertDOMNode",
        "nexacro.__setDOMNode_DecorateText",
        "nexacro.__setDOMNode_Text",
        "nexacro.__setDOMStyle_PaddingObject",
        "nexacro.__setDOMStyle_textAlign",
        "nexacro.__setDOMStyle_verticalAlign",
        "owner_elem._getRootWindowHandle",
        "this._createElementHandleAfter",
        "this._createTextElementHandle",
        "this._on_createAccessibilityHandle",
        "this._refreshCommonStyleProps"
      ]
    },
    {
      "name": "_pTextBoxElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "this._createElementHandle",
        "this._isParentRtl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pTextBoxElement.createCommandAfter",
      "params": [
        "str",
        "handle_style",
        "box_style"
      ],
      "calls": []
    },
    {
      "name": "_pTextBoxElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getHTMLAttr_DecorateText",
        "nexacro.__getHTMLAttr_Text",
        "nexacro.__getHTMLStyle_PaddingObject",
        "nexacro.__getHTMLStyle_PointerEvents",
        "nexacro.__getHTMLStyle_textAlign",
        "nexacro.__getHTMLStyle_verticalAlign",
        "this._getCommonStyleStr",
        "this._getElementClassName",
        "this._isParentRtl",
        "this._on_createAccessibilityCommand",
        "this.createCommandAfter",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pTextBoxElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pTextBoxElement.destroy",
      "params": [],
      "calls": [
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementPadding",
      "params": [
        "padding"
      ],
      "calls": [
        "nexacro.__setDOMStyle_PaddingObject"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementTextAlign",
      "params": [
        "textalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_textAlign"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementVerticalAlign",
      "params": [
        "verticalalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_verticalAlign"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementText",
      "params": [
        "text"
      ],
      "calls": [
        "nexacro.__setDOMNode_Text",
        "this._createElementHandle",
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "_pTextBoxElement._flexAlignCenterMiddle",
      "params": [],
      "calls": [
        "nexacro.__setDOMStyle_FlexCrossAxisAlign",
        "nexacro.__setDOMStyle_FlexMainAxisAlign",
        "nexacro.__setDOMStyle_LayoutFluidPos"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementDecorateText",
      "params": [
        "text"
      ],
      "calls": [
        "nexacro.__setDOMNode_DecorateText",
        "this._createElementHandle",
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementWordWrap",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setDOMNodeStyle_WordWrap",
        "nexacro.__setDOMNode_Text"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementCSSMapInfo",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setDOMNode_Text"
      ]
    },
    {
      "name": "nexacro.TextBoxFlexElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": [
        "nexacro.TextBoxElement.call"
      ]
    },
    {
      "name": "_pTextBoxFlexElement._createElementHandle",
      "params": [
        "owner_elem",
        "_doc"
      ],
      "calls": [
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_DecorateText",
        "nexacro.__setDOMNode_Text",
        "owner_elem._getRootWindowHandle",
        "this._createElementHandleAfter",
        "this._createTextElementHandle",
        "this._refreshCommonStyleProps",
        "this._setChangeFlexAlign"
      ]
    },
    {
      "name": "_pTextBoxFlexElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getHTMLAttr_DecorateText",
        "nexacro.__getHTMLAttr_Text",
        "nexacro.__getHTMLStyle_PointerEvents",
        "this._getChangeFlexAlignStr",
        "this._getCommonStyleStr",
        "this._getElementClassName",
        "this._isParentRtl",
        "this._on_createAccessibilityCommand",
        "this.createCommandAfter",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pTextBoxFlexElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.TextBoxElement.prototype.attachHandle.call",
        "this._applyPadding"
      ]
    },
    {
      "name": "_pTextBoxFlexElement._refreshCommonStyleProps",
      "params": [
        "handle_style"
      ],
      "calls": [
        "nexacro.TextBoxElement.prototype._refreshCommonStyleProps.call",
        "this._applyPadding"
      ]
    },
    {
      "name": "_pTextBoxFlexElement._getComputedStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._getComputedStyle"
      ]
    },
    {
      "name": "_pTextBoxFlexElement._setChangeFlexAlign",
      "params": [
        "textAlign",
        "verticalAlign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexCrossAxisAlign",
        "nexacro.__setDOMStyle_FlexMainAxisAlign"
      ]
    },
    {
      "name": "_pTextBoxFlexElement._getChangeFlexAlignStr",
      "params": [
        "textAlign",
        "verticalAlign"
      ],
      "calls": [
        "nexacro.__getHTMLStyle_FlexCrossAxisAlign",
        "nexacro.__getHTMLStyle_FlexMainAxisAlign"
      ]
    },
    {
      "name": "_pTextBoxFlexElement.setElementTextAlign",
      "params": [
        "textalign"
      ],
      "calls": [
        "this._applyPadding",
        "this._setChangeFlexAlign"
      ]
    },
    {
      "name": "_pTextBoxFlexElement.setElementVerticalAlign",
      "params": [
        "verticalalign"
      ],
      "calls": [
        "this._applyPadding",
        "this._setChangeFlexAlign"
      ]
    },
    {
      "name": "_pTextBoxFlexElement._applyPadding",
      "params": [],
      "calls": [
        "this._getComputedStyle",
        "this._isParentRtl"
      ]
    },
    {
      "name": "_pTextBoxFlexElement.setElementPadding",
      "params": [
        "left",
        "top",
        "right",
        "bottom",
        "bforce"
      ],
      "calls": [
        "this._applyPadding"
      ]
    },
    {
      "name": "nexacro.TextBoxVirtualFlexElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": [
        "nexacro.TextBoxFlexElement.call"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement._createTextElementHandle",
      "params": [
        "_doc"
      ],
      "calls": [
        "nexacro.__setDOMNode_ClassName",
        "this.parent_elem._getElementClassName"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement._createElementHandle",
      "params": [
        "owner_elem",
        "_doc"
      ],
      "calls": [
        "owner_elem._getRootWindowHandle",
        "this._createElementHandleAfter",
        "this._createTextElementHandle",
        "this._refreshCommonStyleProps",
        "this._setChangeFlexAlign",
        "this._setNodeText"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement.createCommand",
      "params": [],
      "calls": [
        "this._isParentRtl",
        "this._on_createAccessibilityCommand",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "this._refreshCommonStyleProps",
        "this._setChangeFlexAlign",
        "this.setElementClassCSSSelector",
        "this.setElementText",
        "this.setElementTextDecoration",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement.destroy",
      "params": [],
      "calls": [
        "this._clearFlex"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement._refreshCommonStyleProps",
      "params": [
        "handle_style"
      ],
      "calls": [
        "nexacro.__setDOMNodeStylePointerEvents",
        "nexacro.__setDOMStyle_ColorObject",
        "nexacro.__setDOMStyle_Direction",
        "nexacro.__setDOMStyle_FontObject",
        "nexacro.__setDOMStyle_LetterSpacingObject",
        "nexacro.__setDOMStyle_TextDecorationObject",
        "nexacro.__setDOMStyle_WordSpacingObject",
        "nexacro.__setDOMStyle_WordWrap",
        "this._applyPadding",
        "this.setElementVisible"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement._clearFlex",
      "params": [],
      "calls": [
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMStyle_Direction",
        "nexacro.__setDOMStyle_LetterSpacingObject",
        "nexacro.__setDOMStyle_TextDecorationObject",
        "nexacro.__setDOMStyle_WordSpacingObject",
        "nexacro.__setDOMStyle_WordWrap",
        "this._setNodeText",
        "this.parent_elem._getElementClassName"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement._setNodeText",
      "params": [
        "text",
        "use_decoration"
      ],
      "calls": [
        "box_node.appendChild",
        "childnodes.push",
        "nexacro.__setDOMNode_DecorateText",
        "nexacro.__setDOMNode_Text"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement.setElementVisible",
      "params": [
        "visible",
        "b_force"
      ],
      "calls": [
        "this._setNodeText"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement.setElementClassCSSSelector",
      "params": [
        "classname"
      ],
      "calls": [
        "nexacro.__setDOMNode_ClassName",
        "this.parent_elem._getElementClassName"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement.setElementText",
      "params": [
        "text"
      ],
      "calls": [
        "this._createElementHandle",
        "this._setNodeText"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement.setElementPosition",
      "params": [
        "left",
        "top",
        "bforce"
      ],
      "calls": [
        "this._checkUpdateElementByRTL",
        "this.setElementPadding"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement.setElementSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this.setElementPadding"
      ]
    },
    {
      "name": "_pTextBoxVirtualFlexElement.setElementMove",
      "params": [
        "left",
        "top",
        "width",
        "height",
        "bforce"
      ],
      "calls": [
        "this.setElementPadding"
      ]
    },
    {
      "name": "nexacro.IconElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pIconElement._createElementHandle",
      "params": [
        "owner_elem",
        "_doc"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMStyle_BKImageTextAlign",
        "nexacro.__setDOMStyle_BKImageUrl",
        "nexacro.__setDOMStyle_BKImageVerticalAlign",
        "owner_elem._getRootWindowHandle",
        "this._getElementClassName",
        "this._refreshCommonStyleProps"
      ]
    },
    {
      "name": "_pIconElement._destroyElementHandle",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "_pIconElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "this._createElementHandle",
        "this._isParentRtl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pIconElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getHTMLStyle_BKImageAlign",
        "nexacro.__getHTMLStyle_BKImageUrl",
        "this._getCommonStyleStr",
        "this._getElementClassName",
        "this._isParentRtl",
        "this._on_createAccessibilityCommand",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pIconElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pIconElement.destroy",
      "params": [],
      "calls": [
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "_pIconElement._getComputedStyle",
      "params": [
        "prop"
      ],
      "calls": [
        "align.split",
        "style.getPropertyValue",
        "window.getComputedStyle"
      ]
    },
    {
      "name": "_pIconElement.setElementTextAlign",
      "params": [
        "textalign"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_BKImageTextAlign",
        "nexacro.__setDOMStyle_BKImageAlign",
        "nexacro.__setDOMStyle_BKImageTextAlign"
      ]
    },
    {
      "name": "_pIconElement.setElementVerticalAlign",
      "params": [
        "verticalalign"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_BKImageVerticalAlign",
        "nexacro.__setDOMStyle_BKImageVerticalAlign"
      ]
    },
    {
      "name": "_pIconElement.setElementIcon",
      "params": [
        "icon"
      ],
      "calls": [
        "nexacro.__setDOMStyle_BKImageUrl",
        "this._createElementHandle",
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "nexacro.IconTextElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pIconTextElement._createBoxElementHandle",
      "params": [
        "_doc",
        "_type"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__setDOMNode_ClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pIconTextElement._createElementHandle",
      "params": [
        "owner_elem",
        "_doc"
      ],
      "calls": [
        "_doc.createElement",
        "box_node.getElementsByTagName",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_Alt",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_DecorateText",
        "nexacro.__setDOMNode_ImageUrl",
        "nexacro.__setDOMNode_Text",
        "nexacro.__setDOMStyle_BKImageTextAlign",
        "nexacro.__setDOMStyle_BKImageUrl",
        "nexacro.__setDOMStyle_BKImageVerticalAlign",
        "nexacro.__setDOMStyle_Display",
        "nexacro.__setDOMStyle_PaddingObject",
        "nexacro.__setDOMStyle_textAlign",
        "nexacro.__setDOMStyle_verticalAlign",
        "owner_elem._getRootWindowHandle",
        "this._createBoxElementHandle",
        "this._getElementNexaClassName",
        "this._on_createAccessibilityHandle",
        "this._refreshCommonStyleProps"
      ]
    },
    {
      "name": "_pIconTextElement._destroyElementHandle",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "_pIconTextElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "this._createElementHandle",
        "this._isParentRtl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pIconTextElement._getComputedStyle",
      "params": [
        "prop"
      ],
      "calls": [
        "style.getPropertyValue",
        "window.getComputedStyle"
      ]
    },
    {
      "name": "_pIconTextElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getDOMNode_Alt",
        "nexacro.__getHTMLAttr_DecorateText",
        "nexacro.__getHTMLAttr_Text",
        "nexacro.__getHTMLStyle_BKImageAlign",
        "nexacro.__getHTMLStyle_BKImageUrl",
        "nexacro.__getHTMLStyle_Display",
        "nexacro.__getHTMLStyle_PaddingObject",
        "nexacro.__getHTMLStyle_TextWidth",
        "nexacro.__getHTMLStyle_textAlign",
        "nexacro.__getHTMLStyle_verticalAlign",
        "this._getCommonStyleStr",
        "this._getElementClassName",
        "this._getElementNexaClassName",
        "this._isParentRtl",
        "this._on_createAccessibilityCommand",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pIconTextElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pIconTextElement.destroy",
      "params": [],
      "calls": [
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "_pIconTextElement.setElementPadding",
      "params": [
        "padding"
      ],
      "calls": [
        "nexacro.__setDOMStyle_PaddingObject"
      ]
    },
    {
      "name": "_pIconTextElement.setElementTextAlign",
      "params": [
        "textalign"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_BKImageTextAlign",
        "nexacro.__setDOMStyle_BKImageAlign",
        "nexacro.__setDOMStyle_BKImageTextAlign",
        "nexacro.__setDOMStyle_textAlign"
      ]
    },
    {
      "name": "_pIconTextElement.setElementVerticalAlign",
      "params": [
        "verticalalign"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_BKImageVerticalAlign",
        "nexacro.__setDOMStyle_BKImageVerticalAlign",
        "nexacro.__setDOMStyle_verticalAlign"
      ]
    },
    {
      "name": "_pIconTextElement.setElementTextPadding",
      "params": [
        "textPadding"
      ],
      "calls": [
        "nexacro.__setDOMStyle_PaddingObject"
      ]
    },
    {
      "name": "_pIconTextElement.setElementTextWidth",
      "params": [
        "textwidth"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_TextWidth",
        "nexacro.__setDOMStyle_TextWidth"
      ]
    },
    {
      "name": "_pIconTextElement.setElementText",
      "params": [
        "text"
      ],
      "calls": [
        "nexacro.__setDOMNode_Text",
        "this._createElementHandle",
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "_pIconTextElement.setElementDecorateText",
      "params": [
        "text"
      ],
      "calls": [
        "nexacro.__setDOMNode_DecorateText",
        "this._createElementHandle",
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "_pIconTextElement.setElementWordWrap",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setDOMNodeStyle_WordWrap",
        "nexacro.__setDOMNode_Text"
      ]
    },
    {
      "name": "_pIconTextElement.setElementCSSMapInfo",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setDOMNode_Text"
      ]
    },
    {
      "name": "_pIconTextElement.setElementIcon",
      "params": [
        "icon"
      ],
      "calls": [
        "nexacro.__setDOMNode_ImageUrl",
        "nexacro.__setDOMStyle_BKImageUrl",
        "this._createElementHandle",
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "_pIconTextElement.setElementIconPos",
      "params": [
        "icon_pos"
      ],
      "calls": [
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMStyle_Display",
        "pos.indexOf"
      ]
    },
    {
      "name": "nexacro.ImageElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pImageElement._createElementHandle",
      "params": [
        "owner_elem",
        "_doc"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_Alt",
        "nexacro.__setDOMNode_ImageUrl",
        "nexacro.__setDOMStyle_Pos",
        "owner_elem._getRootWindowHandle",
        "this._refreshCommonStyleProps"
      ]
    },
    {
      "name": "_pImageElement._destroyElementHandle",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "_pImageElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "this._createElementHandle",
        "this._isParentRtl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pImageElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getDOMNode_Alt",
        "this._getCommonStyleStr",
        "this._getElementNexaClassName",
        "this._isParentRtl",
        "this._on_createAccessibilityCommand",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pImageElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pImageElement.destroy",
      "params": [],
      "calls": [
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "_pImageElement.setElementPadding",
      "params": [
        "padding"
      ],
      "calls": [
        "nexacro.__setDOMStyle_PaddingObject"
      ]
    },
    {
      "name": "_pImageElement.setElementImage",
      "params": [
        "image"
      ],
      "calls": [
        "nexacro.__setDOMNode_ImageUrl",
        "this._createElementHandle",
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "nexacro.InputElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": [
        "nexacro._CompositionState",
        "nexacro._ImeLocale"
      ]
    },
    {
      "name": "_pInputElement._createElementHandle",
      "params": [
        "owner_elem",
        "_doc"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_Autocomplete",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Enable",
        "nexacro.__setDOMNode_ImeMode",
        "nexacro.__setDOMNode_MaxLength",
        "nexacro.__setDOMNode_ReadOnly",
        "nexacro.__setDOMNode_Spellcheck",
        "nexacro.__setDOMNode_Type",
        "nexacro.__setDOMNode_Value",
        "nexacro.__setDOMStyle_PaddingObject",
        "nexacro.__setDOMStyle_textAlign",
        "nexacro._isNull",
        "this._getElementClassName",
        "this._on_createAccessibilityHandle",
        "this._refreshCommonStyleProps",
        "this._setElementDefaultLineHeight"
      ]
    },
    {
      "name": "_pInputElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "this._bindSysEvent",
        "this._createElementHandle",
        "this._isParentRtl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pInputElement._destroyInputHandle",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "_pInputElement._destroyLabelHandle",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "_pInputElement.destroy",
      "params": [],
      "calls": [
        "nexacro.Element.prototype.destroy.call",
        "nexacro._stopSysObserving",
        "this._destroyInputHandle",
        "this._destroyLabelHandle",
        "this._getRootWindowHandle",
        "this._unbindSysEvent"
      ]
    },
    {
      "name": "_pInputElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getHTMLAttr_Autocomplete",
        "nexacro.__getHTMLAttr_Autocorrect",
        "nexacro.__getHTMLAttr_Enable",
        "nexacro.__getHTMLAttr_InputMode",
        "nexacro.__getHTMLAttr_InputType",
        "nexacro.__getHTMLAttr_MaxLength",
        "nexacro.__getHTMLAttr_ReadOnly",
        "nexacro.__getHTMLAttr_Spellcheck",
        "nexacro.__getHTMLStyle_Enable",
        "nexacro.__getHTMLStyle_ImeMode",
        "nexacro.__getHTMLStyle_PaddingObject",
        "nexacro.__getHTMLStyle_textAlign",
        "nexacro._encodeXml",
        "nexacro._isNull",
        "this._getCommonStyleStr",
        "this._getElementClassName",
        "this._getElementDefaultLineHeight",
        "this._isParentRtl",
        "this._on_createAccessibilityCommand",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pInputElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "this._bindSysEvent",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pInputElement._getCommonStyleStr",
      "params": [],
      "calls": [
        "nexacro.__getHTMLStyle_ColorObject",
        "nexacro.__getHTMLStyle_Direction",
        "nexacro.__getHTMLStyle_Display",
        "nexacro.__getHTMLStyle_FontObject",
        "nexacro.__getHTMLStyle_LetterSpacingObject",
        "nexacro.__getHTMLStyle_Pos",
        "nexacro.__getHTMLStyle_Size",
        "nexacro.__getHTMLStyle_TextDecorationObject",
        "nexacro.__getHTMLStyle_Visible",
        "nexacro.__getHTMLStyle_WordSpacingObject",
        "nexacro.__getHTMLStyle_WordWrap",
        "this._isFluid",
        "this._isParentRtl",
        "this._isRtl"
      ]
    },
    {
      "name": "_pInputElement._refreshCommonStyleProps",
      "params": [
        "handle_style"
      ],
      "calls": [
        "nexacro.__setDOMStyle_ColorObject",
        "nexacro.__setDOMStyle_Direction",
        "nexacro.__setDOMStyle_Display",
        "nexacro.__setDOMStyle_FontObject",
        "nexacro.__setDOMStyle_LetterSpacingObject",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setDOMStyle_TextDecorationObject",
        "nexacro.__setDOMStyle_Translate",
        "nexacro.__setDOMStyle_Visible",
        "nexacro.__setDOMStyle_WordSpacingObject",
        "nexacro.__setDOMStyle_WordWrap",
        "this._isParentRtl",
        "this._isRtl"
      ]
    },
    {
      "name": "_pInputElement.setElementSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_Size",
        "nexacro.__setDOMStyle_Size",
        "this._setElementDefaultLineHeight"
      ]
    },
    {
      "name": "_pInputElement.setElementSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_Size",
        "nexacro.__setDOMStyle_Size",
        "this._setElementDefaultLineHeight"
      ]
    },
    {
      "name": "_pInputElement.setElementTextAlign",
      "params": [
        "textalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_textAlign"
      ]
    },
    {
      "name": "_pInputElement.setElementPadding",
      "params": [
        "padding"
      ],
      "calls": [
        "nexacro.__setDOMStyle_PaddingObject"
      ]
    },
    {
      "name": "_pInputElement.setElementCaretColor",
      "params": [
        "color"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementSelectColor",
      "params": [
        "color"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementSelectBackgroundColor",
      "params": [
        "color"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementCompositeColor",
      "params": [
        "color"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementTabindentSize",
      "params": [
        "indent"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._setElementDefaultLineHeight",
      "params": [],
      "calls": [
        "nexacro.CSSValueObject",
        "nexacro.__setDOMStyle_LineHeightObject"
      ]
    },
    {
      "name": "_pInputElement._getElementDefaultLineHeight",
      "params": [],
      "calls": [
        "nexacro.__getHTMLStyle_lineHeight"
      ]
    },
    {
      "name": "_pInputElement.setElementEnable",
      "params": [
        "enable",
        "color"
      ],
      "calls": [
        "nexacro.__setDOMNode_Enable"
      ]
    },
    {
      "name": "_pInputElement.setElementReadonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "nexacro.__setDOMNode_ReadOnly",
        "this._applyReadOnly"
      ]
    },
    {
      "name": "_pInputElement.setElementAutoSkip",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementAutoSelect",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementMaxLength",
      "params": [
        "length"
      ],
      "calls": [
        "nexacro.__setDOMNode_MaxLength",
        "text.substring",
        "this._updateInputValue",
        "this.getElementText"
      ]
    },
    {
      "name": "_pInputElement.setElementInputMode",
      "params": [
        "inputmode"
      ],
      "calls": [
        "nexacro.__setDOMNode_InputMode"
      ]
    },
    {
      "name": "_pInputElement.setElementInputMode",
      "params": [
        "inputmode"
      ],
      "calls": [
        "nexacro.__setDOMNode_InputMode"
      ]
    },
    {
      "name": "_pInputElement.setElementUseSoftKeyboard",
      "params": [
        "usesoftkeyboard"
      ],
      "calls": [
        "this.setElementInputMode"
      ]
    },
    {
      "name": "_pInputElement.setElementUseIme",
      "params": [
        "useime"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementImeMode",
      "params": [
        "imemode"
      ],
      "calls": [
        "nexacro.__setDOMNode_ImeMode"
      ]
    },
    {
      "name": "_pInputElement.setElementDisplayNullText",
      "params": [
        "nulltext",
        "applytext"
      ],
      "calls": [
        "nexacro._isNull",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.setElementDisplayInvalidText",
      "params": [
        "v"
      ],
      "calls": [
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.setElementDefaultValue",
      "params": [
        "value"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementValue",
      "params": [
        "value",
        "bInvalidValue"
      ],
      "calls": [
        "nexacro.__setDOMNode_Type",
        "nexacro._isNull",
        "text.substring",
        "this._getInputValue",
        "this._setElementLastSelectionRange",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.replaceElementText",
      "params": [
        "value",
        "begin",
        "end",
        "bselect"
      ],
      "calls": [
        "input_value.substring",
        "this._getInputValue",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.updateElementText",
      "params": [
        "value",
        "caretpos"
      ],
      "calls": [
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement._updateElementValue",
      "params": [
        "value"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._setElementUseMaxLength",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._updateInputValue",
      "params": [
        "value",
        "fireevent",
        "selectionStart",
        "selectionEnd"
      ],
      "calls": [
        "nexacro.__fireHTMLEvent",
        "nexacro.__setDOMNode_Value",
        "nexacro.__setInputDOMNode_SetSelect",
        "this._composer.isComposing",
        "this._composer.setStatus",
        "this._getRootWindowHandle",
        "this._setElementLastSelectionRange"
      ]
    },
    {
      "name": "_pInputElement.setElementInputType",
      "params": [
        "type",
        "bImedisable"
      ],
      "calls": [
        "nexacro.__changeInputDOMNodeType",
        "nexacro.__setDOMNode_ImeMode",
        "nexacro.__setInputDOMNodeFocus",
        "this._bindSysEvent",
        "this._unbindSysEvent",
        "this.setElementInputMode"
      ]
    },
    {
      "name": "_pInputElement._change_to_keypad_type",
      "params": [],
      "calls": [
        "nexacro.__changeInputDOMNodeType",
        "this.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._change_type_on_sys_focus",
      "params": [
        "type"
      ],
      "calls": [
        "keypad.",
        "nexacro.__changeInputDOMNodeType",
        "nexacro._observeSysEvent",
        "nexacro._stopSysObserving",
        "this._getRootWindowHandle",
        "this._updateInputValue",
        "this.setElementSetSelect"
      ]
    },
    {
      "name": "_pInputElement._scrollintoview_on_sys_click",
      "params": [
        "/*type*/"
      ],
      "calls": [
        "cur_win.scrollTo",
        "nexacro._stopSysObserving",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pInputElement._restore_keypad_type",
      "params": [],
      "calls": [
        "nexacro.__changeInputDOMNodeType",
        "nexacro.__setDOMNode_Select",
        "nexacro._isNull",
        "this._getInputValue",
        "this._getRootWindowHandle",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement._fireHTMLEvent",
      "params": [
        "handle",
        "name",
        "onname"
      ],
      "calls": [
        "nexacro.__fireHTMLEvent"
      ]
    },
    {
      "name": "_pInputElement._applyElementFocus",
      "params": [],
      "calls": [
        "nexacro.__setInputDOMNodeFocus"
      ]
    },
    {
      "name": "_pInputElement._applyMaxlength",
      "params": [],
      "calls": [
        "newValue.substring",
        "nexacro.__setDOMNode_Type",
        "nexacro.__setDOMStyle_ColorObject",
        "nexacro._isNull",
        "this._getInputValue",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement._applyReadOnly",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "this._getInputValue",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.setElementFocus",
      "params": [
        "trigger_type",
        "self_flag"
      ],
      "calls": [
        "nexacro.__setInputDOMNodeFocus",
        "nexacro.__setLastFocusedElement",
        "nexacro._isNull",
        "this._applyMaxlength",
        "this._change_to_keypad_type",
        "this._getInputValue",
        "this._restore_keypad_type",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.setElementBlur",
      "params": [],
      "calls": [
        "nexacro.__getInputDOMNodeCaretPos",
        "nexacro.__setDOMNode_Blur",
        "nexacro.__setDOMNode_Type",
        "nexacro.__setInputDOMNode_SetSelect",
        "nexacro._isNull",
        "nexacro._removeInputDOMNodeCaret",
        "pThis._updateInputValue",
        "this._getInputValue",
        "this._getRootWindowHandle",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.setElementSetSelect",
      "params": [
        "start",
        "end"
      ],
      "calls": [
        "input_handle.focus",
        "nexacro.__setDOMNode_Select",
        "nexacro.__setInputDOMNode_SetSelect",
        "this._getRootWindowHandle",
        "this._setElementLastSelectionRange",
        "this.getElementText",
        "this.isComposing"
      ]
    },
    {
      "name": "_pInputElement._setElementLastSelectionRange",
      "params": [
        "range"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.getElementCaretPos",
      "params": [],
      "calls": [
        "nexacro.__getInputDOMNodeCaretPos",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pInputElement.getElementSelectionRange",
      "params": [],
      "calls": [
        "nexacro.__getInputDOMNodeSelectionRange",
        "sel.splice",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pInputElement.getElementText",
      "params": [],
      "calls": [
        "this._getInputValue"
      ]
    },
    {
      "name": "_pInputElement._getInputValue",
      "params": [],
      "calls": [
        "nexacro.__getDOMNodeValue",
        "this.getInputStatusPseudoClass"
      ]
    },
    {
      "name": "_pInputElement.getElementValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.getCompositionStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.isComposing",
      "params": [],
      "calls": [
        "this._composer.isComposing"
      ]
    },
    {
      "name": "_pInputElement.isCompositEnd",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.setCompositionComplete_process",
      "params": [
        "end_pos",
        "is_composing"
      ],
      "calls": [
        "this._composer.isComposing",
        "this._composer.setStatus",
        "this._getInputValue",
        "this._updateInputValue",
        "this.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement.setCompositionComplete",
      "params": [
        "end_pos",
        "is_composing"
      ],
      "calls": [
        "this._composer.setStatus",
        "this.getElementCaretPos",
        "this.setCompositionComplete_process.call"
      ]
    },
    {
      "name": "_pInputElement.setCompositionCancel_process",
      "params": [
        "end_pos",
        "is_composing"
      ],
      "calls": [
        "this._composer.getOffset",
        "this._composer.isComposing",
        "this._composer.setStatus",
        "this._getInputValue",
        "this._updateInputValue",
        "value.substring"
      ]
    },
    {
      "name": "_pInputElement.setCompositionCancel",
      "params": [
        "end_pos",
        "is_composing"
      ],
      "calls": [
        "this._composer.setStatus",
        "this.getElementCaretPos",
        "this.setCompositionCancel_process.call"
      ]
    },
    {
      "name": "_pInputElement.setInputProcess",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.getInputProcess",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.setInputStatusPseudoClass",
      "params": [
        "pseudoclass",
        "state"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.getInputStatusPseudoClass",
      "params": [
        "pseudoclass"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._checkMaxLength",
      "params": [
        "value",
        "caretpos",
        "fix_composition"
      ],
      "calls": [
        "this._composer.getOffset",
        "this._composer.isComposing",
        "this._composer.isHasCandiateWindow",
        "value.charAt"
      ]
    },
    {
      "name": "_pInputElement._go_next_focus",
      "params": [],
      "calls": [
        "comp._getForm",
        "form._getWindow",
        "form._searchNextTabFocus",
        "win._removeFromCurrentFocusPath"
      ]
    },
    {
      "name": "_pInputElement._bindSysEvent",
      "params": [],
      "calls": [
        "nexacro._observeSysEvent"
      ]
    },
    {
      "name": "_pInputElement._unbindSysEvent",
      "params": [],
      "calls": [
        "nexacro._stopSysObserving"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keydown_before_process",
      "params": [
        "evt"
      ],
      "calls": [
        "_win._getCaptureComp",
        "comp._adjustStepindex",
        "comp._getWindow",
        "nexacro._getSysEventKey",
        "nexacro._stopSysEvent",
        "pThis._composer.isComposing",
        "pThis._composer.setDelayStatus",
        "pThis._composer.setStatus",
        "pThis._setElementLastSelectionRange",
        "pThis.getElementCaretPos",
        "pThis.setElementSetSelect",
        "pThis.setElementValue",
        "slice_value.slice"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keydown_specialkey_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_keydown_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._on_sys_keydown",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_keydown_before_process.call",
        "pThis.on_sys_keydown_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keyup_before_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_keyup_specialkey_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_keyup_process",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro.__setInputDOMNode_SetSelect",
        "pThis._composer.isComposing",
        "pThis._composer.setDelayStatus",
        "pThis._getInputValue",
        "pThis._getRootWindowHandle",
        "pThis.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keyup",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._beforeinput_result.pop",
        "pThis.on_sys_keyup_before_process.call",
        "pThis.on_sys_keyup_process.call",
        "pThis.on_sys_keyup_specialkey_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keypress_before_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_keypress_process",
      "params": [
        "evt"
      ],
      "calls": [
        "String.fromCharCode",
        "comp._getRootWindow",
        "nexacro._stopSysEvent",
        "pThis._getInputValue",
        "pThis._go_next_focus",
        "pThis.getElementSelectionRange"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keypress",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._updateImeLocale",
        "pThis.on_sys_keypress_before_process.call",
        "pThis.on_sys_keypress_process.call"
      ]
    },
    {
      "name": "_pInputElement._is_accept_touch",
      "params": [
        "win"
      ],
      "calls": [
        "lastfocus_elem.isComposing",
        "lastfocus_elem.isInputElement",
        "this.isComposing"
      ]
    },
    {
      "name": "_pInputElement.on_complete_composition_value_process",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.on_complete_composition_value",
      "params": [],
      "calls": [
        "this.on_complete_composition_value_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_apply_imeSet",
      "params": [
        "evt"
      ],
      "calls": [
        "comp.on_apply_imeSet",
        "pThis._imelocale.getLocale",
        "pThis.on_apply_ime_environment"
      ]
    },
    {
      "name": "_pInputElement.on_apply_ime_environment_process",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro.__setDOMNode_MaxLength",
        "this._setElementUseMaxLength"
      ]
    },
    {
      "name": "_pInputElement.on_apply_ime_environment",
      "params": [
        "evt"
      ],
      "calls": [
        "this.on_apply_ime_environment_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_apply_force_imeSet",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._updateLocale",
      "params": [
        "evt"
      ],
      "calls": [
        "alpha.test",
        "pThis._getInputValue",
        "pThis._imelocale.IsChangeLocale",
        "pThis._imelocale.setLocale",
        "pThis._imelocale.updateLocale",
        "pThis.getElementCaretPos",
        "pThis.on_apply_force_imeSet.call",
        "pThis.on_apply_imeSet",
        "value.substr"
      ]
    },
    {
      "name": "_pInputElement._updateImeLocale",
      "params": [
        "evt"
      ],
      "calls": [
        "input_handle.blur",
        "input_handle.focus",
        "pThis._getInputValue",
        "pThis._updateInputValue",
        "pThis._updateLocale",
        "pThis.getElementCaretPos",
        "pThis.isComposing",
        "this.setElementSetSelect"
      ]
    },
    {
      "name": "_pInputElement.on_sys_beforeinput_forward_before_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_beforeinput_forward_process",
      "params": [
        "evt"
      ],
      "calls": [
        "_win._getCaptureComp",
        "beforeinput_data.toLowerCase",
        "beforeinput_data.toUpperCase",
        "comp._getWindow",
        "comp._on_beforekeyinput",
        "console.log",
        "data.substring",
        "evt.preventDefault",
        "input_value.substring",
        "pThis._beforeinput_result.forEach",
        "pThis._beforeinput_result_insert_data.toLowerCase",
        "pThis._beforeinput_result_insert_data.toUpperCase",
        "pThis._getInputValue",
        "pThis.getCompositionStatus",
        "pThis.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_beforeinput_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._updateImeLocale",
        "pThis.on_sys_beforeinput_forward_before_process.call",
        "pThis.on_sys_beforeinput_forward_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keyinput_forward_before_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_keyinput_forward_process",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._on_sys_keyinput.call"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keyinput_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_keyinput_forward_before_process",
        "pThis.on_sys_keyinput_forward_process"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keyinput_before_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_keyinput_process",
      "params": [
        "evt"
      ],
      "calls": [
        "comp._on_input_autoskip",
        "comp._on_keyinput",
        "nexacro.__changeInputDOMNodeType",
        "pThis._beforeinput_result.forEach",
        "pThis._checkMaxLength",
        "pThis._composer.isComposing",
        "pThis._composer.setStatus",
        "pThis._getInputValue",
        "pThis._go_next_focus",
        "pThis._updateElementValue",
        "pThis._updateInputValue",
        "pThis.getElementCaretPos",
        "pThis.getInputStatusPseudoClass",
        "value.substring"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keyinput",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_keyinput_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keyinput_process",
      "params": [
        "evt"
      ],
      "calls": [
        "comp._getRootWindow",
        "comp._on_beforekeyinput",
        "comp._on_input_autoskip",
        "comp._on_keyinput",
        "nexacro.__fireHTMLEvent",
        "nexacro._stopSysEvent",
        "pThis._checkBackspaceKeyInKeyInput",
        "pThis._checkMaxLength",
        "pThis._checkSelectionInKeyInput",
        "pThis._composer.getOffset",
        "pThis._composer.isComposing",
        "pThis._composer.setStatus",
        "pThis._getInputValue",
        "pThis._go_next_focus",
        "pThis._updateElementValue",
        "pThis._updateInputValue",
        "pThis.getElementCaretPos",
        "pThis.setCompositionComplete",
        "pThis.setElementSetSelect",
        "value.substring"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keyinput",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._updateImeLocale",
        "pThis.on_sys_keyinput_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_cut_before_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._on_sys_cut",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_cut_before_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_paste_before_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._on_sys_paste",
      "params": [
        "evt"
      ],
      "calls": [
        "data.replace",
        "evt.clipboardData.getData",
        "nexacro._stopSysEvent",
        "pThis._getInputValue",
        "pThis._updateInputValue",
        "pThis.getElementCaretPos",
        "pThis.on_sys_paste_before_process.call",
        "value.substring",
        "window.clipboardData.getData"
      ]
    },
    {
      "name": "_pInputElement.on_sys_compositionstart_process",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._composer.setStatus",
        "pThis.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_compositionstart",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_compositionstart_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_compositionupdate_process",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._composer.setStatus",
        "pThis.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_compositionupdate",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_compositionupdate_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_compositionend_process",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._composer.setStatus",
        "pThis.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_compositionend",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_compositionend_process.call"
      ]
    },
    {
      "name": "_pInputElement._on_sys_mousedown",
      "params": [
        "evt"
      ],
      "calls": [
        "evt.preventDefault",
        "pThis._setElementLastSelectionRange",
        "pThis.getElementSelectionRange",
        "pThis.setElementSetSelect"
      ]
    },
    {
      "name": "_pInputElement._on_sys_mouseup",
      "params": [
        "evt"
      ],
      "calls": [
        "evt.preventDefault",
        "pThis._composer.setStatus",
        "pThis.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_scroll",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._stopSysObserving"
      ]
    },
    {
      "name": "_pInputElement.on_sys_focus_before_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_focus_process",
      "params": [
        "evt"
      ],
      "calls": [
        "_win.getCurrentFocusPaths",
        "comp._getRootComponent",
        "comp._getWindow",
        "comp.on_apply_value",
        "comp.parent.on_apply_value",
        "nexacro.__changeInputDOMNodeType",
        "nexacro.__setDOMNode_Select",
        "nexacro.__setInputDOMNode_SetSelect",
        "nexacro._indexOf",
        "old_focused_comp._apply_setfocus",
        "pThis._composer.setStatus",
        "pThis._getRootWindowHandle",
        "pThis.getElementCaretPos",
        "pThis.on_reset_update_value",
        "this.setElementValue"
      ]
    },
    {
      "name": "_pInputElement._on_sys_focus",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_focus_before_process",
        "pThis.on_sys_focus_process"
      ]
    },
    {
      "name": "_pInputElement.on_sys_blur_before_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_blur_process",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._adjustBodyScrollPos",
        "nexacro._stopSysObserving",
        "pThis._getRootWindowHandle"
      ]
    },
    {
      "name": "_pInputElement._on_sys_blur",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._destroySystemCalendarOverlay",
        "nexacro._isOpenSystemCalendar",
        "pThis.on_sys_blur_before_process",
        "pThis.on_sys_blur_process"
      ]
    },
    {
      "name": "_pInputElement.on_sys_select_before_process",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_select_process",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._setElementLastSelectionRange",
        "pThis.getElementSelectionRange"
      ]
    },
    {
      "name": "_pInputElement._on_sys_select",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_select_before_process",
        "pThis.on_sys_select_process"
      ]
    },
    {
      "name": "_pInputElement._on_sys_click",
      "params": [
        "evt"
      ],
      "calls": [
        "evt.preventDefault",
        "pThis._scrollintoview_on_sys_click"
      ]
    },
    {
      "name": "_pInputElement.on_sys_touchstart_process",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._stopSysEvent"
      ]
    },
    {
      "name": "_pInputElement._on_sys_touchstart",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_touchstart_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_touchend_process",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._composer.setStatus",
        "pThis.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_touchend",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_touchend_process.call"
      ]
    },
    {
      "name": "_pInputElement._on_sys_animationstart",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro.__changeInputDOMNodeType",
        "pThis.setInputStatusPseudoClass"
      ]
    },
    {
      "name": "_pInputElement._checkBackspaceKeyInKeyInput",
      "params": [
        "old_value",
        "value",
        "begin",
        "end"
      ],
      "calls": [
        "old_value.substring",
        "this._composer.getOffset",
        "this.getElementCaretPos",
        "this.getElementSelectionRange",
        "value.substring"
      ]
    },
    {
      "name": "_pInputElement._checkSelectionInKeyInput",
      "params": [
        "old_value",
        "value",
        "begin",
        "end"
      ],
      "calls": [
        "old_value.charAt",
        "value.charAt"
      ]
    },
    {
      "name": "_pInputElement._checkBackspaceKeyInKeyInput",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement._checkSelectionInKeyInput",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.TextAreaElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": [
        "nexacro._CompositionState",
        "nexacro._ImeLocale"
      ]
    },
    {
      "name": "_pTextAreaElement._createElementHandle",
      "params": [
        "owner_elem",
        "_doc"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Enable",
        "nexacro.__setDOMNode_ImeMode",
        "nexacro.__setDOMNode_MaxLength",
        "nexacro.__setDOMNode_ReadOnly",
        "nexacro.__setDOMNode_Value",
        "nexacro.__setDOMStyle_PaddingObject",
        "nexacro.__setDOMStyle_textAlign",
        "nexacro.__setTextAreaDOMNode_WordWrap",
        "nexacro.__setTextAreaDOMStyle_AbsoluteTransparent",
        "nexacro._isNull",
        "this._getElementClassName",
        "this._on_createAccessibilityHandle",
        "this._refreshCommonStyleProps",
        "this.getElementScrollHeight",
        "this.getElementScrollWidth"
      ]
    },
    {
      "name": "_pTextAreaElement._destroyInputHandle",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "_pTextAreaElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getHTMLAttr_Enable",
        "nexacro.__getHTMLAttr_InputMode",
        "nexacro.__getHTMLAttr_MaxLength",
        "nexacro.__getHTMLAttr_ReadOnly",
        "nexacro.__getHTMLStyle_Enable",
        "nexacro.__getHTMLStyle_ImeMode",
        "nexacro.__getHTMLStyle_PaddingObject",
        "nexacro.__getHTMLStyle_textAlign",
        "nexacro.__getTextAreaHTMLStyle_AbsoluteTransparent",
        "nexacro._encodeXml",
        "nexacro._isNull",
        "this._getCommonStyleStr",
        "this._getElementNexaClassName",
        "this._isParentRtl",
        "this._on_createAccessibilityCommand",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pTextAreaElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.InputElement.prototype.attachHandle.call",
        "this.getElementScrollHeight",
        "this.getElementScrollWidth"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Size",
        "this._getOverflowScrollSize",
        "this._setElementScrollSize",
        "this.getElementCaretPos",
        "this.setElementSetSelect"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Size",
        "this._getOverflowScrollSize",
        "this._setElementScrollSize",
        "this.getElementCaretPos",
        "this.setElementSetSelect"
      ]
    },
    {
      "name": "_pTextAreaElement._applyMaxlength",
      "params": [],
      "calls": [
        "newValue.substring",
        "nexacro.__setDOMNode_Type",
        "nexacro.__setDOMStyle_ColorObject",
        "nexacro._isNull",
        "this._getInputValue",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pTextAreaElement._setElementScrollSize",
      "params": [],
      "calls": [
        "nexacro._get_invisible_obj",
        "nexacro._reset_invisible_obj",
        "this.getElementScrollHeight",
        "this.getElementScrollWidth"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementFocus",
      "params": [
        "trigger_type",
        "self_flag"
      ],
      "calls": [
        "nexacro.__setInputDOMNodeFocus",
        "nexacro.__setLastFocusedElement",
        "this._applyMaxlength",
        "this._change_to_keypad_type"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementBlur",
      "params": [],
      "calls": [
        "nexacro.__getTextAreaDOMNodeCaretPos",
        "nexacro.__setDOMNode_Blur",
        "nexacro.__setTextAreaDOMNodeSetSelect",
        "nexacro._isNull",
        "nexacro._removeInputDOMNodeCaret",
        "this._getInputValue",
        "this._getRootWindowHandle",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementEnable",
      "params": [
        "enable",
        "color"
      ],
      "calls": [
        "nexacro.__setDOMAccessibility_StatHidden",
        "nexacro.__setTextAreaDOMNode_Enable"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementCSSMapInfo",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setTextAreaDOMNode_Wrap"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementWordWrap",
      "params": [
        "wordWrap"
      ],
      "calls": [
        "nexacro.__setTextAreaDOMNode_WordWrap",
        "nexacro._isNull",
        "this._updateInputValue",
        "this.getElementText"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementValue",
      "params": [
        "value"
      ],
      "calls": [
        "this._setElementValue",
        "value.replace"
      ]
    },
    {
      "name": "_pTextAreaElement._setElementValue",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro.InputElement.prototype.setElementValue.call",
        "nexacro._OnceCallbackTimer.callonce",
        "nexacro._getHTMLPositionStyle",
        "nexacro._setHTMLPositionStyle"
      ]
    },
    {
      "name": "_pTextAreaElement.updateElementText",
      "params": [
        "value",
        "caretpos"
      ],
      "calls": [
        "nexacro.InputElement.prototype.updateElementText.call",
        "value.replace"
      ]
    },
    {
      "name": "_pTextAreaElement._updateElementValue",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro.InputElement.prototype._updateElementValue.call",
        "this._setElementScrollSize",
        "value.replace"
      ]
    },
    {
      "name": "_pTextAreaElement._getInputValue",
      "params": [],
      "calls": [
        "nexacro.InputElement.prototype._getInputValue.call"
      ]
    },
    {
      "name": "_pTextAreaElement._updateInputValue",
      "params": [
        "value",
        "fireevent",
        "selectionStart",
        "selectionEnd"
      ],
      "calls": [
        "nexacro.InputElement.prototype._updateInputValue.call",
        "this._setElementScrollSize"
      ]
    },
    {
      "name": "_pTextAreaElement.on_reset_update_value",
      "params": [
        "resetpos"
      ],
      "calls": []
    },
    {
      "name": "_pTextAreaElement.setElementInputType",
      "params": [
        "type",
        "bImedisable"
      ],
      "calls": [
        "nexacro.__setDOMNode_ImeMode"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementSetSelect",
      "params": [
        "start",
        "end"
      ],
      "calls": [
        "nexacro.__setTextAreaDOMNodeSetSelect",
        "this._getInputValue",
        "this._getRootWindowHandle",
        "this._setElementLastSelectionRange",
        "this.isComposing"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementCaretPos",
      "params": [],
      "calls": [
        "nexacro.__getTextAreaDOMNodeCaretPos",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementSelectionRange",
      "params": [],
      "calls": [
        "nexacro.__getTextAreaDOMNodeSelectionRange",
        "sel.slice",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementCaretLine",
      "params": [],
      "calls": [
        "nexacro.__getTextAreaDOMNodeCaretLine",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementTextLineCount",
      "params": [
        "withwrap"
      ],
      "calls": [
        "nexacro.__getTextAreaDOMNodeTextLineCount",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pTextAreaElement.isFirstCaretLine",
      "params": [],
      "calls": [
        "g.test",
        "nexacro.__getTextAreaDOMNodeSelectionRange",
        "nexacro.__getTextAreaDOMNodeTextLineCount",
        "text.slice",
        "this._getInputValue",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pTextAreaElement.isLastCaretLine",
      "params": [],
      "calls": [
        "g.test",
        "nexacro.__getTextAreaDOMNodeSelectionRange",
        "nexacro.__getTextAreaDOMNodeTextLineCount",
        "text.lastIndexOf",
        "text.slice",
        "this._getInputValue",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "this.setElementHScrollPos",
        "this.setElementVScrollPos"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementHScrollPos",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextAreaElement.setElementHScrollPos",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTextAreaElement.getElementVScrollPos",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextAreaElement.setElementVScrollPos",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTextAreaElement.getElementContentSize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextAreaElement.getElementScrollSize",
      "params": [],
      "calls": [
        "this.getElementScrollHeight",
        "this.getElementScrollWidth"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementScrollWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextAreaElement.getElementScrollHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextAreaElement._getOverflowScrollSize",
      "params": [],
      "calls": [
        "nexacro.__getOverflowScrollSize"
      ]
    },
    {
      "name": "_pTextAreaElement._bindSysEvent",
      "params": [],
      "calls": [
        "nexacro.InputElement.prototype._bindSysEvent.call",
        "nexacro._observeSysEvent"
      ]
    },
    {
      "name": "_pTextAreaElement._unbindSysEvent",
      "params": [],
      "calls": [
        "nexacro.InputElement.prototype._unbindSysEvent.call",
        "nexacro._stopSysObserving"
      ]
    },
    {
      "name": "_pTextAreaElement._on_sys_scroll",
      "params": [
        "evt"
      ],
      "calls": [
        "comp._getWindow",
        "comp._scrollTo",
        "pThis.getElementCaretPos"
      ]
    },
    {
      "name": "_pTextAreaElement._on_sys_paste",
      "params": [
        "evt"
      ],
      "calls": [
        "data.indexOf",
        "data.replace",
        "evt.clipboardData.getData",
        "nexacro._stopSysEvent",
        "pThis._getInputValue",
        "pThis._updateInputValue",
        "pThis.getElementCaretPos",
        "pThis.on_sys_paste_before_process.call",
        "pThis.setElementSetSelect",
        "value.substring",
        "window.clipboardData.getData"
      ]
    },
    {
      "name": "_pTextAreaElement.on_apply_imeSet",
      "params": [
        "evt"
      ],
      "calls": [
        "comp.on_apply_imeSet",
        "pThis._imelocale.getLocale",
        "pThis.on_apply_ime_environment"
      ]
    },
    {
      "name": "nexacro.ControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.ControlElement.call"
      ]
    },
    {
      "name": "_pControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "linkedcontrol._findOwnerElementHandle",
        "nexacro.__appendDOMNode",
        "nexacro.__insertDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMNode_ToolTip",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setDOMStyle_TouchAction",
        "owner_elem._getDestHandle",
        "owner_elem._getRootWindowHandle",
        "this._getElementClassName",
        "this._getElementNexaClassName",
        "this._isFluid",
        "this._isMultiInnerProc",
        "this._isParentRtl",
        "this._on_createAccessibilityHandle",
        "this._refreshControl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement._iframe_eventhandler_oncontextmenu",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._stopSysEvent"
      ]
    },
    {
      "name": "_pControlElement._getControlStatusStr",
      "params": [],
      "calls": [
        "nexacro.__getHTMLAttr_Status",
        "nexacro.__getHTMLAttr_UserStatus"
      ]
    },
    {
      "name": "_pControlElement._on_createCommandStart",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.createCommandStart",
      "params": [],
      "calls": [
        "nexacro.__getHTMLStyle_Pos",
        "nexacro.__getHTMLStyle_Size",
        "nexacro.__getHTMLStyle_TouchAction",
        "nexacro._isNull",
        "this._client_elem.createCommandStart",
        "this._edge_elem.createCommand",
        "this._getControlStatusStr",
        "this._getControlStyleStr",
        "this._getElementClassName",
        "this._getElementNexaClassName",
        "this._isParentRtl",
        "this._on_createAccessibilityCommand",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement._on_createCommandEnd",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.createCommandEnd",
      "params": [],
      "calls": [
        "this._client_elem.createCommandEnd",
        "this._on_createCommandEnd"
      ]
    },
    {
      "name": "_pControlElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "edge_elem.attach_handle_fromparent",
        "this._client_elem.attachHandle",
        "this._on_attachHandle",
        "this._setAccessibility_notify",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pControlElement.destroy",
      "params": [],
      "calls": [
        "this._client_elem.destroy",
        "this._edge_elem.destroy",
        "this._on_destroy",
        "this._removeElementHandle",
        "this._transition_effector.cancel",
        "this._transition_effector.isPlaying"
      ]
    },
    {
      "name": "_pControlElement.initElementInfo",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.clearElementPosition",
      "params": [],
      "calls": [
        "nexacro.__clearDOMStyle_Pos",
        "nexacro.__clearDOMStyle_Size"
      ]
    },
    {
      "name": "_pControlElement.setLinkedControl",
      "params": [
        "control"
      ],
      "calls": []
    },
    {
      "name": "_pControlElement.setElementLayoutContainerProps",
      "params": [],
      "calls": [
        "manager.getLayoutProperties",
        "manager.getLayoutProperty",
        "nexacro._getLayoutManager",
        "this.setElementFlexCrossAxisAlign",
        "this.setElementFlexCrossAxisWrapAlign",
        "this.setElementFlexMainAxisAlign",
        "this.setElementFlexWrap",
        "this.setElementLayoutHorizontalGap",
        "this.setElementLayoutSpacing",
        "this.setElementLayoutType",
        "this.setElementLayoutVerticalGap",
        "this.setElementTableCellAlign",
        "this.setElementTableCellinCompAlign",
        "this.setElementTableDirection",
        "this.setElementTableTemplate",
        "this.setElementTableTemplateArea"
      ]
    },
    {
      "name": "_pControlElement.setElementLayoutContentsProps",
      "params": [],
      "calls": [
        "this._setElementLayoutBasis",
        "this.setElementFlexGrow",
        "this.setElementFlexShrink",
        "this.setElementLayoutOrder",
        "this.setElementTableCellArea"
      ]
    },
    {
      "name": "_pControlElement._setElementTransition",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Transition"
      ]
    },
    {
      "name": "_pControlElement.setElementPositionStep",
      "params": [
        "position_step"
      ],
      "calls": [
        "nexacro.__appendDOMNode",
        "nexacro.__unlinkDOMNode",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement._setElementLayoutBasis",
      "params": [
        "layoutbasis"
      ],
      "calls": [
        "client_elem._setElementLayoutBasis",
        "nexacro.__setDOMStyle_FluidSize",
        "nexacro.__setDOMStyle_LayoutBasis",
        "this._compareLayoutBasis"
      ]
    },
    {
      "name": "_pControlElement._setElementLayoutPosition",
      "params": [],
      "calls": [
        "nexacro.__clearDOMStyle_Pos",
        "nexacro.__setDOMStyle_LayoutFluidPos"
      ]
    },
    {
      "name": "_pControlElement.setElementLayoutOrder",
      "params": [
        "layoutorder"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutOrder"
      ]
    },
    {
      "name": "_pControlElement.setElementTableCellArea",
      "params": [
        "tablecellarea"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_TableCellArea",
        "nexacro.__setDOMStyle_TableCellArea",
        "this._parseLayoutPosition"
      ]
    },
    {
      "name": "_pControlElement._parseLayoutPosition",
      "params": [],
      "calls": [
        "Arrcol.forEach",
        "Arrcol.push",
        "Arrcol.shift",
        "Arrrow.forEach",
        "Arrrow.push",
        "Arrrow.shift",
        "col.trim",
        "control._getForm",
        "manager.getLayoutProperty",
        "nexacro._getLayoutManager",
        "regExp.test",
        "row.trim",
        "strpos.indexOf",
        "strpos.split",
        "tabletemplatearea.indexOf"
      ]
    },
    {
      "name": "_pControlElement.clearContents",
      "params": [],
      "calls": [
        "this._client_elem.clearContents",
        "this._on_clearContents"
      ]
    },
    {
      "name": "_pControlElement.appendChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child_elem._appendToContainer",
        "child_elem._getRootWindowHandle",
        "child_elem._removeFromContainer",
        "child_elem.create",
        "this._client_elem._getRootWindowHandle",
        "this._getWindow",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.insertChildElement",
      "params": [
        "child_elem",
        "before_elem"
      ],
      "calls": [
        "child_elem._insertToContainer",
        "child_elem.create",
        "this._getWindow",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.removeChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child_elem._removeFromContainer"
      ]
    },
    {
      "name": "_pControlElement._getComputedStyle",
      "params": [
        "prop",
        "noflush"
      ],
      "calls": [
        "style.getPropertyValue",
        "window.getComputedStyle"
      ]
    },
    {
      "name": "_pControlElement._getComputedStyleBackgroundColor",
      "params": [
        "noflush",
        "bExport"
      ],
      "calls": [
        "ret.indexOf",
        "style.getPropertyValue",
        "window.getComputedStyle"
      ]
    },
    {
      "name": "_pControlElement._sendToBackElement",
      "params": [
        "elem"
      ],
      "calls": [
        "nexacro.__sendDOMNodeToBack"
      ]
    },
    {
      "name": "_pControlElement._bringToFrontElement",
      "params": [
        "elem"
      ],
      "calls": [
        "nexacro.__bringDOMNodeToFront"
      ]
    },
    {
      "name": "_pControlElement._moveToNextElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "nexacro.__moveDOMNodeToNext"
      ]
    },
    {
      "name": "_pControlElement._moveToPrevElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "nexacro.__moveDOMNodeToPrev"
      ]
    },
    {
      "name": "_pControlElement.sendToBackElement",
      "params": [
        "elem"
      ],
      "calls": [
        "client_elem._sendToBackElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.bringToFrontElement",
      "params": [
        "elem"
      ],
      "calls": [
        "client_elem._bringToFrontElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.moveToNextElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "client_elem._moveToNextElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.moveToPrevElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "client_elem._moveToPrevElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement._setElementHScrollPos",
      "params": [
        "hpos"
      ],
      "calls": [
        "nexacro.__setDOMNode_HScrollPos"
      ]
    },
    {
      "name": "_pControlElement._setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "nexacro.__setDOMNode_VScrollPos"
      ]
    },
    {
      "name": "_pControlElement._setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "nexacro.__setDOMNode_Offset"
      ]
    },
    {
      "name": "_pControlElement.setElementTranslateStart",
      "params": [],
      "calls": [
        "this._client_elem._setElementTranslateStart"
      ]
    },
    {
      "name": "_pControlElement.setElementTranslateEnd",
      "params": [],
      "calls": [
        "this._client_elem._setElementTranslateEnd"
      ]
    },
    {
      "name": "_pControlElement.setElementHScrollPos",
      "params": [
        "hpos"
      ],
      "calls": [
        "this._client_elem._setElementHScrollPos",
        "this.linkedcontrol._setHscrollPos"
      ]
    },
    {
      "name": "_pControlElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "this._client_elem._setElementVScrollPos",
        "this.linkedcontrol._setVscrollPos"
      ]
    },
    {
      "name": "_pControlElement.setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "this._client_elem._setElementScrollPos",
        "this._hscroll_control._setScrollPos",
        "this._vscroll_control._setScrollPos",
        "this.linkedcontrol._setHscrollPos",
        "this.linkedcontrol._setVscrollPos"
      ]
    },
    {
      "name": "_pControlElement.getElementScrollLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getElementScrollTop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getElementScrollWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getElementScrollHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.beginTransitionEffect",
      "params": [
        "effectObj",
        "callback"
      ],
      "calls": [
        "nexacro._ViewTransitionEffect",
        "this._transition_effect.begin",
        "this._transition_effect.destroy"
      ]
    },
    {
      "name": "_pControlElement.applyTransitionEffect",
      "params": [],
      "calls": [
        "this._transition_effect.apply"
      ]
    },
    {
      "name": "_pControlElement.cancelTransitionEffect",
      "params": [],
      "calls": [
        "this._transition_effect.cancel"
      ]
    },
    {
      "name": "_pControlElement._getElementClassName",
      "params": [],
      "calls": [
        "this._isRtl"
      ]
    },
    {
      "name": "_pControlElement.setElementTypeCSSSelector",
      "params": [
        "typename"
      ],
      "calls": [
        "nexacro.__setDOMNode_ClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pControlElement.setElementClassCSSSelector",
      "params": [
        "classname"
      ],
      "calls": [
        "nexacro.__setDOMNode_ClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pControlElement.setElementIDCSSSelector",
      "params": [
        "id"
      ],
      "calls": [
        "nexacro.__setDOMNode_ClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pControlElement.setElementCSSMapInfo",
      "params": [
        "border",
        "padding",
        "edge"
      ],
      "calls": [
        "edge_elem.create",
        "edge_elem.destroy",
        "edge_elem.setElementInfo",
        "edge_elem.setElementSize",
        "nexacro._EdgeImageElement",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementZIndex",
      "params": [
        "zindex"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Zindex"
      ]
    },
    {
      "name": "_pControlElement.setElementToolTip",
      "params": [
        "tooltiptext",
        "tooltiptype"
      ],
      "calls": [
        "nexacro.__setDOMNode_ToolTip"
      ]
    },
    {
      "name": "_pControlElement.setElementFocus",
      "params": [
        "selffocus"
      ],
      "calls": [
        "nexacro.__setDOMNode_Focus",
        "nexacro.__setLastFocusedElement"
      ]
    },
    {
      "name": "_pControlElement.setElementSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.BorderObject",
        "nexacro.__setDOMStyle_BorderNone",
        "nexacro.__setDOMStyle_BorderObject",
        "nexacro.__setDOMStyle_FluidSize",
        "nexacro.__setDOMStyle_Size",
        "this._edge_elem.setElementSize",
        "this._get_rtl",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement._get_rtl",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.setElementBorderRadius",
      "params": [
        "borderRadius"
      ],
      "calls": [
        "nexacro.__setDOMStyle_BorderRadiusObject"
      ]
    },
    {
      "name": "_pControlElement.setElementBorder",
      "params": [
        "border"
      ],
      "calls": [
        "nexacro.__setDOMStyle_BorderObject",
        "this._checkUpdateElementByRTL",
        "this._edge_elem.setElementSize",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderLeftNone",
      "params": [
        "borderleft"
      ],
      "calls": [
        "nexacro.__setDOMStyle_BorderLeftNone",
        "this._edge_elem.setElementSize",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderTopNone",
      "params": [
        "bordertop"
      ],
      "calls": [
        "nexacro.__setDOMStyle_BorderTopNone",
        "this._edge_elem.setElementSize",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderRightNone",
      "params": [
        "borderright"
      ],
      "calls": [
        "nexacro.__setDOMStyle_BorderRightNone",
        "this._edge_elem.setElementSize",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderBottomNone",
      "params": [
        "borderbottom"
      ],
      "calls": [
        "nexacro.__setDOMStyle_BorderBottomNone",
        "this._edge_elem.setElementSize",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderNone",
      "params": [
        "borderleft",
        "bordertop",
        "borderright",
        "borderbottom"
      ],
      "calls": [
        "this._refreshBorderNone"
      ]
    },
    {
      "name": "_pControlElement._refreshBorderNone",
      "params": [],
      "calls": [
        "nexacro.__setDOMStyle_BorderNone",
        "this._edge_elem.setElementSize",
        "this._get_rtl",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBackground",
      "params": [
        "background"
      ],
      "calls": [
        "nexacro.__setDOMStyle_BackgroundObject"
      ]
    },
    {
      "name": "_pControlElement.setElementEdge",
      "params": [
        "edge"
      ],
      "calls": [
        "edge_elem.create",
        "edge_elem.destroy",
        "edge_elem.setElementInfo",
        "edge_elem.setElementSize",
        "nexacro._EdgeImageElement"
      ]
    },
    {
      "name": "_pControlElement.setElementMargin",
      "params": [
        "margin"
      ],
      "calls": [
        "nexacro.__setDOMStyle_MarginObject"
      ]
    },
    {
      "name": "_pControlElement.setElementPadding",
      "params": [
        "padding"
      ],
      "calls": [
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pControlElement.setElementCursor",
      "params": [
        "cursor"
      ],
      "calls": [
        "nexacro.__setDOMStyle_CursorObject"
      ]
    },
    {
      "name": "_pControlElement.setElementOpacity",
      "params": [
        "opacity"
      ],
      "calls": [
        "nexacro.__setDOMStyle_OpacityObject"
      ]
    },
    {
      "name": "_pControlElement.setElementBoxShadow",
      "params": [
        "boxshadow"
      ],
      "calls": [
        "nexacro.__setDOMStyle_ShadowObject"
      ]
    },
    {
      "name": "_pControlElement.getZoom",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.setElementZoom",
      "params": [
        "zoomfactor"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TransformScale",
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pControlElement.setElementDisplay",
      "params": [
        "display"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Display"
      ]
    },
    {
      "name": "_pControlElement.setElementSimpleControl",
      "params": [
        "simplecontrol"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__removeDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "owner_elem._getRootWindowHandle",
        "this._getElementNexaClassName"
      ]
    },
    {
      "name": "_pControlElement.getClientLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getClientTop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getClientWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getClientHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement._updateInnerSize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement._updateInnerElement",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.BorderObject",
        "nexacro.__setDOMStyle_BorderNone",
        "nexacro.__setDOMStyle_BorderObject",
        "this._edge_elem.setElementSize",
        "this._get_rtl",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement._on_updateClientRect",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement._updateClientRect",
      "params": [],
      "calls": [
        "this._on_change_clientPos",
        "this._on_change_clientSize",
        "this._on_updateClientRect"
      ]
    },
    {
      "name": "_pControlElement._on_change_clientPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "client_elem.setElementPosition",
        "control.on_change_containerPos",
        "nexacro.__setDOMStyle_Pos"
      ]
    },
    {
      "name": "_pControlElement._on_change_clientSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "client_elem.setElementSize",
        "control.on_change_containerRect",
        "nexacro.__setDOMStyle_Size"
      ]
    },
    {
      "name": "_pControlElement._refreshControl",
      "params": [
        "handle",
        "handle_style"
      ],
      "calls": [
        "nexacro.BorderObject",
        "nexacro.__setDOMNode_Status",
        "nexacro.__setDOMNode_ToolTip",
        "nexacro.__setDOMNode_UserStatus",
        "nexacro.__setDOMStyle_BackgroundObject",
        "nexacro.__setDOMStyle_BorderNone",
        "nexacro.__setDOMStyle_BorderObject",
        "nexacro.__setDOMStyle_BorderRadiusObject",
        "nexacro.__setDOMStyle_CursorObject",
        "nexacro.__setDOMStyle_FlexGrow",
        "nexacro.__setDOMStyle_FlexShrink",
        "nexacro.__setDOMStyle_FluidSize",
        "nexacro.__setDOMStyle_LayoutOrder",
        "nexacro.__setDOMStyle_OpacityObject",
        "nexacro.__setDOMStyle_ShadowObject",
        "nexacro.__setDOMStyle_TableCellArea",
        "nexacro.__setDOMStyle_Zindex",
        "nexacro._isNull",
        "this._edge_elem.create",
        "this._get_rtl",
        "this._isFluid",
        "this._refreshAccessibilityInfo",
        "this._refreshCommonStyleProps",
        "this._refreshControlTabIndex"
      ]
    },
    {
      "name": "_pControlElement._refreshControlTabIndex",
      "params": [
        "handle",
        "tabindex"
      ],
      "calls": [
        "nexacro.__removeHTMLAttr_Proeprty",
        "nexacro.__setDOMNode_TabIndex"
      ]
    },
    {
      "name": "_pControlElement._refreshLayoutInfo",
      "params": [],
      "calls": [
        "nexacro.__setDOMStyle_FlexGrow",
        "nexacro.__setDOMStyle_FlexShrink",
        "nexacro.__setDOMStyle_FluidSize",
        "nexacro.__setDOMStyle_LayoutOrder",
        "nexacro.__setDOMStyle_TableCellArea",
        "this._isFluid",
        "this._refreshControlTabIndex"
      ]
    },
    {
      "name": "_pControlElement._getControlStyleStr",
      "params": [],
      "calls": [
        "nexacro.__getHTMLStyle_BackgroundObject",
        "nexacro.__getHTMLStyle_BorderBottomNone",
        "nexacro.__getHTMLStyle_BorderLeftNone",
        "nexacro.__getHTMLStyle_BorderObject",
        "nexacro.__getHTMLStyle_BorderRadiusObject",
        "nexacro.__getHTMLStyle_BorderRightNone",
        "nexacro.__getHTMLStyle_BorderTopNone",
        "nexacro.__getHTMLStyle_CursorObject",
        "nexacro.__getHTMLStyle_MarginObject",
        "nexacro.__getHTMLStyle_OpacityObject",
        "nexacro.__getHTMLStyle_ShadowObject",
        "this._getCommonStyleStr",
        "this._get_rtl",
        "this._isRtl"
      ]
    },
    {
      "name": "_pControlElement._isMultiInnerProc",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.setElementPosition",
      "params": [
        "left",
        "top",
        "bForce"
      ],
      "calls": [
        "nexacro.Element.prototype.setElementPosition.call",
        "owner_elem._changeInnerElement",
        "this._isMultiInnerProc"
      ]
    },
    {
      "name": "_pControlElement._setElementLayoutType",
      "params": [
        "layouttype"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutType"
      ]
    },
    {
      "name": "_pControlElement._setElementLayoutHorizontalGap",
      "params": [
        "layouthorizontalgap"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutGap"
      ]
    },
    {
      "name": "_pControlElement._setElementLayoutVerticalGap",
      "params": [
        "layoutverticalgap"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutGap"
      ]
    },
    {
      "name": "_pControlElement._setElementFlexMainAxisAlign",
      "params": [
        "flexmainaxisalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexMainAxisAlign",
        "this._getPropertyFlexAlign"
      ]
    },
    {
      "name": "_pControlElement._setElementFlexCrossAxisAlign",
      "params": [
        "flexcrossaxisalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexCrossAxisAlign",
        "this._getPropertyFlexAlign"
      ]
    },
    {
      "name": "_pControlElement._setElementFlexCrossAxisWrapAlign",
      "params": [
        "flexcrossaxiswrapalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexCrossAxisWrapAlign",
        "this._getPropertyFlexAlign"
      ]
    },
    {
      "name": "_pControlElement._setElementFlexWrap",
      "params": [
        "flexwrap"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexWrap"
      ]
    },
    {
      "name": "_pControlElement._setElementLayoutSpacing",
      "params": [
        "layoutspacing"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutSpacing"
      ]
    },
    {
      "name": "_pControlElement._setElementTableCellAlign",
      "params": [
        "tablecellalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TableCellHAlign",
        "nexacro.__setDOMStyle_TableCellVAlign",
        "this._parseLayoutCellAlign"
      ]
    },
    {
      "name": "_pControlElement._setElementTableCellinCompAlign",
      "params": [
        "tablecellincompalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TableCellinCompHAlign",
        "this._parseLayoutCellAlign"
      ]
    },
    {
      "name": "_pControlElement._setElementTableDirection",
      "params": [
        "tabledirection"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TableDirection"
      ]
    },
    {
      "name": "_pControlElement._setElementTableTemplate",
      "params": [
        "tabletemplate"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_TableTemplate",
        "nexacro.__setDOMStyle_TableTemplate",
        "tabletemplate.split"
      ]
    },
    {
      "name": "_pControlElement._setElementTableTemplateArea",
      "params": [
        "tabletemplatearea"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_TableTemplateArea",
        "nexacro.__setDOMStyle_TableTemplateArea"
      ]
    },
    {
      "name": "_pControlElement._getAccessibilityInfoStr",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.ScrollableControlElement",
      "params": [
        "parent_elem",
        "use_multiinner"
      ],
      "calls": [
        "nexacro._ContainerElement",
        "nexacro._MultiInnerContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro._ContainerElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_HScrollPos",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "owner_elem._getRootWindowHandle",
        "owner_elem_info.owner_handle.insertBefore",
        "step_client.create",
        "step_client.setElementPosition",
        "step_client.setElementSize",
        "this._client_elem.create",
        "this._getElementClassName",
        "this._isFluid",
        "this._isParentRtl",
        "this._isRtl",
        "this._refreshControl",
        "this._step_containers.push",
        "this.linkedcontrol._findOwnerElementHandle",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_destroy",
      "params": [],
      "calls": [
        "step_client.destroy"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_clearContents",
      "params": [],
      "calls": [
        "step_client.destroy"
      ]
    },
    {
      "name": "_pScrollableControlElement._setInnerElementScrollMaxTops",
      "params": [
        "tops"
      ],
      "calls": [
        "this._client_elem._setScrollMaxTops"
      ]
    },
    {
      "name": "_pScrollableControlElement.initElementInfo",
      "params": [],
      "calls": [
        "control._getHScrollBarSize",
        "control._getHScrollBarType",
        "control._getVScrollBarSize",
        "control._getVScrollBarType",
        "nexacro.ControlElement.prototype.initElementInfo.call",
        "this._client_elem._setElementHScrollPos",
        "this._client_elem._setElementVScrollPos",
        "this.setElementScrollbarSize"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementStepCount",
      "params": [
        "count"
      ],
      "calls": [
        "nexacro._ContainerElement",
        "step_client.create",
        "step_client.destroy",
        "step_client.setElementPosition",
        "step_client.setElementSize",
        "this._step_containers.push",
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementStepIndex",
      "params": [
        "index"
      ],
      "calls": []
    },
    {
      "name": "_pScrollableControlElement.setElementZoom",
      "params": [
        "zoomfactor"
      ],
      "calls": [
        "client.setElementZoom",
        "this._updateClientRect",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementScrollMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "client_elem.setElementScrollMaxSize",
        "this._client_elem.setElementScrollMaxSize",
        "this._updateClientRect",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementScrollbarSize",
      "params": [
        "hscroll_size",
        "vscroll_size",
        "hscrollbartype",
        "vscrollbartype",
        "scrolltype"
      ],
      "calls": [
        "container._setElementScrolltype",
        "this._getElementScrollType",
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementExpandbarSize",
      "params": [
        "expandbarsize",
        "expandbartype",
        "expanddirtype",
        "expandvisible",
        "expandarrange"
      ],
      "calls": [
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pScrollableControlElement.getContainerElement",
      "params": [
        "position_step"
      ],
      "calls": []
    },
    {
      "name": "_pScrollableControlElement.getElementScrollLeft",
      "params": [],
      "calls": [
        "container.getElementScrollLeft",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement.getElementScrollTop",
      "params": [],
      "calls": [
        "container.getElementScrollTop"
      ]
    },
    {
      "name": "_pScrollableControlElement.getElementScrollWidth",
      "params": [],
      "calls": [
        "container.getElementScrollWidth",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement.getElementScrollHeight",
      "params": [],
      "calls": [
        "container.getElementScrollHeight"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "this._client_elem._setElementVScrollPos",
        "this.getContainerElement",
        "this.linkedcontrol._setVscrollPos"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "this._hscroll_control._setScrollPos",
        "this._vscroll_control._setScrollPos",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement._updateClientRect",
      "params": [],
      "calls": [
        "this._on_change_clientPos",
        "this._on_change_clientSize",
        "this._on_updateClientRect"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_change_clientPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "control.on_change_containerPos",
        "nexacro.__setDOMStyle_Pos",
        "step_client_elem.setElementPosition",
        "step_client_elem.setElementSize",
        "this._client_elem._setElementHScrollPos",
        "this._client_elem.setElementPosition"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_change_clientPosExpand",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "client_elem.setElementPosition",
        "control.on_change_containerPos",
        "nexacro.__setDOMStyle_Pos"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_change_clientSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "Math.max",
        "client_elem.setElementScrollMaxSize",
        "client_elem.setElementSize",
        "control.on_change_containerRect",
        "nexacro.__setDOMStyle_Size",
        "step_client_elem.setElementSize"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_change_clientSizeExpand",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "client_elem.setElementSize",
        "control.on_change_containerRect",
        "nexacro.__setDOMStyle_Size"
      ]
    },
    {
      "name": "_pScrollableControlElement._setAttachCliendTop",
      "params": [
        "top"
      ],
      "calls": [
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_updateClientRect",
      "params": [],
      "calls": [
        "nexacro._isAlmostGreater",
        "this.setElementHScrollPos",
        "this.setElementVScrollPos"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_updateClientRectExpand",
      "params": [],
      "calls": []
    },
    {
      "name": "_pScrollableControlElement._getElementScrollType",
      "params": [
        "scrolltype"
      ],
      "calls": []
    },
    {
      "name": "_pScrollableControlElement._setElementContentsMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "nexacro.FrameControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "_pFrameControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMStyle_Absolute",
        "nexacro.__setDOMStyle_BorderNone",
        "nexacro.__setDOMStyle_Fixed",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro._getWindowHandleClientHeight",
        "nexacro._getWindowHandleClientWidth",
        "nexacro._isDesktop",
        "old_handle.hasChildNodes",
        "owner_elem._getRootWindowHandle",
        "this._client_elem.create",
        "this._createBorderElements",
        "this._getElementClassName",
        "this._getElementNexaClassName",
        "this._refreshControl",
        "this._updateBorderElementsPosition",
        "this.linkedcontrol._getWindow",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pFrameControlElement._on_destroy",
      "params": [],
      "calls": [
        "this._destroyBorderElements"
      ]
    },
    {
      "name": "_pFrameControlElement.setElementCSSMapInfo",
      "params": [
        "border",
        "padding",
        "edge"
      ],
      "calls": [
        "nexacro.ControlElement.prototype.setElementCSSMapInfo.call"
      ]
    },
    {
      "name": "_pFrameControlElement._getRootWindowHandle",
      "params": [],
      "calls": [
        "this.owner_elem._getRootWindowHandle",
        "this.parent._getRootWindowHandle"
      ]
    },
    {
      "name": "_pFrameControlElement.setElementBorder",
      "params": [
        "border"
      ],
      "calls": [
        "nexacro.ControlElement.prototype.setElementBorder.call"
      ]
    },
    {
      "name": "_pFrameControlElement._updateClientRect",
      "params": [],
      "calls": [
        "this._on_change_clientPos",
        "this._on_change_clientSize",
        "this._on_updateClientRect",
        "this._updateBorderElementsPosition"
      ]
    },
    {
      "name": "_pFrameControlElement._on_updateClientRect",
      "params": [],
      "calls": [
        "status_control.move",
        "title_control.move"
      ]
    },
    {
      "name": "_pFrameControlElement.appendChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child_elem._appendToContainer",
        "child_elem._getRootWindowHandle",
        "child_elem._removeFromContainer",
        "child_elem.create",
        "child_elem.setElementPosition",
        "child_elem.setElementSize",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pFrameControlElement.removeChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child_elem._removeFromContainer"
      ]
    },
    {
      "name": "_pFrameControlElement.sendToBackElement",
      "params": [
        "elem"
      ],
      "calls": [
        "nexacro.__sendDOMNodeToBack"
      ]
    },
    {
      "name": "_pFrameControlElement.bringToFrontElement",
      "params": [
        "elem"
      ],
      "calls": [
        "elem.setElementZIndex"
      ]
    },
    {
      "name": "_pFrameControlElement.moveToNextElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "client_elem.moveToNextElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pFrameControlElement.moveToPrevElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "client_elem.moveToPrevElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pFrameControlElement.setTitleBarControl",
      "params": [
        "title_control",
        "title_height"
      ],
      "calls": [
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pFrameControlElement.setStatusBarControl",
      "params": [
        "status_control",
        "status_height"
      ],
      "calls": [
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pFrameControlElement._createBorderElements",
      "params": [],
      "calls": [
        "border_elem.create",
        "nexacro._FrameResizeBorderElement",
        "this._border_elems.add_item",
        "this._setResizable",
        "this.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "_pFrameControlElement._destroyBorderElements",
      "params": [],
      "calls": [
        "this._border_elems.clear"
      ]
    },
    {
      "name": "_pFrameControlElement.setElementPosition",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.ControlElement.prototype.setElementPosition.call",
        "this._updateBorderElementsPosition"
      ]
    },
    {
      "name": "_pFrameControlElement._updateBorderElementsPosition",
      "params": [],
      "calls": [
        "border._getBorderWidth"
      ]
    },
    {
      "name": "_pFrameControlElement._setResizable",
      "params": [
        "resizable"
      ],
      "calls": [
        "border_elem.setElementCursor",
        "nexacro.CursorObject",
        "statuscontrol.set_resizable",
        "this._createBorderElements",
        "this._updateBorderElementsPosition"
      ]
    },
    {
      "name": "nexacro._FrameResizeBorderElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "__pFrameResizeBorderElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "owner_elem._getRootWindowHandle",
        "this._refreshControl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "__pFrameResizeBorderElement._on_starttrack",
      "params": [],
      "calls": [
        "this.linkedcontrol._on_border_starttrack"
      ]
    },
    {
      "name": "__pFrameResizeBorderElement._on_endtrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "this.linkedcontrol._on_border_endtrack"
      ]
    },
    {
      "name": "__pFrameResizeBorderElement._on_movetrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "this.linkedcontrol._on_border_movetrack"
      ]
    },
    {
      "name": "nexacro.ModalOverlayElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "_pModalOverlayElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__removeHTMLAttr_Proeprty",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro._getWindowHandleClientHeight",
        "nexacro._getWindowHandleClientWidth",
        "nexacro._isDesktop",
        "owner_elem.dest_handle.insertBefore",
        "this._client_elem.create",
        "this._client_elem.setElementSize",
        "this._createBackgroundElement",
        "this._getElementNexaClassName",
        "this._getWindow",
        "this._refreshControl",
        "this.parent_elem._getRootWindowHandle",
        "this.setElementZoom",
        "win.frame._getWaitComponentElement",
        "win.frame.getElement"
      ]
    },
    {
      "name": "_pModalOverlayElement._iframe_eventhandler_onmouseup",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._syshandler_onmouseup"
      ]
    },
    {
      "name": "_pModalOverlayElement._iframe_eventhandler_onmousemove",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._syshandler_onmousemove"
      ]
    },
    {
      "name": "_pModalOverlayElement._iframe_eventhandler_oncontextmenu",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._stopSysEvent"
      ]
    },
    {
      "name": "_pModalOverlayElement.destroy",
      "params": [],
      "calls": [
        "_win.frame.getElement",
        "nexacro.__removeDOMNode",
        "this._destroyBackgroundElement",
        "this.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "_pModalOverlayElement.setElementSize",
      "params": [
        "width",
        "height",
        "update"
      ],
      "calls": [
        "nexacro.Element.prototype.setElementSize.call"
      ]
    },
    {
      "name": "_pModalOverlayElement._getRootWindowHandle",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._OverlayElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.BackgroundObject",
        "nexacro.OpacityObject"
      ]
    },
    {
      "name": "_pOverlayElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__removeHTMLAttr_Proeprty",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMStyle_Pos",
        "this._createBackgroundElement",
        "this._getElementNexaClassName",
        "this._refreshControl",
        "this.parent.getElement",
        "this.parent_elem._getRootWindowHandle"
      ]
    },
    {
      "name": "nexacro._ContainerElement",
      "params": [
        "parent_elem",
        "use_translate_scroll",
        "type",
        "use_onscroll_inner"
      ],
      "calls": [
        "nexacro._isUndefined"
      ]
    },
    {
      "name": "_bind_container_scroll_handler",
      "params": [
        "elem"
      ],
      "calls": [
        "elem._callback_func_onscroll",
        "owner_elem._setScrollableElementHScrollPos"
      ]
    },
    {
      "name": "__pContainerElement._callback_func_onscroll",
      "params": [
        "evt"
      ],
      "calls": [
        "container._isRtl"
      ]
    },
    {
      "name": "__pContainerElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__insertDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro._isNull",
        "nexacro._observeSysEvent",
        "owner_elem._getRootWindowHandle",
        "owner_elem.dest_handle.hasChildNodes",
        "this._getElementNexaClassName",
        "this._isFluid",
        "this._isParentRtl",
        "this._on_createAccessibilityHandle",
        "this.createInnerContainer"
      ]
    },
    {
      "name": "__pContainerElement.createCommandStart",
      "params": [],
      "calls": [
        "nexacro.__getHTMLStyleSize",
        "this._getCommonStyleStr",
        "this._getElementNexaClassName",
        "this._on_createAccessibilityCommand"
      ]
    },
    {
      "name": "__pContainerElement.createCommandEnd",
      "params": [],
      "calls": []
    },
    {
      "name": "__pContainerElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMStyle_AbsoluteTransparent",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setDOMStyle_Visible",
        "nexacro._observeSysEvent",
        "this._getRootWindowHandle",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "__pContainerElement._syshandler_inner_onscroll_forward",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "__pContainerElement.createInnerContainer",
      "params": [
        "_doc"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__clearDOMStyle_LayoutGap",
        "nexacro.__clearDOMStyle_LayoutSpacing",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_HScrollPos",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMNode_VScrollPos",
        "nexacro.__setDOMStyle_AbsoluteTransparent",
        "nexacro.__setDOMStyle_FlexCrossAxisAlign",
        "nexacro.__setDOMStyle_FlexCrossAxisWrapAlign",
        "nexacro.__setDOMStyle_FlexMainAxisAlign",
        "nexacro.__setDOMStyle_FlexWrap",
        "nexacro.__setDOMStyle_LayoutGap",
        "nexacro.__setDOMStyle_LayoutSpacing",
        "nexacro.__setDOMStyle_LayoutType",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setDOMStyle_TableCellHAlign",
        "nexacro.__setDOMStyle_TableCellVAlign",
        "nexacro.__setDOMStyle_TableCellinCompHAlign",
        "nexacro.__setDOMStyle_TableCellinCompVAlign",
        "nexacro.__setDOMStyle_TableDirection",
        "nexacro.__setDOMStyle_TableTemplate",
        "nexacro.__setDOMStyle_TableTemplateArea",
        "nexacro.__setDOMStyle_Translate",
        "nexacro.__setDOMStyle_Visible",
        "nexacro._observeSysEvent",
        "this._getElementNexaClassName",
        "this._isRtl"
      ]
    },
    {
      "name": "__pContainerElement._removeElementHandle",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "__pContainerElement._setElementTranslateStart",
      "params": [],
      "calls": []
    },
    {
      "name": "__pContainerElement._setElementTranslateEnd",
      "params": [],
      "calls": [
        "nexacro.__clearDOMStyle_TranslateR",
        "nexacro.__setDOMStyle_Pos"
      ]
    },
    {
      "name": "__pContainerElement._setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "nexacro.__setDOMNode_VScrollPos",
        "nexacro.__setDOMStyle_Translate",
        "nexacro.__setDOMStyle_TranslateR",
        "this._isRtl"
      ]
    },
    {
      "name": "__pContainerElement._setElementLayoutType",
      "params": [
        "layouttype"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutType"
      ]
    },
    {
      "name": "__pContainerElement._setElementLayoutHorizontalGap",
      "params": [
        "layouthorizontalgap"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutGap"
      ]
    },
    {
      "name": "__pContainerElement._setElementLayoutVerticalGap",
      "params": [
        "layoutverticalgap"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutGap"
      ]
    },
    {
      "name": "__pContainerElement._setElementFlexMainAxisAlign",
      "params": [
        "flexmainaxisalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexMainAxisAlign"
      ]
    },
    {
      "name": "__pContainerElement._setElementFlexCrossAxisAlign",
      "params": [
        "flexcrossaxisalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexCrossAxisAlign"
      ]
    },
    {
      "name": "__pContainerElement._setElementFlexCrossAxisWrapAlign",
      "params": [
        "flexcrossaxiswrapalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexCrossAxisWrapAlign"
      ]
    },
    {
      "name": "__pContainerElement._setElementFlexWrap",
      "params": [
        "flexwrap"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexWrap"
      ]
    },
    {
      "name": "__pContainerElement._setElementLayoutSpacing",
      "params": [
        "layoutspacing"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutSpacing"
      ]
    },
    {
      "name": "__pContainerElement._setElementTableCellAlign",
      "params": [
        "tablecellalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TableCellHAlign",
        "nexacro.__setDOMStyle_TableCellVAlign",
        "this._parseLayoutCellAlign"
      ]
    },
    {
      "name": "__pContainerElement._setElementTableCellinCompAlign",
      "params": [
        "tablecellincompalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TableCellinCompHAlign",
        "this._parseLayoutCellAlign"
      ]
    },
    {
      "name": "__pContainerElement._setElementTableDirection",
      "params": [
        "tabledirection"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TableDirection"
      ]
    },
    {
      "name": "__pContainerElement._setElementTableTemplate",
      "params": [
        "tabletemplate"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_TableTemplate",
        "nexacro.__setDOMStyle_TableTemplate"
      ]
    },
    {
      "name": "__pContainerElement._setElementTableTemplateArea",
      "params": [
        "tabletemplatearea"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_TableTemplateArea",
        "nexacro.__setDOMStyle_TableTemplateArea"
      ]
    },
    {
      "name": "__pContainerElement._setElementLayoutBasis",
      "params": [
        "layoutbasis"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FluidSize",
        "this._compareLayoutBasis"
      ]
    },
    {
      "name": "__pContainerElement._setElementHScrollPos",
      "params": [
        "hpos"
      ],
      "calls": [
        "nexacro.__setDOMNode_HScrollPos",
        "nexacro.__setDOMStyle_Translate",
        "nexacro.__setDOMStyle_TranslateR",
        "this._isRtl"
      ]
    },
    {
      "name": "__pContainerElement._setElementScrolltype",
      "params": [
        "scrolltype"
      ],
      "calls": []
    },
    {
      "name": "__pContainerElement._setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "nexacro.__setDOMNode_HScrollPos",
        "nexacro.__setDOMNode_VScrollPos",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Translate"
      ]
    },
    {
      "name": "__pContainerElement.setElementScrollMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMStyle_AbsoluteTransparent",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setDOMStyle_Visible",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "__pContainerElement.getElementScrollLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "__pContainerElement.getElementScrollTop",
      "params": [],
      "calls": []
    },
    {
      "name": "__pContainerElement.getElementScrollWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "__pContainerElement.getElementScrollHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "__pContainerElement.destroy",
      "params": [],
      "calls": [
        "nexacro._stopSysObserving",
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "__pContainerElement._syshandler_onscroll_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "container._findScrollbarControl",
        "linkedcontrol._scrollTo"
      ]
    },
    {
      "name": "__pContainerElement._findScrollbarControl",
      "params": [
        "elem",
        "is_vert"
      ],
      "calls": []
    },
    {
      "name": "__pContainerElement.clearContents",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode",
        "nexacro._stopSysObserving"
      ]
    },
    {
      "name": "__pContainerElement.appendChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child_elem._appendToContainer",
        "child_elem._getRootWindowHandle",
        "child_elem._removeFromContainer",
        "child_elem.create",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "__pContainerElement.removeChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child_elem._removeFromContainer"
      ]
    },
    {
      "name": "__pContainerElement._moveToNextElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "nexacro.__moveDOMNodeToNext"
      ]
    },
    {
      "name": "__pContainerElement._moveToPrevElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "nexacro.__moveDOMNodeToPrev"
      ]
    },
    {
      "name": "__pContainerElement._sendToBackElement",
      "params": [
        "elem"
      ],
      "calls": [
        "nexacro.__sendDOMNodeToBack"
      ]
    },
    {
      "name": "__pContainerElement._bringToFrontElement",
      "params": [
        "elem"
      ],
      "calls": [
        "nexacro.__bringDOMNodeToFront"
      ]
    },
    {
      "name": "__pContainerElement._getElementClassName",
      "params": [],
      "calls": [
        "this._getElementNexaClassName"
      ]
    },
    {
      "name": "__pContainerElement.getZoom",
      "params": [],
      "calls": [
        "nexacro.__getDOMNodeStyle_TransformScale"
      ]
    },
    {
      "name": "__pContainerElement.setElementZoom",
      "params": [
        "zoomfactor"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TransformScale"
      ]
    },
    {
      "name": "nexacro._MultiInnerContainerElement",
      "params": [
        "parent_elem",
        "use_translate_scroll",
        "type"
      ],
      "calls": [
        "nexacro._ContainerElement.call"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._ContainerElement.prototype.attachHandle.call",
        "this.recalcInnerContainer"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement.destroy",
      "params": [],
      "calls": [
        "nexacro._ContainerElement.prototype.destroy.call",
        "this._destroyInnerContainerPages"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement.createInnerContainer",
      "params": [],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_HScrollPos",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMNode_VScrollPos",
        "nexacro.__setDOMStyle_Translate",
        "this._calcInnerContainerPages",
        "this._getElementNexaClassName",
        "this.appendInnerContainer",
        "this.owner_elem._getRootWindowHandle",
        "this.updateInnerContainerPos",
        "this.updateInnerContainerSize"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement.recalcInnerContainer",
      "params": [],
      "calls": [
        "this._calcInnerContainerPages",
        "this.appendInnerContainer",
        "this.owner_elem._getRootWindowHandle",
        "this.removeInnerContainer",
        "this.updateInnerContainerPos",
        "this.updateInnerContainerSize"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement.appendInnerContainer",
      "params": [
        "index",
        "_doc"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMNode_Selectable",
        "nexacro.__setDOMStyle_Absolute",
        "this._ext_inners.push",
        "this._getElementNexaClassName"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement.removeInnerContainer",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode",
        "this._ext_inners.splice"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement.updateInnerContainerSize",
      "params": [],
      "calls": [
        "nexacro.__setDOMStyle_Size"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement.updateInnerContainerPos",
      "params": [],
      "calls": [
        "nexacro.__setDOMStyle_Translate",
        "this._isRtl"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement._calcInnerContainerPages",
      "params": [],
      "calls": []
    },
    {
      "name": "__pMultiInnerContainerElement._destroyInnerContainerPages",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement.setElementScrollMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this.recalcInnerContainer"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement._setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "this.updateInnerContainerPos"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement._setScrollMaxTops",
      "params": [
        "tops"
      ],
      "calls": []
    },
    {
      "name": "__pMultiInnerContainerElement._getDestHandle",
      "params": [
        "top",
        "idx"
      ],
      "calls": [
        "this._getExtInnerIdx"
      ]
    },
    {
      "name": "__pMultiInnerContainerElement._getExtInnerIdx",
      "params": [
        "top"
      ],
      "calls": []
    },
    {
      "name": "__pMultiInnerContainerElement._changeInnerElement",
      "params": [
        "top",
        "target_handle"
      ],
      "calls": [
        "nexacro.__appendDOMNode",
        "nexacro.__removeDOMNode",
        "this._getDestHandle",
        "this._getExtInnerIdx"
      ]
    },
    {
      "name": "nexacro.PluginElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "_pPluginElement.create",
      "params": [],
      "calls": [
        "events.get_id",
        "events.get_item",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_Selectable",
        "nexacro.__setDOMStyle_Visible",
        "owner_elem._getRootWindowHandle",
        "this._createObjectElementHandle",
        "this.addEventHandler",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pPluginElement.createCommand",
      "params": [],
      "calls": [
        "params.get_id",
        "params.get_item",
        "this._getCommonStyleStr",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pPluginElement._createObjectElementHandle",
      "params": [
        "_doc",
        "left",
        "top",
        "width",
        "height",
        "params"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMStyle_Absolute",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setHTMLAttr_Proeprty",
        "params.get_id",
        "params.get_item",
        "this._setObjectDOMParam"
      ]
    },
    {
      "name": "_pPluginElement.addEventHandler",
      "params": [
        "name",
        "callback"
      ],
      "calls": [
        "callback.toString",
        "doc.createElement",
        "nexacro.__setHTMLAttr_Proeprty",
        "nexacro.getApplication",
        "this._events.add_item",
        "this._getRootWindowHandle",
        "this.handle.appendChild"
      ]
    },
    {
      "name": "_pPluginElement.removeEventHandler",
      "params": [
        "name",
        "callback"
      ],
      "calls": [
        "callback.toString",
        "nexacro.__getHTMLAttr_Proeprty",
        "nexacro.__removeHTMLAttr_Proeprty",
        "nexacro.__unlinkDOMNode",
        "object_node.removeAttribute",
        "this.handle.getElementsByTagName"
      ]
    },
    {
      "name": "_pPluginElement.setElementMovie",
      "params": [
        "movie"
      ],
      "calls": [
        "nexacro.__appendDOMNode",
        "nexacro.__removeDOMNode",
        "nexacro.__setHTMLAttr_Proeprty",
        "this._createObjectElementHandle"
      ]
    },
    {
      "name": "_pPluginElement.setElementMovie",
      "params": [
        "movie"
      ],
      "calls": [
        "nexacro.__setHTMLAttr_Proeprty"
      ]
    },
    {
      "name": "_pPluginElement._play",
      "params": [],
      "calls": [
        "obj_node.Play"
      ]
    },
    {
      "name": "_pPluginElement._stopPlay",
      "params": [],
      "calls": [
        "obj_node.StopPlay"
      ]
    },
    {
      "name": "_pPluginElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "events.get_id",
        "events.get_item",
        "handle.getElementsByTagName",
        "this.addEventHandler",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pPluginElement.destroy",
      "params": [],
      "calls": [
        "events.destroy",
        "nexacro.__removeDOMNode",
        "params.destroy"
      ]
    },
    {
      "name": "_pPluginElement._setObjectDOMParam",
      "params": [
        "_doc",
        "target_handle",
        "name",
        "value"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setHTMLAttr_Proeprty"
      ]
    },
    {
      "name": "_pPluginElement.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "newleft",
        "newtop"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Absolute",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size"
      ]
    },
    {
      "name": "_pPluginElement.setElementFocus",
      "params": [
        "selffocus"
      ],
      "calls": [
        "nexacro.__setDOMNode_Focus",
        "nexacro.__setLastFocusedElement"
      ]
    },
    {
      "name": "_pPluginElement.setElementLicense",
      "params": [
        "license"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementLicenseFile",
      "params": [
        "lpkpath"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementMIMEType",
      "params": [
        "mimetype"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setHTMLAttr_Proeprty",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pPluginElement.setElementCodebase",
      "params": [
        "codebase"
      ],
      "calls": [
        "nexacro.__setHTMLAttr_Proeprty"
      ]
    },
    {
      "name": "_pPluginElement.setElementCode",
      "params": [
        "code"
      ],
      "calls": [
        "nexacro.__setHTMLAttr_Proeprty"
      ]
    },
    {
      "name": "_pPluginElement.setElementArchive",
      "params": [
        "archive"
      ],
      "calls": [
        "nexacro.__setHTMLAttr_Proeprty"
      ]
    },
    {
      "name": "_pPluginElement.getElementParam",
      "params": [
        "name"
      ],
      "calls": [
        "object_node.getElementsByTagName",
        "params.get_item"
      ]
    },
    {
      "name": "_pPluginElement.setElementParam",
      "params": [
        "name",
        "value"
      ],
      "calls": [
        "obj_node.getElementsByTagName",
        "params.add_item",
        "params.get_item",
        "params.set_item",
        "this._getRootWindowHandle",
        "this._setObjectDOMParam"
      ]
    },
    {
      "name": "_pPluginElement.setElementPluginSrc",
      "params": [
        "src"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__removeDOMNode",
        "nexacro.__setDOMStyle_Absolute",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setHTMLAttr_Proeprty",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pPluginElement.setElementPluginMIMEType",
      "params": [
        "type"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setHTMLAttr_Proeprty",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pPluginElement.callMethod",
      "params": [],
      "calls": [
        "Array.prototype.shift.call",
        "callScript.call",
        "fn.apply",
        "obj_arr.push"
      ]
    },
    {
      "name": "callScript",
      "params": [],
      "calls": [
        "fn.apply"
      ]
    },
    {
      "name": "_pPluginElement._getPluginObject",
      "params": [],
      "calls": [
        "nexacro.PluginObject",
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "nexacro.PluginObject",
      "params": [],
      "calls": []
    },
    {
      "name": "__pPluginObject.getProperty",
      "params": [
        "name"
      ],
      "calls": [
        "nexacro.PluginObject",
        "this.handle.getElementsByTagName"
      ]
    },
    {
      "name": "__pPluginObject.setProperty",
      "params": [
        "name",
        "value"
      ],
      "calls": [
        "nexacro.__appendDOMNode",
        "nexacro.__setHTMLAttr_Proeprty",
        "this._doc.createElement",
        "this.handle.getElementsByTagName"
      ]
    },
    {
      "name": "__pPluginObject._delete_property",
      "params": [
        "name"
      ],
      "calls": [
        "nexacro.__unlinkDOMNode",
        "this.handle.getElementsByTagName"
      ]
    },
    {
      "name": "__pPluginObject.callMethod",
      "params": [],
      "calls": [
        "Array.prototype.shift.call",
        "callScript.call",
        "fn.apply",
        "nexacro.PluginObject",
        "obj_arr.push"
      ]
    },
    {
      "name": "callScript",
      "params": [],
      "calls": [
        "fn.apply"
      ]
    },
    {
      "name": "__pPluginObject.callMethodAsync",
      "params": [],
      "calls": [
        "self.callMethod"
      ]
    },
    {
      "name": "nexacro._WebBrowserPluginElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "_iframe_eventhandler_onmousemove",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro.__findParentElement",
        "nexacro._findWindow",
        "nexacro._settracemsg",
        "wb._getWindowPosition",
        "win._on_sys_mousemove"
      ]
    },
    {
      "name": "_iframe_eventhandler_ontouchmove",
      "params": [
        "evt"
      ],
      "calls": [
        "Math.abs",
        "nexacro._getWindowHandleClientHeight",
        "nexacro._getWindowHandleClientWidth",
        "nexacro._syshandler_ontouchmove"
      ]
    },
    {
      "name": "_iframe_eventhandler_ontouchstart",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._getWindowHandleClientHeight",
        "nexacro._getWindowHandleClientWidth",
        "nexacro._syshandler_ontouchstart"
      ]
    },
    {
      "name": "_iframe_eventhandler_ontouchend",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._syshandler_ontouchend"
      ]
    },
    {
      "name": "_iframe_eventhandler_onmousewheel",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro.__getWheelDeltaY",
        "nexacro._syshandler_onmousewheel"
      ]
    },
    {
      "name": "_iframe_eventhandler_onload",
      "params": [
        "evt"
      ],
      "calls": [
        "elem._on_frame_load",
        "nexacro._observeSysEvent",
        "nexacro._settracemsg"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_Selectable",
        "nexacro.__setDOMStyle_Color",
        "nexacro.__setDOMStyle_Font",
        "nexacro.__setDOMStyle_Visible",
        "nexacro.__setMobileIframeDOMNodeStyleScroll",
        "nexacro._observeSysEvent",
        "owner_elem._getRootWindowHandle",
        "this._createInternalAccessibilityElementHandle",
        "this._createInternalFocusElementHandle",
        "this._createInternalFrameElementHandle",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getHTMLAttr_Selectable",
        "nexacro.__getHTMLStyle_BKImageAlign",
        "nexacro.__getHTMLStyle_ColorObject",
        "nexacro.__getHTMLStyle_FontObject",
        "nexacro.__getHTMLStyle_PaddingObject",
        "nexacro.__getHTMLStyle_Pos",
        "nexacro.__getHTMLStyle_Size",
        "nexacro.__getHTMLStyle_Visible",
        "owner_elem._getRootWindowHandle",
        "params.get_id",
        "params.get_item",
        "this._getCommonStyleStr",
        "this._getOverflowScrollSize",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__setMobileIframeDOMNodeStyleScroll",
        "nexacro._observeSysEvent",
        "this.parent_elem.getContainerElement",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._createInternalAccessibilityElementHandle",
      "params": [
        "win",
        "owner_elem"
      ],
      "calls": []
    },
    {
      "name": "__pWebBrowserPluginElement._createInternalFocusElementHandle",
      "params": [
        "id",
        "win",
        "_doc",
        "owner_elem"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMAccessibility_StatHidden",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMNode_TabIndex",
        "nexacro.__setDOMStyle_Absolute",
        "nexacro.__setDOMStyle_OpacityObject",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._go_prev_focus",
      "params": [
        "evt"
      ],
      "calls": [
        "form._getWindow",
        "form._searchPrevTabFocus",
        "node.parent_elem.linkedcontrol._getForm",
        "win._removeFromCurrentFocusPath"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._go_next_focus",
      "params": [
        "evt"
      ],
      "calls": [
        "form._getWindow",
        "form._searchNextTabFocus",
        "node.parent_elem.linkedcontrol._getForm",
        "win._removeFromCurrentFocusPath"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._on_frame_load",
      "params": [
        "_win"
      ],
      "calls": [
        "_win.getCurrentFocusPaths",
        "comp._getWindow",
        "comp.on_load_handler",
        "focus_comp._apply_setfocus",
        "input_elem.setElementFocus",
        "nexacro.__setDOMStyle_Visible",
        "nexacro._indexOf",
        "nexacro._settracemsg"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.destroy",
      "params": [],
      "calls": [
        "events.destroy",
        "nexacro.__removeDOMNode",
        "nexacro._stopSysObserving",
        "overlay_elem.destroy",
        "params.destroy",
        "this._next_outfocus_message_elem.destroy",
        "this._prev_outfocus_message_elem.destroy"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._createInternalFrameElementHandle",
      "params": [
        "_doc",
        "left",
        "top",
        "width",
        "height",
        "params"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__setDOMNode_ToolTip",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setHTMLAttr_Proeprty",
        "params.get_id",
        "params.get_item",
        "this._setInternalFrameDOMParam"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setInternalFrameDOMParam",
      "params": [
        "_doc",
        "target_handle",
        "name",
        "value"
      ],
      "calls": [
        "nexacro.__setHTMLAttr_Proeprty"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setElementFocus",
      "params": [
        "selffocus"
      ],
      "calls": [
        "nexacro.__setDOMNode_Focus",
        "nexacro.__setLastFocusedElement"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.setElementCodebase",
      "params": [
        "codebaseurl"
      ],
      "calls": [
        "nexacro.__setHTMLAttr_Proeprty"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.getElementParam",
      "params": [
        "name"
      ],
      "calls": [
        "nexacro.PluginObject",
        "params.get_item"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.setElementParam",
      "params": [
        "name",
        "value"
      ],
      "calls": [
        "params.add_item",
        "this._getRootWindowHandle",
        "this._setInternalFrameDOMParam"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.setElementEnable",
      "params": [
        "value"
      ],
      "calls": [
        "linkedcontrol._getWindow",
        "nexacro._OverlayElement",
        "nexacro._getMainWindowHandle",
        "overlay_elem.create",
        "overlay_elem.setElementVisible",
        "overlay_elem.setLinkedControl"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._getDoc",
      "params": [],
      "calls": []
    },
    {
      "name": "__pWebBrowserPluginElement._setUrl",
      "params": [
        "url",
        "useurlhistory"
      ],
      "calls": [
        "this._replaceURL",
        "this.setElementParam"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setGo",
      "params": [],
      "calls": [
        "nexacro._settracemsg",
        "this.handle.contentWindow.location.reload"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setGo",
      "params": [],
      "calls": [
        "nexacro._settracemsg",
        "this.handle.contentWindow.history.go"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setBack",
      "params": [],
      "calls": [
        "nexacro._settracemsg",
        "self.history.back",
        "this.handle.contentWindow.history.back"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setForward",
      "params": [],
      "calls": [
        "nexacro._settracemsg",
        "self.history.forward",
        "this.handle.contentWindow.history.forward"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._replaceURL",
      "params": [
        "v"
      ],
      "calls": [
        "iframe_window.location.replace"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.callMethod",
      "params": [],
      "calls": [
        "Array.prototype.shift.call"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._iframe_onfocusout_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "this._linked_element.parent_elem.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._iframe_onfocusin_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "this._linked_element.parent_elem.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._iframe_onfocus_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._stopSysEvent"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setElementInternalFocus",
      "params": [
        "keycode"
      ],
      "calls": [
        "nexacro._settracemsg",
        "this.handle.contentDocument.body.focus"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setElementLeaveMessage",
      "params": [
        "message"
      ],
      "calls": [
        "next_outfocus_elem.setElementText",
        "prev_outfocus_elem.setElementText"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setElementBackwardFocus",
      "params": [
        "prev_message",
        "next_message"
      ],
      "calls": [
        "next_outfocus_elem.handle.focus",
        "next_outfocus_elem.setElementText",
        "prev_outfocus_elem.setElementText"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setElementForwardFocus",
      "params": [
        "prev_message",
        "next_message"
      ],
      "calls": [
        "next_outfocus_elem.setElementText",
        "prev_outfocus_elem.handle.focus",
        "prev_outfocus_elem.setElementText"
      ]
    },
    {
      "name": "nexacro._WebViewPluginElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "__pWebViewPluginElement.createCommand",
      "params": [],
      "calls": []
    },
    {
      "name": "__pWebViewPluginElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": []
    },
    {
      "name": "__pWebViewPluginElement._on_frame_load",
      "params": [
        "_win"
      ],
      "calls": [
        "JSON.stringify",
        "_win.getCurrentFocusPaths",
        "cache.indexOf",
        "cache.push",
        "comp._getWindow",
        "comp.on_load_handler",
        "doc.body.appendChild",
        "doc.createElement",
        "focus_comp._apply_setfocus",
        "input_elem.setElementFocus",
        "nexacro.__setDOMStyle_Visible",
        "nexacro._indexOf",
        "nexacro._settracemsg",
        "obj.toString",
        "this.firetargetfunc",
        "value.toString"
      ]
    },
    {
      "name": "_safeStringify",
      "params": [
        "obj",
        "indent"
      ],
      "calls": [
        "JSON.stringify",
        "cache.indexOf",
        "cache.push",
        "obj.toString",
        "value.toString"
      ]
    },
    {
      "name": "__pWebViewPluginElement.destroy",
      "params": [],
      "calls": [
        "events.destroy",
        "nexacro.__removeDOMNode",
        "nexacro._stopSysObserving",
        "overlay_elem.destroy",
        "params.destroy",
        "this._next_outfocus_message_elem.destroy",
        "this._prev_outfocus_message_elem.destroy"
      ]
    },
    {
      "name": "__pWebViewPluginElement._createInternalFrameElementHandle",
      "params": [
        "_doc",
        "left",
        "top",
        "width",
        "height",
        "params"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__setDOMNode_ToolTip",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setHTMLAttr_Proeprty",
        "params.get_id",
        "params.get_item",
        "this._setInternalFrameDOMParam"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setInternalFrameDOMParam",
      "params": [
        "_doc",
        "target_handle",
        "name",
        "value"
      ],
      "calls": [
        "nexacro.__setHTMLAttr_Proeprty"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setElementFocus",
      "params": [
        "selffocus"
      ],
      "calls": [
        "nexacro.__setDOMNode_Focus",
        "nexacro.__setLastFocusedElement"
      ]
    },
    {
      "name": "__pWebViewPluginElement.setElementCodebase",
      "params": [
        "codebaseurl"
      ],
      "calls": [
        "nexacro.__setHTMLAttr_Proeprty"
      ]
    },
    {
      "name": "__pWebViewPluginElement.getElementParam",
      "params": [
        "name"
      ],
      "calls": [
        "nexacro.PluginObject",
        "params.get_item"
      ]
    },
    {
      "name": "__pWebViewPluginElement.setElementParam",
      "params": [
        "name",
        "value"
      ],
      "calls": [
        "params.add_item",
        "this._getRootWindowHandle",
        "this._setInternalFrameDOMParam"
      ]
    },
    {
      "name": "__pWebViewPluginElement.setElementEnable",
      "params": [
        "value"
      ],
      "calls": [
        "linkedcontrol._getWindow",
        "nexacro._OverlayElement",
        "nexacro._getMainWindowHandle",
        "overlay_elem.create",
        "overlay_elem.setElementVisible",
        "overlay_elem.setLinkedControl"
      ]
    },
    {
      "name": "__pWebViewPluginElement._getDoc",
      "params": [],
      "calls": []
    },
    {
      "name": "__pWebViewPluginElement._setUrl",
      "params": [
        "url",
        "useurlhistory"
      ],
      "calls": [
        "this._replaceURL",
        "this.setElementParam"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setGo",
      "params": [],
      "calls": [
        "nexacro._settracemsg",
        "self.history.go",
        "this.handle.contentWindow.location.reload"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setGo",
      "params": [],
      "calls": [
        "nexacro._settracemsg",
        "self.history.go",
        "this.handle.contentWindow.history.go"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setBack",
      "params": [],
      "calls": [
        "nexacro._settracemsg",
        "self.history.back",
        "this.handle.contentWindow.history.back"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setForward",
      "params": [],
      "calls": [
        "nexacro._settracemsg",
        "self.history.forward",
        "this.handle.contentWindow.history.forward"
      ]
    },
    {
      "name": "__pWebViewPluginElement.callMethod",
      "params": [],
      "calls": [
        "Array.prototype.shift.call"
      ]
    },
    {
      "name": "__pWebViewPluginElement._replaceURL",
      "params": [
        "v"
      ],
      "calls": [
        "iframe_window.location.replace"
      ]
    },
    {
      "name": "__pWebViewPluginElement.injectScript",
      "params": [],
      "calls": [
        "_safeStringify.call",
        "callScript.call",
        "ret.charAt",
        "ret.substr",
        "ret.toString",
        "script.replace",
        "this._safeStringify.call",
        "this._window.eval"
      ]
    },
    {
      "name": "callScript",
      "params": [],
      "calls": []
    },
    {
      "name": "__pWebViewPluginElement.injectScriptAndReturnPromise",
      "params": [],
      "calls": [
        "self.injectScript.apply"
      ]
    },
    {
      "name": "__pWebViewPluginElement.injectScriptAsync",
      "params": [],
      "calls": [
        "_safeStringify.call",
        "callScript.call",
        "callback.call",
        "ret.charAt",
        "ret.substr",
        "ret.toString",
        "script.replace",
        "this._safeStringify.call",
        "this._window.eval"
      ]
    },
    {
      "name": "callScript",
      "params": [],
      "calls": []
    },
    {
      "name": "__pWebViewPluginElement._iframe_onfocusout_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "this._linked_element.parent_elem.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "__pWebViewPluginElement._iframe_onfocusin_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "this._linked_element.parent_elem.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "__pWebViewPluginElement._iframe_onfocus_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "nexacro._stopSysEvent"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setElementInternalFocus",
      "params": [
        "keycode"
      ],
      "calls": [
        "nexacro._settracemsg",
        "this.handle.contentDocument.body.focus"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setElementLeaveMessage",
      "params": [
        "message"
      ],
      "calls": [
        "next_outfocus_elem.setElementText",
        "prev_outfocus_elem.setElementText"
      ]
    },
    {
      "name": "nexacro._VideoPlayerPluginElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._getNodeType",
      "params": [
        "file_type"
      ],
      "calls": []
    },
    {
      "name": "__pVideoPlayerPluginElement._getType",
      "params": [
        "file_type"
      ],
      "calls": []
    },
    {
      "name": "__pVideoPlayerPluginElement._createObjectElementHandle",
      "params": [
        "_doc",
        "left",
        "top",
        "width",
        "height",
        "params"
      ],
      "calls": [
        "Math.max",
        "_doc.createElement",
        "_draw_node.getContext",
        "areacontents._refreshDOM",
        "bandcontents._refreshDOM",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "child.elem._getRootWindowHandle",
        "child_elem._appendToContainer",
        "child_elem._removeFromContainer",
        "child_elem.create",
        "client_element.setElementPosition",
        "client_element.setElementSize",
        "client_element_fix.setElementPosition",
        "client_element_fix.setElementSize",
        "comp._on_currenttimechanged",
        "comp._on_error",
        "comp._on_statuschanged",
        "comp._on_volumechangechanged",
        "container._findScrollbarControl",
        "container._grid._callback_onvscroll",
        "container.setElementVScrollPos",
        "edge_elem.attach_handle_fromparent",
        "edge_elem.createCommand",
        "elem._setContainerMaxHeight",
        "elem._setContainerMaxWidth",
        "elem.setElementHScrollPos",
        "elem.setElementVScrollPos",
        "ext_inners.splice",
        "h_element._calculateClientWidth",
        "h_element._getContainerMaxWidth",
        "handle.canPlayType",
        "horz_elems._setContainerMaxWidth",
        "horz_elems.setElementHScrollPos",
        "imagesource.handle._draw_node.toDataURL",
        "line._isValid",
        "newinners.push",
        "nexacro.ControlElement.call",
        "nexacro.ControlElement.prototype._on_change_clientSize.call",
        "nexacro.ControlElement.prototype.destroy.call",
        "nexacro.ControlElement.prototype.setElementBorder.call",
        "nexacro.ControlElement.prototype.setElementSize.call",
        "nexacro.Element.prototype.setElementPosition.call",
        "nexacro.FontObject",
        "nexacro.Image",
        "nexacro.PluginElement.prototype.destroy.call",
        "nexacro._CanvasFillPattern",
        "nexacro._ContainerElement",
        "nexacro._ContainerElement.call",
        "nexacro._ContainerElement.prototype.attachHandle.call",
        "nexacro._ContainerElement.prototype.create.call",
        "nexacro._ContainerElement.prototype.destroy.call",
        "nexacro._GridBandContainerElement",
        "nexacro.__appendDOMNode",
        "nexacro.__clearDOMStyle_Size",
        "nexacro.__clipCanvas",
        "nexacro.__createCanvasLinearGradient",
        "nexacro.__createCanvasPattern",
        "nexacro.__createCanvasRadialGradient",
        "nexacro.__darwCanvasArc",
        "nexacro.__drawCanvasArcTo",
        "nexacro.__drawCanvasBeginPath",
        "nexacro.__drawCanvasBezierCurveTo",
        "nexacro.__drawCanvasClearRect",
        "nexacro.__drawCanvasClosePath",
        "nexacro.__drawCanvasFillText",
        "nexacro.__drawCanvasImage",
        "nexacro.__drawCanvasQuadraticCurveTo",
        "nexacro.__drawCanvasStrokeRect",
        "nexacro.__drawCanvasStrokeText",
        "nexacro.__drawCanvaslineTo",
        "nexacro.__drawCanvasmoveTo",
        "nexacro.__fillCanvas",
        "nexacro.__fillCanvasRect",
        "nexacro.__getHTMLNodePositionInFrame",
        "nexacro.__isPointInCanvasPath",
        "nexacro.__rectCanvas",
        "nexacro.__removeDOMNode",
        "nexacro.__restoreCanvas",
        "nexacro.__rotateCanvas",
        "nexacro.__saveCanvas",
        "nexacro.__scaleCanvas",
        "nexacro.__setCanvasFillColor",
        "nexacro.__setCanvasFillGradation",
        "nexacro.__setCanvasFillPattern",
        "nexacro.__setCanvasFont",
        "nexacro.__setCanvasGlobalAlpha",
        "nexacro.__setCanvasGlobalCompositeOperation",
        "nexacro.__setCanvasLineCap",
        "nexacro.__setCanvasLineJoin",
        "nexacro.__setCanvasLineStyle",
        "nexacro.__setCanvasLineWidth",
        "nexacro.__setCanvasMiterLimit",
        "nexacro.__setCanvasNodeSize",
        "nexacro.__setCanvasNodeStylePos",
        "nexacro.__setCanvasShadowBlur",
        "nexacro.__setCanvasShadowColor",
        "nexacro.__setCanvasShadowOffsetX",
        "nexacro.__setCanvasShadowOffsetY",
        "nexacro.__setCanvasStrokeStyle",
        "nexacro.__setCanvasTextAlign",
        "nexacro.__setCanvasTextBaseline",
        "nexacro.__setCanvasTransform",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMNode_Selectable",
        "nexacro.__setDOMNode_ToolTip",
        "nexacro.__setDOMNode_VScrollPos",
        "nexacro.__setDOMStyle_Absolute",
        "nexacro.__setDOMStyle_AbsoluteTransparent",
        "nexacro.__setDOMStyle_BorderNone",
        "nexacro.__setDOMStyle_ColorObject",
        "nexacro.__setDOMStyle_Direction",
        "nexacro.__setDOMStyle_Display",
        "nexacro.__setDOMStyle_FontObject",
        "nexacro.__setDOMStyle_LetterSpacingObject",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setDOMStyle_TextDecorationObject",
        "nexacro.__setDOMStyle_Translate",
        "nexacro.__setDOMStyle_Visible",
        "nexacro.__setDOMStyle_WordSpacingObject",
        "nexacro.__setDOMStyle_WordWrap",
        "nexacro.__setHTMLAttr_Proeprty",
        "nexacro.__setHTMLElem_Proeprty",
        "nexacro.__strokeCanvas",
        "nexacro.__toDataURLCanvas",
        "nexacro.__transformCanvas",
        "nexacro.__translateCanvas",
        "nexacro._createPrototype",
        "nexacro._degreesToRadians",
        "nexacro._getImageObject",
        "nexacro._getTextSize",
        "nexacro._getWebColorFromXreColor",
        "nexacro._getXreColorAlpha",
        "nexacro._isArray",
        "nexacro._isNull",
        "nexacro._observeSysEvent",
        "nexacro._stopSysObserving",
        "object_node.pause",
        "object_node.play",
        "object_node.removeChild",
        "owner_elem._changeInnerElement",
        "owner_elem._getDestHandle",
        "owner_elem._getRootWindowHandle",
        "pen._isValid",
        "source.lastIndexOf",
        "this._adjustPos",
        "this._client_body_element._setElementHScrollPos",
        "this._client_body_element.attachHandle",
        "this._client_body_element.clearContents",
        "this._client_body_element.create",
        "this._client_body_element.createCommandEnd",
        "this._client_body_element.createCommandStart",
        "this._client_body_element.destroy",
        "this._client_body_element.setElementPosition",
        "this._client_body_element.setElementScrollMaxSize",
        "this._client_body_element.setElementSize",
        "this._client_elem._adjustPos",
        "this._client_elem._getRootWindowHandle",
        "this._client_elem._setScrollHeight",
        "this._client_elem.clearContents",
        "this._client_elem.create",
        "this._client_elem.destroy",
        "this._client_elem.setElementPosition",
        "this._client_elem.setElementScrollMaxSize",
        "this._client_elem.setElementVScrollPos",
        "this._client_elem_fix.create",
        "this._client_elem_fix.destroy",
        "this._client_left_element.attachHandle",
        "this._client_left_element.clearContents",
        "this._client_left_element.create",
        "this._client_left_element.createCommandEnd",
        "this._client_left_element.createCommandStart",
        "this._client_left_element.destroy",
        "this._client_left_element.setElementPosition",
        "this._client_left_element.setElementSize",
        "this._client_right_element.attachHandle",
        "this._client_right_element.clearContents",
        "this._client_right_element.create",
        "this._client_right_element.createCommandEnd",
        "this._client_right_element.createCommandStart",
        "this._client_right_element.destroy",
        "this._client_right_element.setElementPosition",
        "this._client_right_element.setElementSize",
        "this._deleteExtinners",
        "this._destroyElementHandle",
        "this._edge_elem.destroy",
        "this._edge_elem.setElementSize",
        "this._getAccessibilityInfoStr",
        "this._getCommonStyleStr",
        "this._getControlStatusStr",
        "this._getControlStyleStr",
        "this._getDestHandle",
        "this._getElementClassName",
        "this._getElementNexaClassName",
        "this._getExtInnerIdx",
        "this._getNodeType",
        "this._getType",
        "this._get_rtl",
        "this._grid._callback_onvscroll",
        "this._hscroll_control.attachHandle",
        "this._isParentRtl",
        "this._on_change_clientPos",
        "this._on_change_clientSize",
        "this._on_destroy",
        "this._on_updateClientRect",
        "this._refreshControl",
        "this._removeElementHandle",
        "this._removeExtinners",
        "this._setAccessibility_notify",
        "this._setContainerHScrollPos",
        "this._setContainerMaxHeight",
        "this._setContainerMaxWidth",
        "this._setContainerVScrollPos",
        "this._setControlBorder",
        "this._setInnerElementExtend",
        "this._setScrollHeight",
        "this._updateClientRect",
        "this._updateClientSize",
        "this._updateInnerSize",
        "this._vscroll_control.attachHandle",
        "this.arc",
        "this.arc2",
        "this.beginPath",
        "this.closePath",
        "this.colors.push",
        "this.control.call",
        "this.drawArc",
        "this.drawStroke",
        "this.fill",
        "this.fillText",
        "this.halfRect",
        "this.handle._draw_ctx.rotate",
        "this.insetRect",
        "this.lineTo",
        "this.linkedcontrol._getCSSStyleValue",
        "this.moveTo",
        "this.owner_elem._getDestHandle",
        "this.owner_elem._getRootWindowHandle",
        "this.parent_elem.getContainerElement",
        "this.rect",
        "this.rotate",
        "this.setArea",
        "this.setElementHScrollPos",
        "this.setElementLineWidth",
        "this.setElementPosition",
        "this.setElementStrokeStyle",
        "this.setElementTextBaseline",
        "this.setElementVScrollPos",
        "this.stroke",
        "v_element._calculateClientHeight",
        "v_element._getContainerMaxHeight",
        "v_element._getScrollTop",
        "vert_elems._setContainerMaxHeight",
        "vert_elems.setElementVScrollPos",
        "vscrollbar.set_pos",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._video_eventhandler_changedstatus",
      "params": [
        "evt"
      ],
      "calls": [
        "comp._on_statuschanged"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._video_eventhandler_timeupdate",
      "params": [
        "evt"
      ],
      "calls": [
        "comp._on_currenttimechanged"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._video_eventhandler_volumechange",
      "params": [
        "evt"
      ],
      "calls": [
        "comp._on_volumechangechanged"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._video_eventhandler_error",
      "params": [
        "evt"
      ],
      "calls": [
        "comp._on_error"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._video_eventhandler_canplaythrough",
      "params": [
        "evt"
      ],
      "calls": [
        "comp._on_statuschanged"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._video_eventhandler_durationchange",
      "params": [
        "evt"
      ],
      "calls": [
        "comp._on_statuschanged"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement.setElementSource",
      "params": [
        "v"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setHTMLAttr_Proeprty",
        "object_node.removeChild"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement.setElementAttribute",
      "params": [
        "attribute_name",
        "v"
      ],
      "calls": [
        "nexacro.__setHTMLAttr_Proeprty"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement.setElementProperty",
      "params": [
        "property_name",
        "v"
      ],
      "calls": []
    },
    {
      "name": "__pVideoPlayerPluginElement._play",
      "params": [],
      "calls": [
        "object_node.play"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._pause",
      "params": [],
      "calls": [
        "object_node.pause"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._stop",
      "params": [],
      "calls": [
        "comp._on_statuschanged",
        "nexacro.__setHTMLElem_Proeprty",
        "object_node.pause"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoMute",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "nexacro.__setHTMLElem_Proeprty"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoShowControlBar",
      "params": [
        "name",
        "v"
      ],
      "calls": []
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoUrl",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "nexacro.__setHTMLElem_Proeprty"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoCurrentTime",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "nexacro.__setHTMLElem_Proeprty"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoLoop",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "nexacro.__setHTMLElem_Proeprty"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoAutoPlay",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "nexacro.__setHTMLElem_Proeprty"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoVolume",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "nexacro.__setHTMLElem_Proeprty"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoEnable",
      "params": [
        "name",
        "v"
      ],
      "calls": []
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideo360VRMode",
      "params": [
        "name",
        "v"
      ],
      "calls": []
    },
    {
      "name": "__pVideoPlayerPluginElement.createCommand",
      "params": [],
      "calls": [
        "owner_elem._getRootWindowHandle",
        "source.lastIndexOf",
        "this._getCommonStyleStr",
        "this._getNodeType",
        "this._getType",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._observeSysEvent",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement.destroy",
      "params": [],
      "calls": [
        "nexacro.PluginElement.prototype.destroy.call"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement.set_volume",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "nexacro.CanvasElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pCanvasElement.createPattern",
      "params": [
        "imagesource",
        "repeat_opt",
        "size"
      ],
      "calls": [
        "imagesource.handle._draw_node.toDataURL",
        "nexacro.Image",
        "nexacro._CanvasFillPattern",
        "nexacro.__createCanvasPattern",
        "nexacro._getImageObject"
      ]
    },
    {
      "name": "_pCanvasElement.createLinearGradient",
      "params": [
        "aX0",
        "aY0",
        "aX1",
        "aY1"
      ],
      "calls": [
        "nexacro.__createCanvasLinearGradient"
      ]
    },
    {
      "name": "_pCanvasElement.createRadialGradient",
      "params": [
        "aX0",
        "aY0",
        "aR0",
        "aX1",
        "aY1",
        "aR1"
      ],
      "calls": [
        "nexacro.__createCanvasRadialGradient"
      ]
    },
    {
      "name": "_pCanvasElement.setElementFillStyle",
      "params": [
        "fillstyle"
      ],
      "calls": [
        "nexacro.__setCanvasFillColor",
        "nexacro.__setCanvasFillGradation",
        "nexacro.__setCanvasFillPattern"
      ]
    },
    {
      "name": "_pCanvasElement.setElementFont",
      "params": [
        "font"
      ],
      "calls": [
        "nexacro.__setCanvasFont"
      ]
    },
    {
      "name": "_pCanvasElement.clearRect",
      "params": [
        "x",
        "y",
        "dx",
        "dy"
      ],
      "calls": [
        "nexacro.__drawCanvasClearRect"
      ]
    },
    {
      "name": "_pCanvasElement.setElementPosition",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "nexacro.__setCanvasNodeStylePos"
      ]
    },
    {
      "name": "_pCanvasElement.setElementGlobalAlpha",
      "params": [
        "alpha"
      ],
      "calls": [
        "nexacro.__setCanvasGlobalAlpha"
      ]
    },
    {
      "name": "_pCanvasElement.setElementGlobalCompositeOperation",
      "params": [
        "strOperation"
      ],
      "calls": [
        "nexacro.__setCanvasGlobalCompositeOperation"
      ]
    },
    {
      "name": "_pCanvasElement.setElementLineCap",
      "params": [
        "linecap"
      ],
      "calls": [
        "nexacro.__setCanvasLineCap"
      ]
    },
    {
      "name": "_pCanvasElement.setElementLineJoin",
      "params": [
        "linejoin"
      ],
      "calls": [
        "nexacro.__setCanvasLineJoin"
      ]
    },
    {
      "name": "_pCanvasElement.setElementLineWidth",
      "params": [
        "width"
      ],
      "calls": [
        "nexacro.__setCanvasLineWidth"
      ]
    },
    {
      "name": "_pCanvasElement.setElementLineStyle",
      "params": [
        "linetype"
      ],
      "calls": [
        "nexacro.__setCanvasLineStyle"
      ]
    },
    {
      "name": "_pCanvasElement.setElementStrokeStyle",
      "params": [
        "strokestyle"
      ],
      "calls": [
        "nexacro.__setCanvasStrokeStyle"
      ]
    },
    {
      "name": "_pCanvasElement.setElementMiterLimit",
      "params": [
        "limit"
      ],
      "calls": [
        "nexacro.__setCanvasMiterLimit"
      ]
    },
    {
      "name": "_pCanvasElement.setElementShadowBlur",
      "params": [
        "blur"
      ],
      "calls": [
        "nexacro.__setCanvasShadowBlur"
      ]
    },
    {
      "name": "_pCanvasElement.setElementShadowColor",
      "params": [
        "color"
      ],
      "calls": [
        "nexacro.__setCanvasShadowColor",
        "nexacro._getWebColorFromXreColor"
      ]
    },
    {
      "name": "_pCanvasElement.setElementShadowOffsetX",
      "params": [
        "offsetx"
      ],
      "calls": [
        "nexacro.__setCanvasShadowOffsetX"
      ]
    },
    {
      "name": "_pCanvasElement.setElementShadowOffsetY",
      "params": [
        "offsety"
      ],
      "calls": [
        "nexacro.__setCanvasShadowOffsetY"
      ]
    },
    {
      "name": "_pCanvasElement.setElementTextAlign",
      "params": [
        "align"
      ],
      "calls": [
        "nexacro.__setCanvasTextAlign"
      ]
    },
    {
      "name": "_pCanvasElement.setElementTextBaseline",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro.__setCanvasTextBaseline"
      ]
    },
    {
      "name": "_pCanvasElement.arc",
      "params": [
        "x",
        "y",
        "r",
        "start_rad",
        "end_rad",
        "counterclockwise"
      ],
      "calls": [
        "nexacro.__darwCanvasArc"
      ]
    },
    {
      "name": "_pCanvasElement.arc2",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg",
        "counterclockwise"
      ],
      "calls": [
        "nexacro.__darwCanvasArc",
        "nexacro._degreesToRadians"
      ]
    },
    {
      "name": "_pCanvasElement.arcTo",
      "params": [
        "x",
        "y",
        "x2",
        "y2",
        "r"
      ],
      "calls": [
        "nexacro.__drawCanvasArcTo"
      ]
    },
    {
      "name": "_pCanvasElement.beginPath",
      "params": [],
      "calls": [
        "nexacro.__drawCanvasBeginPath"
      ]
    },
    {
      "name": "_pCanvasElement.bezierCurveTo",
      "params": [
        "p1x",
        "p1y",
        "p2x",
        "p2y",
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__drawCanvasBezierCurveTo"
      ]
    },
    {
      "name": "_pCanvasElement.clip",
      "params": [],
      "calls": [
        "nexacro.__clipCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.closePath",
      "params": [],
      "calls": [
        "nexacro.__drawCanvasClosePath"
      ]
    },
    {
      "name": "_pCanvasElement.drawImage",
      "params": [
        "objimage",
        "x",
        "y",
        "imgWidth",
        "imgHeight"
      ],
      "calls": [
        "nexacro.__drawCanvasImage"
      ]
    },
    {
      "name": "_pCanvasElement.fill",
      "params": [],
      "calls": [
        "nexacro.__fillCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.fillRect",
      "params": [
        "x",
        "y",
        "dx",
        "dy"
      ],
      "calls": [
        "nexacro.__fillCanvasRect"
      ]
    },
    {
      "name": "_pCanvasElement.fillText",
      "params": [
        "text",
        "x",
        "y",
        "maxWidth"
      ],
      "calls": [
        "nexacro.__drawCanvasFillText",
        "nexacro.__setCanvasTextBaseline"
      ]
    },
    {
      "name": "_pCanvasElement.isPointInPath",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__isPointInCanvasPath"
      ]
    },
    {
      "name": "_pCanvasElement.lineTo",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__drawCanvaslineTo"
      ]
    },
    {
      "name": "_pCanvasElement.moveTo",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__drawCanvasmoveTo"
      ]
    },
    {
      "name": "_pCanvasElement.quadraticCurveTo",
      "params": [
        "px",
        "py",
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__drawCanvasQuadraticCurveTo"
      ]
    },
    {
      "name": "_pCanvasElement.rect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "nexacro.__rectCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.rotate",
      "params": [
        "angle_rad"
      ],
      "calls": [
        "nexacro.__rotateCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.rotate2",
      "params": [
        "angle"
      ],
      "calls": [
        "nexacro._degreesToRadians",
        "this.rotate"
      ]
    },
    {
      "name": "_pCanvasElement.scale",
      "params": [
        "dx",
        "dy"
      ],
      "calls": [
        "nexacro.__scaleCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.setTransform",
      "params": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f"
      ],
      "calls": [
        "nexacro.__setCanvasTransform"
      ]
    },
    {
      "name": "_pCanvasElement.stroke",
      "params": [],
      "calls": [
        "nexacro.__strokeCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.strokeRect",
      "params": [
        "x",
        "y",
        "width",
        "height"
      ],
      "calls": [
        "nexacro.__drawCanvasStrokeRect"
      ]
    },
    {
      "name": "_pCanvasElement.strokeText",
      "params": [
        "text",
        "x",
        "y",
        "maxWidth"
      ],
      "calls": [
        "nexacro.__drawCanvasStrokeText"
      ]
    },
    {
      "name": "_pCanvasElement.transform",
      "params": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f"
      ],
      "calls": [
        "nexacro.__transformCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.translate",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__translateCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.save",
      "params": [],
      "calls": [
        "nexacro.__saveCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.toDataURL",
      "params": [
        "imgType",
        "ImgOption"
      ],
      "calls": [
        "nexacro.__toDataURLCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.restore",
      "params": [],
      "calls": [
        "nexacro.__restoreCanvas"
      ]
    },
    {
      "name": "_pCanvasElement.drawArc",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg",
        "bClockwise",
        "bNormal"
      ],
      "calls": [
        "this.arc"
      ]
    },
    {
      "name": "_pCanvasElement.drawFill",
      "params": [],
      "calls": [
        "this.beginPath",
        "this.fill"
      ]
    },
    {
      "name": "_pCanvasElement._setPenStyle",
      "params": [
        "pen"
      ],
      "calls": [
        "pen._isValid",
        "this.setElementLineWidth",
        "this.setElementStrokeStyle"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeLine",
      "params": [
        "x1",
        "y1",
        "x2",
        "y2"
      ],
      "calls": [
        "this.drawStroke",
        "this.lineTo",
        "this.moveTo"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeVLine",
      "params": [
        "x",
        "y1",
        "y2"
      ],
      "calls": [
        "this.drawStroke",
        "this.lineTo",
        "this.moveTo"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeHLine",
      "params": [
        "y",
        "x1",
        "x2"
      ],
      "calls": [
        "this.drawStroke",
        "this.lineTo",
        "this.moveTo"
      ]
    },
    {
      "name": "_pCanvasElement.drawFillArc",
      "params": [
        "x",
        "y",
        "r",
        "start_rad",
        "end_rad",
        "bClockwise"
      ],
      "calls": [
        "this.beginPath",
        "this.closePath",
        "this.drawArc",
        "this.fill"
      ]
    },
    {
      "name": "_pCanvasElement.drawFillArc2",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg",
        "bClockwise"
      ],
      "calls": [
        "nexacro._degreesToRadians",
        "this.arc",
        "this.beginPath",
        "this.closePath",
        "this.fill"
      ]
    },
    {
      "name": "_pCanvasElement.halfRect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "this.closePath",
        "this.lineTo",
        "this.moveTo"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeHalfRect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "this.drawStroke",
        "this.halfRect"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeRect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "this.drawStroke",
        "this.rect"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeArc",
      "params": [
        "x",
        "y",
        "r",
        "start_rad",
        "end_rad",
        "bClockwise"
      ],
      "calls": [
        "this.arc",
        "this.drawStroke"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeArc2",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg",
        "bClockwise"
      ],
      "calls": [
        "this.arc2",
        "this.drawStroke"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeInsetRect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "this.drawStroke",
        "this.insetRect"
      ]
    },
    {
      "name": "_pCanvasElement.hline",
      "params": [
        "y",
        "x1",
        "x2"
      ],
      "calls": [
        "this.lineTo",
        "this.moveTo"
      ]
    },
    {
      "name": "_pCanvasElement.vline",
      "params": [
        "x",
        "y1",
        "y2"
      ],
      "calls": [
        "this.lineTo",
        "this.moveTo"
      ]
    },
    {
      "name": "_pCanvasElement._getElementScreenXY",
      "params": [],
      "calls": [
        "nexacro.__getHTMLNodePositionInFrame"
      ]
    },
    {
      "name": "_pCanvasElement.create",
      "params": [],
      "calls": [
        "_doc.createElement",
        "_draw_node.getContext",
        "nexacro.__appendDOMNode",
        "nexacro.__setCanvasNodeSize",
        "nexacro.__setCanvasTextAlign",
        "nexacro.__setCanvasTextBaseline",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMStyle_AbsoluteTransparent",
        "nexacro.__setDOMStyle_Pos",
        "owner_elem._getRootWindowHandle",
        "this._getElementNexaClassName",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pCanvasElement.createCommand",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCanvasElement.destroy",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "_pCanvasElement._drawRotate",
      "params": [
        "angle_deg"
      ],
      "calls": [
        "this.handle._draw_ctx.rotate"
      ]
    },
    {
      "name": "_pCanvasElement.circle",
      "params": [
        "x",
        "y",
        "r"
      ],
      "calls": [
        "this.arc"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeCircle",
      "params": [
        "x",
        "y",
        "r"
      ],
      "calls": [
        "this.arc",
        "this.drawStroke"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeInsetArc",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg"
      ],
      "calls": [
        "this.drawArc",
        "this.drawStroke"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeInsetCircle",
      "params": [
        "x",
        "y",
        "r"
      ],
      "calls": [
        "this.arc",
        "this.drawStroke"
      ]
    },
    {
      "name": "_pCanvasElement.drawFillRect",
      "params": [
        "x",
        "y",
        "dx",
        "dy"
      ],
      "calls": [
        "this.beginPath",
        "this.fill",
        "this.rect"
      ]
    },
    {
      "name": "_pCanvasElement.endDraw",
      "params": [],
      "calls": [
        "this.beginPath",
        "this.closePath"
      ]
    },
    {
      "name": "_pCanvasElement.drawStroke",
      "params": [],
      "calls": [
        "this.beginPath",
        "this.stroke"
      ]
    },
    {
      "name": "_pCanvasElement.drawFillCircle",
      "params": [
        "x",
        "y",
        "r"
      ],
      "calls": [
        "this.arc",
        "this.beginPath",
        "this.fill"
      ]
    },
    {
      "name": "_pCanvasElement.insetRect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "this.closePath",
        "this.lineTo",
        "this.moveTo"
      ]
    },
    {
      "name": "_pCanvasElement._setLineStyle",
      "params": [
        "line"
      ],
      "calls": [
        "line._isValid",
        "this.setElementLineWidth",
        "this.setElementStrokeStyle"
      ]
    },
    {
      "name": "_pCanvasElement._moveCanvas",
      "params": [
        "left",
        "top",
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "_pCanvasElement.measureText",
      "params": [
        "text",
        "font"
      ],
      "calls": [
        "nexacro.FontObject",
        "nexacro._getTextSize"
      ]
    },
    {
      "name": "_pCanvasElement.setElementSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.__setCanvasNodeSize"
      ]
    },
    {
      "name": "_pCanvasElement.drawFillText",
      "params": [
        "text",
        "x",
        "y",
        "maxwidth"
      ],
      "calls": [
        "this.beginPath",
        "this.fillText",
        "this.setElementTextBaseline"
      ]
    },
    {
      "name": "nexacro._CanvasFillPattern",
      "params": [],
      "calls": []
    },
    {
      "name": "__pCanvasFillPattern.onloadcallback",
      "params": [
        "imageurl",
        "width",
        "height",
        "handle",
        "errstatus",
        "temp",
        "fireerrorcode",
        "returncode",
        "path",
        "locationuri"
      ],
      "calls": [
        "nexacro.__createCanvasPattern",
        "this.control.call"
      ]
    },
    {
      "name": "__pCanvasFillPattern.clear",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._CanvasGradient",
      "params": [
        "type"
      ],
      "calls": []
    },
    {
      "name": "__pCanvasGradient.addColorStop",
      "params": [
        "aOffset",
        "aColor"
      ],
      "calls": [
        "nexacro._getWebColorFromXreColor",
        "nexacro._getXreColorAlpha",
        "this.colors.push"
      ]
    },
    {
      "name": "nexacro.GridScrollableControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro._ContainerElement"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "owner_elem._getRootWindowHandle",
        "this._client_elem.create",
        "this._getElementClassName",
        "this._refreshControl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._on_attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._observeSysEvent",
        "this._hscroll_control.attachHandle",
        "this._vscroll_control.attachHandle"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.destroy",
      "params": [],
      "calls": [
        "nexacro._stopSysObserving",
        "this._client_elem.destroy",
        "this._edge_elem.destroy",
        "this._on_destroy",
        "this._removeElementHandle"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._on_destroy",
      "params": [],
      "calls": [
        "nexacro._isArray",
        "nexacro._stopSysObserving"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.clearContents",
      "params": [],
      "calls": [
        "nexacro._stopSysObserving",
        "this._client_elem.clearContents"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._syshandler_onscroll_forward",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "_pGridScrollableControlElement.getContainerElement",
      "params": [
        "position_step"
      ],
      "calls": []
    },
    {
      "name": "_pGridScrollableControlElement.setVertScrollElements",
      "params": [
        "elems"
      ],
      "calls": []
    },
    {
      "name": "_pGridScrollableControlElement.setHorzScrollElements",
      "params": [
        "elems"
      ],
      "calls": []
    },
    {
      "name": "_pGridScrollableControlElement._setContainerVScrollPos",
      "params": [
        "pos"
      ],
      "calls": [
        "elem.setElementVScrollPos",
        "nexacro._isArray",
        "vert_elems.setElementVScrollPos"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._setContainerHScrollPos",
      "params": [
        "pos"
      ],
      "calls": [
        "elem.setElementHScrollPos",
        "horz_elems.setElementHScrollPos",
        "nexacro._isArray"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._setContainerMaxHeight",
      "params": [
        "height"
      ],
      "calls": [
        "elem._setContainerMaxHeight",
        "nexacro._isArray",
        "vert_elems._setContainerMaxHeight"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._setContainerMaxWidth",
      "params": [
        "width"
      ],
      "calls": [
        "elem._setContainerMaxWidth",
        "horz_elems._setContainerMaxWidth",
        "nexacro._isArray"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._on_updateClientRect",
      "params": [],
      "calls": [
        "h_element._calculateClientWidth",
        "h_element._getContainerMaxWidth",
        "nexacro._isArray",
        "this.setElementHScrollPos",
        "this.setElementVScrollPos",
        "v_element._calculateClientHeight",
        "v_element._getContainerMaxHeight"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.appendChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child.elem._getRootWindowHandle",
        "child_elem._appendToContainer",
        "child_elem._removeFromContainer",
        "child_elem.create",
        "this._client_elem._getRootWindowHandle"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.setElementHScrollPos",
      "params": [
        "hpos"
      ],
      "calls": [
        "areacontents._refreshDOM",
        "nexacro._isArray",
        "this._setContainerHScrollPos"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "bandcontents._refreshDOM",
        "nexacro._isArray",
        "this._setContainerVScrollPos",
        "v_element._getScrollTop"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "nexacro._isArray",
        "this._setContainerHScrollPos",
        "this._setContainerVScrollPos",
        "v_element._getScrollTop"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._setInnerElementScrollMaxTops",
      "params": [
        "tops"
      ],
      "calls": []
    },
    {
      "name": "_pGridScrollableControlElement.setElementScrollMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro._isArray",
        "this._client_elem.setElementScrollMaxSize",
        "this._setContainerMaxHeight",
        "this._setContainerMaxWidth",
        "this._updateClientRect"
      ]
    },
    {
      "name": "nexacro.GridBandControlElement",
      "params": [
        "parent_elem",
        "type"
      ],
      "calls": [
        "nexacro._GridBandContainerElement"
      ]
    },
    {
      "name": "_pGridBandControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_ToolTip",
        "nexacro.__setDOMStyle_Direction",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "owner_elem._getRootWindowHandle",
        "this._client_elem.create",
        "this._client_elem_fix.create",
        "this._getElementClassName",
        "this._isParentRtl",
        "this._refreshControl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pGridBandControlElement.destroy",
      "params": [],
      "calls": [
        "nexacro.ControlElement.prototype.destroy.call",
        "this._client_elem_fix.destroy"
      ]
    },
    {
      "name": "_pGridBandControlElement._setFixArea",
      "params": [
        "height"
      ],
      "calls": [
        "nexacro._GridBandContainerElement",
        "this._client_elem_fix.create",
        "this._client_elem_fix.destroy",
        "this._updateClientSize"
      ]
    },
    {
      "name": "_pGridBandControlElement.getContainerElement",
      "params": [
        "is_fixed"
      ],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement._setContainerMaxHeight",
      "params": [
        "height"
      ],
      "calls": [
        "this._client_elem._setScrollHeight"
      ]
    },
    {
      "name": "_pGridBandControlElement._resetExtendContainer",
      "params": [
        "scrollHeight"
      ],
      "calls": [
        "this._client_elem._setScrollHeight"
      ]
    },
    {
      "name": "_pGridBandControlElement._calculateClientHeight",
      "params": [
        "change_height"
      ],
      "calls": [
        "border._getBorderHeight",
        "this.linkedcontrol._getCSSStyleValue"
      ]
    },
    {
      "name": "_pGridBandControlElement.setElementBorder",
      "params": [
        "border",
        "bordertype"
      ],
      "calls": [
        "this._client_elem.setElementPosition",
        "this._setControlBorder",
        "this._updateClientSize"
      ]
    },
    {
      "name": "_pGridBandControlElement._getContainerMaxHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement._getScrollLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement._getScrollTop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement.setElementScrollMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._client_elem.setElementScrollMaxSize"
      ]
    },
    {
      "name": "_pGridBandControlElement._on_change_clientSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "client_element_fix.setElementSize",
        "nexacro.ControlElement.prototype._on_change_clientSize.call"
      ]
    },
    {
      "name": "_pGridBandControlElement._on_updateClientRect",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this.linkedcontrol._getCSSStyleValue"
      ]
    },
    {
      "name": "_pGridBandControlElement._updateClientSize",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "client_element.setElementPosition",
        "client_element.setElementSize",
        "client_element_fix.setElementPosition",
        "client_element_fix.setElementSize",
        "this.linkedcontrol._getCSSStyleValue"
      ]
    },
    {
      "name": "_pGridBandControlElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "this._client_elem.setElementVScrollPos"
      ]
    },
    {
      "name": "_pGridBandControlElement._setOnScrollCallbackTarget",
      "params": [
        "target"
      ],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement._getExtendContainerCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement.setElementBorder",
      "params": [
        "border"
      ],
      "calls": [
        "nexacro.ControlElement.prototype.setElementBorder.call",
        "this._client_elem._adjustPos",
        "this._updateClientSize"
      ]
    },
    {
      "name": "nexacro._GridBandContainerElement",
      "params": [
        "parent_elem",
        "use_translate_scroll",
        "type"
      ],
      "calls": [
        "nexacro._ContainerElement.call"
      ]
    },
    {
      "name": "__pGridBandContainerElement._adjustPos",
      "params": [],
      "calls": [
        "this.setElementPosition"
      ]
    },
    {
      "name": "__pGridBandContainerElement.destroy",
      "params": [],
      "calls": [
        "nexacro._ContainerElement.prototype.destroy.call"
      ]
    },
    {
      "name": "__pGridBandContainerElement.setElementPosition",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Pos"
      ]
    },
    {
      "name": "__pGridBandContainerElement.setElementSize",
      "params": [
        "width",
        "height/*",
        "update*/"
      ],
      "calls": [
        "Math.max",
        "nexacro.__clearDOMStyle_Size",
        "nexacro.__setDOMStyle_Size",
        "this._setScrollHeight"
      ]
    },
    {
      "name": "__pGridBandContainerElement._setInnerElementExtend",
      "params": [],
      "calls": [
        "_doc.createElement",
        "newinners.push",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Id",
        "nexacro.__setDOMNode_Selectable",
        "nexacro.__setDOMStyle_Absolute",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "this._deleteExtinners",
        "this.owner_elem._getRootWindowHandle"
      ]
    },
    {
      "name": "__pGridBandContainerElement._changeInnerElement",
      "params": [
        "top",
        "row_handle"
      ],
      "calls": [
        "nexacro.__appendDOMNode",
        "nexacro.__removeDOMNode",
        "this._getDestHandle",
        "this._getExtInnerIdx"
      ]
    },
    {
      "name": "__pGridBandContainerElement._getDestHandle",
      "params": [
        "top",
        "idx"
      ],
      "calls": [
        "this._getExtInnerIdx"
      ]
    },
    {
      "name": "__pGridBandContainerElement._getExtInnerIdx",
      "params": [
        "top"
      ],
      "calls": []
    },
    {
      "name": "__pGridBandContainerElement._removeExtinners",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "__pGridBandContainerElement._deleteExtinners",
      "params": [
        "keepcnt"
      ],
      "calls": [
        "ext_inners.splice",
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "__pGridBandContainerElement._findScrollbarControl",
      "params": [
        "elem",
        "is_vert"
      ],
      "calls": []
    },
    {
      "name": "__pGridBandContainerElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._ContainerElement.prototype.create.call",
        "nexacro._observeSysEvent",
        "this._adjustPos",
        "this._setScrollHeight"
      ]
    },
    {
      "name": "__pGridBandContainerElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._ContainerElement.prototype.attachHandle.call",
        "nexacro.__setDOMStyle_Size",
        "nexacro._observeSysEvent",
        "this._setScrollHeight",
        "this.setElementPosition"
      ]
    },
    {
      "name": "__pGridBandContainerElement._syshandler_onscroll_forward",
      "params": [
        "evt"
      ],
      "calls": []
    },
    {
      "name": "__pGridBandContainerElement._setScrollHeight",
      "params": [
        "height",
        "update_size"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Size",
        "this._setInnerElementExtend"
      ]
    },
    {
      "name": "__pGridBandContainerElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "nexacro.__setDOMStyle_Translate",
        "this._grid._callback_onvscroll"
      ]
    },
    {
      "name": "__pGridBandContainerElement.destroy",
      "params": [],
      "calls": [
        "this._destroyElementHandle",
        "this._removeExtinners"
      ]
    },
    {
      "name": "__pGridBandContainerElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro._ContainerElement.prototype.create.call",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMStyle_AbsoluteTransparent",
        "nexacro.__setDOMStyle_Display",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro._observeSysEvent",
        "nexacro._stopSysObserving",
        "owner_elem._getRootWindowHandle",
        "this._adjustPos",
        "this._setScrollHeight"
      ]
    },
    {
      "name": "__pGridBandContainerElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._ContainerElement.prototype.attachHandle.call",
        "nexacro.__setDOMStyle_Size",
        "nexacro._observeSysEvent",
        "nexacro._stopSysObserving",
        "this._adjustPos",
        "this._setScrollHeight",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "__pGridBandContainerElement.destroy",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode",
        "nexacro._stopSysObserving",
        "this._destroyElementHandle",
        "this._removeExtinners"
      ]
    },
    {
      "name": "__pGridBandContainerElement._syshandler_onscroll_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "container._findScrollbarControl",
        "container._grid._callback_onvscroll",
        "container.setElementVScrollPos",
        "vscrollbar.set_pos"
      ]
    },
    {
      "name": "__pGridBandContainerElement._setScrollHeight",
      "params": [
        "height"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMStyle_AbsoluteTransparent",
        "nexacro.__setDOMStyle_Display",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setDOMStyle_Visible",
        "owner_elem._getRootWindowHandle",
        "this._setInnerElementExtend"
      ]
    },
    {
      "name": "__pGridBandContainerElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "nexacro.__setDOMNode_VScrollPos",
        "nexacro.__setDOMStyle_Display",
        "nexacro.__setDOMStyle_Translate"
      ]
    },
    {
      "name": "nexacro.GridRowControlElement",
      "params": [
        "parent_elem",
        "left_gap"
      ],
      "calls": [
        "nexacro._ContainerElement"
      ]
    },
    {
      "name": "_pGridRowControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMStyle_Pos",
        "nexacro.__setDOMStyle_Size",
        "owner_elem._getDestHandle",
        "owner_elem._getRootWindowHandle",
        "this._client_body_element.create",
        "this._client_left_element.create",
        "this._client_right_element.create",
        "this._getElementClassName",
        "this._refreshControl",
        "this.parent_elem.getContainerElement",
        "this.setElementPosition"
      ]
    },
    {
      "name": "_pGridRowControlElement._removeElementHandle",
      "params": [],
      "calls": [
        "nexacro.__removeDOMNode",
        "this.owner_elem._getDestHandle"
      ]
    },
    {
      "name": "_pGridRowControlElement._on_destroy",
      "params": [],
      "calls": [
        "this._client_body_element.destroy",
        "this._client_left_element.destroy",
        "this._client_right_element.destroy"
      ]
    },
    {
      "name": "_pGridRowControlElement.createCommandStart",
      "params": [],
      "calls": [
        "edge_elem.createCommand",
        "nexacro._isNull",
        "this._getAccessibilityInfoStr",
        "this._getControlStatusStr",
        "this._getControlStyleStr",
        "this._getElementClassName",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pGridRowControlElement.createCommandAreaStart",
      "params": [
        "area"
      ],
      "calls": [
        "this._client_body_element.createCommandStart",
        "this._client_left_element.createCommandStart",
        "this._client_right_element.createCommandStart"
      ]
    },
    {
      "name": "_pGridRowControlElement.createCommandAreaEnd",
      "params": [
        "area"
      ],
      "calls": [
        "this._client_body_element.createCommandEnd",
        "this._client_left_element.createCommandEnd",
        "this._client_right_element.createCommandEnd"
      ]
    },
    {
      "name": "_pGridRowControlElement.createCommandEnd",
      "params": [
        "area"
      ],
      "calls": []
    },
    {
      "name": "_pGridRowControlElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "edge_elem.attach_handle_fromparent",
        "this._client_body_element.attachHandle",
        "this._client_left_element.attachHandle",
        "this._client_right_element.attachHandle",
        "this._setAccessibility_notify",
        "this.parent_elem.getContainerElement",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pGridRowControlElement.setInnerHTML",
      "params": [
        "str"
      ],
      "calls": [
        "nexacro.__removeDOMNode"
      ]
    },
    {
      "name": "_pGridRowControlElement.clearContents",
      "params": [],
      "calls": [
        "this._client_body_element.clearContents",
        "this._client_left_element.clearContents",
        "this._client_right_element.clearContents"
      ]
    },
    {
      "name": "_pGridRowControlElement.getContainerElement",
      "params": [
        "area"
      ],
      "calls": []
    },
    {
      "name": "_pGridRowControlElement._refreshCommonStyleProps",
      "params": [
        "handle_style"
      ],
      "calls": [
        "nexacro.__setDOMStyle_ColorObject",
        "nexacro.__setDOMStyle_Direction",
        "nexacro.__setDOMStyle_FontObject",
        "nexacro.__setDOMStyle_LetterSpacingObject",
        "nexacro.__setDOMStyle_Size",
        "nexacro.__setDOMStyle_TextDecorationObject",
        "nexacro.__setDOMStyle_Visible",
        "nexacro.__setDOMStyle_WordSpacingObject",
        "nexacro.__setDOMStyle_WordWrap"
      ]
    },
    {
      "name": "_pGridRowControlElement.setArea",
      "params": [
        "leftwidth",
        "rightwidth"
      ],
      "calls": [
        "nexacro._ContainerElement",
        "this._client_body_element.setElementPosition",
        "this._client_body_element.setElementSize",
        "this._client_left_element.setElementPosition",
        "this._client_left_element.setElementSize",
        "this._client_right_element.setElementPosition",
        "this._client_right_element.setElementSize"
      ]
    },
    {
      "name": "_pGridRowControlElement._updateClientRect",
      "params": [],
      "calls": [
        "this._on_change_clientPos",
        "this._on_change_clientSize",
        "this._on_updateClientRect",
        "this._setContainerMaxWidth",
        "this.setArea"
      ]
    },
    {
      "name": "_pGridRowControlElement._setContainerMaxWidth",
      "params": [
        "width"
      ],
      "calls": [
        "this._client_body_element.setElementScrollMaxSize"
      ]
    },
    {
      "name": "_pGridRowControlElement._calculateClientWidth",
      "params": [
        "parent_client_width"
      ],
      "calls": []
    },
    {
      "name": "_pGridRowControlElement._getContainerMaxWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridRowControlElement.setElementHScrollPos",
      "params": [
        "hpos"
      ],
      "calls": [
        "this._client_body_element._setElementHScrollPos"
      ]
    },
    {
      "name": "_pGridRowControlElement.setElementPosition",
      "params": [
        "left",
        "top",
        "bForce"
      ],
      "calls": [
        "nexacro.Element.prototype.setElementPosition.call",
        "owner_elem._changeInnerElement"
      ]
    },
    {
      "name": "_pGridRowControlElement.setElementSize",
      "params": [
        "width",
        "height/*",
        "update*/"
      ],
      "calls": [
        "nexacro.ControlElement.prototype.setElementSize.call"
      ]
    },
    {
      "name": "nexacro.CellControlElement",
      "params": [
        "parent_elem",
        "left_gap"
      ],
      "calls": [
        "nexacro.ControlElement.call"
      ]
    },
    {
      "name": "_pCellControlElement.setInnerHTML",
      "params": [
        "str"
      ],
      "calls": []
    },
    {
      "name": "_pCellControlElement._refreshBorderNone",
      "params": [],
      "calls": [
        "nexacro.__setDOMStyle_BorderNone",
        "this._edge_elem.setElementSize",
        "this._get_rtl",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    }
  ],
  "Element_Runtime.js": [
    {
      "name": "nexacro.__setLastFocusedElement",
      "params": [
        "elem"
      ],
      "calls": [
        "elem.linkedcontrol._getWindow",
        "elem.parent_elem.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "nexacro.Element",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createElementHandle",
        "owner_elem._getRootWindowHandle",
        "this._getElementClassName",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._refreshCommonStyleProps",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pElement._refreshCommonStyleProps",
      "params": [
        "handle"
      ],
      "calls": [
        "nexacro.__setElementHandleColorObject",
        "nexacro.__setElementHandleFontObject",
        "nexacro.__setElementHandleLetterSpacingObject",
        "nexacro.__setElementHandlePointerEvents",
        "nexacro.__setElementHandleRtlDirection",
        "nexacro.__setElementHandleTextDecorationObject",
        "nexacro.__setElementHandleVisible",
        "nexacro.__setElementHandleWordSpacingObject",
        "nexacro.__setElementHandleWordwrapObject"
      ]
    },
    {
      "name": "_pElement.destroy",
      "params": [],
      "calls": [
        "nexacro.__destroyElementHandle"
      ]
    },
    {
      "name": "_pElement.isInputElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement.stopSysEvent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement._destroyElementHandle",
      "params": [
        "_is_stepcontainer_for_layoutchange"
      ],
      "calls": [
        "nexacro.__destroyElementHandle"
      ]
    },
    {
      "name": "_pElement._appendToContainer",
      "params": [
        "owner_elem"
      ],
      "calls": [
        "nexacro.__appendElementHandle"
      ]
    },
    {
      "name": "_pElement._insertToContainer",
      "params": [
        "owner_elem",
        "before_elem"
      ],
      "calls": [
        "nexacro.__insertElementHandle"
      ]
    },
    {
      "name": "_pElement._removeFromContainer",
      "params": [],
      "calls": [
        "nexacro.__unlinkElementHandle"
      ]
    },
    {
      "name": "_pElement.getContainerElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement._getRootWindowHandle",
      "params": [],
      "calls": [
        "this.owner_elem._getRootWindowHandle"
      ]
    },
    {
      "name": "_pElement._getWindowHandle",
      "params": [],
      "calls": [
        "this._getRootWindowHandle"
      ]
    },
    {
      "name": "_pElement._isRtl",
      "params": [
        "bPosition"
      ],
      "calls": [
        "this.linkedcontrol.getElement"
      ]
    },
    {
      "name": "_pElement._isParentRtl",
      "params": [],
      "calls": [
        "this.parent.getElement"
      ]
    },
    {
      "name": "_pElement._checkUpdateElementByRTL",
      "params": [
        "handle",
        "prop"
      ],
      "calls": [
        "handle_style.backgroundImage.indexOf",
        "nexacro.__getElementHandlePositionLeft",
        "this._isRtl"
      ]
    },
    {
      "name": "_pElement._getRTLPositionLeft",
      "params": [
        "left",
        "width"
      ],
      "calls": [
        "Math.max",
        "_win.getClientWidth",
        "nexacro._getWindowHandleClientWidth",
        "this._getWindow",
        "this._isParentRtl",
        "this.setElementHScrollPos",
        "win.getClientWidth"
      ]
    },
    {
      "name": "_pElement._getRTLContainerPositionLeft",
      "params": [
        "left",
        "width"
      ],
      "calls": []
    },
    {
      "name": "_pElement._getRtlScrollLeft",
      "params": [
        "scrollLeft",
        "parentWidth"
      ],
      "calls": [
        "this.getElementScrollWidth"
      ]
    },
    {
      "name": "_pElement._setElementFittocontents",
      "params": [
        "fittocontents"
      ],
      "calls": []
    },
    {
      "name": "_pElement.setElementPosition",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "nexacro.__clearElementHandlePosition",
        "nexacro.__setElementHandlePosition",
        "nexacro._traceV8CallStack",
        "this._getRTLPositionLeft"
      ]
    },
    {
      "name": "_pElement.clearElementPosition",
      "params": [],
      "calls": [
        "nexacro.__clearElementHandlePosition",
        "nexacro.__clearElementHandleSize"
      ]
    },
    {
      "name": "_pElement.setElementSize",
      "params": [
        "width",
        "height",
        "update"
      ],
      "calls": [
        "nexacro.__clearElementHandlePosition",
        "nexacro.__clearElementHandleSize",
        "nexacro.__setElementHandlePosition",
        "nexacro.__setElementHandleSize",
        "this._getRTLPositionLeft",
        "this._isParentRtl"
      ]
    },
    {
      "name": "_pElement.setElementVisible",
      "params": [
        "visible"
      ],
      "calls": [
        "nexacro.__setElementHandleVisible"
      ]
    },
    {
      "name": "_pElement.setElementRtl",
      "params": [
        "rtl"
      ],
      "calls": [
        "nexacro.__setElementHandleRtlDirection",
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pElement.setElementTypeCSSSelector",
      "params": [
        "typename"
      ],
      "calls": [
        "nexacro.__setElementHandleCSSClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pElement.setElementClassCSSSelector",
      "params": [
        "classname"
      ],
      "calls": [
        "nexacro.__setElementHandleCSSClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pElement.setElementTypeCSSSelector",
      "params": [
        "typename"
      ],
      "calls": [
        "nexacro.__setElementHandleCSSClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pElement.setElementClassCSSSelector",
      "params": [
        "classname"
      ],
      "calls": [
        "nexacro.__setElementHandleCSSClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pElement.setElementTextAlignByClassCSSSelector",
      "params": [
        "textalign"
      ],
      "calls": [
        "this._isRtl",
        "this.setElementClassCSSSelector"
      ]
    },
    {
      "name": "_pElement._setElementHandleTextAlign",
      "params": [
        "handle",
        "textalign",
        "rtl"
      ],
      "calls": [
        "nexacro.__setElementHandleTextAlign"
      ]
    },
    {
      "name": "_pElement._getElementClassName",
      "params": [],
      "calls": []
    },
    {
      "name": "_pElement.setElementStatus",
      "params": [
        "status"
      ],
      "calls": [
        "nexacro.__setElementHandleStatus"
      ]
    },
    {
      "name": "_pElement.setElementUserStatus",
      "params": [
        "userstatus"
      ],
      "calls": [
        "nexacro.__setElementHandleUserStatus"
      ]
    },
    {
      "name": "_pElement.setElementColor",
      "params": [
        "color"
      ],
      "calls": [
        "nexacro.__setElementHandleColorObject"
      ]
    },
    {
      "name": "_pElement.setElementFont",
      "params": [
        "font"
      ],
      "calls": [
        "nexacro.__setElementHandleFontObject"
      ]
    },
    {
      "name": "_pElement.setElementTextDecoration",
      "params": [
        "decoration"
      ],
      "calls": [
        "nexacro.__setElementHandleTextDecorationObject"
      ]
    },
    {
      "name": "_pElement.setElementWordSpacing",
      "params": [
        "wordspacing"
      ],
      "calls": [
        "nexacro.__setElementHandleWordSpacingObject"
      ]
    },
    {
      "name": "_pElement.setElementLetterSpacing",
      "params": [
        "letterspacing"
      ],
      "calls": [
        "nexacro.__setElementHandleLetterSpacingObject"
      ]
    },
    {
      "name": "_pElement.setElementPointerEvents",
      "params": [
        "pointerevent"
      ],
      "calls": [
        "nexacro.__setElementHandlePointerEvents"
      ]
    },
    {
      "name": "_pElement._getWindow",
      "params": [],
      "calls": [
        "this.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "_pElement._getComputedStyle",
      "params": [
        "/*prop*/"
      ],
      "calls": [
        "nexacro.__getElementHandleStyleValue"
      ]
    },
    {
      "name": "_pElement._getComputedStyleValue",
      "params": [
        "prop"
      ],
      "calls": [
        "nexacro.__getElementHandleStyleValue"
      ]
    },
    {
      "name": "_pElement._getComputedStyleSubValue",
      "params": [
        "prop",
        "subprop"
      ],
      "calls": [
        "nexacro.__getElementHandleStyleSubValue"
      ]
    },
    {
      "name": "_pElement._getComputedStyleWithCallback",
      "params": [
        "prop",
        "target_win_handle",
        "target_node_hanlde"
      ],
      "calls": [
        "nexacro.__getElementHandleStyleValueWithCallback"
      ]
    },
    {
      "name": "_pElement._getPositionInWindow",
      "params": [],
      "calls": [
        "nexacro._getElementXYInWindow"
      ]
    },
    {
      "name": "_pElement._getOverflowScrollSize",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.TextBoxElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pTextBoxElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createTextElementHandle",
        "nexacro.__initTextElementText",
        "nexacro.__setElementHandleVerticalAlign",
        "owner_elem._getRootWindowHandle",
        "this._getElementClassName",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._refreshCommonStyleProps",
        "this._setElementHandleTextAlign",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementTextAlign",
      "params": [
        "textalign"
      ],
      "calls": [
        "this._setElementHandleTextAlign"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementVerticalAlign",
      "params": [
        "verticalalign"
      ],
      "calls": [
        "nexacro.__setElementHandleVerticalAlign"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementPadding",
      "params": [
        "/*padding*/"
      ],
      "calls": [
        "nexacro.__setElementHandlePaddingObject"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementSize",
      "params": [
        "width",
        "height",
        "update"
      ],
      "calls": [
        "nexacro.__clearElementHandlePosition",
        "nexacro.__clearElementHandleSize",
        "nexacro.__setElementHandlePosition",
        "nexacro.__setElementHandleSize",
        "this._getRTLPositionLeft",
        "this._isParentRtl"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementText",
      "params": [
        "text"
      ],
      "calls": [
        "nexacro.__setElementHandleText"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementDecorateText",
      "params": [
        "text"
      ],
      "calls": [
        "nexacro.__setElementHandleDecorateText"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementWordWrap",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setElementHandleText",
        "nexacro.__setElementHandleWordwrapObject"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementCSSMapInfo",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setElementHandleText"
      ]
    },
    {
      "name": "_pTextBoxElement._getComputedStyle",
      "params": [
        "prop",
        "noflush"
      ],
      "calls": [
        "nexacro.__getElementHandleStyleValue",
        "nexacro._flushCommand",
        "parent._getWindow"
      ]
    },
    {
      "name": "_pTextBoxElement._getComputedStyleAlign",
      "params": [
        "noflush"
      ],
      "calls": [
        "this._getComputedStyle"
      ]
    },
    {
      "name": "_pTextBoxElement.setElementMove",
      "params": [
        "left",
        "top",
        "width",
        "height",
        "bforce"
      ],
      "calls": [
        "this.setElementPosition",
        "this.setElementSize"
      ]
    },
    {
      "name": "nexacro.IconElement",
      "params": [
        "parent_elem",
        "id",
        "fiticonsize"
      ],
      "calls": []
    },
    {
      "name": "_pIconElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "Math.min",
        "nexacro.__appendElementHandle",
        "nexacro.__createIconTextElementHandle",
        "nexacro.__initElementIcon",
        "nexacro.__setElementHandleVerticalAlign",
        "owner_elem._getRootWindowHandle",
        "this._getElementClassName",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._refreshCommonStyleProps",
        "this._setElementHandleTextAlign",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pIconElement.setElementTextAlign",
      "params": [
        "textalign"
      ],
      "calls": [
        "this._setElementHandleTextAlign"
      ]
    },
    {
      "name": "_pIconElement.setElementVerticalAlign",
      "params": [
        "verticalalign"
      ],
      "calls": [
        "nexacro.__setElementHandleVerticalAlign"
      ]
    },
    {
      "name": "_pIconElement.setElementIcon",
      "params": [
        "icon"
      ],
      "calls": [
        "Math.min",
        "nexacro.__setElementHandleIconObject"
      ]
    },
    {
      "name": "_pIconElement._getComputedStyle",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.IconTextElement",
      "params": [
        "parent_elem",
        "id",
        "fiticonsize"
      ],
      "calls": []
    },
    {
      "name": "_pIconTextElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "Math.min",
        "nexacro.__appendElementHandle",
        "nexacro.__createIconTextElementHandle",
        "nexacro.__initElementIcon",
        "nexacro.__initIconTextElementIconPos",
        "nexacro.__initIconTextElementText",
        "nexacro.__initIconTextElementTextPadding",
        "nexacro.__setElementHandleTextWidth",
        "nexacro.__setElementHandleVerticalAlign",
        "owner_elem._getRootWindowHandle",
        "this._getElementClassName",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._refreshCommonStyleProps",
        "this._setElementHandleTextAlign",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pIconTextElement.setElementTextAlign",
      "params": [
        "textalign"
      ],
      "calls": [
        "this._setElementHandleTextAlign"
      ]
    },
    {
      "name": "_pIconTextElement.setElementVerticalAlign",
      "params": [
        "verticalalign"
      ],
      "calls": [
        "nexacro.__setElementHandleVerticalAlign"
      ]
    },
    {
      "name": "_pIconTextElement.setElementTextPadding",
      "params": [
        "textpadding"
      ],
      "calls": [
        "nexacro.__setElementHandleTextPaddingObject"
      ]
    },
    {
      "name": "_pIconTextElement.setElementTextWidth",
      "params": [
        "textwidth"
      ],
      "calls": [
        "nexacro.__setElementHandleTextWidth"
      ]
    },
    {
      "name": "_pIconTextElement.setElementText",
      "params": [
        "text"
      ],
      "calls": [
        "nexacro.__setElementHandleText"
      ]
    },
    {
      "name": "_pIconTextElement.setElementDecorateText",
      "params": [
        "text"
      ],
      "calls": [
        "nexacro.__setElementHandleDecorateText"
      ]
    },
    {
      "name": "_pIconTextElement.setElementIcon",
      "params": [
        "icon"
      ],
      "calls": [
        "Math.min",
        "nexacro.__setElementHandleIconObject"
      ]
    },
    {
      "name": "_pIconTextElement.setElementIconPos",
      "params": [
        "iconpos"
      ],
      "calls": [
        "nexacro.__setElementHandleIconPos"
      ]
    },
    {
      "name": "_pIconTextElement.setElementWordWrap",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setElementHandleText",
        "nexacro.__setElementHandleWordwrapObject"
      ]
    },
    {
      "name": "_pIconTextElement.setElementCSSMapInfo",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setElementHandleText"
      ]
    },
    {
      "name": "_pIconTextElement._getComputedStyle",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.ImageElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pImageElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createImageElementHandle",
        "nexacro.__setElementHandleImageUrlObject",
        "nexacro.__setElementHandleVisible",
        "owner_elem._getRootWindowHandle",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pImageElement.setElementAlign",
      "params": [
        "align"
      ],
      "calls": [
        "nexacro.__setElementHandleAlignObject"
      ]
    },
    {
      "name": "_pImageElement.setElementImage",
      "params": [
        "image"
      ],
      "calls": [
        "nexacro.__setElementHandleImageUrlObject"
      ]
    },
    {
      "name": "_pImageElement.setElementImage",
      "params": [
        "image",
        "width",
        "height",
        "stretch",
        "comp"
      ],
      "calls": [
        "comp._p_image.toString",
        "nexacro.__setElementHandleImageUrlObject",
        "nexacro._getServiceObject",
        "nexacro._getURIValue",
        "org_src.indexOf"
      ]
    },
    {
      "name": "_pImageElement.getImageCount",
      "params": [],
      "calls": [
        "nexacro.__getImageElementHandleImageCount"
      ]
    },
    {
      "name": "_pImageElement.setImageIndex",
      "params": [
        "nIndex"
      ],
      "calls": [
        "nexacro.__setImageElementHandleImageIndex"
      ]
    },
    {
      "name": "nexacro.InputElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": [
        "nexacro._CompositionState",
        "nexacro._ImeLocale"
      ]
    },
    {
      "name": "_pInputElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createInputElementHandle",
        "nexacro.__setElementHandleEnable",
        "nexacro.__setElementHandlePaddingObject",
        "nexacro.__setElementHandleReadOnly",
        "nexacro.__setElementHandleRtlDirection",
        "nexacro.__setElementHandleTextDecorationObject",
        "nexacro.__setElementHandleValue",
        "nexacro.__setElementHandleVisible",
        "nexacro.__setInputElementHandleCaretColor",
        "nexacro.__setInputElementHandleCompositeColor",
        "nexacro.__setInputElementHandleImeAction",
        "nexacro.__setInputElementHandleInputType",
        "nexacro.__setInputElementHandleMaxLength",
        "nexacro.__setInputElementHandleSelectBackgroundColor",
        "nexacro.__setInputElementHandleSelectColor",
        "nexacro.__setInputElementHandleSetIme",
        "nexacro.__setInputElementHandleUsePassword",
        "nexacro._isNull",
        "owner_elem._getRootWindowHandle",
        "this._bindSysEvent",
        "this._getElementClassName",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._setElementHandleTextAlign",
        "this.parent_elem.getContainerElement",
        "this.setElementValue"
      ]
    },
    {
      "name": "_pInputElement.destroy",
      "params": [],
      "calls": [
        "nexacro.Element.prototype.destroy.call",
        "this._unbindSysEvent"
      ]
    },
    {
      "name": "_pInputElement.setElementTextAlign",
      "params": [
        "textalign"
      ],
      "calls": [
        "this._setElementHandleTextAlign"
      ]
    },
    {
      "name": "_pInputElement.setElementPadding",
      "params": [
        "padding"
      ],
      "calls": [
        "nexacro.__setElementHandlePaddingObject"
      ]
    },
    {
      "name": "_pInputElement.setElementCaretColor",
      "params": [
        "color"
      ],
      "calls": [
        "nexacro.__setInputElementHandleCaretColor"
      ]
    },
    {
      "name": "_pInputElement.setElementSelectColor",
      "params": [
        "color"
      ],
      "calls": [
        "nexacro.__setInputElementHandleSelectColor"
      ]
    },
    {
      "name": "_pInputElement.setElementSelectBackgroundColor",
      "params": [
        "color"
      ],
      "calls": [
        "nexacro.__setInputElementHandleSelectBackgroundColor"
      ]
    },
    {
      "name": "_pInputElement.setElementCompositeColor",
      "params": [
        "color"
      ],
      "calls": [
        "nexacro.__setInputElementHandleCompositeColor"
      ]
    },
    {
      "name": "_pInputElement.setElementTabindentSize",
      "params": [
        "indent"
      ],
      "calls": [
        "nexacro.__setElementHandleTabIndentSize"
      ]
    },
    {
      "name": "_pInputElement.setElementEnable",
      "params": [
        "enable"
      ],
      "calls": [
        "nexacro.__setElementHandleEnable"
      ]
    },
    {
      "name": "_pInputElement.setElementReadonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "nexacro.__setElementHandleReadOnly"
      ]
    },
    {
      "name": "_pInputElement.setElementAutoSkip",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementAutoSelect",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementMaxLength",
      "params": [
        "length"
      ],
      "calls": [
        "nexacro.__setInputElementHandleMaxLength",
        "text.substring",
        "this._updateInputValue",
        "this.getElementText"
      ]
    },
    {
      "name": "_pInputElement.setElementUseSoftKeyboard",
      "params": [
        "usesoftkeyboard"
      ],
      "calls": [
        "nexacro.__setInputElementHandleUseSoftKeyboard"
      ]
    },
    {
      "name": "_pInputElement.setElementUseIme",
      "params": [
        "useime"
      ],
      "calls": [
        "nexacro.__setInputElementHandleUseIme"
      ]
    },
    {
      "name": "_pInputElement.setElementImeMode",
      "params": [
        "imemode"
      ],
      "calls": [
        "nexacro.__setInputElementHandleImeMode"
      ]
    },
    {
      "name": "_pInputElement.setElementDisplayNullText",
      "params": [
        "text",
        "applytext"
      ],
      "calls": [
        "nexacro.__setElementHandleValue",
        "nexacro._isNull",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pInputElement.setElementDisplayInvalidText",
      "params": [
        "v"
      ],
      "calls": [
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.setElementDefaultValue",
      "params": [
        "value"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.setElementValue",
      "params": [
        "value",
        "bInvalidValue"
      ],
      "calls": [
        "nexacro.__setElementHandleValue",
        "nexacro._isNull",
        "text.substring",
        "this._getInputValue",
        "this._setElementLastSelectionRange",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.replaceElementText",
      "params": [
        "value",
        "begin",
        "end",
        "bselect"
      ],
      "calls": [
        "input_value.substring",
        "this._getInputValue",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.updateElementText",
      "params": [
        "value",
        "caretpos",
        "beginpos"
      ],
      "calls": [
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement._updateElementValue",
      "params": [
        "value"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._updateInputValue",
      "params": [
        "value",
        "fireevent",
        "selectionStart",
        "selectionEnd"
      ],
      "calls": [
        "nexacro.__setElementHandleValue",
        "nexacro.__setInputElementHandleSetSelect",
        "this._on_sys_keyinput_forward",
        "this._setElementLastSelectionRange",
        "this.setElementSetSelect"
      ]
    },
    {
      "name": "_pInputElement.setElementInputType",
      "params": [
        "type"
      ],
      "calls": [
        "nexacro.__setInputElementHandleInputType",
        "nexacro.__setInputElementHandleSetIme",
        "nexacro.__setInputElementHandleUsePassword"
      ]
    },
    {
      "name": "_pInputElement.setElementImeAction",
      "params": [
        "imeaction"
      ],
      "calls": [
        "nexacro.__setInputElementHandleImeAction"
      ]
    },
    {
      "name": "_pInputElement._applyMaxlength",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "text.substring",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.setElementFocus",
      "params": [
        "trigger_type"
      ],
      "calls": [
        "nexacro.__setElementHandleFocus",
        "nexacro.__setElementHandleValue",
        "nexacro.__setLastFocusedElement",
        "nexacro._isNull",
        "this._applyMaxlength",
        "this._getInputValue",
        "this._setElementLastSelectionRange"
      ]
    },
    {
      "name": "_pInputElement.setElementBlur",
      "params": [],
      "calls": [
        "nexacro.__setElementHandleValue",
        "nexacro.__setInputElementHandleBlur",
        "nexacro.__setInputElementHandleSetSelect",
        "nexacro._isNull",
        "represent.",
        "this._getInputValue",
        "this._setElementLastSelectionRange",
        "this._updateInputValue",
        "this.getElementSelectionRange"
      ]
    },
    {
      "name": "_pInputElement.setElementSetSelect",
      "params": [
        "start",
        "end"
      ],
      "calls": [
        "nexacro.__setInputElementHandleSetSelect",
        "this._setElementLastSelectionRange",
        "this.isComposing"
      ]
    },
    {
      "name": "_pInputElement._setElementLastSelectionRange",
      "params": [
        "range"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.getElementCaretPos",
      "params": [],
      "calls": [
        "nexacro.__getInputElementHandleCaretPos"
      ]
    },
    {
      "name": "_pInputElement.getElementSelectionRange",
      "params": [],
      "calls": [
        "nexacro.__getInputElementHandleSelectionRange"
      ]
    },
    {
      "name": "_pInputElement.getElementText",
      "params": [],
      "calls": [
        "this._getInputValue"
      ]
    },
    {
      "name": "_pInputElement._getInputValue",
      "params": [],
      "calls": [
        "nexacro.__getElementHandleValue"
      ]
    },
    {
      "name": "_pInputElement.getElementValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.getCompositionStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.isComposing",
      "params": [],
      "calls": [
        "this._composer.isComposing"
      ]
    },
    {
      "name": "_pInputElement.isCompositEnd",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.setCompositionComplete_process",
      "params": [
        "end_pos",
        "is_composing"
      ],
      "calls": [
        "this._composer.isComposing",
        "this._composer.setStatus",
        "this._getInputValue",
        "this._updateInputValue",
        "this.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement.setCompositionComplete",
      "params": [
        "end_pos",
        "is_composing"
      ],
      "calls": [
        "this._composer.setStatus",
        "this.getElementCaretPos",
        "this.setCompositionComplete_process.call"
      ]
    },
    {
      "name": "_pInputElement.setCompositionCancel_process",
      "params": [
        "end_pos",
        "is_composing"
      ],
      "calls": [
        "this._composer.getOffset",
        "this._composer.isComposing",
        "this._composer.setStatus",
        "this._getInputValue",
        "this._updateInputValue",
        "this.getElementCaretPos",
        "value.substring"
      ]
    },
    {
      "name": "_pInputElement.setCompositionCancel",
      "params": [
        "end_pos",
        "is_composing"
      ],
      "calls": [
        "this._composer.setStatus",
        "this.getElementCaretPos",
        "this.setCompositionCancel_process.call"
      ]
    },
    {
      "name": "_pInputElement.clearComposition",
      "params": [],
      "calls": [
        "nexacro.__clearInputElementHandleCompositeChar",
        "this._composer.isComposing",
        "this.setCompositionCancel"
      ]
    },
    {
      "name": "_pInputElement.setInputProcess",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.getInputProcess",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement._checkMaxLength",
      "params": [
        "value",
        "caretpos",
        "fix_composition"
      ],
      "calls": [
        "this._composer.getOffset",
        "this._composer.isComposing",
        "this._composer.isHasCandiateWindow",
        "value.charAt"
      ]
    },
    {
      "name": "_pInputElement._go_next_focus",
      "params": [],
      "calls": [
        "comp._getForm",
        "comp._hasContainer",
        "comp._setDefaultCaret",
        "comp._setFocus",
        "form._getWindow",
        "form._searchNextTabFocus",
        "win._removeFromCurrentFocusPath"
      ]
    },
    {
      "name": "_pInputElement._bindSysEvent",
      "params": [],
      "calls": [
        "nexacro._observeInputEvent"
      ]
    },
    {
      "name": "_pInputElement._unbindSysEvent",
      "params": [],
      "calls": [
        "nexacro._stopInputObserving"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keydown_forward",
      "params": [
        "keycode",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "metakey"
      ],
      "calls": [
        "comp._getWindow",
        "nexacro._syshandler_onkeydown_forward",
        "this._imelocale.getLocale",
        "this._on_sys_keydown",
        "this.clearComposition",
        "this.isComposing"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keydown_before_process",
      "params": [
        "keycode/*",
        "altkey",
        "ctrlkey",
        "shiftkey*/"
      ],
      "calls": [
        "_win._getCaptureComp",
        "comp._getWindow",
        "this._composer.isComposing",
        "this._composer.setDelayStatus",
        "this._composer.setStatus",
        "this.getElementCaretPos",
        "this.stopSysEvent"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keydown_specialkey_process",
      "params": [
        "keycode/*",
        "altkey",
        "ctrlkey",
        "shiftkey*/"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_keydown_process",
      "params": [
        "keycode/*",
        "altkey",
        "ctrlkey",
        "shiftkey*/"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._on_sys_keydown",
      "params": [
        "keycode/*",
        "altkey",
        "ctrlkey",
        "shiftkey*/"
      ],
      "calls": [
        "this.on_sys_keydown_before_process.call",
        "this.on_sys_keydown_process.call",
        "this.on_sys_keydown_specialkey_process.call"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keyup_forward",
      "params": [
        "keycode",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "metakey"
      ],
      "calls": [
        "comp._getWindow",
        "nexacro._syshandler_onkeyup_forward",
        "this._on_sys_keyup"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keyup_before_process",
      "params": [
        "keycode",
        "altkey",
        "ctrlkey/*",
        "shiftkey*/"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_keyup_specialkey_process",
      "params": [
        "keycode",
        "altkey",
        "ctrlkey/*",
        "shiftkey*/"
      ],
      "calls": [
        "this._composer.isComposing",
        "this._composer.setStatus",
        "this._getInputValue",
        "this._updateInputValue",
        "this.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keyup_process",
      "params": [
        "keycode",
        "altkey",
        "ctrlkey/*",
        "shiftkey*/"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement._on_sys_keyup",
      "params": [
        "keycode",
        "altkey",
        "ctrlkey/*",
        "shiftkey*/"
      ],
      "calls": [
        "this.on_sys_keyup_before_process.call",
        "this.on_sys_keyup_process.call",
        "this.on_sys_keyup_specialkey_process.call"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keypress_forward",
      "params": [
        "keycode",
        "charcode",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "metakey"
      ],
      "calls": [
        "comp._getWindow",
        "nexacro._syshandler_onkeypress_forward",
        "this._on_sys_keypress"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keypress_before_process",
      "params": [
        "keycode",
        "charcode",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "metakey"
      ],
      "calls": [
        "_win._getCaptureComp",
        "comp._getWindow",
        "this.stopSysEvent"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keypress_specialkey_process",
      "params": [
        "keycode",
        "charcode",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "metakey"
      ],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_keypress_process",
      "params": [
        "keycode",
        "charcode",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "metakey"
      ],
      "calls": [
        "String.fromCharCode",
        "comp._getWindow",
        "pThis._go_next_focus",
        "this._composer.isComposing",
        "this._getInputValue",
        "this.getElementSelectionRange"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keypress",
      "params": [
        "keycode",
        "charcode",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "metakey"
      ],
      "calls": [
        "this._updateImeLocale",
        "this.on_sys_keypress_before_process.call",
        "this.on_sys_keypress_process.call",
        "this.on_sys_keypress_specialkey_process.call"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keyinput_forward",
      "params": [],
      "calls": [
        "comp._getRootWindow",
        "this._getInputValue",
        "this._on_sys_keyinput",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pInputElement.on_complete_composition_value_process",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.on_complete_composition_value",
      "params": [],
      "calls": [
        "this.on_complete_composition_value_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_apply_imeSet",
      "params": [],
      "calls": [
        "comp.on_apply_imeSet",
        "pThis._imelocale.getLocale",
        "pThis.on_apply_ime_environment"
      ]
    },
    {
      "name": "_pInputElement.on_apply_ime_environment_process",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.on_apply_ime_environment",
      "params": [],
      "calls": [
        "this.on_apply_ime_environment_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_apply_force_imeSet",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement._updateLocale",
      "params": [],
      "calls": [
        "pThis._getInputValue",
        "pThis._imelocale.IsChangeLocale",
        "pThis._imelocale.setLocale",
        "pThis._imelocale.updateLocale",
        "pThis.getElementCaretPos",
        "pThis.on_apply_force_imeSet.call",
        "pThis.on_apply_imeSet",
        "value.substr"
      ]
    },
    {
      "name": "_pInputElement._updateImeLocale",
      "params": [],
      "calls": [
        "this._composer.getOffset",
        "this._getInputValue",
        "this._updateLocale",
        "this.getElementCaretPos",
        "this.isComposing"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keyinput_before_process",
      "params": [],
      "calls": [
        "_win._getCaptureComp",
        "comp._getWindow",
        "this.stopSysEvent"
      ]
    },
    {
      "name": "_pInputElement.on_sys_keyinput_process",
      "params": [],
      "calls": [
        "comp._on_beforekeyinput",
        "comp._on_input_autoskip",
        "comp._on_keyinput",
        "this._checkMaxLength",
        "this._composer.getOffset",
        "this._composer.isComposing",
        "this._composer.setStatus",
        "this._getInputValue",
        "this._go_next_focus",
        "this._updateElementValue",
        "this._updateInputValue",
        "this.getElementCaretPos",
        "this.setCompositionCancel",
        "this.setCompositionComplete",
        "this.setElementSetSelect",
        "value.substring"
      ]
    },
    {
      "name": "_pInputElement._on_sys_keyinput",
      "params": [],
      "calls": [
        "this._updateImeLocale",
        "this.on_sys_keyinput_before_process.call",
        "this.on_sys_keyinput_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_select_before_process",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement.on_sys_select_process",
      "params": [],
      "calls": [
        "this._setElementLastSelectionRange",
        "this.getElementSelectionRange"
      ]
    },
    {
      "name": "_pInputElement._on_sys_select",
      "params": [],
      "calls": [
        "this.on_sys_select_before_process",
        "this.on_sys_select_process"
      ]
    },
    {
      "name": "_pInputElement._on_sys_cut",
      "params": [],
      "calls": []
    },
    {
      "name": "_pInputElement._on_sys_paste",
      "params": [],
      "calls": [
        "data.replace",
        "nexacro.__getClipboard",
        "this._getInputValue",
        "this.getElementCaretPos",
        "value.substring"
      ]
    },
    {
      "name": "_pInputElement._on_sys_contextmenu",
      "params": [
        "button",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "windowX",
        "windowY",
        "screenX",
        "screenY",
        "metakey"
      ],
      "calls": [
        "comp._getWindow",
        "nexacro._syshandler_oncontextmenu_forward"
      ]
    },
    {
      "name": "_pInputElement.on_sys_compositionstart_process",
      "params": [],
      "calls": [
        "this._composer.setStatus",
        "this.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_compositionstart",
      "params": [
        "/*data*/"
      ],
      "calls": [
        "this.on_sys_compositionstart_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_compositionupdate_process",
      "params": [],
      "calls": [
        "this._composer.setStatus",
        "this.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_compositionupdate",
      "params": [
        "/*data*/"
      ],
      "calls": [
        "nexacro.InputElement.prototype.on_sys_compositionupdate_process.call",
        "this._updateLocale",
        "this.on_sys_compositionupdate_process.call"
      ]
    },
    {
      "name": "_pInputElement.on_sys_compositionend_process",
      "params": [
        "evt"
      ],
      "calls": [
        "comp._on_input_compositionend",
        "this._composer.setStatus",
        "this._getInputValue",
        "this.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_compositionend",
      "params": [
        "/*data*/"
      ],
      "calls": [
        "this.on_sys_compositionend_process.call"
      ]
    },
    {
      "name": "_pInputElement._on_sys_lbuttondown_forward",
      "params": [
        "/*button",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "windowX",
        "windowY",
        "screenX",
        "screenY*/"
      ],
      "calls": [
        "comp._getWindow",
        "nexacro._syshandler_onlbuttondown_forward"
      ]
    },
    {
      "name": "_pInputElement._on_sys_lbuttonup_forward",
      "params": [
        "/*button",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "windowX",
        "windowY",
        "screenX",
        "screenY*/"
      ],
      "calls": [
        "comp._getWindow",
        "nexacro._syshandler_onlbuttonup_forward"
      ]
    },
    {
      "name": "_pInputElement._on_sys_rbuttondown_forward",
      "params": [
        "/*button",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "windowX",
        "windowY",
        "screenX",
        "screenY*/"
      ],
      "calls": [
        "comp._getWindow",
        "nexacro._syshandler_onrbuttondown_forward"
      ]
    },
    {
      "name": "_pInputElement._on_sys_rbuttonup_forward",
      "params": [
        "button",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "windowX",
        "windowY",
        "screenX",
        "screenY",
        "metakey"
      ],
      "calls": [
        "comp._getWindow",
        "nexacro._syshandler_onrbuttonup_forward"
      ]
    },
    {
      "name": "_pInputElement._on_sys_mousemove_forward",
      "params": [
        "button",
        "altkey",
        "ctrlkey",
        "shiftkey",
        "windowX",
        "windowY",
        "screenX",
        "screenY",
        "metakey"
      ],
      "calls": [
        "comp._getWindow",
        "nexacro._syshandler_onmousemove_forward"
      ]
    },
    {
      "name": "_pInputElement._on_sys_focus",
      "params": [],
      "calls": [
        "nexacro.__setInputElementHandleSetSelect",
        "this._composer.setStatus",
        "this.getElementCaretPos"
      ]
    },
    {
      "name": "_pInputElement._on_sys_blur",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.TextAreaElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": [
        "nexacro._CompositionState",
        "nexacro._ImeLocale"
      ]
    },
    {
      "name": "_pTextAreaElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createInputElementHandle",
        "nexacro.__setElementHandleColorObject",
        "nexacro.__setElementHandleCursorObject",
        "nexacro.__setElementHandleEnable",
        "nexacro.__setElementHandleFontObject",
        "nexacro.__setElementHandlePaddingObject",
        "nexacro.__setElementHandleReadOnly",
        "nexacro.__setElementHandleRtlDirection",
        "nexacro.__setElementHandleTabIndentSize",
        "nexacro.__setElementHandleTextDecorationObject",
        "nexacro.__setElementHandleValue",
        "nexacro.__setElementHandleVerticalAlign",
        "nexacro.__setElementHandleVisible",
        "nexacro.__setElementHandleWordwrapObject",
        "nexacro.__setInputElementHandleCaretColor",
        "nexacro.__setInputElementHandleCompositeColor",
        "nexacro.__setInputElementHandleImeMode",
        "nexacro.__setInputElementHandleMaxLength",
        "nexacro.__setInputElementHandleSelectBackgroundColor",
        "nexacro.__setInputElementHandleSelectColor",
        "nexacro._isNull",
        "owner_elem._getRootWindowHandle",
        "this._bindSysEvent",
        "this._getElementClassName",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._setElementHandleTextAlign",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementCSSMapInfo",
      "params": [
        "wordwrap"
      ],
      "calls": []
    },
    {
      "name": "_pTextAreaElement.setElementWordWrap",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "nexacro.__setElementHandleText",
        "nexacro.__setElementHandleWordwrapObject"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementValue",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro.InputElement.prototype.setElementValue.call",
        "value.replace"
      ]
    },
    {
      "name": "_pTextAreaElement.updateElementText",
      "params": [
        "value",
        "caretpos"
      ],
      "calls": [
        "nexacro.InputElement.prototype.updateElementText.call",
        "value.replace"
      ]
    },
    {
      "name": "_pTextAreaElement._updateElementValue",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro.InputElement.prototype._updateElementValue.call",
        "value.replace"
      ]
    },
    {
      "name": "_pTextAreaElement._getInputValue",
      "params": [],
      "calls": [
        "nexacro.InputElement.prototype._getInputValue.call"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementInputType",
      "params": [
        "/*type*/"
      ],
      "calls": []
    },
    {
      "name": "_pTextAreaElement.getElementCaretLine",
      "params": [],
      "calls": [
        "nexacro.__getInputElementHandleCaretLine"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementTextLineCount",
      "params": [
        "withwrap"
      ],
      "calls": [
        "nexacro.__getInputElementHandleCaretLine",
        "nexacro.__getInputElementHandleLineCount",
        "nexacro.__getInputElementHandleSelectionRange",
        "nexacro.__setInputElementHandleCaretPos",
        "nexacro.__setInputElementHandleSetSelect",
        "text.split",
        "this._getInputValue"
      ]
    },
    {
      "name": "_pTextAreaElement.isFirstCaretLine",
      "params": [],
      "calls": [
        "nexacro.__getInputElementHandleCaretLine"
      ]
    },
    {
      "name": "_pTextAreaElement.isLastCaretLine",
      "params": [],
      "calls": [
        "nexacro.__getInputElementHandleCaretLine",
        "this.getElementTextLineCount"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "this.setElementHScrollPos",
        "this.setElementVScrollPos"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementHScrollPos",
      "params": [],
      "calls": [
        "nexacro.__getInputElementHandleScrollLeft"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementHScrollPos",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.__setInputElementHandleScrollLeft",
        "this._getRtlScrollLeft",
        "this._isRtl"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementVScrollPos",
      "params": [],
      "calls": [
        "nexacro.__getInputElementHandleScrollTop"
      ]
    },
    {
      "name": "_pTextAreaElement.setElementVScrollPos",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.__setInputElementHandleScrollTop"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementScrollSize",
      "params": [],
      "calls": [
        "nexacro.__getInputElementHandleScrollHeight",
        "nexacro.__getInputElementHandleScrollSize",
        "nexacro.__getInputElementHandleScrollWidth"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementScrollWidth",
      "params": [],
      "calls": [
        "nexacro.__getInputElementHandleScrollWidth"
      ]
    },
    {
      "name": "_pTextAreaElement.getElementScrollHeight",
      "params": [],
      "calls": [
        "nexacro.__getInputElementHandleScrollHeight"
      ]
    },
    {
      "name": "_pTextAreaElement._bindSysEvent",
      "params": [],
      "calls": [
        "nexacro.InputElement.prototype._bindSysEvent.call",
        "nexacro._observeInputEvent"
      ]
    },
    {
      "name": "_pTextAreaElement._unbindSysEvent",
      "params": [],
      "calls": [
        "nexacro.InputElement.prototype._unbindSysEvent.call",
        "nexacro._stopInputObserving"
      ]
    },
    {
      "name": "_pTextAreaElement._on_sys_scroll",
      "params": [
        "posTop",
        "posLeft"
      ],
      "calls": [
        "linkedcontrol._scrollTo",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "nexacro.ControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "_pControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "linkedcontrol._findOwnerElementHandle",
        "nexacro.__appendElementHandle",
        "nexacro.__createContainerElementHandle",
        "nexacro.__createControlElementHandle",
        "nexacro.__insertElementHandle",
        "nexacro.__setElementHandleStatus",
        "owner_elem._getRootWindowHandle",
        "this._getElementClassName",
        "this._getRTLContainerPositionLeft",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._refreshControl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.createCommandStart",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.createCommandEnd",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": []
    },
    {
      "name": "_pControlElement.destroy",
      "params": [],
      "calls": [
        "nexacro._AccessibilityUtil.unsupportMobileApplicationAccessibility",
        "nexacro.__destroyElementHandle",
        "this._client_elem.destroy",
        "this._on_destroy"
      ]
    },
    {
      "name": "_pControlElement.clearContents",
      "params": [],
      "calls": [
        "this._client_elem.clearContents",
        "this._on_clearContents"
      ]
    },
    {
      "name": "_pControlElement.initElementInfo",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.setLinkedControl",
      "params": [
        "control"
      ],
      "calls": []
    },
    {
      "name": "_pControlElement.setElementPositionStep",
      "params": [
        "position_step"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__unlinkElementHandle",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.appendChildElement",
      "params": [
        "elem"
      ],
      "calls": [
        "elem._appendToContainer",
        "elem._destroyElementHandle",
        "elem._getRootWindowHandle",
        "elem.create",
        "this._getWindow",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.insertChildElement",
      "params": [
        "elem",
        "before_elem"
      ],
      "calls": [
        "elem._appendToContainer",
        "elem._insertToContainer",
        "elem.create",
        "this._getWindow",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.removeChildElement",
      "params": [
        "elem"
      ],
      "calls": [
        "elem._removeFromContainer"
      ]
    },
    {
      "name": "_pControlElement._getComputedStyle",
      "params": [
        "prop",
        "noflush"
      ],
      "calls": [
        "nexacro.__getElementHandleStyleValue",
        "this._flushCommand"
      ]
    },
    {
      "name": "_pControlElement._getComputedStyleSubValue",
      "params": [
        "prop",
        "subprop",
        "noflush"
      ],
      "calls": [
        "nexacro.__getElementHandleStyleSubValue",
        "this._flushCommand"
      ]
    },
    {
      "name": "_pControlElement._getComputedStyleBackgroundColor",
      "params": [
        "noflush",
        "bExport"
      ],
      "calls": [
        "nexacro.__getElementHandleStyleSubValue",
        "nexacro.__getElementHandleStyleValue",
        "ret.indexOf",
        "this._flushCommand"
      ]
    },
    {
      "name": "_pControlElement._flushCommand",
      "params": [],
      "calls": [
        "nexacro._flushCommand",
        "this._getWindow"
      ]
    },
    {
      "name": "_pControlElement._sendToBackElement",
      "params": [
        "elem"
      ],
      "calls": [
        "nexacro.__setElementHandleSendToBack"
      ]
    },
    {
      "name": "_pControlElement._bringToFrontElement",
      "params": [
        "elem"
      ],
      "calls": [
        "nexacro.__setElementHandleBringToFront"
      ]
    },
    {
      "name": "_pControlElement._moveToNextElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "nexacro.__setElementHandleMoveToNext"
      ]
    },
    {
      "name": "_pControlElement._moveToPrevElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "nexacro.__setElementHandleMoveToPrev"
      ]
    },
    {
      "name": "_pControlElement.sendToBackElement",
      "params": [
        "elem"
      ],
      "calls": [
        "client_elem._sendToBackElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.bringToFrontElement",
      "params": [
        "elem"
      ],
      "calls": [
        "client_elem._bringToFrontElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.moveToNextElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "client_elem._moveToNextElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.moveToPrevElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "client_elem._moveToPrevElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pControlElement.saveToImageObject",
      "params": [],
      "calls": [
        "imgObj.setBase64String",
        "imgObj.set_src",
        "nexacro.Image",
        "nexacro.__saveToImageBase64String"
      ]
    },
    {
      "name": "_pControlElement._setElementHScrollPos",
      "params": [
        "hpos"
      ],
      "calls": [
        "nexacro.__setElementHandleHScrollPos",
        "this._isRtl"
      ]
    },
    {
      "name": "_pControlElement._setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "nexacro.__setElementHandleVScrollPos"
      ]
    },
    {
      "name": "_pControlElement._setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "nexacro.__setElementHandleOffset"
      ]
    },
    {
      "name": "_pControlElement.setElementHScrollPos",
      "params": [
        "hpos"
      ],
      "calls": [
        "this._client_elem._setElementHScrollPos",
        "this.getContainerElement",
        "this.linkedcontrol._setHscrollPos"
      ]
    },
    {
      "name": "_pControlElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "this._client_elem._setElementVScrollPos",
        "this.linkedcontrol._setVscrollPos"
      ]
    },
    {
      "name": "_pControlElement.setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "this._client_elem._setElementScrollPos",
        "this._hscroll_control._setScrollPos",
        "this._vscroll_control._setScrollPos"
      ]
    },
    {
      "name": "_pControlElement.setElementClassCSSSelector",
      "params": [
        "classname"
      ],
      "calls": [
        "nexacro.__setElementHandleCSSClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pControlElement.setElementIDCSSSelector",
      "params": [
        "id"
      ],
      "calls": [
        "nexacro.__setElementHandleCSSClassName",
        "this._getElementClassName"
      ]
    },
    {
      "name": "_pControlElement.setElementCSSMapInfo",
      "params": [
        "border",
        "padding",
        "edge"
      ],
      "calls": [
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementZIndex",
      "params": [
        "zindex"
      ],
      "calls": [
        "nexacro.__setElementHandleZindex"
      ]
    },
    {
      "name": "_pControlElement.setElementToolTip",
      "params": [
        "tooltiptext",
        "tooltiptype"
      ],
      "calls": [
        "nexacro.__setElementHandleToolTip",
        "nexacro._isNull"
      ]
    },
    {
      "name": "_pControlElement.setElementFocus",
      "params": [],
      "calls": [
        "nexacro.__setElementHandleFocus",
        "nexacro.__setLastFocusedElement"
      ]
    },
    {
      "name": "_pControlElement.setElementSize",
      "params": [
        "width",
        "height",
        "update"
      ],
      "calls": [
        "nexacro.__clearElementHandlePosition",
        "nexacro.__setElementHandlePosition",
        "nexacro.__setElementHandleSize",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderRadius",
      "params": [
        "borderradius"
      ],
      "calls": [
        "nexacro.__setElementHandleBorderRadiusObject"
      ]
    },
    {
      "name": "_pControlElement.setElementBorder",
      "params": [
        "border"
      ],
      "calls": [
        "nexacro.__setElementHandleBorderObject",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderLeftNone",
      "params": [
        "borderleft"
      ],
      "calls": [
        "nexacro.__setElementHandleBorderLeftNone",
        "nexacro.__setElementHandleBorderRightNone",
        "this._get_rtl",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderTopNone",
      "params": [
        "bordertop"
      ],
      "calls": [
        "nexacro.__setElementHandleBorderTopNone",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderRightNone",
      "params": [
        "borderright"
      ],
      "calls": [
        "nexacro.__setElementHandleBorderLeftNone",
        "nexacro.__setElementHandleBorderRightNone",
        "this._get_rtl",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderBottomNone",
      "params": [
        "borderbottom"
      ],
      "calls": [
        "nexacro.__setElementHandleBorderBottomNone",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBorderNone",
      "params": [
        "borderleft",
        "bordertop",
        "borderright",
        "borderbottom"
      ],
      "calls": [
        "this._refreshBorderNone"
      ]
    },
    {
      "name": "_pControlElement._get_rtl",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement._refreshBorderNone",
      "params": [],
      "calls": [
        "nexacro.__setElementHandleBorderBottomNone",
        "nexacro.__setElementHandleBorderLeftNone",
        "nexacro.__setElementHandleBorderRightNone",
        "nexacro.__setElementHandleBorderTopNone",
        "this._edge_elem.setElementSize",
        "this._get_rtl",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement.setElementBackground",
      "params": [
        "background"
      ],
      "calls": [
        "nexacro.__setElementHandleBackgroundObject"
      ]
    },
    {
      "name": "_pControlElement.setElementEdge",
      "params": [
        "edge"
      ],
      "calls": [
        "nexacro.__setElementHandleEdgeImageObject"
      ]
    },
    {
      "name": "_pControlElement.setElementPadding",
      "params": [
        "padding"
      ],
      "calls": [
        "nexacro.__setElementHandlePaddingObject",
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pControlElement._updateClientRect",
      "params": [
        "update"
      ],
      "calls": [
        "this._on_change_clientPos",
        "this._on_change_clientSize",
        "this._on_updateClientRect"
      ]
    },
    {
      "name": "_pControlElement.setElementCursor",
      "params": [
        "cursor"
      ],
      "calls": [
        "nexacro.__setElementHandleCursorObject"
      ]
    },
    {
      "name": "_pControlElement.setElementOpacity",
      "params": [
        "opacity"
      ],
      "calls": [
        "nexacro.__setElementHandleOpacityObject"
      ]
    },
    {
      "name": "_pControlElement.setElementBoxShadow",
      "params": [
        "boxshadow"
      ],
      "calls": [
        "nexacro.__setElementHandleShadowObject"
      ]
    },
    {
      "name": "_pControlElement.setElementZoom",
      "params": [
        "zoomfactor"
      ],
      "calls": [
        "nexacro.__setElementHandleScale"
      ]
    },
    {
      "name": "_pControlElement.setElementDisplay",
      "params": [
        "display"
      ],
      "calls": [
        "nexacro.__setElementHandleVisible"
      ]
    },
    {
      "name": "_pControlElement.setElementSimpleControl",
      "params": [
        "simplecontrol"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createContainerElementHandle",
        "nexacro.__destroyElementHandle",
        "owner_elem._getRootWindowHandle"
      ]
    },
    {
      "name": "_pControlElement.setElementHittestType",
      "params": [
        "httype"
      ],
      "calls": [
        "nexacro.__setElementHittestValue"
      ]
    },
    {
      "name": "_pControlElement.getClientLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getClientTop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getClientWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getClientHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.beginTransitionEffect",
      "params": [
        "effectObj",
        "callback"
      ],
      "calls": [
        "nexacro.__beginTransitionEffect",
        "nexacro.__beginTransitionEffectWithCallback"
      ]
    },
    {
      "name": "_pControlElement.applyTransitionEffect",
      "params": [
        "effectObj"
      ],
      "calls": [
        "nexacro.__applyTransitionEffect"
      ]
    },
    {
      "name": "_pControlElement.cancelTransitionEffect",
      "params": [
        "effectObj"
      ],
      "calls": [
        "nexacro.__cancelTransitionEffect"
      ]
    },
    {
      "name": "_pControlElement._refreshControl",
      "params": [
        "handle"
      ],
      "calls": [
        "nexacro.__setElementHandleBackgroundObject",
        "nexacro.__setElementHandleBorderBottomNone",
        "nexacro.__setElementHandleBorderLeftNone",
        "nexacro.__setElementHandleBorderObject",
        "nexacro.__setElementHandleBorderRadiusObject",
        "nexacro.__setElementHandleBorderRightNone",
        "nexacro.__setElementHandleBorderTopNone",
        "nexacro.__setElementHandleCursorObject",
        "nexacro.__setElementHandleEdgeImageObject",
        "nexacro.__setElementHandleOpacityObject",
        "nexacro.__setElementHandlePaddingObject",
        "nexacro.__setElementHandleShadowObject",
        "nexacro.__setElementHandleStatus",
        "nexacro.__setElementHandleTabIndex",
        "nexacro.__setElementHandleToolTip",
        "nexacro.__setElementHandleUserStatus",
        "nexacro.__setElementHandleZindex",
        "nexacro.__setElementHittestValue",
        "nexacro._isNull",
        "this._get_rtl",
        "this._refreshAccessibilityInfo",
        "this._refreshCommonStyleProps"
      ]
    },
    {
      "name": "_pControlElement.getElementScrollWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getElementScrollHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement._updateInnerSize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement._updateInnerElement",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._edge_elem.setElementSize",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "_pControlElement._on_updateClientRect",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement._on_change_clientPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "client_elem.setElementPosition",
        "control.on_change_containerPos",
        "nexacro.__clearElementHandlePosition",
        "nexacro.__setElementHandlePosition",
        "this._getRTLPositionLeft"
      ]
    },
    {
      "name": "_pControlElement._on_change_clientSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "client_elem.setElementSize",
        "control.on_change_containerRect",
        "nexacro.__setElementHandleSize"
      ]
    },
    {
      "name": "_pControlElement.getElementScrollLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getElementScrollTop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getElementScrollWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement.getElementScrollHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pControlElement._isMultiInnerProc",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.FrameControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "_pFrameControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createContainerElementHandle",
        "nexacro.__createControlElementHandle",
        "owner_elem._getRootWindowHandle",
        "this._createBorderElements",
        "this._getElementClassName",
        "this._getRTLContainerPositionLeft",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._refreshControl",
        "this._updateBorderElementsPosition",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pFrameControlElement._on_destroy",
      "params": [],
      "calls": [
        "this._destroyBorderElements"
      ]
    },
    {
      "name": "_pFrameControlElement.getContainerElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrameControlElement._getRootWindowHandle",
      "params": [],
      "calls": [
        "this.owner_elem._getRootWindowHandle",
        "this.parent._getRootWindowHandle"
      ]
    },
    {
      "name": "_pFrameControlElement._updateClientRect",
      "params": [
        "update"
      ],
      "calls": [
        "this._on_change_clientPos",
        "this._on_change_clientSize",
        "this._on_updateClientRect",
        "this._updateBorderElementsPosition"
      ]
    },
    {
      "name": "_pFrameControlElement._on_updateClientRect",
      "params": [],
      "calls": [
        "status_control.move",
        "title_control.move"
      ]
    },
    {
      "name": "_pFrameControlElement.appendChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child_elem._appendToContainer",
        "child_elem._destroyDOMHandle",
        "child_elem.create",
        "child_elem.setElementAlign",
        "child_elem.setElementAlignXY",
        "child_elem.setElementColor",
        "child_elem.setElementFont",
        "child_elem.setElementPosition",
        "child_elem.setElementSize",
        "this._getWindow"
      ]
    },
    {
      "name": "_pFrameControlElement.removeChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child_elem._removeFromContainer"
      ]
    },
    {
      "name": "_pFrameControlElement.sendToBackElement",
      "params": [
        "elem"
      ],
      "calls": [
        "nexacro.__setElementHandleSendToBack"
      ]
    },
    {
      "name": "_pFrameControlElement.bringToFrontElement",
      "params": [
        "cur_elem"
      ],
      "calls": [
        "nexacro.__setElementHandleBringToFront"
      ]
    },
    {
      "name": "_pFrameControlElement.moveToNextElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "client_element.moveToNextElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pFrameControlElement.moveToPrevElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "client_element.moveToPrevElement",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pFrameControlElement.setTitleBarControl",
      "params": [
        "title_control",
        "title_height"
      ],
      "calls": [
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pFrameControlElement.setStatusBarControl",
      "params": [
        "status_control",
        "status_height"
      ],
      "calls": [
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pFrameControlElement._createBorderElements",
      "params": [],
      "calls": [
        "border_elem.create",
        "nexacro._FrameResizeBorderElement",
        "this._border_elems.add_item",
        "this._getWindow",
        "this._setResizable"
      ]
    },
    {
      "name": "_pFrameControlElement._destroyBorderElements",
      "params": [],
      "calls": [
        "this._border_elems.clear"
      ]
    },
    {
      "name": "_pFrameControlElement.setElementPosition",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.ControlElement.prototype.setElementPosition.call",
        "this._updateBorderElementsPosition"
      ]
    },
    {
      "name": "_pFrameControlElement._updateBorderElementsPosition",
      "params": [],
      "calls": [
        "border._getBorderWidth",
        "nexacro._getDevicePixelRatio"
      ]
    },
    {
      "name": "_pFrameControlElement._setResizable",
      "params": [
        "resizable"
      ],
      "calls": [
        "border_elem.setElementCursor",
        "border_elem.setElementHittestType",
        "border_elem.setElementZIndex",
        "nexacro.CursorObject",
        "nexacro._getMainWindowHandle",
        "statuscontrol.set_resizable",
        "this._createBorderElements",
        "this._getWindowHandle",
        "this._updateBorderElementsPosition"
      ]
    },
    {
      "name": "_pFrameControlElement.setElementCSSMapInfo",
      "params": [
        "border",
        "padding",
        "edge"
      ],
      "calls": [
        "nexacro.ControlElement.prototype.setElementCSSMapInfo.call"
      ]
    },
    {
      "name": "_pFrameControlElement.setElementSize",
      "params": [
        "width",
        "height",
        "update",
        "isInnerFrame"
      ],
      "calls": [
        "nexacro.__clearElementHandlePosition",
        "nexacro.__setElementHandlePosition",
        "nexacro.__setElementHandleSize",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._updateClientRect",
        "this._updateInnerSize"
      ]
    },
    {
      "name": "nexacro._FrameResizeBorderElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "__pFrameResizeBorderElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createControlElementHandle",
        "owner_elem._getRootWindowHandle",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._refreshControl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "__pFrameResizeBorderElement.setElementSize",
      "params": [
        "width",
        "height",
        "update"
      ],
      "calls": [
        "nexacro.__clearElementHandleSize",
        "nexacro.__setElementHandleSize"
      ]
    },
    {
      "name": "__pFrameResizeBorderElement._on_destroy",
      "params": [],
      "calls": []
    },
    {
      "name": "__pFrameResizeBorderElement._getRootWindowHandle",
      "params": [],
      "calls": [
        "this.owner_elem._getRootWindowHandle"
      ]
    },
    {
      "name": "__pFrameResizeBorderElement._on_starttrack",
      "params": [],
      "calls": [
        "this.linkedcontrol._on_border_starttrack"
      ]
    },
    {
      "name": "__pFrameResizeBorderElement._on_endtrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "this.linkedcontrol._on_border_endtrack"
      ]
    },
    {
      "name": "__pFrameResizeBorderElement._on_movetrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "this.linkedcontrol._on_border_movetrack"
      ]
    },
    {
      "name": "__pFrameResizeBorderElement._getRTLPositionLeft",
      "params": [
        "left",
        "width"
      ],
      "calls": []
    },
    {
      "name": "nexacro.ModalOverlayElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "_pModalOverlayElement.create",
      "params": [
        "/*win*/"
      ],
      "calls": [
        "_win.frame._getWaitComponentElement",
        "nexacro.__appendElementHandle",
        "nexacro.__createControlElementHandle",
        "nexacro.__insertElementHandle",
        "nexacro.__setElementHandleZindex",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._refreshControl",
        "this.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "_pModalOverlayElement.destroy",
      "params": [],
      "calls": [
        "nexacro.__destroyElementHandle",
        "this.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "_pModalOverlayElement.setElementSize",
      "params": [
        "width",
        "height",
        "update"
      ],
      "calls": [
        "nexacro.Element.prototype.setElementSize.call"
      ]
    },
    {
      "name": "_pModalOverlayElement._getRootWindowHandle",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.ScrollableControlElement",
      "params": [
        "parent_elem",
        "use_multiinner"
      ],
      "calls": [
        "nexacro._ContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "linkedcontrol._findOwnerElementHandle",
        "nexacro._ContainerElement",
        "nexacro.__appendElementHandle",
        "nexacro.__createScrollableControlElementHandle",
        "nexacro.__insertElementHandle",
        "nexacro.__setElementHandleInitPosSize",
        "owner_elem._getRootWindowHandle",
        "step_client.create",
        "step_client.setElementPosition",
        "step_client.setElementSize",
        "this._client_elem.create",
        "this._getElementClassName",
        "this._getRTLPositionLeft",
        "this._getWindow",
        "this._isParentRtl",
        "this._refreshControl",
        "this._step_containers.push",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_destroy",
      "params": [],
      "calls": [
        "step_client.destroy"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_clearContents",
      "params": [],
      "calls": [
        "step_client.destroy"
      ]
    },
    {
      "name": "_pScrollableControlElement._setInnerElementScrollMaxTops",
      "params": [
        "tops"
      ],
      "calls": []
    },
    {
      "name": "_pScrollableControlElement.initElementInfo",
      "params": [],
      "calls": [
        "control._getHScrollBarSize",
        "control._getHScrollBarType",
        "control._getVScrollBarSize",
        "control._getVScrollBarType",
        "nexacro.ControlElement.prototype.initElementInfo.call",
        "this._client_elem._setElementHScrollPos",
        "this._client_elem._setElementVScrollPos",
        "this.setElementScrollbarSize"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementStepCount",
      "params": [
        "count"
      ],
      "calls": [
        "nexacro._ContainerElement",
        "step_client.create",
        "step_client.destroy",
        "step_client.setElementPosition",
        "step_client.setElementSize",
        "this._getWindow",
        "this._step_containers.push",
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementStepIndex",
      "params": [
        "index"
      ],
      "calls": []
    },
    {
      "name": "_pScrollableControlElement.setElementZoom",
      "params": [
        "zoomfactor"
      ],
      "calls": [
        "nexacro.__setElementHandleScale",
        "this._updateClientRect",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementScrollMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "client_elem.setElementScrollMaxSize",
        "this._client_elem.setElementScrollMaxSize",
        "this._updateClientRect",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementScrollbarSize",
      "params": [
        "hscroll_size",
        "vscroll_size",
        "hscrollbartype",
        "vscrollbartype",
        "scrolltype"
      ],
      "calls": [
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementExpandbarSize",
      "params": [
        "expandbarsize",
        "expandbartype",
        "expanddirtype",
        "expandvisible",
        "expandarrange"
      ],
      "calls": [
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pScrollableControlElement.getContainerElement",
      "params": [
        "position_step"
      ],
      "calls": []
    },
    {
      "name": "_pScrollableControlElement.getElementScrollLeft",
      "params": [],
      "calls": [
        "container.getElementScrollLeft",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement.getElementScrollTop",
      "params": [],
      "calls": [
        "container.getElementScrollTop"
      ]
    },
    {
      "name": "_pScrollableControlElement.getElementScrollWidth",
      "params": [],
      "calls": [
        "container.getElementScrollWidth",
        "this.getContainerElement"
      ]
    },
    {
      "name": "_pScrollableControlElement.getElementScrollHeight",
      "params": [],
      "calls": [
        "container.getElementScrollHeight"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "this._client_elem._setElementVScrollPos",
        "this.getContainerElement",
        "this.linkedcontrol._setVscrollPos"
      ]
    },
    {
      "name": "_pScrollableControlElement._updateClientRect",
      "params": [
        "update"
      ],
      "calls": [
        "this._on_change_clientPos",
        "this._on_change_clientSize",
        "this._on_updateClientRect",
        "this._on_updateScrollBar"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_change_clientPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "control.on_change_containerPos",
        "nexacro.__clearElementHandlePosition",
        "nexacro.__setElementHandlePosition",
        "step_client_elem.setElementPosition",
        "step_client_elem.setElementSize",
        "this._client_elem._setElementHScrollPos",
        "this._client_elem.setElementPosition",
        "this._getRTLPositionLeft"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_change_clientPosExpand",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "client_elem.setElementPosition",
        "control.on_change_containerPos",
        "nexacro.__clearElementHandlePosition",
        "nexacro.__setElementHandlePosition",
        "this._getRTLPositionLeft"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_change_clientSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "Math.max",
        "control.on_change_containerRect",
        "nexacro.__setElementHandleSize",
        "step_client_elem.setElementSize",
        "this._client_elem.setElementSize"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_change_clientSizeExpand",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "client_elem.setElementSize",
        "control.on_change_containerRect",
        "nexacro.__setElementHandleSize"
      ]
    },
    {
      "name": "_pScrollableControlElement._setAttachCliendTop",
      "params": [
        "top"
      ],
      "calls": [
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_updateClientRect",
      "params": [],
      "calls": [
        "nexacro._isAlmostGreater",
        "nexacro.floor",
        "this._isRtl",
        "this.setElementHScrollPos",
        "this.setElementVScrollPos"
      ]
    },
    {
      "name": "_pScrollableControlElement._on_updateClientRectExpand",
      "params": [],
      "calls": [
        "this._isRtl"
      ]
    },
    {
      "name": "_pScrollableControlElement.setElementInitPosSize",
      "params": [
        "init_left",
        "init_top",
        "init_width",
        "init_height"
      ],
      "calls": [
        "nexacro.__setElementHandleInitPosSize"
      ]
    },
    {
      "name": "_pScrollableControlElement._setElementContentsMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "nexacro._ContainerElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "__pContainerElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createScrollableContainerElementHandle",
        "nexacro.__setElementHandleOffset",
        "owner_elem._getRootWindowHandle",
        "this._getRTLPositionLeft",
        "this._isParentRtl"
      ]
    },
    {
      "name": "_pElement._getRTLPositionLeft",
      "params": [
        "left",
        "width"
      ],
      "calls": []
    },
    {
      "name": "__pContainerElement.destroy",
      "params": [
        "_is_stepcontainer_for_layoutchange"
      ],
      "calls": [
        "this._destroyElementHandle"
      ]
    },
    {
      "name": "__pContainerElement.clearContents",
      "params": [],
      "calls": [
        "nexacro.__destroyElementHandle"
      ]
    },
    {
      "name": "__pContainerElement._setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "nexacro.__setElementHandleVScrollPos"
      ]
    },
    {
      "name": "__pContainerElement._setElementHScrollPos",
      "params": [
        "hpos"
      ],
      "calls": [
        "nexacro.__setElementHandleHScrollPos",
        "this._isRtl"
      ]
    },
    {
      "name": "__pContainerElement._setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "nexacro.__setElementHandleOffset"
      ]
    },
    {
      "name": "__pContainerElement.setElementZoom",
      "params": [
        "zoomfactor"
      ],
      "calls": [
        "nexacro.__setElementHandleScale"
      ]
    },
    {
      "name": "__pContainerElement._findScrollbarControl",
      "params": [
        "elem",
        "is_vert"
      ],
      "calls": [
        "elem._hscroll_control._isVisible",
        "elem._vscroll_control._isVisible"
      ]
    },
    {
      "name": "__pContainerElement._sendToBackElement",
      "params": [
        "elem"
      ],
      "calls": [
        "nexacro.__setElementHandleSendToBack"
      ]
    },
    {
      "name": "__pContainerElement._bringToFrontElement",
      "params": [
        "elem"
      ],
      "calls": [
        "nexacro.__setElementHandleBringToFront"
      ]
    },
    {
      "name": "__pContainerElement._moveToNextElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "nexacro.__setElementHandleMoveToNext"
      ]
    },
    {
      "name": "__pContainerElement._moveToPrevElement",
      "params": [
        "elem",
        "base_elem"
      ],
      "calls": [
        "nexacro.__setElementHandleMoveToPrev"
      ]
    },
    {
      "name": "__pContainerElement.setElementScrollMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "__pContainerElement.getElementScrollLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "__pContainerElement.getElementScrollTop",
      "params": [],
      "calls": []
    },
    {
      "name": "__pContainerElement.getElementScrollWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "__pContainerElement.getElementScrollHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.PluginElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "_pPluginElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "events.get_id",
        "events.get_item",
        "nexacro.PluginObject",
        "nexacro.__appendElementHandle",
        "nexacro.__createPluginElementHandle",
        "nexacro.__createdPluginElementHandle",
        "nexacro.__getPluginElementHandleObject",
        "nexacro.__setElementHandleAlign",
        "nexacro.__setElementHandleColorObject",
        "nexacro.__setElementHandleEnable",
        "nexacro.__setElementHandleFontObject",
        "nexacro.__setElementHandleVisible",
        "nexacro.__setPluginElementHandleAdjustAlpha",
        "nexacro.__setPluginElementHandleAttribute",
        "nexacro.__setPluginElementHandleClassId",
        "nexacro.__setPluginElementHandleClassId64",
        "nexacro.__setPluginElementHandleCode",
        "nexacro.__setPluginElementHandleCodebase",
        "nexacro.__setPluginElementHandleLicense",
        "nexacro.__setPluginElementHandleMIMEType",
        "nexacro.__setPluginElementHandlePluginName",
        "nexacro.__setPluginElementHandlePluginPage",
        "nexacro.__setPluginElementHandlePluginSrc",
        "nexacro.__setPluginElementHandlePopupstyle",
        "nexacro.__setPluginElementHandleWindowed",
        "owner_elem._getRootWindowHandle",
        "params.get_id",
        "params.get_item",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this.addEventHandler",
        "this.initEvent",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pPluginElement.destroy",
      "params": [],
      "calls": [
        "events.destroy",
        "nexacro.__destroyElementHandle",
        "params.destroy",
        "plugin_object.destroy"
      ]
    },
    {
      "name": "_pPluginElement.initEvent",
      "params": [],
      "calls": [
        "nexacro._observeWrapperEvent"
      ]
    },
    {
      "name": "_pPluginElement._on_plugin_event",
      "params": [
        "evt_id",
        "arg0",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "arg6",
        "arg7",
        "arg8",
        "arg9",
        "arg10",
        "arg11",
        "arg12",
        "arg13",
        "arg14",
        "arg15",
        "arg16",
        "arg17",
        "arg18",
        "arg19"
      ],
      "calls": [
        "h.handler.call",
        "nexacro._getExceptionMessage",
        "nexacro._onSystemError",
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pPluginElement.on_update_position",
      "params": [],
      "calls": [
        "nexacro.__updatePluginElementHandlePosition"
      ]
    },
    {
      "name": "_pPluginElement.setElementFocus",
      "params": [],
      "calls": [
        "nexacro.__setElementHandleFocus",
        "nexacro.__setLastFocusedElement"
      ]
    },
    {
      "name": "_pPluginElement.setElementPluginPosition",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "this.setElementPosition"
      ]
    },
    {
      "name": "_pPluginElement.setElementLicense",
      "params": [
        "license"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementLicenseFile",
      "params": [
        "lpkpath"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementMIMEType",
      "params": [
        "_type"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementClassId",
      "params": [
        "classid"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementClassId64",
      "params": [
        "classid64"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementCodebase",
      "params": [
        "codebase"
      ],
      "calls": [
        "nexacro.__setPluginElementHandleCodebase"
      ]
    },
    {
      "name": "_pPluginElement.setElementCode",
      "params": [
        "code"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementArchive",
      "params": [
        "archive"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementAdjustAlpha",
      "params": [
        "adjustalpha"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementUsePersistData",
      "params": [
        "usepersistdata"
      ],
      "calls": [
        "this.setElementParam"
      ]
    },
    {
      "name": "_pPluginElement.getElementUsePersistData",
      "params": [],
      "calls": [
        "this.getElementParam"
      ]
    },
    {
      "name": "_pPluginElement.getElementParam",
      "params": [
        "name"
      ],
      "calls": [
        "params.get_item",
        "this._plugin_object.getProperty"
      ]
    },
    {
      "name": "_pPluginElement.setElementParam",
      "params": [
        "name",
        "value"
      ],
      "calls": [
        "params.add_item",
        "params.get_item",
        "params.set_item",
        "this._plugin_object.setProperty"
      ]
    },
    {
      "name": "_pPluginElement.setElementPluginSrc",
      "params": [
        "src"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementPluginPage",
      "params": [
        "pluginpage"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementWindowed",
      "params": [
        "windowed"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.setElementEnable",
      "params": [
        "enable"
      ],
      "calls": [
        "nexacro.__setElementHandleEnable"
      ]
    },
    {
      "name": "_pPluginElement.setElementVisible",
      "params": [
        "visible"
      ],
      "calls": [
        "nexacro.__setElementHandleVisible"
      ]
    },
    {
      "name": "_pPluginElement.setElementPopupStyle",
      "params": [
        "popupstyle"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement._setElementPluginName",
      "params": [
        "pluginname"
      ],
      "calls": []
    },
    {
      "name": "_pPluginElement.callMethod",
      "params": [],
      "calls": [
        "this._plugin_object.callMethod.apply"
      ]
    },
    {
      "name": "_pPluginElement._getPluginObject",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPluginElement.install",
      "params": [],
      "calls": [
        "nexacro.__callPluginElementHandleInstall"
      ]
    },
    {
      "name": "_pPluginElement.isInstalled",
      "params": [],
      "calls": [
        "nexacro.__getPluginElementHandleIsInstalled"
      ]
    },
    {
      "name": "_pPluginElement.isLoaded",
      "params": [],
      "calls": [
        "nexacro.__isPluginElementHandleLoaded"
      ]
    },
    {
      "name": "_pPluginElement.addEventHandler",
      "params": [
        "name",
        "callback"
      ],
      "calls": [
        "callback.toString",
        "nexacro.__appendGlobalScript",
        "nexacro._executeEvalStr",
        "nexacro.getApplication",
        "this._events.add_item"
      ]
    },
    {
      "name": "_pPluginElement.removeEventHandler",
      "params": [
        "name",
        "callback"
      ],
      "calls": [
        "nexacro.__removeGlobalScript",
        "this._events.delete_item"
      ]
    },
    {
      "name": "_pPluginElement.updateWindow",
      "params": [],
      "calls": [
        "nexacro.__updatePluginElementHandleWindow"
      ]
    },
    {
      "name": "_pPluginElement.setElementMovie",
      "params": [
        "movie"
      ],
      "calls": [
        "this.setElementParam"
      ]
    },
    {
      "name": "_pPluginElement._play",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPluginElement._stopPlay",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.PluginObject",
      "params": [
        "handle"
      ],
      "calls": []
    },
    {
      "name": "__pPluginObject.getProperty",
      "params": [],
      "calls": [
        "Array.prototype.unshift.call",
        "nexacro.PluginObject",
        "nexacro.__getPluginObjectHandleAttribute.apply"
      ]
    },
    {
      "name": "__pPluginObject.setProperty",
      "params": [
        "name",
        "value"
      ],
      "calls": [
        "nexacro.__setPluginObjectHandleAttribute"
      ]
    },
    {
      "name": "__pPluginObject.callMethod",
      "params": [],
      "calls": [
        "Array.prototype.unshift.call",
        "nexacro.PluginObject",
        "nexacro.__callPluginObjectHandleMethod.apply"
      ]
    },
    {
      "name": "__pPluginObject.callMethodAsync",
      "params": [],
      "calls": [
        "Array.prototype.unshift.call",
        "nexacro.__callPluginObjectHandleMethodAndReturnPromise.apply"
      ]
    },
    {
      "name": "__pPluginObject.callScriptMethod",
      "params": [],
      "calls": [
        "Array.prototype.unshift.call",
        "nexacro.PluginObject",
        "nexacro.__callPluginObjectHandleScriptMethod.apply"
      ]
    },
    {
      "name": "__pPluginObject.destroy",
      "params": [],
      "calls": [
        "nexacro.__destroyPluginObjectHandle",
        "this._parentObject.destroy"
      ]
    },
    {
      "name": "nexacro._WebBrowserPluginElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.initEvent",
      "params": [],
      "calls": [
        "nexacro._observeWrapperEvent"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._on_plugin_event",
      "params": [
        "evt_id",
        "arg0",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "arg6",
        "arg8",
        "arg9"
      ],
      "calls": [
        "_win.getCurrentFocusPaths",
        "comp._getWindow",
        "comp.on_fire_onusernotify",
        "comp.on_load_handler",
        "focus_comp._apply_setfocus",
        "focus_comp.on_focus_basic_action",
        "listener._fireEvent",
        "nexacro.__restorePluginElementHandleWindowFocus",
        "nexacro._indexOf",
        "this.getElementParam"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._getDoc",
      "params": [],
      "calls": []
    },
    {
      "name": "__pWebBrowserPluginElement._setUrl",
      "params": [
        "url",
        "useurlhistory"
      ],
      "calls": [
        "location.replace",
        "this._plugin_object.callMethod",
        "this._setSharedVariablesToCookie"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setGo",
      "params": [],
      "calls": [
        "this._plugin_object.callMethod"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setBack",
      "params": [],
      "calls": [
        "state.toLowerCase",
        "this._plugin_object.callMethod"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setForward",
      "params": [],
      "calls": [
        "state.toLowerCase",
        "this._plugin_object.callMethod"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.callMethod",
      "params": [],
      "calls": [
        "this._pluginCallMethod"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._pluginCallMethod",
      "params": [
        "args"
      ],
      "calls": [
        "_document.destroy",
        "_document.getProperty",
        "_script.callScriptMethod.apply",
        "_script.destroy",
        "nexacro.replaceAll",
        "this._plugin_object.getProperty",
        "this._setUrl"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement.getProperty",
      "params": [
        "name"
      ],
      "calls": [
        "_doc.destroy",
        "_doc.getProperty",
        "params.get_item",
        "this._plugin_object.getProperty"
      ]
    },
    {
      "name": "__pWebBrowserPluginElement._setSharedVariablesToCookie",
      "params": [
        "url"
      ],
      "calls": [
        "nexacro._getCookieVariables",
        "nexacro._setSharedVariablesToCookie",
        "url.indexOf"
      ]
    },
    {
      "name": "nexacro._WebViewPluginElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "__pWebViewPluginElement.initEvent",
      "params": [],
      "calls": [
        "nexacro._observeWrapperEvent"
      ]
    },
    {
      "name": "__pWebViewPluginElement._closeDefaultDownloadDialog",
      "params": [],
      "calls": [
        "this._plugin_object.callMethod"
      ]
    },
    {
      "name": "__pWebViewPluginElement._on_plugin_event",
      "params": [
        "evt_id",
        "arg0",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "arg6",
        "arg8",
        "arg9"
      ],
      "calls": [
        "_win.getCurrentFocusPaths",
        "callbacklist.findIndex",
        "callbacklist.splice",
        "comp._getWindow",
        "comp.on_fire_onusernotify",
        "comp.on_load_handler",
        "evt_id.indexOf",
        "evt_id.replace",
        "focus_comp._apply_setfocus",
        "focus_comp.on_focus_basic_action",
        "func.call",
        "listener._fireEvent",
        "nexacro.MakeError",
        "nexacro.__restorePluginElementHandleWindowFocus",
        "nexacro._indexOf",
        "nexacro._onSystemError",
        "ret.charAt",
        "ret.substr",
        "ret.toString",
        "this.getElementParam"
      ]
    },
    {
      "name": "__pWebViewPluginElement._getDoc",
      "params": [],
      "calls": []
    },
    {
      "name": "__pWebViewPluginElement._setUrl",
      "params": [
        "url",
        "useurlhistory"
      ],
      "calls": [
        "location.replace",
        "this._plugin_object.callMethod",
        "this._setSharedVariablesToCookie"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setInstallUrl",
      "params": [
        "url"
      ],
      "calls": [
        "this._plugin_object.callMethod"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setGo",
      "params": [],
      "calls": [
        "this._plugin_object.callMethod"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setBack",
      "params": [],
      "calls": [
        "state.toLowerCase",
        "this._plugin_object.callMethod"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setForward",
      "params": [],
      "calls": [
        "state.toLowerCase",
        "this._plugin_object.callMethod"
      ]
    },
    {
      "name": "__pWebViewPluginElement.injectScript",
      "params": [],
      "calls": [
        "ret.charAt",
        "ret.substr",
        "ret.toString",
        "script.replace",
        "this._plugin_object.callMethod",
        "this._safeStringify.call"
      ]
    },
    {
      "name": "__pWebViewPluginElement.injectScriptAndReturnPromise",
      "params": [],
      "calls": [
        "script.replace",
        "this._plugin_object.callMethodAsync",
        "this._safeStringify.call"
      ]
    },
    {
      "name": "__pWebViewPluginElement.injectScriptAsync",
      "params": [],
      "calls": [
        "callbacklist.find",
        "callbacklist.push",
        "nexacro._random",
        "script.replace",
        "this._plugin_object.callMethod",
        "this._safeStringify.call"
      ]
    },
    {
      "name": "__pWebViewPluginElement._setSharedVariablesToCookie",
      "params": [
        "url"
      ],
      "calls": [
        "nexacro._getCookieVariables",
        "nexacro._setSharedVariablesToCookie",
        "url.indexOf"
      ]
    },
    {
      "name": "__pWebViewPluginElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "events.get_id",
        "events.get_item",
        "nexacro.PluginObject",
        "nexacro.__appendElementHandle",
        "nexacro.__createPluginElementHandle",
        "nexacro.__createdPluginElementHandle",
        "nexacro.__getPluginElementHandleObject",
        "nexacro.__setElementHandleColorObject",
        "nexacro.__setElementHandleEnable",
        "nexacro.__setElementHandleFontObject",
        "nexacro.__setElementHandleVisible",
        "nexacro.__setPluginElementHandleAttribute",
        "nexacro.__setPluginElementHandlePluginName",
        "nexacro.__setPluginElementHandlePopupstyle",
        "nexacro.__setPluginElementHandleWindowed",
        "nexacro._plugin.__createWebViewPluginElementHandle",
        "nexacro._plugin.__createdWebViewPluginElementHandle",
        "owner_elem._getRootWindowHandle",
        "params.get_id",
        "params.get_item",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this.addEventHandler",
        "this.initEvent",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "nexacro._VideoPlayerPluginElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement.initEvent",
      "params": [],
      "calls": [
        "nexacro._observeWrapperEvent"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._on_plugin_event",
      "params": [
        "evt_id",
        "arg0",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "arg6",
        "arg8",
        "arg9"
      ],
      "calls": [
        "Math.floor",
        "comp._on_currenttimechanged",
        "comp._on_error",
        "comp._on_statuschanged",
        "erroritem.destroy",
        "erroritem.getProperty",
        "getitem.destroy",
        "getitem.getProperty",
        "getpro.destroy",
        "getpro.getProperty",
        "listener._fireEvent",
        "mediaobj.destroy",
        "mediaobj.getProperty",
        "nexacro.PluginObject",
        "nexacro.__getHResultFromWin32",
        "nexacro._isNull",
        "this._plugin_object.getProperty"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoUrl",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "comp._on_error",
        "object.setProperty",
        "source.lastIndexOf",
        "this._getPluginObject",
        "this._getType"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._getType",
      "params": [
        "file_type"
      ],
      "calls": []
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoEnable",
      "params": [
        "name",
        "v"
      ],
      "calls": []
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoShowControlBar",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "object.setProperty",
        "this._getPluginObject"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoCurrentTime",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "controls.destroy",
        "controls.setProperty",
        "object.getProperty",
        "this._getPluginObject"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoLoop",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "getpro.callMethod",
        "getpro.destroy",
        "object.getProperty",
        "this._getPluginObject"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoAutoPlay",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "getpro.destroy",
        "getpro.setProperty",
        "object.getProperty",
        "this._getPluginObject"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoVolume",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "getpro.destroy",
        "getpro.setProperty",
        "object.getProperty",
        "this._getPluginObject"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideoMute",
      "params": [
        "name",
        "v"
      ],
      "calls": [
        "object.getProperty",
        "settings.destroy",
        "settings.setProperty",
        "this._getPluginObject"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._setVideo360VRMode",
      "params": [
        "name",
        "v"
      ],
      "calls": []
    },
    {
      "name": "__pVideoPlayerPluginElement._play",
      "params": [],
      "calls": [
        "controls.callMethod",
        "controls.destroy",
        "object.getProperty",
        "this._getPluginObject"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._pause",
      "params": [],
      "calls": [
        "controls.callMethod",
        "controls.destroy",
        "object.getProperty",
        "this._getPluginObject"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._rewind",
      "params": [],
      "calls": [
        "controls.callMethod",
        "controls.destroy",
        "object.getProperty",
        "this._getPluginObject"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement._stop",
      "params": [],
      "calls": [
        "controls.callMethod",
        "controls.destroy",
        "object.getProperty",
        "this._getPluginObject"
      ]
    },
    {
      "name": "__pVideoPlayerPluginElement.destroy",
      "params": [],
      "calls": [
        "object.callMethod",
        "this._getPluginObject"
      ]
    },
    {
      "name": "nexacro._GoogleMapPluginElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement.destroy",
      "params": [],
      "calls": [
        "nexacro.PluginElement.prototype.destroy.call"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement._setLoad",
      "params": [
        "params"
      ],
      "calls": [
        "this.callMethod"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement._setDestroy",
      "params": [
        "params"
      ],
      "calls": [
        "this.callMethod"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement._getAddress",
      "params": [
        "params"
      ],
      "calls": [
        "this.callMethod"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement._getCoordinates",
      "params": [
        "params"
      ],
      "calls": [
        "this.callMethod"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement._setRemove",
      "params": [
        "params"
      ],
      "calls": [
        "this.callMethod"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement._setMarker",
      "params": [
        "params"
      ],
      "calls": [
        "this.callMethod"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement._setPolyline",
      "params": [
        "params"
      ],
      "calls": [
        "this.callMethod"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement._setPolygon",
      "params": [
        "params"
      ],
      "calls": [
        "this.callMethod"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement._setCircle",
      "params": [
        "params"
      ],
      "calls": [
        "this.callMethod"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement.initEvent",
      "params": [],
      "calls": [
        "nexacro._observeWrapperEvent"
      ]
    },
    {
      "name": "__pGoogleMapPluginElement._on_plugin_event",
      "params": [
        "evt_id",
        "args"
      ],
      "calls": [
        "comp.on_centerchanged_handler",
        "comp.on_click_handler",
        "comp.on_drag_handler",
        "comp.on_error_handler",
        "comp.on_load_handler",
        "comp.on_mapdrag_handler",
        "comp.on_mapdragend_handler",
        "comp.on_mapdragstart_handler",
        "comp.on_recvsuccess_handler",
        "nexacro._executeGlobalEvalStr"
      ]
    },
    {
      "name": "nexacro.CanvasElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "_pCanvasElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.FontObject",
        "nexacro.__appendElementHandle",
        "nexacro.__createCanvasElementHandle",
        "nexacro.__setCanvasElementHandleFontObject",
        "nexacro.__setElementHandleVisible",
        "owner_elem._getRootWindowHandle",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pCanvasElement.destroy",
      "params": [],
      "calls": [
        "nexacro.__destroyElementHandle"
      ]
    },
    {
      "name": "_pCanvasElement.createPattern",
      "params": [
        "imagesource",
        "repeat_opt",
        "size"
      ],
      "calls": [
        "imgObj.set_src",
        "nexacro.Image",
        "nexacro._CanvasFillPattern",
        "nexacro.__toDataURLCanvasElementHandle",
        "nexacro._getImageObject"
      ]
    },
    {
      "name": "_pCanvasElement.createLinearGradient",
      "params": [
        "aX0",
        "aY0",
        "aX1",
        "aY1"
      ],
      "calls": [
        "nexacro._CanvasGradient"
      ]
    },
    {
      "name": "_pCanvasElement.createRadialGradient",
      "params": [
        "aX0",
        "aY0",
        "aR0",
        "aX1",
        "aY1",
        "aR1"
      ],
      "calls": [
        "nexacro._CanvasGradient"
      ]
    },
    {
      "name": "_pCanvasElement.setElementFillStyle",
      "params": [
        "fillstyle"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleFillColor",
        "nexacro.__setCanvasFillGradation",
        "nexacro.__setCanvasFillPattern"
      ]
    },
    {
      "name": "_pCanvasElement.setElementFont",
      "params": [
        "font"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleFontObject"
      ]
    },
    {
      "name": "_pCanvasElement.setElementGlobalAlpha",
      "params": [
        "alpha"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleGlobalAlpha"
      ]
    },
    {
      "name": "_pCanvasElement.setElementGlobalCompositeOperation",
      "params": [
        "operation"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleGlobalCompositoperation"
      ]
    },
    {
      "name": "_pCanvasElement.setElementLineStyle",
      "params": [
        "linetype"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleLineStyle"
      ]
    },
    {
      "name": "_pCanvasElement.setElementLineCap",
      "params": [
        "captype"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleLineCap"
      ]
    },
    {
      "name": "_pCanvasElement.setElementLineJoin",
      "params": [
        "jointype"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleLineJoin"
      ]
    },
    {
      "name": "_pCanvasElement.setElementLineWidth",
      "params": [
        "size"
      ],
      "calls": [
        "Math.round",
        "nexacro.__setCanvasElementHandleLineWidth"
      ]
    },
    {
      "name": "_pCanvasElement.setElementMiterLimit",
      "params": [
        "size"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleMiterLimit"
      ]
    },
    {
      "name": "_pCanvasElement.setElementShadowBlur",
      "params": [
        "fact"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleShadowBlur"
      ]
    },
    {
      "name": "_pCanvasElement.setElementShadowColor",
      "params": [
        "color"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleShadowColor",
        "nexacro._getWebColorFromXreColor"
      ]
    },
    {
      "name": "_pCanvasElement.setElementShadowOffsetX",
      "params": [
        "sx"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleShadowOffsetx"
      ]
    },
    {
      "name": "_pCanvasElement.setElementShadowOffsetY",
      "params": [
        "sy"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleShadowOffsety"
      ]
    },
    {
      "name": "_pCanvasElement.setElementStrokeStyle",
      "params": [
        "color"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleStrokeColor"
      ]
    },
    {
      "name": "_pCanvasElement.setElementTextAlign",
      "params": [
        "textalign"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleTextAlign"
      ]
    },
    {
      "name": "_pCanvasElement.setElementTextBaseline",
      "params": [
        "basealign"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleTextBaseline"
      ]
    },
    {
      "name": "_pCanvasElement.arc",
      "params": [
        "x",
        "y",
        "r",
        "start_rad",
        "end_rad",
        "counterclockwise"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleArcPath"
      ]
    },
    {
      "name": "_pCanvasElement.arcTo",
      "params": [
        "x",
        "y",
        "x2",
        "y2",
        "r"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleArcToPath"
      ]
    },
    {
      "name": "_pCanvasElement.beginPath",
      "params": [],
      "calls": [
        "nexacro.__plotCanvasElementHandleBeginPath"
      ]
    },
    {
      "name": "_pCanvasElement.bezierCurveTo",
      "params": [
        "p1x",
        "p1y",
        "p2x",
        "p2y",
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleBezierCurveToPath"
      ]
    },
    {
      "name": "_pCanvasElement.clearRect",
      "params": [
        "x",
        "y",
        "dx",
        "dy"
      ],
      "calls": [
        "nexacro.__clearCanvasElementHandleRect"
      ]
    },
    {
      "name": "_pCanvasElement.clip",
      "params": [],
      "calls": [
        "nexacro.__clipCanvasElementHandle"
      ]
    },
    {
      "name": "_pCanvasElement.closePath",
      "params": [],
      "calls": [
        "nexacro.__plotCanvasElementHandleClosePath"
      ]
    },
    {
      "name": "_pCanvasElement.createImageData",
      "params": [
        "iWidth",
        "iHeight"
      ],
      "calls": [
        "nexacro.__createCanvasElementHandleImageData"
      ]
    },
    {
      "name": "_pCanvasElement.drawImage",
      "params": [
        "_image_handle",
        "x",
        "y",
        "imgwidth",
        "imgheight"
      ],
      "calls": [
        "absoluteUrl.substring",
        "nexacro.__drawCanvasElementHandleImage",
        "nexacro._getImageLocation",
        "nexacro._isAbsolutePath"
      ]
    },
    {
      "name": "_pCanvasElement.fill",
      "params": [],
      "calls": [
        "nexacro.__fillCanvasElementHandlePath"
      ]
    },
    {
      "name": "_pCanvasElement.fillRect",
      "params": [
        "x",
        "y",
        "dx",
        "dy"
      ],
      "calls": [
        "nexacro.__fillCanvasElementHandleRect"
      ]
    },
    {
      "name": "_pCanvasElement.fillText",
      "params": [
        "text",
        "x",
        "y",
        "maxwidth"
      ],
      "calls": [
        "nexacro.__fillCanvasElementHandleText",
        "nexacro.__setCanvasElementHandleFillColor",
        "nexacro.__setCanvasElementHandleFontObject",
        "nexacro._getWebColorFromXreColor"
      ]
    },
    {
      "name": "_pCanvasElement.getImageData",
      "params": [
        "sx",
        "sy",
        "width",
        "height"
      ],
      "calls": [
        "nexacro.__getCanvasElementHandleImageData"
      ]
    },
    {
      "name": "_pCanvasElement.isPointInPath",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__isPointInCanvasElementHandlePath"
      ]
    },
    {
      "name": "_pCanvasElement.lineTo",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleLineToPath"
      ]
    },
    {
      "name": "_pCanvasElement.moveTo",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleMoveToPath"
      ]
    },
    {
      "name": "_pCanvasElement.putImageData",
      "params": [
        "_image_handle",
        "sx",
        "sy",
        "ix",
        "iy",
        "iwidth",
        "iheight"
      ],
      "calls": [
        "nexacro.__putCanvasElementHandleImageData"
      ]
    },
    {
      "name": "_pCanvasElement.quadraticCurveTo",
      "params": [
        "cp1x",
        "cp1y",
        "cp2x",
        "cp2y"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleQuadraticCurveToPath"
      ]
    },
    {
      "name": "_pCanvasElement.rect",
      "params": [
        "x",
        "y",
        "dx",
        "dy"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleRectPath"
      ]
    },
    {
      "name": "_pCanvasElement.rotate",
      "params": [
        "angle"
      ],
      "calls": [
        "nexacro.__rotateCanvasElementHandle"
      ]
    },
    {
      "name": "_pCanvasElement.rotate2",
      "params": [
        "radian"
      ],
      "calls": [
        "nexacro.__rotateCanvasElementHandle"
      ]
    },
    {
      "name": "_pCanvasElement.scale",
      "params": [
        "dx",
        "dy"
      ],
      "calls": [
        "nexacro.__scaleCanvasElementHandle"
      ]
    },
    {
      "name": "_pCanvasElement.setTransform",
      "params": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f"
      ],
      "calls": [
        "nexacro.__setCanvasElementHandleTransform"
      ]
    },
    {
      "name": "_pCanvasElement.stroke",
      "params": [],
      "calls": [
        "nexacro.__strokeCanvasElementHandlePath"
      ]
    },
    {
      "name": "_pCanvasElement.strokeRect",
      "params": [
        "x",
        "y",
        "dx",
        "dy"
      ],
      "calls": [
        "nexacro.__strokeCanvasElementHandleRect"
      ]
    },
    {
      "name": "_pCanvasElement.strokeText",
      "params": [
        "text",
        "tx",
        "ty",
        "maxwidth"
      ],
      "calls": [
        "nexacro.__strokeCanvasElementHandleText"
      ]
    },
    {
      "name": "_pCanvasElement.transform",
      "params": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f"
      ],
      "calls": [
        "nexacro.__transformCanvasElementHandle"
      ]
    },
    {
      "name": "_pCanvasElement.translate",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.__translateCanvasElementHandle"
      ]
    },
    {
      "name": "_pCanvasElement.arc2",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg",
        "counterclockwise"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleArcPath"
      ]
    },
    {
      "name": "_pCanvasElement.circle",
      "params": [
        "x",
        "y",
        "r"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleArcPath"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeArc",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg",
        "counterclockwise"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__strokeCanvasElementHandlePath",
        "this.arc"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeArc2",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg",
        "counterclockwise"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__strokeCanvasElementHandlePath",
        "this.arc2"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeCircle",
      "params": [
        "x",
        "y",
        "r"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleArcPath",
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__strokeCanvasElementHandlePath"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeHalfRect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__strokeCanvasElementHandlePath",
        "this.halfRect"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeLine",
      "params": [
        "x1",
        "y1",
        "x2",
        "y2"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleLineToPath",
        "nexacro.__plotCanvasElementHandleMoveToPath",
        "this.drawStroke"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeVLine",
      "params": [
        "x",
        "y1",
        "y2"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleLineToPath",
        "nexacro.__plotCanvasElementHandleMoveToPath",
        "this.drawStroke"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeHLine",
      "params": [
        "y",
        "x1",
        "x2"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleLineToPath",
        "nexacro.__plotCanvasElementHandleMoveToPath",
        "this.drawStroke"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeInsetArc",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg",
        "counterclockwise"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleArcPath",
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__strokeCanvasElementHandlePath"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeInsetCircle",
      "params": [
        "x",
        "y",
        "r"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleArcPath",
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__strokeCanvasElementHandlePath"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeInsetRect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__strokeCanvasElementHandlePath",
        "this.insetRect"
      ]
    },
    {
      "name": "_pCanvasElement.drawStrokeRect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__plotCanvasElementHandleRectPath",
        "nexacro.__strokeCanvasElementHandlePath"
      ]
    },
    {
      "name": "_pCanvasElement.drawFillRect",
      "params": [
        "x",
        "y",
        "dx",
        "dy"
      ],
      "calls": [
        "nexacro.__fillCanvasElementHandlePath",
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__plotCanvasElementHandleRectPath"
      ]
    },
    {
      "name": "_pCanvasElement.drawFillText",
      "params": [
        "text",
        "x",
        "y",
        "maxwidth"
      ],
      "calls": [
        "nexacro.__fillCanvasElementHandleText",
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__setCanvasElementHandleFillColor",
        "nexacro.__setCanvasElementHandleFontObject",
        "nexacro.__setCanvasElementHandleTextBaseline",
        "nexacro._getWebColorFromXreColor"
      ]
    },
    {
      "name": "_pCanvasElement.endDraw",
      "params": [],
      "calls": [
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__plotCanvasElementHandleClosePath"
      ]
    },
    {
      "name": "_pCanvasElement.drawFill",
      "params": [],
      "calls": [
        "nexacro.__fillCanvasElementHandlePath",
        "nexacro.__plotCanvasElementHandleBeginPath"
      ]
    },
    {
      "name": "_pCanvasElement.drawStroke",
      "params": [],
      "calls": [
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__strokeCanvasElementHandlePath"
      ]
    },
    {
      "name": "_pCanvasElement.drawFillArc",
      "params": [
        "x",
        "y",
        "r",
        "start_rad",
        "end_rad",
        "counterclockwise"
      ],
      "calls": [
        "nexacro.__fillCanvasElementHandlePath",
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__plotCanvasElementHandleClosePath",
        "this.arc"
      ]
    },
    {
      "name": "_pCanvasElement.drawFillArc2",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg",
        "counterclockwise"
      ],
      "calls": [
        "nexacro.__fillCanvasElementHandlePath",
        "nexacro.__plotCanvasElementHandleBeginPath",
        "nexacro.__plotCanvasElementHandleClosePath",
        "this.arc2"
      ]
    },
    {
      "name": "_pCanvasElement.drawFillCircle",
      "params": [
        "x",
        "y",
        "r"
      ],
      "calls": [
        "nexacro.__fillCanvasElementHandlePath",
        "nexacro.__plotCanvasElementHandleArcPath",
        "nexacro.__plotCanvasElementHandleBeginPath"
      ]
    },
    {
      "name": "_pCanvasElement.halfRect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleLineToPath",
        "nexacro.__plotCanvasElementHandleMoveToPath"
      ]
    },
    {
      "name": "_pCanvasElement.hline",
      "params": [
        "y",
        "x1",
        "x2"
      ],
      "calls": [
        "this.lineTo",
        "this.moveTo"
      ]
    },
    {
      "name": "_pCanvasElement.vline",
      "params": [
        "x",
        "y1",
        "y2"
      ],
      "calls": [
        "this.lineTo",
        "this.moveTo"
      ]
    },
    {
      "name": "_pCanvasElement.insetRect",
      "params": [
        "x",
        "y",
        "w",
        "h"
      ],
      "calls": [
        "nexacro.__plotCanvasElementHandleClosePath",
        "nexacro.__plotCanvasElementHandleLineToPath",
        "nexacro.__plotCanvasElementHandleMoveToPath"
      ]
    },
    {
      "name": "_pCanvasElement.measureText",
      "params": [
        "text",
        "font"
      ],
      "calls": [
        "nexacro.FontObject",
        "nexacro._getTextSize"
      ]
    },
    {
      "name": "_pCanvasElement.save",
      "params": [],
      "calls": [
        "nexacro.__saveCanvasElementHandle"
      ]
    },
    {
      "name": "_pCanvasElement.restore",
      "params": [],
      "calls": [
        "nexacro.__restoreCanvasElementHandle"
      ]
    },
    {
      "name": "_pCanvasElement.drawBorder",
      "params": [
        "x",
        "y",
        "width",
        "height",
        "border",
        "bordertype"
      ],
      "calls": [
        "border.bottom._isValid",
        "border.left._isValid",
        "border.right._isValid",
        "border.top._isValid",
        "nexacro.Style_color",
        "this._setLineStyle",
        "this.drawStrokeInsetRect",
        "this.lineTo",
        "this.moveTo",
        "this.setElementLineWidth",
        "this.setElementStrokeStyle",
        "this.stroke"
      ]
    },
    {
      "name": "_pCanvasElement.toDataURL",
      "params": [
        "imgType",
        "imgOption"
      ],
      "calls": [
        "imgObj.set_src",
        "nexacro.Image",
        "nexacro.__toDataURLCanvasElementHandle"
      ]
    },
    {
      "name": "_pCanvasElement.drawArc",
      "params": [
        "x",
        "y",
        "r",
        "start_deg",
        "end_deg",
        "bClockwise",
        "bNormal"
      ],
      "calls": []
    },
    {
      "name": "_pCanvasElement._setLineStyle",
      "params": [
        "line"
      ],
      "calls": [
        "line._isValid",
        "this.setElementLineWidth",
        "this.setElementStrokeStyle"
      ]
    },
    {
      "name": "_pCanvasElement._setPenStyle",
      "params": [
        "pen"
      ],
      "calls": [
        "pen._isValid",
        "this.setElementLineWidth",
        "this.setElementStrokeStyle"
      ]
    },
    {
      "name": "_pCanvasElement._moveCanvas",
      "params": [
        "left",
        "top",
        "width",
        "height"
      ],
      "calls": [
        "nexacro.__setElementHandlePosition",
        "nexacro.__setElementHandleSize",
        "this._getRTLPositionLeft"
      ]
    },
    {
      "name": "_pCanvasElement._getElementScreenXY",
      "params": [],
      "calls": [
        "nexacro._getElementPositionInFrame"
      ]
    },
    {
      "name": "nexacro._CanvasFillPattern",
      "params": [],
      "calls": []
    },
    {
      "name": "__pCanvasFillPattern.onloadcallback",
      "params": [
        "imageurl",
        "width",
        "height",
        "handle",
        "errstatus",
        "temp",
        "fireerrorcode",
        "returncode",
        "path",
        "locationuri"
      ],
      "calls": [
        "this.control.call"
      ]
    },
    {
      "name": "__pCanvasFillPattern.clear",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._CanvasGradient",
      "params": [
        "type"
      ],
      "calls": []
    },
    {
      "name": "__pCanvasGradient.addColorStop",
      "params": [
        "aOffset",
        "aColor"
      ],
      "calls": [
        "nexacro._getWebColorFromXreColor",
        "this.colors.push"
      ]
    },
    {
      "name": "nexacro.GridScrollableControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro._ContainerElement"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createControlElementHandle",
        "nexacro.__setAttachedControlUniqueID",
        "nexacro.__setElementHandleOpacity",
        "nexacro.__setElementHittestValue",
        "owner_elem._getRootWindowHandle",
        "this._client_elem.create",
        "this._refreshControl",
        "this._setControlBackground",
        "this._setControlBorder",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._on_destroy",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridScrollableControlElement.clearContents",
      "params": [],
      "calls": [
        "this._client_elem.clearContents"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.getContainerElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridScrollableControlElement.setVertScrollElements",
      "params": [
        "elems"
      ],
      "calls": []
    },
    {
      "name": "_pGridScrollableControlElement.setHorzScrollElements",
      "params": [
        "elems"
      ],
      "calls": []
    },
    {
      "name": "_pGridScrollableControlElement._setContainerVScrollPos",
      "params": [
        "pos"
      ],
      "calls": [
        "elem.setElementVScrollPos",
        "nexacro._isArray",
        "vert_elems.setElementVScrollPos"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._setContainerHScrollPos",
      "params": [
        "pos"
      ],
      "calls": [
        "elem.setElementHScrollPos",
        "horz_elems.setElementHScrollPos",
        "nexacro._isArray"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._setContainerMaxHeight",
      "params": [
        "height"
      ],
      "calls": [
        "elem._setContainerMaxHeight",
        "nexacro._isArray",
        "vert_elems._setContainerMaxHeight"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._setContainerMaxWidth",
      "params": [
        "width"
      ],
      "calls": [
        "elem._setContainerMaxWidth",
        "horz_elems._setContainerMaxWidth",
        "nexacro._isArray"
      ]
    },
    {
      "name": "_pGridScrollableControlElement._on_updateClientRect",
      "params": [],
      "calls": [
        "h_element._calculateClientWidth",
        "h_element._getContainerMaxWidth",
        "nexacro._floor",
        "nexacro._isArray",
        "this._isRtl",
        "this.setElementHScrollPos",
        "this.setElementVScrollPos",
        "v_element._calculateClientHeight",
        "v_element._getContainerMaxHeight"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.appendChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child_elem._appendToContainer",
        "child_elem._destroyElementHandle",
        "child_elem._getRootWindowHandle",
        "child_elem.create",
        "this._client_elem._getRootWindowHandle",
        "this._getWindow"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.removeChildElement",
      "params": [
        "child_elem"
      ],
      "calls": [
        "child_elem._removeFromContainer"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.sendToBackElement",
      "params": [
        "cur_elem"
      ],
      "calls": [
        "this._client_elem.sendToBackElement"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.bringToFrontElement",
      "params": [
        "cur_elem"
      ],
      "calls": [
        "this._client_elem.bringToFrontElement"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.moveToNextElement",
      "params": [
        "cur_elem",
        "target_elem"
      ],
      "calls": [
        "this._client_elem.moveToNextElement"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.moveToPrevElement",
      "params": [
        "cur_elem",
        "target_elem"
      ],
      "calls": [
        "this._client_elem.moveToPrevElement"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.setElementHScrollPos",
      "params": [
        "hpos"
      ],
      "calls": [
        "nexacro._isArray",
        "this._setContainerHScrollPos"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "nexacro._isArray",
        "this._setContainerVScrollPos",
        "v_element._getScrollTop"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.setElementScrollPos",
      "params": [
        "hpos",
        "vpos"
      ],
      "calls": [
        "nexacro._isArray",
        "this._setContainerHScrollPos",
        "this._setContainerVScrollPos",
        "v_element._getScrollTop"
      ]
    },
    {
      "name": "_pGridScrollableControlElement.setElementScrollMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro._isArray",
        "this._client_elem.setElementScrollMaxSize",
        "this._setContainerMaxHeight",
        "this._setContainerMaxWidth",
        "this._updateClientRect"
      ]
    },
    {
      "name": "nexacro.GridBandControlElement",
      "params": [
        "parent_elem",
        "type"
      ],
      "calls": [
        "nexacro._GridBandContainerElement"
      ]
    },
    {
      "name": "_pGridBandControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createControlElementHandle",
        "owner_elem._getRootWindowHandle",
        "this._client_elem.create",
        "this._client_elem_fix.create",
        "this._getElementClassName",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._refreshControl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pGridBandControlElement.destroy",
      "params": [],
      "calls": [
        "nexacro.ControlElement.prototype.destroy.call",
        "this._client_elem_fix.destroy"
      ]
    },
    {
      "name": "_pGridBandControlElement._setFixArea",
      "params": [
        "height"
      ],
      "calls": [
        "nexacro._GridBandContainerElement",
        "this._client_elem_fix.create",
        "this._client_elem_fix.destroy",
        "this._updateClientSize",
        "this.linkedcontrol._getWindow"
      ]
    },
    {
      "name": "_pGridBandControlElement.getContainerElement",
      "params": [
        "is_fixed"
      ],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement._setContainerMaxHeight",
      "params": [
        "height"
      ],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement._resetExtendContainer",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement._calculateClientHeight",
      "params": [
        "change_height"
      ],
      "calls": [
        "border._getBorderHeight",
        "this.linkedcontrol._getCSSStyleValue"
      ]
    },
    {
      "name": "_pGridBandControlElement.setElementBorder",
      "params": [
        "border",
        "bordertype"
      ],
      "calls": [
        "this._client_elem._adjustPos",
        "this._setControlBorder",
        "this._updateClientRect"
      ]
    },
    {
      "name": "_pGridBandControlElement._getContainerMaxHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement._getScrollLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement._getScrollTop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement.setElementScrollMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._client_elem.setElementScrollMaxSize"
      ]
    },
    {
      "name": "_pGridBandControlElement._on_change_clientSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "client_element_fix.setElementSize",
        "nexacro.ControlElement.prototype._on_change_clientSize.call"
      ]
    },
    {
      "name": "_pGridBandControlElement._on_updateClientRect",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._isRtl",
        "this.linkedcontrol._getCSSStyleValue"
      ]
    },
    {
      "name": "_pGridBandControlElement._updateClientSize",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "client_element.setElementPosition",
        "client_element.setElementSize",
        "client_element_fix.setElementPosition",
        "client_element_fix.setElementSize",
        "this._isRtl",
        "this.linkedcontrol._getCSSStyleValue"
      ]
    },
    {
      "name": "_pGridBandControlElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "this._client_elem.setElementVScrollPos"
      ]
    },
    {
      "name": "_pGridBandControlElement._setOnScrollCallbackTarget",
      "params": [
        "target"
      ],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement._getExtendContainerCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridBandControlElement.setElementBorder",
      "params": [
        "border"
      ],
      "calls": [
        "nexacro.ControlElement.prototype.setElementBorder.call",
        "this._client_elem._adjustPos",
        "this._updateClientSize"
      ]
    },
    {
      "name": "nexacro._GridBandContainerElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "__pGridBandContainerElement.destroy",
      "params": [],
      "calls": [
        "nexacro._ContainerElement.prototype.destroy.call"
      ]
    },
    {
      "name": "__pGridBandContainerElement.setElementVScrollPos",
      "params": [
        "vpos"
      ],
      "calls": [
        "nexacro.__setElementHandleVScrollPos",
        "this._grid._callback_onscroll"
      ]
    },
    {
      "name": "__pGridBandContainerElement._adjustPos",
      "params": [],
      "calls": [
        "this.setElementPosition"
      ]
    },
    {
      "name": "__pGridBandContainerElement.setElementPosition",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "nexacro.__clearElementHandlePosition",
        "nexacro.__setElementHandlePosition",
        "this._getRTLPositionLeft",
        "this._isParentRtl"
      ]
    },
    {
      "name": "__pGridBandContainerElement.setElementSize",
      "params": [
        "width",
        "height",
        "update"
      ],
      "calls": [
        "nexacro.__clearElementHandlePosition",
        "nexacro.__clearElementHandleSize",
        "nexacro.__setElementHandlePosition",
        "nexacro.__setElementHandleSize",
        "this._getRTLPositionLeft",
        "this._isParentRtl"
      ]
    },
    {
      "name": "__pGridBandContainerElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._ContainerElement.prototype.create.call",
        "this._adjustPos"
      ]
    },
    {
      "name": "nexacro.GridRowControlElement",
      "params": [
        "parent_elem",
        "left_gap"
      ],
      "calls": [
        "nexacro._ContainerElement"
      ]
    },
    {
      "name": "_pGridRowControlElement.create",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.__appendElementHandle",
        "nexacro.__createControlElementHandle",
        "owner_elem._getRootWindowHandle",
        "this._client_body_element.create",
        "this._client_left_element.create",
        "this._client_right_element.create",
        "this._getElementClassName",
        "this._getRTLPositionLeft",
        "this._isParentRtl",
        "this._refreshControl",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pGridRowControlElement._on_destroy",
      "params": [],
      "calls": [
        "this._client_body_element.destroy",
        "this._client_left_element.destroy",
        "this._client_right_element.destroy"
      ]
    },
    {
      "name": "_pGridRowControlElement.clearContents",
      "params": [],
      "calls": [
        "this._client_body_element.clearContents",
        "this._client_left_element.clearContents",
        "this._client_right_element.clearContents"
      ]
    },
    {
      "name": "_pGridRowControlElement.getContainerElement",
      "params": [
        "area"
      ],
      "calls": []
    },
    {
      "name": "_pGridRowControlElement.setArea",
      "params": [
        "leftwidth",
        "rightwidth"
      ],
      "calls": [
        "nexacro._ContainerElement",
        "this._client_body_element.setElementPosition",
        "this._client_body_element.setElementSize",
        "this._client_left_element.setElementPosition",
        "this._client_left_element.setElementSize",
        "this._client_right_element.setElementPosition",
        "this._client_right_element.setElementSize"
      ]
    },
    {
      "name": "_pGridRowControlElement._updateClientRect",
      "params": [
        "update"
      ],
      "calls": [
        "this._on_change_clientPos",
        "this._on_change_clientSize",
        "this._on_updateClientRect",
        "this._setContainerMaxWidth",
        "this.setArea"
      ]
    },
    {
      "name": "_pGridRowControlElement._setContainerMaxWidth",
      "params": [
        "width"
      ],
      "calls": [
        "this._client_body_element.setElementScrollMaxSize"
      ]
    },
    {
      "name": "_pGridRowControlElement._calculateClientWidth",
      "params": [
        "parent_client_width"
      ],
      "calls": []
    },
    {
      "name": "_pGridRowControlElement._getContainerMaxWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGridRowControlElement.setElementHScrollPos",
      "params": [
        "hpos"
      ],
      "calls": [
        "this._client_body_element._setElementHScrollPos"
      ]
    },
    {
      "name": "nexacro.CellControlElement",
      "params": [
        "parent_elem",
        "left_gap"
      ],
      "calls": [
        "nexacro.ControlElement.call"
      ]
    },
    {
      "name": "_pCellControlElement._refreshBorderNone",
      "params": [],
      "calls": [
        "nexacro.__setElementHandleBorderBottomNone",
        "nexacro.__setElementHandleBorderLeftNone",
        "nexacro.__setElementHandleBorderRightNone",
        "nexacro.__setElementHandleBorderTopNone",
        "this._edge_elem.setElementSize",
        "this._get_rtl",
        "this._updateClientRect",
        "this._updateInnerSize",
        "this.setElementBorder"
      ]
    }
  ],
  "ExportObject.js": [
    {
      "name": "nexacro.ExcelExportProgressEventInfo",
      "params": [
        "obj",
        "id",
        "itemindex",
        "itemtype",
        "recordindex",
        "errorobj"
      ],
      "calls": []
    },
    {
      "name": "nexacro.ExcelExportEventInfo",
      "params": [
        "obj",
        "id",
        "url",
        "errorobj"
      ],
      "calls": []
    },
    {
      "name": "nexacro.ExcelExportErrorEventInfo",
      "params": [
        "obj",
        "id",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode"
      ],
      "calls": []
    },
    {
      "name": "nexacro.ExcelExportObject",
      "params": [
        "name",
        "parent"
      ],
      "calls": [
        "app.getActiveForm",
        "currwin.getCurrentFocusPaths",
        "nexacro.EventListener",
        "nexacro._create_hidden_frame",
        "nexacro.getApplication"
      ]
    },
    {
      "name": "_pExcelExport.set_templatefilename",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_commdataformat",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pExcelExport.set_commandversion",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_commcompress",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pExcelExport.set_exporturl",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._getServiceLocation",
        "this._p_parent._getFormBaseUrl"
      ]
    },
    {
      "name": "_pExcelExport.set_exporttype",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_separator",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isInt",
        "pattern16.test",
        "v.substr",
        "v.toString"
      ]
    },
    {
      "name": "_pExcelExport.set_quotechar",
      "params": [
        "v"
      ],
      "calls": [
        "quotechar_enum.indexOf"
      ]
    },
    {
      "name": "_pExcelExport.set_activepagename",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_exportactivemode",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_exporteventtype",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_exportopenmode",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_exportfilename",
      "params": [
        "v"
      ],
      "calls": [
        "v.match"
      ]
    },
    {
      "name": "_pExcelExport.set_exportfilepath",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_exportmessagealert",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_exportuitype",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_exportmessageready",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_exportmessageprocess",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_exportmessagecomplete",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_transferrowcount",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pExcelExport.set_exportfilepassword",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_exportwordwrap",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pExcelExport.set_filefilter",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.set_filefilterindex",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.addExportItem",
      "params": [
        "type",
        "item/*",
        "range*/"
      ],
      "calls": [
        "eItem._setEventHandler",
        "eItem.set_acceptstyle",
        "eItem.set_exceptstyle",
        "eItem.set_exporthead",
        "eItem.set_exportimage",
        "eItem.set_exportmerge",
        "eItem.set_exportselect",
        "eItem.set_exportsize",
        "eItem.set_exportvalue",
        "eItem.set_range",
        "eItem.set_source",
        "eItem.set_type",
        "eItem.set_valuetypebandid",
        "eItem.set_valuetypecellindex",
        "eItem.source._isRtl",
        "nexacro.ExportItem",
        "nexacro._isArray",
        "this._getItemType",
        "this._grids.push"
      ]
    },
    {
      "name": "_pExcelExport.clear",
      "params": [],
      "calls": [
        "item._clear",
        "this._grids.pop"
      ]
    },
    {
      "name": "_pExcelExport.clearExportItems",
      "params": [
        "type"
      ],
      "calls": [
        "item._clear",
        "this._grids.pop"
      ]
    },
    {
      "name": "_pExcelExport.count",
      "params": [],
      "calls": []
    },
    {
      "name": "_pExcelExport.countExportItems",
      "params": [
        "type"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.delExportItem",
      "params": [
        "type",
        "index"
      ],
      "calls": [
        "this._grids.splice"
      ]
    },
    {
      "name": "_pExcelExport.getExportItem",
      "params": [
        "type",
        "index"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.setExportItem",
      "params": [
        "type",
        "index",
        "item"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport.exportItems",
      "params": [
        "type"
      ],
      "calls": [
        "nexacro.alert"
      ]
    },
    {
      "name": "_pExcelExport.exportDataEx",
      "params": [
        "argsParam",
        "argsDsParam",
        "bFileDownload"
      ],
      "calls": [
        "this.exportData"
      ]
    },
    {
      "name": "_pExcelExport.exportData",
      "params": [
        "argsParam",
        "argsDsParam",
        "nOrgValueType",
        "bFileDownload"
      ],
      "calls": [
        "_p_source._getGridRowCount",
        "argsParam.split",
        "nOrgValueType.toLowerCase",
        "nexacro._toBoolean",
        "nexacro._toInt",
        "nexacro.alert",
        "this.count",
        "userDatas.join",
        "userDatas.splice"
      ]
    },
    {
      "name": "_pExcelExport.destroy",
      "params": [],
      "calls": [
        "exportbar.destroy",
        "item._clear",
        "nexacro._EventSinkObject.prototype.destroy.call",
        "this._grids.pop",
        "this._p_parent.removeChild"
      ]
    },
    {
      "name": "_pExcelExport.on_fire_onprogress",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "event._fireEvent"
      ]
    },
    {
      "name": "_pExcelExport.on_fire_onsuccess",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "event._fireEvent"
      ]
    },
    {
      "name": "_pExcelExport.on_fire_onerror",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "event._fireEvent"
      ]
    },
    {
      "name": "_pExcelExport.on_notify_onprogress",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_onprogress"
      ]
    },
    {
      "name": "_pExcelExport.on_notify_onsuccess",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pExcelExport.on_notify_onerror",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pExcelExport.on_complete_download",
      "params": [
        "status",
        "data",
        "url",
        "errcode",
        "httpcode",
        "errmsg"
      ],
      "calls": [
        "nexacro._execShell"
      ]
    },
    {
      "name": "_pExcelExport._getItemType",
      "params": [
        "item"
      ],
      "calls": []
    },
    {
      "name": "_pExcelExport._getProcessStr",
      "params": [
        "item",
        "itemrecord",
        "totalrecord"
      ],
      "calls": [
        "str.replace",
        "this._p_exportmessageprocess.replace"
      ]
    },
    {
      "name": "_pExcelExport._getForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pExcelExport._getExportBar",
      "params": [
        "uiType"
      ],
      "calls": [
        "form.addChild",
        "nexacro.ExportProgress",
        "obj.createComponent",
        "obj.destroy",
        "obj.on_created",
        "this._getForm"
      ]
    },
    {
      "name": "nexacro.ExportItem",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro._EventSinkObject.call"
      ]
    },
    {
      "name": "_pExportItem._clear",
      "params": [],
      "calls": [
        "this._ds_cell.destroy",
        "this._ds_command.destroy",
        "this._ds_response.destroy",
        "this._ds_style.destroy",
        "this._ds_style2.destroy",
        "this._load_manager.destroy"
      ]
    },
    {
      "name": "_pExportItem.set_acceptstyle",
      "params": [
        "v"
      ],
      "calls": [
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pExportItem.set_exceptstyle",
      "params": [
        "v"
      ],
      "calls": [
        "v.replace"
      ]
    },
    {
      "name": "_pExportItem.set_exporthead",
      "params": [
        "v"
      ],
      "calls": [
        "v.replace"
      ]
    },
    {
      "name": "_pExportItem.set_exportimage",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem.set_exportmerge",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem.set_exportselect",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem.set_exportvalue",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem.set_range",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem.set_source",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem.set_type",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem.set_exportsize",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem.set_valuetypecellindex",
      "params": [
        "cellindex"
      ],
      "calls": [
        "nexacro._isArray"
      ]
    },
    {
      "name": "_pExportItem.set_valuetypebandid",
      "params": [
        "bandid"
      ],
      "calls": [
        "nexacro._isString"
      ]
    },
    {
      "name": "_pExportItem.on_fire_onprogress",
      "params": [
        "obj",
        "itemindex",
        "itemtype",
        "recordindex"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.ExcelExportProgressEventInfo"
      ]
    },
    {
      "name": "_pExportItem.on_fire_onsuccess",
      "params": [
        "obj",
        "referObj",
        "url"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.ExcelExportEventInfo"
      ]
    },
    {
      "name": "_pExportItem.on_fire_onerror",
      "params": [
        "obj",
        "errortype",
        "errormsg",
        "statuscode"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.ExcelExportErrorEventInfo"
      ]
    },
    {
      "name": "_pExportItem._getWindow",
      "params": [],
      "calls": [
        "form._getWindow"
      ]
    },
    {
      "name": "_pExportItem._getWindowHandle",
      "params": [],
      "calls": [
        "form._getWindowHandle"
      ]
    },
    {
      "name": "_pExportItem._getCellStyle",
      "params": [
        "cell",
        "rowIdx",
        "odd",
        "sn",
        "status"
      ],
      "calls": [
        "cell._grid._getCellStyleInfo",
        "cell._query_status_align",
        "cell._query_status_background",
        "cell._query_status_border",
        "cell._query_status_color",
        "cell._query_status_font",
        "cellStyleinfo.indexOf",
        "cellStyleinfo.join",
        "cellStyleinfo.match",
        "cellStyleinfo.replace",
        "this._getGradientValue"
      ]
    },
    {
      "name": "_pExportItem._getCellText",
      "params": [
        "source",
        "rowidx",
        "cellidx",
        "subcellidx"
      ],
      "calls": [
        "cellinfo._getDisplaytype",
        "nexacro._getDisplayTextfromDecorateText",
        "nexacro._isNull",
        "source.getCellText",
        "source.getCellValue",
        "source.getSubCellCount",
        "source.getSubCellText",
        "source.getSubCellValue"
      ]
    },
    {
      "name": "_pExportItem._getCellLocale",
      "params": [
        "cell",
        "rowidx"
      ],
      "calls": [
        "cell._getLocale",
        "locale.replace",
        "locale.toLowerCase",
        "nexacro._getLocale"
      ]
    },
    {
      "name": "_pExportItem._find_styleName",
      "params": [
        "dataset",
        "type",
        "value",
        "count",
        "delimiter"
      ],
      "calls": [
        "String.fromCharCode",
        "dataset.addRow",
        "dataset.getRowCount",
        "dataset.setColumn",
        "val.split",
        "value.toString"
      ]
    },
    {
      "name": "_pExportItem._getFitValue",
      "params": [
        "obj"
      ],
      "calls": [
        "this._fontParseInfo"
      ]
    },
    {
      "name": "_pExportItem._getFitFontValue",
      "params": [
        "fontval"
      ],
      "calls": [
        "font._parseInfo",
        "font.face.replace",
        "nexacro._FontObject",
        "nexacro._convertPxToPt"
      ]
    },
    {
      "name": "_pExportItem._getColortoRGB",
      "params": [
        "color"
      ],
      "calls": [
        "color.indexOf",
        "color.value.split",
        "rgb.indexOf",
        "rgb.substring",
        "style_a.join",
        "style_a.pop",
        "style_a.push",
        "this._getHSLAtoRGB",
        "this._getHexColor",
        "this._getRGBAtoRGB"
      ]
    },
    {
      "name": "_pExportItem._getHSLAtoRGB",
      "params": [
        "color"
      ],
      "calls": [
        "bs.indexOf",
        "bs.substring",
        "color.indexOf",
        "color.split",
        "color.substring",
        "gs.indexOf",
        "gs.substring"
      ]
    },
    {
      "name": "_pExportItem._getRGBAtoRGB",
      "params": [
        "color"
      ],
      "calls": [
        "color.indexOf",
        "color.join",
        "color.split",
        "color.substring",
        "rgb.lastIndexOf",
        "rgb.substring"
      ]
    },
    {
      "name": "_pExportItem._makeforDsStyle",
      "params": [
        "ds_style",
        "align",
        "background",
        "color",
        "font",
        "line",
        "cell_type",
        "row_merge",
        "col_merge"
      ],
      "calls": [
        "String.fromCharCode",
        "line.replace",
        "this._find_styleName"
      ]
    },
    {
      "name": "_pExportItem._checkExpr",
      "params": [
        "obj",
        "cssclass"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem._checkGradation",
      "params": [
        "background"
      ],
      "calls": [
        "background._value.match"
      ]
    },
    {
      "name": "_pExportItem._getHexColor",
      "params": [
        "color"
      ],
      "calls": [
        "color.substr",
        "color.substring",
        "color.toLowerCase"
      ]
    },
    {
      "name": "_pExportItem._getGradationColor",
      "params": [
        "gradation"
      ],
      "calls": [
        "Math.round",
        "gArr.join",
        "gArr.push",
        "gColor.indexOf",
        "gColor.substring",
        "gColor2.substring",
        "this._getHexColor"
      ]
    },
    {
      "name": "_pExportItem._getGradationColor",
      "params": [
        "gColor",
        "gColor2"
      ],
      "calls": [
        "Math.round",
        "gArr.join",
        "gArr.push",
        "gColor.split",
        "gColor2.split",
        "this._getColortoRGB"
      ]
    },
    {
      "name": "_pExportItem._getGradientValue",
      "params": [
        "background"
      ],
      "calls": [
        "bk.gradient._parseInfo",
        "nexacro.BackgroundObject",
        "nexacro.ColorObject",
        "this._getGradationColor"
      ]
    },
    {
      "name": "_pExportItem._getCellBodyStyle",
      "params": [
        "cell",
        "idx"
      ],
      "calls": [
        "background.indexOf",
        "background2.indexOf",
        "cell._getDisplaytype",
        "cell._getVirtualMergeInfo",
        "cell._grid._getTempCell",
        "cell._query_pseudo_gradation",
        "cell._query_status_align",
        "cell._query_status_background",
        "cell._query_status_border",
        "cell._query_status_color",
        "cell._query_status_font",
        "cell_control._getCSSStyleValue",
        "nexacro._nvl",
        "this._checkExpr",
        "this._checkGradation",
        "this._getCellStyle",
        "this._getColortoRGB",
        "this._getFitFontValue",
        "this._getFixedCellType",
        "this._getGradationColor",
        "this._getGradientValue",
        "this._makeforDsStyle",
        "this._modifyFormat"
      ]
    },
    {
      "name": "_pExportItem._getFixedCellType",
      "params": [
        "cell",
        "rowidx"
      ],
      "calls": [
        "String.fromCharCode",
        "cell._getAttrValue",
        "cell._getDisplaytype",
        "cell._getLocale",
        "format.match",
        "nexacro.Locale._makeDateMaskString",
        "nexacro._isNull",
        "this._getCellLocale",
        "this.exportimage.toLowerCase"
      ]
    },
    {
      "name": "_pExportItem._modifyFormat",
      "params": [
        "cell",
        "style1",
        "style2",
        "rowidx",
        "mainCell",
        "virtual_merge_value"
      ],
      "calls": [
        "cell._getAttrValue",
        "cell._getDisplayText",
        "cell._getDisplaytype",
        "format.match",
        "nexacro._encodeXml",
        "nexacro._getDisplayTextfromDecorateText",
        "nexacro._getImageLocation",
        "nexacro._getURIValue",
        "nexacro._isString",
        "text.replace",
        "this._getCellText",
        "this._getForm",
        "this._p_exportimage.toLowerCase"
      ]
    },
    {
      "name": "_pExportItem._getSubCellLine",
      "params": [
        "subCell",
        "defaultColor",
        "linecolor",
        "rsp",
        "csp"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem._makeVirtualLine",
      "params": [
        "str",
        "color",
        "type"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem._makeFormat",
      "params": [
        "grid"
      ],
      "calls": [
        "Math.round",
        "align.split",
        "cell._getDisplayText",
        "cell._getVirtualMergeInfo",
        "grid._checkVirtualMerge",
        "nexacro._encodeXml",
        "nexacro._peekWindowHandleMessageQueuePassing",
        "this._checkGradation",
        "this._getCellBodyStyle",
        "this._getCellStyle",
        "this._getColortoRGB",
        "this._getFitFontValue",
        "this._getFixedCellType",
        "this._getGradationColor",
        "this._getMergeDatas",
        "this._getSubCellLine",
        "this._getWindow",
        "this._makeVirtualLine",
        "this._makeforDsStyle",
        "this._modifyFormat"
      ]
    },
    {
      "name": "_pExportItem._getForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pExportItem._eventExport",
      "params": [
        "exportObj",
        "type",
        "row_index",
        "selectCnt"
      ],
      "calls": [
        "exportObj._getProcessStr",
        "exportbar._set_pos",
        "exportbar._set_text",
        "this.on_fire_onprogress"
      ]
    },
    {
      "name": "_pExportItem._updateBarPos",
      "params": [
        "exportObj",
        "eventtype"
      ],
      "calls": [
        "exportObj._getProcessStr",
        "exportbar._set_pos",
        "exportbar._set_text"
      ]
    },
    {
      "name": "_pExportItem._rollbackSuppressInfo",
      "params": [],
      "calls": [
        "this._tmpSuppressInfos.shift"
      ]
    },
    {
      "name": "_pExportItem._gridSuppressUpdate",
      "params": [
        "grid",
        "rowcount"
      ],
      "calls": [
        "grid._analyzeSuppress",
        "grid._suppressUpdateRow",
        "nexacro._peekWindowHandleMessageQueuePassing",
        "this._getWindow",
        "this._tmpSuppressInfos.push"
      ]
    },
    {
      "name": "_pExportItem._gridExportContinue",
      "params": [
        "exportObj"
      ],
      "calls": [
        "String.fromCharCode",
        "alignCell.split",
        "cell._getAttrValue",
        "cell._getDisplayText_date",
        "cell._getDisplaytype",
        "cell._getSuppress",
        "cell._getVirtualMergeInfo",
        "cell_type.indexOf",
        "ds.addColumn",
        "ds.addRow",
        "ds.setColumn",
        "ds_command.setColumn",
        "ds_style2.addColumn",
        "grid._bodyBand._get_rows",
        "grid._checkVirtualMerge",
        "grid.getCellCount",
        "grid.isSelectedCell",
        "maskeditpostfixtext_table.get",
        "maskeditpostfixtext_table.set",
        "nexacro.Dataset",
        "nexacro._getImageLocation",
        "nexacro._getURIValue",
        "nexacro._isDecimal",
        "nexacro._isNull",
        "nexacro._isNumber",
        "nexacro._nvl",
        "nexacro._peekWindowHandleMessageQueuePassing",
        "nexacro.base32Encode",
        "nexacro.base64Encode",
        "this._checkExpr",
        "this._ds_style2.clearData",
        "this._eventExport",
        "this._find_styleName",
        "this._getCellStyle",
        "this._getCellText",
        "this._getColortoRGB",
        "this._getFitFontValue",
        "this._getFixedCellType",
        "this._getForm",
        "this._getMergeDatas",
        "this._getWindow",
        "this._gridSuppressUpdate",
        "this._makeforDsStyle",
        "this._p_exportimage.toLowerCase",
        "this._rollbackSuppressInfo",
        "this._transaction",
        "this._updateBarPos",
        "val.replace",
        "val.toString"
      ]
    },
    {
      "name": "_pExportItem._onHttpTransactionError",
      "params": [
        "obj",
        "bfireevent",
        "errorobj",
        "errortype",
        "url",
        "returncode",
        "requesturi",
        "locationuri",
        "extramsg"
      ],
      "calls": [
        "nexacro.MakeCommunicationError",
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pExportItem._exportCallback",
      "params": [
        "svcid",
        "errstatus",
        "message"
      ],
      "calls": [
        "application._endCommProgress",
        "excelURL.lastIndexOf",
        "excelURL.substring",
        "exportbar._hide",
        "exportbar._set_pos",
        "exportbar._set_text",
        "exportfilename_.lastIndexOf",
        "exportfilename_.substring",
        "exportfilepath_.charAt",
        "grid.set_treeinitstatus",
        "nexacro._decodeXml",
        "nexacro._downloadExport",
        "nexacro._stopTransaction",
        "nexacro.getApplication",
        "this._ds_response.getColumn",
        "this._gridExportContinue",
        "this._rollbackSuppressInfo",
        "this.on_fire_onerror",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pExportItem._makeMergeDatas",
      "params": [
        "grid",
        "format_body_rowcount",
        "col_len"
      ],
      "calls": [
        "grid._getGridRowCount",
        "include.push",
        "nexacro._peekWindowHandleMessageQueuePassing",
        "this._getWindow"
      ]
    },
    {
      "name": "_pExportItem._getMergeDatas",
      "params": [
        "row",
        "cellidx"
      ],
      "calls": []
    },
    {
      "name": "_pExportItem._gridItemExport",
      "params": [
        "exportObj"
      ],
      "calls": [
        "String.fromCharCode",
        "alignCell.split",
        "cell._getAttrValue",
        "cell._getDisplayText_date",
        "cell._getDisplaytype",
        "cell._getSuppress",
        "cell._getVirtualMergeInfo",
        "cell_type.indexOf",
        "ds.addColumn",
        "ds.addRow",
        "ds.setColumn",
        "ds_command.addColumn",
        "ds_command.addRow",
        "ds_command.clearData",
        "ds_command.setColumn",
        "ds_style.addColumn",
        "ds_style.clearData",
        "exportObj._getExportBar",
        "exportObj._getProcessStr",
        "exportObj.count",
        "exportbar._getCurrentStyleInheritValue",
        "exportbar._set_text",
        "exportbar._show",
        "grid._bodyBand._get_rows",
        "grid._checkVirtualMerge",
        "grid._getGridRowCount",
        "grid._getLocale",
        "grid._hasVirtualMergeCell",
        "grid._treeIndexes.slice",
        "grid._treeStates.slice",
        "grid.getCellCount",
        "grid.isSelectedCell",
        "grid.set_treeinitstatus",
        "locale.replace",
        "maskeditpostfixtext_table.get",
        "maskeditpostfixtext_table.set",
        "nexacro.Dataset",
        "nexacro._flushCommand",
        "nexacro._getImageLocation",
        "nexacro._getLongerStr",
        "nexacro._getTextSize",
        "nexacro._getURIValue",
        "nexacro._isDecimal",
        "nexacro._isNull",
        "nexacro._isNumber",
        "nexacro._nvl",
        "nexacro._peekWindowHandleMessageQueuePassing",
        "nexacro._replaceAll",
        "nexacro.base32Encode",
        "nexacro.base64Encode",
        "textbox._getCurrentStyleInheritValue",
        "textbox._getReferenceAbsoluteFont",
        "this._checkExpr",
        "this._eventExport",
        "this._getCellStyle",
        "this._getCellText",
        "this._getColortoRGB",
        "this._getFitFontValue",
        "this._getFixedCellType",
        "this._getForm",
        "this._getMergeDatas",
        "this._getWindow",
        "this._gridSuppressUpdate",
        "this._makeFormat",
        "this._makeMergeDatas",
        "this._makeforDsStyle",
        "this._p_exportimage.toLowerCase",
        "this._rollbackSuppressInfo",
        "this._transaction",
        "val.replace",
        "val.toString"
      ]
    },
    {
      "name": "_pExportItem._transaction",
      "params": [
        "id",
        "url",
        "inDatasetsParam",
        "outDatasetsParam",
        "argsParam",
        "callbackFn",
        "isAsync",
        "datatype",
        "isCompress"
      ],
      "calls": [
        "nexacro._LoadManager",
        "nexacro._getServiceObject",
        "this._load_manager.loadDataModule"
      ]
    },
    {
      "name": "_pExportItem._stopTransaction",
      "params": [],
      "calls": [
        "nexacro.Form.prototype._stopTransaction.apply"
      ]
    },
    {
      "name": "_pExportItem._getDatasetObject",
      "params": [
        "queryid"
      ],
      "calls": [
        "form._getDatasetObject",
        "nexacro.getApplication"
      ]
    },
    {
      "name": "_pExportItem._removeUrl",
      "params": [
        "v"
      ],
      "calls": [
        "v.indexOf",
        "v.lastIndexOf",
        "v.substring"
      ]
    },
    {
      "name": "nexacro.ExportProgress",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.PopupControl.call"
      ]
    },
    {
      "name": "_pExportProgress.on_apply_custom_pseudo",
      "params": [
        "pseudo"
      ],
      "calls": []
    },
    {
      "name": "_pExportProgress.on_apply_color",
      "params": [
        "color"
      ],
      "calls": [
        "textbox.set_color"
      ]
    },
    {
      "name": "_pExportProgress.on_apply_font",
      "params": [
        "font"
      ],
      "calls": [
        "textbox.set_font"
      ]
    },
    {
      "name": "_pExportProgress.on_apply_align",
      "params": [
        "align"
      ],
      "calls": [
        "text_elem.setElementAlignXY"
      ]
    },
    {
      "name": "_pExportProgress.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.ProgressBar",
        "nexacro.Static",
        "nexacro.getApplication",
        "progressbar._setControl",
        "progressbar.createComponent",
        "textbox._setControl",
        "textbox.createComponent",
        "textbox.set_textAlign",
        "this.getElement"
      ]
    },
    {
      "name": "_pExportProgress.createCommand",
      "params": [],
      "calls": []
    },
    {
      "name": "_pExportProgress.on_created_contents",
      "params": [
        "_window"
      ],
      "calls": [
        "nexacro.PopupControl.prototype.on_created_contents.call",
        "progressbar.on_created",
        "textbox.on_created",
        "this._getWindow"
      ]
    },
    {
      "name": "_pExportProgress.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "progressbar.move",
        "textbox.move",
        "this._text_elem.setElementSize"
      ]
    },
    {
      "name": "_pExportProgress.on_destroy_contents",
      "params": [],
      "calls": [
        "textbox.destroy",
        "this.progressbar.destroy"
      ]
    },
    {
      "name": "_pExportProgress._getWindow",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._getWindow.call"
      ]
    },
    {
      "name": "_pExportProgress.on_fire_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pExportProgress._on_keydown",
      "params": [
        "elem",
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "metakey"
      ],
      "calls": [
        "nexacro._stopTransaction"
      ]
    },
    {
      "name": "_pExportProgress._show",
      "params": [],
      "calls": [
        "Math.round",
        "_window._isContainsComp",
        "_window._setCaptureLock",
        "_window.getClientHeight",
        "_window.getClientWidth",
        "_window.getLeft",
        "_window.getTop",
        "frame.getOffsetHeight",
        "frame.getOffsetWidth",
        "this._getCurrentStylePadding",
        "this._getWindow",
        "this.move",
        "this.set_visible"
      ]
    },
    {
      "name": "_pExportProgress._hide",
      "params": [],
      "calls": [
        "_window._releaseCaptureLock",
        "control_elem.setElementSize",
        "excelexport._getWindow",
        "this._updateClientSize",
        "this.set_visible"
      ]
    },
    {
      "name": "nexacro._getLongerStr",
      "params": [
        "str1",
        "str2",
        "str3"
      ],
      "calls": []
    },
    {
      "name": "_pExportProgress._set_text",
      "params": [
        "v"
      ],
      "calls": [
        "form.set_statustext",
        "this._getForm",
        "this._textbox.set_text"
      ]
    },
    {
      "name": "_pExportProgress._set_pos",
      "params": [
        "v"
      ],
      "calls": [
        "comp.statusbar.progressbar.set_pos",
        "this.progressbar.set_pos"
      ]
    }
  ],
  "FileDialog.js": [
    {
      "name": "nexacro.FileDialogEventInfo",
      "params": [
        "strEventId",
        "strReason",
        "strPath",
        "arrVirtualfiles"
      ],
      "calls": []
    },
    {
      "name": "nexacro.FileDialog",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro._EventSinkObject.call",
        "nexacro._createFileDialogHandle"
      ]
    },
    {
      "name": "_pFileDialog.destroy",
      "params": [],
      "calls": [
        "nexacro._destroyFileDialogHandle"
      ]
    },
    {
      "name": "_pFileDialog.set_accept",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_accept"
      ]
    },
    {
      "name": "_pFileDialog.on_apply_accept",
      "params": [],
      "calls": [
        "nexacro._setFileDialogHandleAccept"
      ]
    },
    {
      "name": "_pFileDialog.set_defaultextension",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_defaultextension"
      ]
    },
    {
      "name": "_pFileDialog.on_apply_defaultextension",
      "params": [],
      "calls": [
        "nexacro._setFileDialogHandleDefaultExtension"
      ]
    },
    {
      "name": "_pFileDialog.set_dialogtype",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileDialog.set_filter",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._isValidPropertyFilter",
        "this.on_apply_filter"
      ]
    },
    {
      "name": "_pFileDialog.on_apply_filter",
      "params": [],
      "calls": [
        "nexacro._setFileDialogHandleFilter"
      ]
    },
    {
      "name": "_pFileDialog.set_filterindex",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_filterindex"
      ]
    },
    {
      "name": "_pFileDialog.on_apply_filterindex",
      "params": [],
      "calls": [
        "nexacro._setFileDialogHandleFilterIndex"
      ]
    },
    {
      "name": "_pFileDialog.open",
      "params": [
        "strTitle",
        "constOpenMode",
        "strInitialPath",
        "strFileName",
        "nDlgWidth",
        "nDlgHeight"
      ],
      "calls": [
        "filter.split",
        "nexacro._openFileDialogHandle",
        "nexacro._setFileDialogHandleFilter"
      ]
    },
    {
      "name": "_pFileDialog.on_close",
      "params": [
        "reason",
        "path",
        "vfiles"
      ],
      "calls": [
        "this.on_fire_onclose"
      ]
    },
    {
      "name": "_pFileDialog._onclose",
      "params": [
        "objData"
      ],
      "calls": [
        "nexacro.VirtualFile",
        "this.on_fire_onclose"
      ]
    },
    {
      "name": "_pFileDialog.on_fire_onclose",
      "params": [
        "reason",
        "path",
        "vfiles"
      ],
      "calls": [
        "nexacro.FileDialogEventInfo",
        "this.onclose._fireEvent"
      ]
    },
    {
      "name": "_pFileDialog._isValidPropertyFilter",
      "params": [
        "strFilter"
      ],
      "calls": [
        "normalize.test",
        "strFilter.split"
      ]
    }
  ],
  "FileDownload.js": [
    {
      "name": "nexacro.FileDownloadEventInfo",
      "params": [
        "obj",
        "id",
        "url",
        "targetfullpath"
      ],
      "calls": []
    },
    {
      "name": "nexacro.FileDownloadErrorEventInfo",
      "params": [
        "obj",
        "id",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri"
      ],
      "calls": [
        "nexacro.ErrorEventInfo.call"
      ]
    },
    {
      "name": "nexacro.FileDownload",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._IconText.call"
      ]
    },
    {
      "name": "_pFileDownload.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._IconText.prototype.on_create_contents.call",
        "nexacro._create_hidden_frame"
      ]
    },
    {
      "name": "_pFileDownload.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro._IconText.prototype.on_destroy_contents.call",
        "nexacro._destroy_hidden_frame"
      ]
    },
    {
      "name": "_pFileDownload._getDlgCode",
      "params": [
        "/*keycode",
        "altKey",
        "ctrlKey",
        "shiftKey*/"
      ],
      "calls": []
    },
    {
      "name": "_pFileDownload._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFileDownload.set_downloadurl",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileDownload.set_downloadfilename",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileDownload.set_filefilter",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileDownload.set_filefilterindex",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileDownload.download",
      "params": [
        "url",
        "targetpath"
      ],
      "calls": [
        "nexacro._download",
        "nexacro._getImageLocation",
        "nexacro._getServiceLocation",
        "nexacro._isPopupWindowApp",
        "nexacro._toString",
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pFileDownload._on_download_onload_android",
      "params": [
        "objData"
      ],
      "calls": [
        "nexacro.MakeCommunicationError",
        "nexacro._onHttpSystemError",
        "this.on_fire_onerror",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pFileDownload._on_download_onload",
      "params": [
        "status",
        "data",
        "url",
        "errcode",
        "httpcode",
        "errmsg",
        "extramsg"
      ],
      "calls": [
        "nexacro.MakeCommunicationError",
        "nexacro._onHttpSystemError",
        "this.on_fire_onerror",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pFileDownload.on_fire_sys_onkeyup",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onkeyup.call",
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pFileDownload.on_fire_onsuccess",
      "params": [
        "url",
        "targetfullpath"
      ],
      "calls": [
        "application._endCommProgress",
        "nexacro.FileDownloadEventInfo",
        "nexacro.getApplication",
        "this.onsuccess._fireEvent"
      ]
    },
    {
      "name": "_pFileDownload.on_fire_onerror",
      "params": [
        "obj",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri"
      ],
      "calls": [
        "application._endCommProgress",
        "nexacro.FileDownloadErrorEventInfo",
        "nexacro.getApplication",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "_pFileDownload.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_onclick.call",
        "this.download"
      ]
    }
  ],
  "FileDownTransfer.js": [
    {
      "name": "nexacro.FileDownTransferEventInfo",
      "params": [
        "obj",
        "id",
        "url",
        "fullpath"
      ],
      "calls": []
    },
    {
      "name": "nexacro.FileDownTransferErrorEventInfo",
      "params": [
        "obj",
        "id",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri"
      ],
      "calls": [
        "nexacro.ErrorEventInfo.call"
      ]
    },
    {
      "name": "nexacro.FileDownTransfer",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "JSON.stringify",
        "nexacro.Collection",
        "nexacro.Device.exec",
        "nexacro.Device.makeID",
        "nexacro._EventSinkObject.call",
        "nexacro._isHybrid"
      ]
    },
    {
      "name": "_pFileDownTransfer.destroy",
      "params": [],
      "calls": [
        "JSON.stringify",
        "nexacro.Device.exec",
        "nexacro._isHybrid"
      ]
    },
    {
      "name": "_pFileDownTransfer.set_url",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileDownTransfer.set_downloadfilename",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileDownTransfer.setPostData",
      "params": [
        "strKey",
        "value"
      ],
      "calls": [
        "this._p_postdatalist.setItem"
      ]
    },
    {
      "name": "_pFileDownTransfer.removePostData",
      "params": [
        "strKey"
      ],
      "calls": [
        "this._p_postdatalist.delete_item"
      ]
    },
    {
      "name": "_pFileDownTransfer.getPostData",
      "params": [
        "strKey"
      ],
      "calls": [
        "this._p_postdatalist.getItem"
      ]
    },
    {
      "name": "_pFileDownTransfer.clearPostDataList",
      "params": [],
      "calls": [
        "this._p_postdatalist.clear"
      ]
    },
    {
      "name": "_pFileDownTransfer.download",
      "params": [
        "strUrl",
        "strTargetPath"
      ],
      "calls": [
        "nexacro._downloadTransfer",
        "nexacro._getImageLocation",
        "nexacro._getServiceLocation",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pFileDownTransfer._on_load_android",
      "params": [
        "objData"
      ],
      "calls": [
        "this.on_load"
      ]
    },
    {
      "name": "_pFileDownTransfer.on_load",
      "params": [
        "status",
        "data",
        "url",
        "errcode",
        "httpcode",
        "errmsg",
        "extramsg"
      ],
      "calls": [
        "nexacro._isArray",
        "this.on_fire_onerror",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pFileDownTransfer.on_error",
      "params": [
        "url",
        "errorcode",
        "httpcode",
        "errormsg"
      ],
      "calls": [
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pFileDownTransfer.on_fire_onsuccess",
      "params": [
        "url",
        "fullpath"
      ],
      "calls": [
        "nexacro.FileDownTransferEventInfo",
        "this.onsuccess._fireEvent"
      ]
    },
    {
      "name": "_pFileDownTransfer.on_fire_onerror",
      "params": [
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri"
      ],
      "calls": [
        "nexacro.FileDownTransferErrorEventInfo",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "_pFileDownTransfer._getForm",
      "params": [],
      "calls": []
    }
  ],
  "FileUpload.js": [
    {
      "name": "nexacro.FileUploadItemEventInfo",
      "params": [
        "obj",
        "id",
        "idx"
      ],
      "calls": []
    },
    {
      "name": "nexacro.FileUploadMouseEventInfo",
      "params": [
        "obj",
        "id",
        "strButton",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "index",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "metaKey"
      ],
      "calls": []
    },
    {
      "name": "_pFileUploadMouseEventInfo._xposConvertToRtl",
      "params": [
        "obj",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro._getRTLCanvasXForMouseEvent",
        "obj._getClientXY",
        "obj._isRtl"
      ]
    },
    {
      "name": "_pFileUploadMouseEventInfo._xposConvertToLtr",
      "params": [
        "obj"
      ],
      "calls": [
        "obj._isRtl"
      ]
    },
    {
      "name": "nexacro.FileUploadContextMenuEventInfo",
      "params": [
        "obj",
        "id",
        "strButton",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "index",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "metaKey"
      ],
      "calls": [
        "nexacro.ContextMenuEventInfo.call"
      ]
    },
    {
      "name": "nexacro.FileUploadEventInfo",
      "params": [
        "obj",
        "id",
        "dsArray",
        "code",
        "msg",
        "url"
      ],
      "calls": []
    },
    {
      "name": "nexacro.FileUploadItemChangeEventInfo",
      "params": [
        "obj",
        "id",
        "index",
        "oldvalue",
        "newvalue"
      ],
      "calls": []
    },
    {
      "name": "nexacro.FileUploadErrorEventInfo",
      "params": [
        "obj",
        "id",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri",
        "index"
      ],
      "calls": [
        "nexacro.ErrorEventInfo.call"
      ]
    },
    {
      "name": "nexacro.FileUpload",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Collection",
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pFileUpload.on_create_contents",
      "params": [],
      "calls": [
        "this._createFileItem",
        "this.filefindbuttons.add_item",
        "this.filepathedits.add_item",
        "this.getElement"
      ]
    },
    {
      "name": "_pFileUpload.on_created_contents",
      "params": [],
      "calls": [
        "item._setAccessibilityInfoCount",
        "item._setAccessibilityInfoIndex",
        "item._setEventHandler",
        "item.on_created",
        "nexacro._create_hidden_frame",
        "this._isEnable",
        "this._onRecalcScrollSize",
        "this._recalcLayout",
        "this.on_apply_buttonaccessibility",
        "this.on_apply_editaccessibility",
        "this.on_apply_index",
        "this.on_apply_prop_enable"
      ]
    },
    {
      "name": "_pFileUpload.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro._destroy_hidden_frame",
        "this.filefindbuttons.clear",
        "this.filepathedits.clear"
      ]
    },
    {
      "name": "_pFileUpload.on_create_contents_command",
      "params": [],
      "calls": [
        "this._isEnable",
        "this._recalcLayout",
        "this.on_apply_index",
        "this.on_apply_prop_enable"
      ]
    },
    {
      "name": "_pFileUpload.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "item._setAccessibilityInfoCount",
        "item._setAccessibilityInfoIndex",
        "item._setEventHandler",
        "item.attachHandle",
        "item.fileitembutton.setFocus",
        "item.fileitemedit.setFocus",
        "nexacro._create_hidden_frame",
        "this._onRecalcScrollSize",
        "this.on_apply_buttonaccessibility",
        "this.on_apply_editaccessibility",
        "this.on_apply_multiselect"
      ]
    },
    {
      "name": "_pFileUpload.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pFileUpload.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "control_elem.setElementFocus",
        "item.fileitembutton._control_element.setElementFocus"
      ]
    },
    {
      "name": "_pFileUpload.on_apply_prop_enable",
      "params": [
        "enable"
      ],
      "calls": [
        "fileitembutton._setEnable",
        "fileitemedit._setEnable",
        "nexacro.Component.prototype.on_apply_prop_enable.call"
      ]
    },
    {
      "name": "_pFileUpload.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._getStringResourceProperty",
        "this.on_apply_buttontext"
      ]
    },
    {
      "name": "_pFileUpload._onRecalcScrollSize",
      "params": [],
      "calls": [
        "control_elem.setElementScrollMaxSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getItemHeight",
        "this._getVScrollBarSize",
        "this._onResetScrollBar",
        "this.getElement",
        "vscroll._getClientWidth"
      ]
    },
    {
      "name": "_pFileUpload._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "this._isEnable"
      ]
    },
    {
      "name": "_pFileUpload._isAccessibilityEnable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFileUpload.set_buttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_buttonsize"
      ]
    },
    {
      "name": "_pFileUpload.on_apply_buttonsize",
      "params": [
        "buttonsize"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload.set_buttontext",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_buttontext"
      ]
    },
    {
      "name": "_pFileUpload.on_apply_buttontext",
      "params": [
        "buttontext"
      ],
      "calls": [
        "itembutton.set_text"
      ]
    },
    {
      "name": "_pFileUpload.set_index",
      "params": [
        "v"
      ],
      "calls": [
        "this._setAccessibilityStatSelected",
        "this.on_apply_index"
      ]
    },
    {
      "name": "_pFileUpload.on_apply_index",
      "params": [
        "index"
      ],
      "calls": [
        "item.fileitembutton.setFocus",
        "item.fileitemedit.setFocus",
        "this.getElement"
      ]
    },
    {
      "name": "_pFileUpload.set_itemcount",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_itemcount"
      ]
    },
    {
      "name": "_pFileUpload.on_apply_itemcount",
      "params": [
        "itemcount",
        "pre_itemcount"
      ],
      "calls": [
        "items.pop",
        "this._createFileItem",
        "this._onRecalcScrollSize",
        "this._recalcLayout",
        "this.filefindbuttons.add_item",
        "this.filepathedits.add_item",
        "this.getElement"
      ]
    },
    {
      "name": "_pFileUpload.set_itemheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_itemheight"
      ]
    },
    {
      "name": "_pFileUpload.on_apply_itemheight",
      "params": [
        "itemheight"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pFileUpload.set_multiselect",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_multiselect"
      ]
    },
    {
      "name": "_pFileUpload.on_apply_multiselect",
      "params": [
        "multiselect"
      ],
      "calls": [
        "nexacro._setMultipleFile",
        "this.getElement"
      ]
    },
    {
      "name": "_pFileUpload.set_uploadurl",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload.on_apply_accessibility",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_accessibility.call",
        "this.on_apply_buttonaccessibility",
        "this.on_apply_editaccessibility"
      ]
    },
    {
      "name": "_pFileUpload.on_apply_editaccessibility",
      "params": [],
      "calls": [
        "fileitemedit.set_accessibilityaction",
        "fileitemedit.set_accessibilitydesclabel",
        "fileitemedit.set_accessibilitydesclevel",
        "fileitemedit.set_accessibilitydescrole",
        "fileitemedit.set_accessibilityenable",
        "this._getItem"
      ]
    },
    {
      "name": "_pFileUpload.on_apply_buttonaccessibility",
      "params": [
        "buttonaccessibility"
      ],
      "calls": [
        "fileitembutton.set_accessibilityaction",
        "fileitembutton.set_accessibilitydesclabel",
        "fileitembutton.set_accessibilitydesclevel",
        "fileitembutton.set_accessibilitydescrole",
        "fileitembutton.set_accessibilityenable",
        "this._getItem"
      ]
    },
    {
      "name": "_pFileUpload.set_filefilter",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload.set_filefilterindex",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload.appendItem",
      "params": [],
      "calls": [
        "item._setAccessibilityInfoCount",
        "item._setAccessibilityInfoIndex",
        "this._createFileItem",
        "this._onRecalcScrollSize",
        "this._recalcLayout",
        "this.filefindbuttons.add_item",
        "this.filepathedits.add_item",
        "this.getElement",
        "this.on_fire_onappenditem"
      ]
    },
    {
      "name": "_pFileUpload.deleteItem",
      "params": [
        "idx"
      ],
      "calls": [
        "items.splice",
        "this._onRecalcScrollSize",
        "this._recalcLayout",
        "this._setText",
        "this._updateFileList",
        "this.getElement",
        "this.on_fire_ondeleteitem"
      ]
    },
    {
      "name": "_pFileUpload.changeItem",
      "params": [
        "idx",
        "newvalue"
      ],
      "calls": [
        "filename.lastIndexOf",
        "filename.split",
        "filename.substring",
        "item._changeFiles",
        "item._p_parent._setText",
        "item._p_parent._setValue",
        "item._p_parent.on_fire_onitemchanged",
        "item.fileitemedit.set_value",
        "nexacro._isTrustPath",
        "this._getWindow",
        "this.getElement",
        "trustNewvalue.push"
      ]
    },
    {
      "name": "_pFileUpload.getItemCount",
      "params": [
        "bHasValue"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.getElement"
      ]
    },
    {
      "name": "_pFileUpload.getItemIndex",
      "params": [
        "obj"
      ],
      "calls": [
        "this.getElement"
      ]
    },
    {
      "name": "_pFileUpload.hasValue",
      "params": [
        "idx"
      ],
      "calls": [
        "this.getElement"
      ]
    },
    {
      "name": "_pFileUpload.upload",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_on_manager_onload",
      "params": [],
      "calls": [
        "data.slice",
        "data.trimLeft",
        "data_type.indexOf",
        "evttarget.on_fire_onerror",
        "evttarget.on_fire_onsuccess",
        "nexacro._parseXMLDocument",
        "nexacro._uploadTransferXHR"
      ]
    },
    {
      "name": "_pFileUpload._on_manager_onload",
      "params": [
        "status",
        "data",
        "url",
        "errcode",
        "httpcode",
        "errmsg",
        "cookies"
      ],
      "calls": [
        "data.slice",
        "data.trimLeft",
        "data_type.indexOf",
        "nexacro.MakeCommunicationError",
        "nexacro._getXMLDocument",
        "nexacro._onHttpSystemError",
        "this.on_fire_onerror",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pFileUpload._bindUploadDataHandler",
      "params": [
        "e"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload._on_manager_onload",
      "params": [
        "node",
        "data",
        "url",
        "errcode",
        "httpcode",
        "errmsg"
      ],
      "calls": [
        "data.substring",
        "data_type.indexOf",
        "nexacro._getContentType",
        "nexacro._getDataFromDOM",
        "nexacro._getXMLDocument",
        "nexacro._setPostMessage",
        "this.on_fire_onerror",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pFileUpload.on_after_load",
      "params": [
        "messageObj"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload._on_item_onfindclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.MakeError",
        "nexacro._findclick",
        "nexacro._indexOf",
        "this._isEnable",
        "this.on_fire_onerror",
        "this.on_fire_onfindclick",
        "this.set_index"
      ]
    },
    {
      "name": "_pFileUpload._on_item_onitemclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._isEnable",
        "this.on_fire_onitemclick",
        "this.set_index"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_onerror",
      "params": [
        "obj",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri",
        "index"
      ],
      "calls": [
        "nexacro.FileUploadErrorEventInfo",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_user_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.FileUploadMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onlbuttondown._fireEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.FileUploadMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onlbuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "Math.ceil",
        "_window._removeFromCurrentFocusPath",
        "nexacro.Component.prototype.on_fire_user_onkeydown.call",
        "this._getClientHeight",
        "this._getItemHeight",
        "this._getWindow",
        "this._setFocus",
        "this.set_index",
        "this.vscrollbar.set_pos"
      ]
    },
    {
      "name": "_pFileUpload._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call",
        "nexacro._toBoolean",
        "this._isAccessibilityEnable",
        "this.set_index"
      ]
    },
    {
      "name": "_pFileUpload._find_item_status",
      "params": [
        "item"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload.on_fire_ondeleteitem",
      "params": [
        "obj",
        "index"
      ],
      "calls": [
        "nexacro.FileUploadItemEventInfo",
        "this.ondeleteitem._fireEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_onfindclick",
      "params": [
        "obj",
        "index"
      ],
      "calls": [
        "nexacro.FileUploadItemEventInfo",
        "this.onfindclick._fireCheckEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_onitemchanged",
      "params": [
        "obj",
        "index",
        "oldvalue",
        "newvalue"
      ],
      "calls": [
        "nexacro.FileUploadItemChangeEventInfo",
        "this.onitemchanged._fireEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_onitemclick",
      "params": [
        "obj",
        "index"
      ],
      "calls": [
        "nexacro.FileUploadItemEventInfo",
        "this.onitemclick._fireEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_onappenditem",
      "params": [
        "obj",
        "index"
      ],
      "calls": [
        "nexacro.FileUploadItemEventInfo",
        "this.onappenditem._fireEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_onsuccess",
      "params": [
        "ds",
        "code",
        "msg",
        "url",
        "variables"
      ],
      "calls": [
        "application._endCommProgress",
        "nexacro.FileUploadEventInfo",
        "nexacro.getApplication",
        "this.onsuccess._fireEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_oncontextmenu",
      "params": [
        "from_comp",
        "from_refer_comp",
        "button",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro.FileUploadContextMenuEventInfo",
        "this._getEventInfoComponent",
        "this.oncontextmenu._fireEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_user_onrbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.FileUploadMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onrbuttondown._fireEvent"
      ]
    },
    {
      "name": "_pFileUpload.on_fire_user_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.FileUploadMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onrbuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pFileUpload._createFileItem",
      "params": [
        "index"
      ],
      "calls": [
        "item._setControl",
        "item._setEventHandler",
        "item._setItemInfo",
        "item.createComponent",
        "nexacro._FileUploadItemControl"
      ]
    },
    {
      "name": "_pFileUpload._recalcLayout",
      "params": [],
      "calls": [
        "this._getClientLeft",
        "this._getClientWidth",
        "this._getItemHeight"
      ]
    },
    {
      "name": "_pFileUpload._updateFileList",
      "params": [],
      "calls": [
        "nexacro.VirtualFile",
        "this.filelist.push",
        "vfile._setFileName",
        "vfile._setFullPath",
        "vfile._setPath"
      ]
    },
    {
      "name": "_pFileUpload._setText",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload._setValue",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload._setControlFlag",
      "params": [
        "item"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload._getItem",
      "params": [
        "index"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload._getItemHeight",
      "params": [],
      "calls": [
        "item._on_getFitSize"
      ]
    },
    {
      "name": "_pFileUpload._getEventInfoComponent",
      "params": [
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpload._isPopupFrame",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._FileUploadItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "JSON.stringify",
        "nexacro.Component.call",
        "nexacro.Device.exec",
        "nexacro.Device.makeID",
        "nexacro._isHybrid"
      ]
    },
    {
      "name": "_pFileUploadItemControl.on_create_contents",
      "params": [],
      "calls": [
        "itembutton.createComponent",
        "itembutton.set_text",
        "itemedit.createComponent",
        "itemedit.set_readonly",
        "nexacro._FileUploadItemButtonControl",
        "nexacro._FileUploadItemEditControl",
        "this.getElement"
      ]
    },
    {
      "name": "_pFileUploadItemControl.on_created_contents",
      "params": [],
      "calls": [
        "itembutton._setEventHandler",
        "itembutton.on_created",
        "itemedit._setEventHandler",
        "itemedit.on_created",
        "nexacro._append_hidden_item",
        "this._setAccessibilityActiveDescendant"
      ]
    },
    {
      "name": "_pFileUploadItemControl.on_destroy_contents",
      "params": [],
      "calls": [
        "JSON.stringify",
        "nexacro.Device.exec",
        "nexacro._isHybrid",
        "nexacro._remove_hidden_item",
        "this._p_parent.filefindbuttons.delete_item",
        "this._p_parent.filepathedits.delete_item",
        "this.fileitembutton.destroy",
        "this.fileitemedit.destroy"
      ]
    },
    {
      "name": "_pFileUploadItemControl.on_create_contents_command",
      "params": [],
      "calls": [
        "itembutton.createCommand",
        "itemedit.createCommand"
      ]
    },
    {
      "name": "_pFileUploadItemControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "itembutton._setEventHandler",
        "itembutton.attachHandle",
        "itemedit._setEventHandler",
        "itemedit.attachHandle",
        "nexacro._append_hidden_item",
        "this._setAccessibilityActiveDescendant"
      ]
    },
    {
      "name": "_pFileUploadItemControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pFileUploadItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFileUploadItemControl._on_getFitSize",
      "params": [],
      "calls": [
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "itembutton._on_getFitSize",
        "itemedit._on_getFitSize",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._getPropButtonSize",
        "this._getPropItemHeight",
        "this.getElement"
      ]
    },
    {
      "name": "_pFileUploadItemControl._on_itemedit_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.onitemclick._fireEvent"
      ]
    },
    {
      "name": "_pFileUploadItemControl._on_itemedit_oneditlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._accessibility_find_focus_flag",
        "this._p_parent.set_index"
      ]
    },
    {
      "name": "_pFileUploadItemControl._on_itemedit_onchange",
      "params": [
        "value",
        "files",
        "value_arr"
      ],
      "calls": [
        "fileitemedit.set_value",
        "fileupload._setText",
        "fileupload._setValue",
        "fileupload._updateFileList",
        "fileupload.on_fire_onitemchanged",
        "fileupload.set_index",
        "nexacro._isHybrid",
        "value.substr"
      ]
    },
    {
      "name": "_pFileUploadItemControl._on_itembutton_onfindclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.onfindclick._fireCheckEvent"
      ]
    },
    {
      "name": "_pFileUploadItemControl._on_itembutton_onfindlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._accessibility_find_focus_flag",
        "this._p_parent.set_index"
      ]
    },
    {
      "name": "_pFileUploadItemControl._recalcLayout",
      "params": [],
      "calls": [
        "Math.max",
        "itembutton._on_getFitSize",
        "itembutton.move",
        "itemedit._on_getFitSize",
        "itemedit.move",
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth",
        "this._getPropButtonSize",
        "this._getPropItemHeight",
        "this.getElement"
      ]
    },
    {
      "name": "_pFileUploadItemControl._setItemInfo",
      "params": [
        "index",
        "buttontext"
      ],
      "calls": []
    },
    {
      "name": "_pFileUploadItemControl._getPropButtonSize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFileUploadItemControl._getPropItemHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFileUploadItemControl._accessibility_find_focus_flag",
      "params": [
        "editflag",
        "buttonflag"
      ],
      "calls": []
    },
    {
      "name": "_pFileUploadItemControl._isPopupFrame",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFileUploadItemControl._changeFiles",
      "params": [
        "files"
      ],
      "calls": [
        "filename.lastIndexOf",
        "filename.substring",
        "nexacro.VirtualFile"
      ]
    },
    {
      "name": "nexacro._FileUploadItemEditControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Edit.call"
      ]
    },
    {
      "name": "_pFileUploadItemEditControl._getAccessibilityLabel",
      "params": [
        "accessibility"
      ],
      "calls": [
        "comp.getElement",
        "control_elem._makeAccessibilityLabelbyReadtype",
        "nexacro.Component.prototype._getAccessibilityLabel.call"
      ]
    },
    {
      "name": "_pFileUploadItemEditControl.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name"
      ],
      "calls": [
        "nexacro.Component.prototype.on_focus_basic_action.call",
        "this._isAccessibilityEnable",
        "this.on_apply_accessibility"
      ]
    },
    {
      "name": "nexacro._FileUploadItemButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pFileUploadItemButtonControl._getAccessibilityLabel",
      "params": [
        "accessibility"
      ],
      "calls": [
        "comp.getElement",
        "control_elem._makeAccessibilityLabelbyReadtype",
        "nexacro.Component.prototype._getAccessibilityLabel.call"
      ]
    },
    {
      "name": "_pFileUploadItemButtonControl.on_keyup_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._click",
        "this._getWindow"
      ]
    }
  ],
  "FileUpTransfer.js": [
    {
      "name": "nexacro.FileUpTransferEventInfo",
      "params": [
        "obj",
        "id",
        "dsArray",
        "code",
        "message",
        "url",
        "index"
      ],
      "calls": []
    },
    {
      "name": "nexacro.FileUpTransferErrorEventInfo",
      "params": [
        "obj",
        "id",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri",
        "index"
      ],
      "calls": [
        "nexacro.ErrorEventInfo.call"
      ]
    },
    {
      "name": "nexacro.FileUpTransferProgressEventInfo",
      "params": [
        "obj",
        "id",
        "loaded",
        "total",
        "index"
      ],
      "calls": []
    },
    {
      "name": "nexacro.FileUpTransfer",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "JSON.stringify",
        "nexacro.Collection",
        "nexacro.Device.exec",
        "nexacro.Device.makeID",
        "nexacro._EventSinkObject.call",
        "nexacro._isHybrid"
      ]
    },
    {
      "name": "_pFileUpTransfer.destroy",
      "params": [],
      "calls": [
        "JSON.stringify",
        "nexacro.Device.exec",
        "nexacro._isHybrid",
        "this._p_filelist.destroy",
        "this._p_postdatalist.destroy"
      ]
    },
    {
      "name": "_pFileUpTransfer.set_url",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpTransfer.setFile",
      "params": [
        "nIndex",
        "vFile"
      ],
      "calls": [
        "this._p_filelist.set_item"
      ]
    },
    {
      "name": "_pFileUpTransfer.addFile",
      "params": [
        "id",
        "vFile"
      ],
      "calls": [
        "this._p_filelist.add_item"
      ]
    },
    {
      "name": "_pFileUpTransfer.removeFile",
      "params": [
        "id"
      ],
      "calls": [
        "this._p_filelist.delete_item"
      ]
    },
    {
      "name": "_pFileUpTransfer.removeFileByIndex",
      "params": [
        "nIndex"
      ],
      "calls": [
        "this._p_filelist.delete_item"
      ]
    },
    {
      "name": "_pFileUpTransfer.getFileArrayByFileName",
      "params": [
        "strFileName"
      ],
      "calls": [
        "ret.push"
      ]
    },
    {
      "name": "_pFileUpTransfer.getIndexArrayByFileName",
      "params": [
        "strFileName"
      ],
      "calls": [
        "ret.push"
      ]
    },
    {
      "name": "_pFileUpTransfer.existFile",
      "params": [
        "vFile"
      ],
      "calls": [
        "nexacro._isEqualTransferFile"
      ]
    },
    {
      "name": "_pFileUpTransfer.setPostData",
      "params": [
        "strKey",
        "value"
      ],
      "calls": [
        "this._p_postdatalist.setItem"
      ]
    },
    {
      "name": "_pFileUpTransfer.removePostData",
      "params": [
        "strKey"
      ],
      "calls": [
        "this._p_postdatalist.delete_item"
      ]
    },
    {
      "name": "_pFileUpTransfer.getPostData",
      "params": [
        "strKey"
      ],
      "calls": [
        "this._p_postdatalist.getItem"
      ]
    },
    {
      "name": "_pFileUpTransfer.clearFileList",
      "params": [],
      "calls": [
        "this._p_filelist.clear"
      ]
    },
    {
      "name": "_pFileUpTransfer.clearPostDataList",
      "params": [],
      "calls": [
        "this._p_postdatalist.clear"
      ]
    },
    {
      "name": "_pFileUpTransfer.upload",
      "params": [
        "strUrl"
      ],
      "calls": [
        "nexacro._getServiceLocation",
        "nexacro._uploadTransfer"
      ]
    },
    {
      "name": "_pFileUpTransfer.on_load",
      "params": [
        "data",
        "url",
        "index"
      ],
      "calls": [
        "this.on_fire_onerror",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pFileUpTransfer.on_message",
      "params": [
        "e"
      ],
      "calls": []
    },
    {
      "name": "_pFileUpTransfer.on_load_android_webview",
      "params": [
        "objData"
      ],
      "calls": [
        "data.slice",
        "data_type.indexOf",
        "nexacro.FileUpTransferErrorEventInfo",
        "nexacro.FileUpTransferEventInfo",
        "nexacro.FileUpTransferProgressEventInfo",
        "nexacro._parseXMLDocument",
        "objData.data.trimLeft",
        "this.on_error",
        "this.on_fire_onerror",
        "this.on_fire_onprogress",
        "this.on_load",
        "this.on_progress",
        "this.onerror._fireEvent",
        "this.onprogress._fireEvent",
        "this.onsuccess._fireEvent",
        "this.type.toUpperCase"
      ]
    },
    {
      "name": "_pFileUpTransfer.on_error",
      "params": [
        "errorcode",
        "errormsg",
        "httpcode",
        "url",
        "index"
      ],
      "calls": [
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pFileUpTransfer.on_progress",
      "params": [
        "loaded",
        "total",
        "index"
      ],
      "calls": [
        "this.on_fire_onprogress"
      ]
    },
    {
      "name": "_pFileUpTransfer.on_fire_onsuccess",
      "params": [
        "datasets",
        "code",
        "msg",
        "url",
        "index"
      ],
      "calls": [
        "nexacro.FileUpTransferEventInfo",
        "this.onsuccess._fireEvent"
      ]
    },
    {
      "name": "_pFileUpTransfer.on_fire_onerror",
      "params": [
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri",
        "index"
      ],
      "calls": [
        "nexacro.FileUpTransferErrorEventInfo",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "_pFileUpTransfer.on_fire_onprogress",
      "params": [
        "loaded",
        "total",
        "index"
      ],
      "calls": [
        "nexacro.FileUpTransferProgressEventInfo",
        "this.onprogress._fireEvent"
      ]
    },
    {
      "name": "_pFileUpTransfer._getForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFileUpTransfer._getTransferType",
      "params": [],
      "calls": [
        "this.type.toUpperCase"
      ]
    }
  ],
  "FormBase.js": [
    {
      "name": "nexacro.LayoutChangeEventInfo",
      "params": [
        "obj",
        "id",
        "curlayout_name",
        "newlayout_name",
        "cur_width",
        "new_width",
        "cur_height",
        "new_height"
      ],
      "calls": []
    },
    {
      "name": "nexacro.DeviceButtonEventInfo",
      "params": [
        "obj",
        "id",
        "button",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "nexacro.TriggerManager",
      "params": [
        "form"
      ],
      "calls": [
        "nexacro.Object.call"
      ]
    },
    {
      "name": "_pTriggerManager.destroy",
      "params": [],
      "calls": [
        "nexacro.Object.prototype.destroy.call"
      ]
    },
    {
      "name": "_pTriggerManager._settriggerinfo",
      "params": [
        "contents"
      ],
      "calls": [
        "nexacro._isArray"
      ]
    },
    {
      "name": "_pTriggerManager.inittriggerinfo",
      "params": [],
      "calls": [
        "this._getTriggerObj",
        "this._getTriggerView",
        "triggerobj._addEventHandler",
        "triggerobj._findEventHandler",
        "triggerview._addEventHandler"
      ]
    },
    {
      "name": "_pTriggerManager._getTriggerView",
      "params": [
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pTriggerManager._getTriggerObj",
      "params": [
        "obj",
        "triggerobj"
      ],
      "calls": []
    },
    {
      "name": "_pTriggerManager._findTrigger",
      "params": [
        "triggertype",
        "triggerobj",
        "triggerview"
      ],
      "calls": [
        "targettrigger.push"
      ]
    },
    {
      "name": "_pTriggerManager._getAction",
      "params": [
        "straction"
      ],
      "calls": [
        "straction.toString"
      ]
    },
    {
      "name": "_pTriggerManager._notifyTrigger",
      "params": [
        "triggertype",
        "triggerobj",
        "triggerview"
      ],
      "calls": [
        "action.run",
        "exprfn.call",
        "this._createExprFunc",
        "this._findTrigger",
        "this._getAction"
      ]
    },
    {
      "name": "_pTriggerManager._createExprFunc",
      "params": [
        "expr_str",
        "ds"
      ],
      "calls": [
        "nexacro.ExprParser",
        "nexacro._createInlineFunc",
        "parser.makeExpr"
      ]
    },
    {
      "name": "nexacro.BindingValueChangedEventInfo",
      "params": [
        "obj",
        "id",
        "row",
        "col",
        "colidx",
        "columnid",
        "oldvalue",
        "newvalue"
      ],
      "calls": []
    },
    {
      "name": "nexacro.BindItem",
      "params": [
        "name",
        "compid",
        "propid",
        "dsid",
        "columnid"
      ],
      "calls": [
        "nexacro.Object.call"
      ]
    },
    {
      "name": "_pBindItem.set_name",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pBindItem.set_compid",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pBindItem.set_propid",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pBindItem.set_datasetid",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pBindItem.set_columnid",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pBindItem.init",
      "params": [
        "name",
        "compid",
        "propid",
        "datasetid",
        "columnid"
      ],
      "calls": [
        "this.set_columnid",
        "this.set_compid",
        "this.set_datasetid",
        "this.set_name",
        "this.set_propid"
      ]
    },
    {
      "name": "_pBindItem.destroy",
      "params": [],
      "calls": [
        "nexacro.Object.prototype.destroy.call"
      ]
    },
    {
      "name": "_pBindItem.bind",
      "params": [],
      "calls": [
        "this._p_parent._bind_manager._notify",
        "this._p_parent._bind_manager._setBinditem"
      ]
    },
    {
      "name": "_pBindItem._checkType",
      "params": [
        "propid"
      ],
      "calls": []
    },
    {
      "name": "nexacro.BindManager",
      "params": [
        "form"
      ],
      "calls": [
        "nexacro.Object.call"
      ]
    },
    {
      "name": "_pBindManager.destroy",
      "params": [],
      "calls": [
        "nexacro.Object.prototype.destroy.call"
      ]
    },
    {
      "name": "_pBindManager.on_changevalue",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ds.getColIndex",
        "ds.getColumn",
        "ds.setColumn",
        "this._findBindItem"
      ]
    },
    {
      "name": "_pBindManager.on_binddestroy",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "_form._bind_manager._setBinditem",
        "binds.get_id",
        "binds.get_item"
      ]
    },
    {
      "name": "_pBindManager.on_valuechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "form._on_notify_onbindingvaluechanged",
        "this._notifyAll"
      ]
    },
    {
      "name": "_pBindManager._delayBinds",
      "params": [],
      "calls": [
        "this._notify",
        "this._setBinditem"
      ]
    },
    {
      "name": "_pBindManager._setBinditem",
      "params": [
        "bind_item",
        "close_flag"
      ],
      "calls": [
        "bind_item._checkType",
        "comp._bind_event._removeHandler",
        "comp._bind_event._setHandler",
        "comp.on_getBindableProperties",
        "ds._addEventHandler",
        "ds.removeEventHandler",
        "ds.setEventHandler",
        "form._getDatasetObject",
        "nexacro.EventListener",
        "nexacro._indexOf",
        "this._form._findChildObject",
        "view.getSourceView"
      ]
    },
    {
      "name": "_pBindManager._findBindItem",
      "params": [
        "comp",
        "propid"
      ],
      "calls": []
    },
    {
      "name": "_pBindManager._dettachSBindItem",
      "params": [
        "comp"
      ],
      "calls": [
        "comp._bind_event._removeHandler",
        "nexacro._indexOf"
      ]
    },
    {
      "name": "_pBindManager._notify",
      "params": [
        "bindItem"
      ],
      "calls": [
        "comp._p_parent._isEnable",
        "comp._setEnable",
        "comp.on_change_bindSource",
        "ds.getColIndex",
        "ds.getColumn"
      ]
    },
    {
      "name": "_pBindManager._notifyAll",
      "params": [
        "ds_id",
        "col_id",
        "col",
        "all_flag",
        "val"
      ],
      "calls": [
        "comp._setEnable",
        "comp.on_change_bindSource",
        "comp.on_init_bindSource",
        "ds.getColIndex",
        "ds.getColumn",
        "parent._isEnable"
      ]
    },
    {
      "name": "nexacro.FormBase",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.BindManager",
        "nexacro.Collection",
        "nexacro.Component.call",
        "nexacro._LoadManager",
        "nexacro._TimerManager"
      ]
    },
    {
      "name": "_pFormBase._initControlElementLayoutProps",
      "params": [],
      "calls": [
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "this._adjustPosition",
        "this._calcArrangePosition",
        "this._calcBasisSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase.on_create_contents",
      "params": [],
      "calls": [
        "comp.createComponent"
      ]
    },
    {
      "name": "_pFormBase.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "comp._update_position",
        "control_elem.setElementHScrollPos",
        "nexacro._createdContents",
        "nexacro._refreshWindow",
        "nexacro._toString",
        "this._cssclass_exprfn.call",
        "this._getWindow",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._p_stepselector.on_created",
        "this._setAccessibilityStatLive",
        "this.resetScroll"
      ]
    },
    {
      "name": "_pFormBase.on_destroy_contents",
      "params": [],
      "calls": [
        "binds.get_id",
        "binds.get_item",
        "components.get_id",
        "manager.destroyLayoutContainerInfo",
        "nexacro._getLayoutManager",
        "objects.delete_item",
        "objects.get_id",
        "this._bind_manager._setBinditem",
        "this._bind_manager.destroy",
        "this._load_manager.destroy",
        "this._p_all.clear",
        "this._p_binds.clear",
        "this._p_components.clear",
        "this._p_objects.clear",
        "this._timerManager.destroy",
        "tr_item._hideWaitCursor"
      ]
    },
    {
      "name": "_pFormBase._clearUserFunctions",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFormBase._clear",
      "params": [],
      "calls": [
        "binds.get_id",
        "binds.get_item",
        "components.clear",
        "components.get_id",
        "control_elem.clearContents",
        "manager.destroyLayoutContainerInfo",
        "nexacro.Collection",
        "nexacro._getLayoutManager",
        "objects.clear",
        "objects.get_id",
        "this._bind_manager._setBinditem",
        "this._clearEventListeners",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._p_all.clear",
        "this._p_binds.clear",
        "this._p_components.clear",
        "this._p_objects.clear",
        "this._p_stepselector.destroy",
        "this._timerManager.clearAll",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase._resetObject",
      "params": [],
      "calls": [
        "nexacro.BindManager",
        "nexacro.Collection",
        "nexacro._LoadManager",
        "nexacro._TimerManager"
      ]
    },
    {
      "name": "_pFormBase._resetStatus",
      "params": [],
      "calls": [
        "this._makeStatusMap"
      ]
    },
    {
      "name": "_pFormBase._resetProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFormBase._clearObject",
      "params": [],
      "calls": [
        "this._bind_manager._setBinditem",
        "this._load_manager.clearAllLoad",
        "this._p_all.clear",
        "this._p_binds.clear",
        "this._p_binds.get_id",
        "this._p_binds.get_item",
        "this._p_components.clear",
        "this._p_components.get_id",
        "this._p_objects.clear",
        "this._p_objects.get_id",
        "this._timerManager.clearAll"
      ]
    },
    {
      "name": "_pFormBase._clearContents",
      "params": [],
      "calls": [
        "this._control_element.destroy",
        "this._p_stepselector.destroy"
      ]
    },
    {
      "name": "_pFormBase._clearProperties",
      "params": [],
      "calls": [
        "Object.keys",
        "props.pop",
        "this.hasOwnProperty"
      ]
    },
    {
      "name": "_pFormBase._beforeClearProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFormBase._afterClearProperties",
      "params": [
        "recovery_props"
      ],
      "calls": []
    },
    {
      "name": "_pFormBase._onHttpSystemError",
      "params": [
        "obj",
        "bfireevent",
        "errorobj",
        "errortype",
        "url",
        "returncode",
        "requesturi",
        "locationuri",
        "extramsg"
      ],
      "calls": [
        "this._p_parent._onHttpSystemError"
      ]
    },
    {
      "name": "_pFormBase._onHttpTransactionError",
      "params": [
        "obj",
        "bfireevent",
        "errorobj",
        "errortype",
        "url",
        "returncode",
        "requesturi",
        "locationuri",
        "extramsg",
        "svcid"
      ],
      "calls": [
        "environment.on_fire_onerror",
        "nexacro.MakeCommunicationError",
        "nexacro.getEnvironment",
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pFormBase._onLocaleCompareError",
      "params": [
        "obj",
        "bfireevent",
        "errorobj",
        "errortype",
        "url",
        "returncode",
        "requesturi",
        "locationuri",
        "extramsg",
        "svcid"
      ],
      "calls": [
        "environment.on_fire_onerror",
        "nexacro.MakeCommunicationError",
        "nexacro.getEnvironment",
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pFormBase.create",
      "params": [],
      "calls": [
        "this.on_create"
      ]
    },
    {
      "name": "_pFormBase.initEvent",
      "params": [],
      "calls": [
        "this.on_initEvent"
      ]
    },
    {
      "name": "_pFormBase._on_init",
      "params": [],
      "calls": [
        "this._clear",
        "this._executeScript",
        "this._init",
        "this._p_parent._loadedForm",
        "this.create",
        "this.initEvent"
      ]
    },
    {
      "name": "_pFormBase._addPreloadList",
      "params": [
        "type",
        "url",
        "id",
        "args"
      ],
      "calls": [
        "nexacro._getFDLLocation",
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "this._load_manager.addPreloadItem"
      ]
    },
    {
      "name": "_pFormBase._loadInclude",
      "params": [
        "mainurl",
        "url",
        "asyncmode",
        "service_url"
      ],
      "calls": [
        "nexacro._getServiceObject",
        "this._load_manager.loadIncludeModule"
      ]
    },
    {
      "name": "_pFormBase.executeIncludeScript",
      "params": [
        "url",
        "scriptstr"
      ],
      "calls": [
        "item.fn.call",
        "nexacro._executeScript",
        "nexacro._getServiceLocation",
        "this._executeScript"
      ]
    },
    {
      "name": "_pFormBase._executeScript",
      "params": [
        "context"
      ],
      "calls": [
        "context._registerscriptfn.call"
      ]
    },
    {
      "name": "_pFormBase.registerScript",
      "params": [
        "filename",
        "fn"
      ],
      "calls": []
    },
    {
      "name": "_pFormBase.addIncludeScript",
      "params": [
        "mainurl",
        "url"
      ],
      "calls": [
        "nexacro._getServiceLocation",
        "this._includescriptlist.push"
      ]
    },
    {
      "name": "_pFormBase.loadIncludeScript",
      "params": [
        "mainurl"
      ],
      "calls": [
        "this._loadInclude.call"
      ]
    },
    {
      "name": "_pFormBase.setFocus",
      "params": [
        "bResetScroll",
        "bInnerFocus"
      ],
      "calls": [
        "nexacro.Component.prototype.setFocus.call",
        "this._getRootWindow",
        "this.getElement",
        "win._setFocus"
      ]
    },
    {
      "name": "_pFormBase._findForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFormBase._getReferenceContext",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFormBase._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "last_focused_comp._getDlgCode",
        "this._getLastFocused"
      ]
    },
    {
      "name": "_pFormBase._waitCursor",
      "params": [
        "wait_flag",
        "context"
      ],
      "calls": [
        "ownerframe._waitCursor",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFormBase._destroy",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this.destroyComponent"
      ]
    },
    {
      "name": "_pFormBase.destroy",
      "params": [],
      "calls": [
        "this._checkAndConfirmClose",
        "this._on_beforeclose",
        "this._on_close",
        "this.destroyComponent"
      ]
    },
    {
      "name": "_pFormBase.loadCss",
      "params": [
        "url",
        "base_url",
        "async"
      ],
      "calls": [
        "cssmapurl.lastIndexOf",
        "cssmapurl.substring",
        "cssurl.lastIndexOf",
        "cssurl.substring",
        "nexacro._getCSSFileName",
        "nexacro._getMapFileName",
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "nexacro._getVersionQueryString",
        "nexacro._isNull",
        "nexacro.getEnvironment",
        "this._load_manager.loadCssModule"
      ]
    },
    {
      "name": "_pFormBase.resize",
      "params": [
        "w",
        "h"
      ],
      "calls": [
        "this._update_position"
      ]
    },
    {
      "name": "_pFormBase.confirm",
      "params": [
        "strText",
        "strCaption",
        "strType"
      ],
      "calls": [
        "nexacro._confirm",
        "this._getWindow"
      ]
    },
    {
      "name": "_pFormBase.alert",
      "params": [
        "strText",
        "strCaption",
        "strType"
      ],
      "calls": [
        "nexacro._alert",
        "this._getWindow"
      ]
    },
    {
      "name": "_pFormBase.getOwnerFrame",
      "params": [],
      "calls": [
        "this._p_parent.getOwnerFrame"
      ]
    },
    {
      "name": "_pFormBase.lookup",
      "params": [
        "name"
      ],
      "calls": []
    },
    {
      "name": "_pFormBase.lookupSetter",
      "params": [
        "name",
        "fnname"
      ],
      "calls": [
        "nexacro.PropBinder",
        "nexacro.SetterBinder"
      ]
    },
    {
      "name": "_pFormBase.lookupFunc",
      "params": [
        "name"
      ],
      "calls": [
        "nexacro.FuncBinder"
      ]
    },
    {
      "name": "_pFormBase.setSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "control_elem.setElementSize",
        "this._adjustPosition",
        "this._p_parent._getClientHeight",
        "this._p_parent._getClientWidth"
      ]
    },
    {
      "name": "_pFormBase.addLayout",
      "params": [
        "name",
        "obj"
      ],
      "calls": [
        "manager.addLayoutList",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pFormBase.getLayoutInfo",
      "params": [
        "strLayoutName",
        "strPropName"
      ],
      "calls": [
        "manager.getLayoutProperty",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pFormBase.setFluidLayoutProperty",
      "params": [
        "strLayoutName",
        "strPropName",
        "value"
      ],
      "calls": [
        "_form._onApplyTabletemplate",
        "fluid_enum.indexOf",
        "manager.getLayout",
        "manager.setLayoutProperty",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pFormBase.getPanel",
      "params": [
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pFormBase._on_activate",
      "params": [],
      "calls": [
        "this._isEnable",
        "this.on_fire_onactivate"
      ]
    },
    {
      "name": "_pFormBase._on_deactivate",
      "params": [],
      "calls": [
        "this._isEnable",
        "this.on_fire_ondeactivate"
      ]
    },
    {
      "name": "_pFormBase._on_beforeclose",
      "params": [
        "root_closing_comp"
      ],
      "calls": [
        "comp._on_beforeclose",
        "this._appendBeforeCloseMsg",
        "this._on_bubble_beforeclose"
      ]
    },
    {
      "name": "_pFormBase._on_close",
      "params": [],
      "calls": [
        "comp._on_close",
        "this._on_bubble_close"
      ]
    },
    {
      "name": "_pFormBase._on_notify_onbindingvaluechanged",
      "params": [
        "obj",
        "event_info"
      ],
      "calls": [
        "this.on_fire_onbindingvaluechanged"
      ]
    },
    {
      "name": "_pFormBase._on_bubble_beforeclose",
      "params": [
        "root_closing_comp",
        "event_bubbles",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "_parent._on_bubble_beforeclose",
        "this._appendBeforeCloseMsg",
        "this._isEnable",
        "this.on_fire_onbeforeclose"
      ]
    },
    {
      "name": "_pFormBase._on_bubble_close",
      "params": [
        "event_bubbles",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "parent._on_bubble_close",
        "this._isEnable",
        "this.on_fire_onclose"
      ]
    },
    {
      "name": "_pFormBase.on_fire_onbeforeclose",
      "params": [
        "obj",
        "from_comp",
        "refer_comp",
        "root_closing_comp"
      ],
      "calls": [
        "nexacro.CloseEventInfo",
        "this.onbeforeclose._fireEvent"
      ]
    },
    {
      "name": "_pFormBase.on_fire_onactivate",
      "params": [],
      "calls": [
        "nexacro.ActivateEventInfo",
        "this.onactivate._fireEvent"
      ]
    },
    {
      "name": "_pFormBase.on_fire_ondeactivate",
      "params": [],
      "calls": [
        "nexacro.ActivateEventInfo",
        "this.ondeactivate._fireEvent"
      ]
    },
    {
      "name": "_pFormBase.on_fire_onclose",
      "params": [
        "obj",
        "from_comp",
        "refer_comp"
      ],
      "calls": [
        "nexacro.CloseEventInfo",
        "this.onclose._fireEvent"
      ]
    },
    {
      "name": "_pFormBase.on_fire_onerror",
      "params": [
        "obj",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode",
        "requesturi",
        "locationuri",
        "errordata"
      ],
      "calls": [
        "nexacro.ErrorEventInfo",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "_pFormBase.on_fire_onbindingvaluechanged",
      "params": [
        "obj",
        "from_obj",
        "refer_obj",
        "row",
        "col",
        "colidx",
        "columnid",
        "oldvalue",
        "newvalue"
      ],
      "calls": [
        "nexacro.BindingValueChangedEventInfo",
        "this.onbindingvaluechanged._fireEvent"
      ]
    },
    {
      "name": "_pFormBase.on_fire_sys_onflingstart",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onflingstart.call"
      ]
    },
    {
      "name": "_pFormBase.on_fire_sys_onslidestart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "control_elem.setElementTranslateStart",
        "nexacro.Component.prototype.on_fire_sys_onslidestart.call",
        "this._on_cancel_stepchange_animation",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase.on_fire_sys_onslideend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "control_elem.setElementHScrollPos",
        "control_elem.setElementTranslateEnd",
        "here.",
        "nexacro.Component.prototype.on_fire_sys_onslideend.call",
        "nexacro.round",
        "stepselector.set_stepindex",
        "this._createStepChangeAnimation",
        "this._getZoom",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase.loadForm",
      "params": [
        "formurl",
        "async",
        "reload",
        "baseurl"
      ],
      "calls": [
        "application._registerLoadforms",
        "nexacro._getBaseUrl",
        "nexacro._getFDLLocation",
        "nexacro._getServiceObject",
        "nexacro.getApplication",
        "this._load_manager.loadMainModule"
      ]
    },
    {
      "name": "_pFormBase.getParentContext",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFormBase._getFormBaseUrl",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFormBase._findChildObject",
      "params": [
        "queryid"
      ],
      "calls": [
        "queryid.indexOf",
        "queryid.substring"
      ]
    },
    {
      "name": "_pFormBase._getDatasetObject",
      "params": [
        "queryid"
      ],
      "calls": [
        "_ds._isDataset",
        "fn.call",
        "nexacro.getApplication",
        "p._getDatasetObject",
        "queryid.indexOf"
      ]
    },
    {
      "name": "_pFormBase._getTabOrderLast",
      "params": [
        "filter_type"
      ],
      "calls": [
        "nexacro._isNull",
        "this._getComponentsByTaborder"
      ]
    },
    {
      "name": "_pFormBase._getTabOrderFirst",
      "params": [
        "filter_type",
        "bAccessibility"
      ],
      "calls": [
        "nexacro._isNull",
        "this._getComponentsByTaborder"
      ]
    },
    {
      "name": "_pFormBase._getTabOrderNext",
      "params": [
        "current",
        "direction",
        "filter_type"
      ],
      "calls": [
        "comp._getRootComponent",
        "current._getRootComponent",
        "nexacro._indexOf",
        "nexacro._isNull",
        "this._getComponentsByTaborder"
      ]
    },
    {
      "name": "_pFormBase._getComponentsByTaborder",
      "params": [
        "p",
        "filter_type",
        "include_not_created",
        "bAccessibility"
      ],
      "calls": [
        "comp._hasContainer",
        "comp._isAccessibilityEnable",
        "comp._isEnable",
        "comp._isVisible",
        "comp.on_get_prop_tabstop",
        "this.getStepIndex"
      ]
    },
    {
      "name": "_pFormBase._searchNextTabFocus",
      "params": [
        "current",
        "b_search_from_first",
        "opt_force_cycle",
        "filter_type"
      ],
      "calls": [
        "nexacro._isEmbeddedWindow",
        "nexacro._isNull",
        "next._checkContainerTabFocus",
        "next._getComponentsByTaborder",
        "next._hasContainer",
        "next._isAccessibilityEnable",
        "next._searchNextTabFocus",
        "parent._getComponentsByTaborder",
        "parent._getNextFrame",
        "parent._hasContainer",
        "parent._searchNextTabFocus",
        "ret.form._getTabOrderFirst",
        "this._getComponentsByTaborder",
        "this._getRootWindow",
        "this._getTabOrderFirst",
        "this._getTabOrderNext",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pFormBase._searchPrevTabFocus",
      "params": [
        "current",
        "bSearchFromLast",
        "opt_force_cycle",
        "filter_type"
      ],
      "calls": [
        "nexacro._isEmbeddedWindow",
        "next._getComponentsByTaborder",
        "next._hasContainer",
        "next._searchPrevTabFocus",
        "parent._getComponentsByTaborder",
        "parent._getPrevFrame",
        "parent._hasContainer",
        "parent._searchPrevTabFocus",
        "ret.form._getTabOrderLast",
        "this._checkContainerTabFocus",
        "this._getComponentsByTaborder",
        "this._getRootWindow",
        "this._getTabOrderLast",
        "this._getTabOrderNext",
        "this._isPopupVisible",
        "this._p_parent._searchPrevTabFocus"
      ]
    },
    {
      "name": "_pFormBase._getComponentsByLayoutorder",
      "params": [],
      "calls": [
        "ar.reduce"
      ]
    },
    {
      "name": "_pFormBase._getLayoutOrderFirst",
      "params": [],
      "calls": [
        "this._getComponentsByLayoutorder"
      ]
    },
    {
      "name": "_pFormBase._getLayoutOrderLast",
      "params": [],
      "calls": [
        "this._getComponentsByLayoutorder"
      ]
    },
    {
      "name": "_pFormBase._getLayoutOrderNext",
      "params": [
        "currentid",
        "direction"
      ],
      "calls": [
        "this._getComponentsByLayoutorder"
      ]
    },
    {
      "name": "_pFormBase._setPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "this._adjustPosition",
        "this._p_parent._getClientHeight",
        "this._p_parent._getClientWidth",
        "this._setAdjustPosition",
        "this.on_update_position"
      ]
    },
    {
      "name": "_pFormBase._setSize",
      "params": [
        "width",
        "height",
        "update"
      ],
      "calls": [
        "nexacro.__isDeactivate",
        "this._adjustPosition",
        "this._p_parent._getClientHeight",
        "this._p_parent._getClientWidth",
        "this.on_update_position"
      ]
    },
    {
      "name": "_pFormBase._on_prepare_stepcontents",
      "params": [
        "stepcount",
        "stepindex"
      ],
      "calls": [
        "control_elem.removeChildElement",
        "control_elem.setElementHScrollPos",
        "control_elem.setElementStepCount",
        "control_elem.setElementStepIndex",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase._on_refresh_stepcontents",
      "params": [
        "stepcount",
        "stepindex"
      ],
      "calls": [
        "control_elem.appendChildElement",
        "this._createStepControl",
        "this._p_stepselector.on_created",
        "this._p_stepselector.set_stepcount",
        "this._p_stepselector.set_stepindex",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase._on_restore_stepscroll",
      "params": [
        "obj"
      ],
      "calls": [
        "control_elem.getContainerElement",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._scrollTo",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase._createStepControl",
      "params": [
        "stepcnt",
        "stepidx"
      ],
      "calls": [
        "nexacro.StepControl",
        "step_ctrl.createComponent",
        "step_ctrl.set_stepcount",
        "step_ctrl.set_stepindex",
        "step_ctrl.set_stepitemgap",
        "step_ctrl.set_stepitemsize",
        "this._setEventHandler"
      ]
    },
    {
      "name": "_pFormBase._recalcStepLayout",
      "params": [],
      "calls": [
        "step_ctrl._getItemAreaSize",
        "step_ctrl.move",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getCurrentStyleBorder",
        "this._p_stepalign.split",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase._on_stepchanged",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "this._createStepChangeAnimation",
        "this._getZoom",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase._createStepChangeAnimation",
      "params": [
        "target_index",
        "duration"
      ],
      "calls": [
        "info.timer.start",
        "nexacro.AnimationFrame",
        "pThis._on_stepchange_animation",
        "stepselector.set_visible",
        "this._getZoom",
        "this._on_cancel_stepchange_animation",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase._on_stepchange_animation",
      "params": [],
      "calls": [
        "Math.min",
        "control_elem.setElementHScrollPos",
        "info.timer.start",
        "this._on_end_stepchange_animation",
        "this.getElement"
      ]
    },
    {
      "name": "_pFormBase._on_end_stepchange_animation",
      "params": [],
      "calls": [
        "control_elem.setElementHScrollPos",
        "control_elem.setElementStepIndex",
        "info.timer.stop",
        "this.getElement",
        "this.on_apply_stepshowtype",
        "this.resetScroll"
      ]
    },
    {
      "name": "_pFormBase._on_cancel_stepchange_animation",
      "params": [],
      "calls": [
        "info.timer.stop"
      ]
    },
    {
      "name": "_pFormBase._processArrowKey",
      "params": [
        "bdown",
        "newfocus_comp"
      ],
      "calls": [
        "comp._getAccessibilityReadLabel",
        "comp.getElement",
        "nexacro.getEnvironment",
        "this._getTabOrderFirst",
        "this._getTabOrderLast",
        "this._getWindow",
        "win._removeFromCurrentFocusPath"
      ]
    },
    {
      "name": "_pFormBase._processHotkey",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "obj"
      ],
      "calls": [
        "comp._on_hotkey",
        "owner_frame._processHotkey",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFormBase._appendBeforeCloseMsg",
      "params": [
        "current_message",
        "new_message"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pFormBase._checkAndConfirmClose",
      "params": [
        "confirm_message"
      ],
      "calls": [
        "nexacro._confirm"
      ]
    },
    {
      "name": "_pFormBase._setFittocontents",
      "params": [
        "v"
      ],
      "calls": [
        "control_elem._setElementFittocontents",
        "this.getElement"
      ]
    },
    {
      "name": "nexacro.Form",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.FormBase.call",
        "nexacro.TriggerManager"
      ]
    },
    {
      "name": "_pForm.onCreateComponent",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "this._applyAccessibility",
        "this._applyProperties",
        "this._calcBasisSize",
        "this._changeControlElement",
        "this._createControlElement",
        "this._initContents",
        "this._initControlElement",
        "this._initLayoutManager"
      ]
    },
    {
      "name": "_pForm.onCreateComponentAfter",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "this._getWindow",
        "this._onResetScrollBar",
        "this._on_activate",
        "this.getElement"
      ]
    },
    {
      "name": "_pForm.onCreatedAfter",
      "params": [
        "resultCreated"
      ],
      "calls": [
        "this._p_stepselector.createComponent",
        "this._p_stepselector.getElement",
        "this._p_stepselector.on_created",
        "this.on_apply_stepshowtype",
        "this.on_fire_oninit",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pForm._initControlElementLayoutProps",
      "params": [],
      "calls": [
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "this._adjustPosition",
        "this._calcArrangePosition",
        "this._isFluidContainer",
        "this._selectLayout",
        "this._setLayoutContainerProps",
        "this.getElement",
        "this.getStepCount"
      ]
    },
    {
      "name": "_pForm._createdControlElementLayoutProps",
      "params": [],
      "calls": [
        "manager.calcFluidLayoutContents",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pForm.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._on_change_containerRect_fluid",
        "this._on_change_containerRect_static"
      ]
    },
    {
      "name": "_pForm._on_change_containerRect_static",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "chk.push",
        "comp._update_position",
        "comp.getOffsetBottom",
        "control_elem.setElementHScrollPos",
        "this._getLastFocused",
        "this._isRtl",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._recalcStepLayout",
        "this.getElement",
        "this.getOffsetBottom",
        "this.vscrollbar.set_pos"
      ]
    },
    {
      "name": "_pForm._on_change_containerRect_fluid",
      "params": [],
      "calls": [
        "comp._update_position",
        "comp.getOffsetBottom",
        "manager.calcFluidLayoutContents",
        "nexacro._getLayoutManager",
        "this._getLastFocused",
        "this._isRtl",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this.getOffsetBottom",
        "this.vscrollbar.set_pos"
      ]
    },
    {
      "name": "_pForm.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.FormBase.prototype.on_destroy_contents.call",
        "this._trigger_manager.destroy"
      ]
    },
    {
      "name": "_pForm._resetObject",
      "params": [],
      "calls": [
        "nexacro.BindManager",
        "nexacro.Collection",
        "nexacro.TriggerManager",
        "nexacro._LoadManager",
        "nexacro._TimerManager"
      ]
    },
    {
      "name": "_pForm._resetProperties",
      "params": [],
      "calls": [
        "this._p_parent._getClientHeight",
        "this._p_parent._getClientWidth",
        "this.init"
      ]
    },
    {
      "name": "_pForm._changeControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "parent_elem.appendChildElement"
      ]
    },
    {
      "name": "_pForm._on_load",
      "params": [
        "obj",
        "url"
      ],
      "calls": [
        "parent_foraddcallback._addLoadCallbacklist",
        "this._on_loadcallback"
      ]
    },
    {
      "name": "_pForm._addLoadCallbacklist",
      "params": [
        "item"
      ],
      "calls": [
        "this._load_callbacklist.push"
      ]
    },
    {
      "name": "_pForm._on_loadcallback",
      "params": [],
      "calls": [
        "_window.getCurrentFocusPaths",
        "application._notifyLoadforms",
        "callbacklist.splice",
        "item.callback.call",
        "nexacro._indexOf",
        "nexacro.getApplication",
        "parent._createdForm",
        "this._getRootWindow",
        "this._getWindow",
        "this._on_activate",
        "this._on_focus",
        "this._playAccessibilityWholeReadLabel",
        "this.createComponent",
        "this.on_created",
        "this.on_fire_oninit"
      ]
    },
    {
      "name": "_pForm._update_position",
      "params": [
        "isrtl"
      ],
      "calls": [
        "this._update_position_fluid",
        "this._update_position_static"
      ]
    },
    {
      "name": "_pForm.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "control_elem._setElementContentsMaxSize",
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "this._calcScrollMaxSize",
        "this._updateClientSize",
        "this.on_fire_onmove",
        "this.on_fire_onsize"
      ]
    },
    {
      "name": "_pForm.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._p_parent._applyStatusText",
        "this._p_parent._applyTitleText"
      ]
    },
    {
      "name": "_pForm.set_statustext",
      "params": [
        "v"
      ],
      "calls": [
        "parent._applyStatusText"
      ]
    },
    {
      "name": "_pForm.set_titletext",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_parent._applyTitleText",
        "this._setAccessibilityLabel"
      ]
    },
    {
      "name": "_pForm.set_dragscrolltype",
      "params": [
        "v"
      ],
      "calls": [
        "dragscrolltype_enum.indexOf"
      ]
    },
    {
      "name": "_pForm.set_locale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale"
      ]
    },
    {
      "name": "_pForm.on_apply_locale",
      "params": [
        "locale"
      ],
      "calls": [
        "comp._setLocale"
      ]
    },
    {
      "name": "_pForm.set_stepalign",
      "params": [
        "v"
      ],
      "calls": [
        "halign_enum.indexOf",
        "parts2.join",
        "this._p_stepalign.split",
        "this.on_apply_stepalign",
        "v.split",
        "valign_enum.indexOf"
      ]
    },
    {
      "name": "_pForm.on_apply_stepalign",
      "params": [
        "/*stepalign*/"
      ],
      "calls": [
        "this._recalcStepLayout"
      ]
    },
    {
      "name": "_pForm.set_stepitemgap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_stepitemgap"
      ]
    },
    {
      "name": "_pForm.on_apply_stepitemgap",
      "params": [
        "stepitemgap"
      ],
      "calls": [
        "step_ctrl.set_stepitemgap"
      ]
    },
    {
      "name": "_pForm.set_stepitemsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_stepitemsize"
      ]
    },
    {
      "name": "_pForm.on_apply_stepitemsize",
      "params": [
        "stepitemsize"
      ],
      "calls": [
        "step_ctrl.set_stepitemsize"
      ]
    },
    {
      "name": "_pForm.set_stepshowtype",
      "params": [
        "v"
      ],
      "calls": [
        "stepshowtype_enum.indexOf",
        "this.on_apply_stepshowtype"
      ]
    },
    {
      "name": "_pForm.on_apply_stepshowtype",
      "params": [
        "stepshowtype"
      ],
      "calls": [
        "step_ctrl.set_visible"
      ]
    },
    {
      "name": "_pForm.on_apply_prop_enable",
      "params": [
        "enable"
      ],
      "calls": [
        "comp._setEnable",
        "form._getParentForm",
        "nexacro.Component.prototype.on_apply_prop_enable.call",
        "this._applyBinditemEnable",
        "this._getRootForm"
      ]
    },
    {
      "name": "_pForm._on_activate",
      "params": [],
      "calls": [
        "nexacro.FormBase.prototype._on_activate.call",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pForm._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.FormBase.prototype._on_deactivate.call",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pForm._on_starttrack",
      "params": [],
      "calls": [
        "ownerframe._on_titlebar_starttrack",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pForm._on_endtrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "ownerframe._on_titlebar_endtrack",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pForm._on_movetrack",
      "params": [
        "x",
        "y",
        "dragdata",
        "windowX",
        "windowY"
      ],
      "calls": [
        "ownerframe._on_titlebar_movetrack",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pForm._on_orientationchange",
      "params": [
        "orientation"
      ],
      "calls": [
        "comp._hasContainer",
        "comp._on_orientationchange",
        "this.on_fire_onorientationchange"
      ]
    },
    {
      "name": "_pForm.on_fire_sys_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onrbuttonup.call",
        "nexacro._showQuickviewMenu"
      ]
    },
    {
      "name": "_pForm.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "_win._removeFromCurrentFocusPath",
        "defaultbutton._click",
        "defaultbutton._isEnable",
        "escapebutton._click",
        "escapebutton._isEnable",
        "focusedComp._getDlgCode",
        "focusedComp._getRootComponent",
        "focusedComp._isPopupVisible",
        "hscrollbar.set_pos",
        "lastfocus_comp._hasContainer",
        "lastfocus_comp._searchNextTabFocus",
        "lastfocus_comp.getElement",
        "nexacro.Component.prototype.on_fire_user_onkeydown.call",
        "nexacro._stopTransaction",
        "nexacro.getEnvironment",
        "refform._searchPrevTabFocus",
        "this._getRootWindow",
        "this._getTabOrderFirst",
        "this._getWindow",
        "this._isComponentKeydownAction",
        "this._last_focused._hasContainer",
        "this._p_parent._getForm",
        "this._p_parent._isAccessibilityEnable",
        "this._searchNextTabFocus",
        "this._searchPrevTabFocus",
        "this.getFocus",
        "vscrollbar.set_pos",
        "win._removeFromCurrentFocusPath"
      ]
    },
    {
      "name": "_pForm.on_fire_sys_onflingend",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "_win.getCurrentFocusPaths",
        "nexacro.Component.prototype.on_fire_sys_onfling.call",
        "nexacro._deleteRefreshNode",
        "nexacro._refreshCaret",
        "this._getWindow"
      ]
    },
    {
      "name": "_pForm.on_fire_oninit",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.Event",
        "this.oninit._fireEvent"
      ]
    },
    {
      "name": "_pForm.on_fire_canstepchange",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.StepChangeEventInfo",
        "this.canstepchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pForm.on_fire_onstepchanged",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.StepChangeEventInfo",
        "this._on_restore_stepscroll",
        "this.onstepchanged._fireEvent"
      ]
    },
    {
      "name": "_pForm.on_fire_canlayoutchange",
      "params": [
        "obj",
        "eventid",
        "curlayoutname",
        "newlayoutname",
        "curlayoutwidth",
        "newlayoutwidth",
        "curlayoutheight",
        "newlayoutheight"
      ],
      "calls": [
        "nexacro.LayoutChangeEventInfo",
        "this.canlayoutchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pForm.on_fire_onlayoutchanged",
      "params": [
        "obj",
        "eventid",
        "curlayoutname",
        "newlayoutname",
        "curlayoutwidth",
        "newlayoutwidth",
        "curlayoutheight",
        "newlayoutheight"
      ],
      "calls": [
        "nexacro.LayoutChangeEventInfo",
        "this.onlayoutchanged._fireEvent"
      ]
    },
    {
      "name": "_pForm.on_fire_onbeforelayoutchange",
      "params": [
        "obj",
        "eventid",
        "curlayout",
        "newlayout"
      ],
      "calls": [
        "nexacro.LayoutChangeEventInfo",
        "this.onbeforelayoutchange._fireEvent"
      ]
    },
    {
      "name": "_pForm.on_fire_onload",
      "params": [
        "obj",
        "url"
      ],
      "calls": [
        "evt.destroy",
        "nexacro.LoadEventInfo",
        "this.onload._fireEvent"
      ]
    },
    {
      "name": "_pForm.on_fire_onorientationchange",
      "params": [
        "orientation"
      ],
      "calls": [
        "nexacro.OrientationChangeEventInfo",
        "this.onorientationchange._fireEvent"
      ]
    },
    {
      "name": "_pForm.on_fire_sys_onaccessibilitygesture",
      "params": [
        "direction",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "accessibility_focus_comp._getRootComponent",
        "this._getWindow",
        "this._searchNextTabFocus",
        "this._searchPrevTabFocus",
        "this.getFocus"
      ]
    },
    {
      "name": "_pForm.addChild",
      "params": [
        "id",
        "obj"
      ],
      "calls": [
        "nexacro.MakeNativeError",
        "nexacro.MakeReferenceError",
        "obj._getWindow",
        "obj.getElement",
        "this._child_list.push",
        "this._control_element.appendChildElement",
        "this._p_all.add_item",
        "this._p_binds.add_item",
        "this._p_components.add_item",
        "this._p_objects.add_item"
      ]
    },
    {
      "name": "_pForm.resetScroll",
      "params": [],
      "calls": [
        "comp._update_position",
        "manager.calcFluidLayoutContents",
        "nexacro._getLayoutManager",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar"
      ]
    },
    {
      "name": "_pForm.close",
      "params": [
        "arg"
      ],
      "calls": [
        "childframe._checkAndConfirmClose",
        "childframe._on_beforeclose",
        "childframe._on_close",
        "this._p_parent._closeForm",
        "this.setWaitCursor"
      ]
    },
    {
      "name": "_pForm.getFirstComponent",
      "params": [
        "no_composite_flag"
      ],
      "calls": [
        "first._getTabOrderFirst",
        "first._hasContainer",
        "this._getComponentsByTaborder"
      ]
    },
    {
      "name": "_pForm.getLastComponent",
      "params": [
        "no_composite_flag"
      ],
      "calls": [
        "last._getTabOrderLast",
        "last._hasContainer",
        "this._getComponentsByTaborder"
      ]
    },
    {
      "name": "_pForm.getFirstAccessibilityComponent",
      "params": [
        "no_composite_flag"
      ],
      "calls": [
        "first._getTabOrderFirst",
        "first._hasContainer",
        "this._getComponentsByTaborder"
      ]
    },
    {
      "name": "_pForm.getLastAccessibilityComponent",
      "params": [
        "no_composite_flag"
      ],
      "calls": [
        "last._getTabOrderLast",
        "last._hasContainer",
        "this._getComponentsByTaborder"
      ]
    },
    {
      "name": "_pForm._getNextComponent",
      "params": [
        "comp",
        "no_composite_flag",
        "only_enable_flag"
      ],
      "calls": [
        "comp._getRootComponent",
        "nexacro._indexOf",
        "this._getComponentsByTaborder",
        "this._searchNextTabFocus"
      ]
    },
    {
      "name": "_pForm.getNextComponent",
      "params": [
        "comp",
        "no_composite_flag"
      ],
      "calls": [
        "this._getNextComponent"
      ]
    },
    {
      "name": "_pForm._getPrevComponent",
      "params": [
        "comp",
        "no_composite_flag",
        "only_enable_flag"
      ],
      "calls": [
        "comp._getRootComponent",
        "nexacro._indexOf",
        "parent._getForm",
        "parent_form._getPrevComponent",
        "this._getComponentsByTaborder",
        "this._searchPrevTabFocus"
      ]
    },
    {
      "name": "_pForm.getPrevComponent",
      "params": [
        "comp",
        "no_composite_flag"
      ],
      "calls": [
        "this._getPrevComponent"
      ]
    },
    {
      "name": "_pForm.getFocus",
      "params": [],
      "calls": [
        "this._find_lastFocused"
      ]
    },
    {
      "name": "_pForm.go",
      "params": [
        "strUrl"
      ],
      "calls": [
        "this._checkAndConfirmClose",
        "this._on_beforeclose",
        "this._on_close",
        "this._resetComponent",
        "this.loadForm",
        "this.set_visible"
      ]
    },
    {
      "name": "_pForm.hasPopupFrame",
      "params": [],
      "calls": [
        "nexacro.getPopupFrames",
        "this._getWindow"
      ]
    },
    {
      "name": "_pForm.insertChild",
      "params": [
        "idx",
        "id",
        "obj"
      ],
      "calls": [
        "beforecomp.getElement",
        "obj.getElement",
        "this._child_list.push",
        "this._control_element.insertChildElement",
        "this._p_all.add_item",
        "this._p_binds.insert_item",
        "this._p_components.insert_item",
        "this._p_objects.insert_item",
        "this._setAccessibilityStatHidden"
      ]
    },
    {
      "name": "_pForm.isValidObject",
      "params": [
        "target"
      ],
      "calls": [
        "nexacro._indexOf"
      ]
    },
    {
      "name": "_pForm.killTimer",
      "params": [
        "nTimerID"
      ],
      "calls": [
        "this._timerManager.deleteTimer"
      ]
    },
    {
      "name": "_pForm.setTimer",
      "params": [
        "nTimerID",
        "nElapse"
      ],
      "calls": [
        "nexacro._EventTimer",
        "timer.start"
      ]
    },
    {
      "name": "_pForm.loadStyle",
      "params": [
        "url",
        "bclear"
      ],
      "calls": [
        "cssurl.join",
        "cssurl.push",
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "this._clearCssInfo",
        "this._load_manager.reloadCssModule",
        "this._resetFormStatus"
      ]
    },
    {
      "name": "_pForm.reload",
      "params": [],
      "calls": [
        "this._resetComponent",
        "this.loadForm",
        "this.set_visible"
      ]
    },
    {
      "name": "_pForm.removeChild",
      "params": [
        "id"
      ],
      "calls": [
        "_window._indexOfCurrentFocusPaths",
        "_window._removeFromCurrentFocusPath",
        "nexacro._indexOf",
        "obj._control_element._removeFromContainer",
        "obj._on_deactivate",
        "this._bind_manager._dettachSBindItem",
        "this._bind_manager._setBinditem",
        "this._child_list.splice",
        "this._getWindow",
        "this._isFluidContainer",
        "this._on_focus",
        "this._p_all.delete_item",
        "this._p_binds.delete_item",
        "this._p_components.delete_item",
        "this._p_objects.delete_item",
        "this._update_position_fluid"
      ]
    },
    {
      "name": "_pForm.setWaitCursor",
      "params": [
        "wait_flag",
        "forcely_flag"
      ],
      "calls": [
        "this._waitCursor"
      ]
    },
    {
      "name": "_pForm.sleep",
      "params": [
        "nMilliseconds"
      ],
      "calls": []
    },
    {
      "name": "_pForm.transaction",
      "params": [
        "id",
        "url",
        "inDatasetsParam",
        "outDatasetsParam",
        "argsParam",
        "callbackFn",
        "isAsync",
        "datatype",
        "isCompress"
      ],
      "calls": [
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "this._load_manager.loadDataModule"
      ]
    },
    {
      "name": "_pForm.cancelTransaction",
      "params": [
        "id"
      ],
      "calls": [
        "datalistfiltered.push",
        "id.split",
        "nexacro._removedatalist",
        "this._stopTransaction"
      ]
    },
    {
      "name": "_pForm.updateWindow",
      "params": [],
      "calls": []
    },
    {
      "name": "_pForm.getStepCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pForm.setStepCount",
      "params": [
        "cnt"
      ],
      "calls": [
        "layout.getCurrentLayoutName",
        "layout.setLayoutProperty",
        "manager.isFluidLayoutType",
        "nexacro._getLayoutManager",
        "this._createStepControl",
        "this._on_prepare_stepcontents",
        "this._on_refresh_stepcontents",
        "this._p_stepselector.on_created"
      ]
    },
    {
      "name": "_pForm.setStepIndex",
      "params": [
        "index"
      ],
      "calls": [
        "step_ctrl.set_stepindex"
      ]
    },
    {
      "name": "_pForm.getStepIndex",
      "params": [],
      "calls": []
    },
    {
      "name": "_pForm.applyChange",
      "params": [],
      "calls": [
        "comp.applyto_bindSource",
        "this._bind_manager._notify"
      ]
    },
    {
      "name": "_pForm.getCurrentLayoutID",
      "params": [],
      "calls": [
        "manager.getCurrentLayoutName",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pForm.move",
      "params": [
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom"
      ],
      "calls": [
        "manager.selectLayoutAllContainer",
        "nexacro.Component.prototype.move.call",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pForm.resize",
      "params": [
        "w",
        "h"
      ],
      "calls": [
        "manager.selectLayoutAllContainer",
        "nexacro._getLayoutManager",
        "this._update_position"
      ]
    },
    {
      "name": "_pForm._onRecalcScrollSize",
      "params": [
        "fromComp"
      ],
      "calls": [
        "Math.max",
        "comp.getOffsetBottom",
        "comp.getOffsetRight",
        "control_elem._setElementContentsMaxSize",
        "control_elem.getContainerElement",
        "control_elem.setElementScrollMaxSize",
        "fromComp.getOffsetBottom",
        "fromComp.getOffsetRight",
        "nexacro._isString",
        "nexacro._toInt",
        "this._calcScrollMaxSize",
        "this._getZoom"
      ]
    },
    {
      "name": "_pForm._resetScrollPos",
      "params": [
        "target_comp",
        "left",
        "top",
        "right",
        "bottom",
        "focus_direction"
      ],
      "calls": [
        "control_elem.getClientHeight",
        "control_elem.getClientWidth",
        "hscroll.set_pos",
        "parent._resetScrollPos",
        "this.getElement",
        "vscroll.set_pos"
      ]
    },
    {
      "name": "_pForm._resetFormStatus",
      "params": [
        "obj"
      ],
      "calls": [
        "comp._apply_status",
        "this._apply_status",
        "this._resetFormStatus"
      ]
    },
    {
      "name": "_pForm._on_getFitSize",
      "params": [],
      "calls": [
        "this._calcScrollMaxSize",
        "this._on_getFitSize_scroll",
        "this._on_getFitSize_style"
      ]
    },
    {
      "name": "_pForm._calcScrollMaxSize",
      "params": [],
      "calls": [
        "Math.max",
        "comp._p_height.indexOf",
        "comp._p_width.indexOf",
        "comp.getOffsetBottom",
        "comp.getOffsetRight",
        "manager.getContentsMaxRect",
        "nexacro._getLayoutManager",
        "nexacro._isString"
      ]
    },
    {
      "name": "_pForm._onApplyTabletemplate",
      "params": [
        "prev_layout_name"
      ],
      "calls": [
        "control_element.setElementTableTemplate",
        "manager.calcFluidLayoutContents",
        "manager.getCurrentLayout",
        "manager.getLayout",
        "nexacro._getLayoutManager",
        "nexacro._isDesignMode",
        "this.getElement"
      ]
    },
    {
      "name": "_pForm._setSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "focused_comp.setFocus",
        "layout_manger.getLayoutChangeFlag",
        "layout_manger.setLayoutChangeFlag",
        "nexacro._getLayoutManager",
        "nexacro._isDesktop",
        "this._adjustPosition",
        "this._calcBasisSize",
        "this._notifyFrameResize",
        "this._selectLayout",
        "this.getElement",
        "this.getOwnerFrame",
        "this.on_update_position"
      ]
    },
    {
      "name": "_pForm._setZoom",
      "params": [
        "v"
      ],
      "calls": [
        "_p_parent._applyZoomPopup",
        "control_elem.setElementScrollMaxSize",
        "control_elem.setElementZoom",
        "nexacro._applyZoomEdge",
        "this._contains",
        "this._getZoom",
        "this._updateClientSize",
        "this.on_fire_onzoom",
        "v.charAt",
        "v.slice"
      ]
    },
    {
      "name": "_pForm._getZoom",
      "params": [],
      "calls": []
    },
    {
      "name": "_pForm._setFormPosition",
      "params": [
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "_pForm._setDragMove",
      "params": [
        "v",
        "is_windowframe"
      ],
      "calls": [
        "this.on_apply_hittesttype"
      ]
    },
    {
      "name": "_pForm._stopTransaction",
      "params": [
        "is_cancel"
      ],
      "calls": [
        "nexacro._cancelLoad",
        "tritem.on_error"
      ]
    },
    {
      "name": "_pForm._dragEnd",
      "params": [
        "info"
      ],
      "calls": [
        "stepselector.set_stepindex",
        "this.getElement"
      ]
    },
    {
      "name": "_pForm._getDefaultButton",
      "params": [],
      "calls": [
        "comp._getDefaultButton",
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pForm._getEscapeButton",
      "params": [],
      "calls": [
        "comp._getEscapeButton",
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pForm._getAccessibilityWholeReadLabel",
      "params": [],
      "calls": [
        "comp._getAccessibilityReadLabel",
        "comp._isAccessibilityEnable",
        "label.trim",
        "this._getSortedDecendants"
      ]
    },
    {
      "name": "_pForm._playAccessibilityWholeReadLabel",
      "params": [
        "type"
      ],
      "calls": [
        "control.notifyAccessibility",
        "nexacro._isDesktop",
        "this._getAccessibilityWholeReadLabel",
        "this.getElement"
      ]
    },
    {
      "name": "_pForm._getSortedDecendants",
      "params": [
        "p",
        "include_not_tabstop",
        "bAccessibility"
      ],
      "calls": [
        "comp._isAccessibilityEnable",
        "comp._isEnable",
        "comp.on_get_prop_tabstop"
      ]
    },
    {
      "name": "_pForm._getAsync",
      "params": [],
      "calls": []
    },
    {
      "name": "_pForm.on_notifytrigger",
      "params": [
        "obj",
        "info"
      ],
      "calls": [
        "manager._notifyTrigger"
      ]
    },
    {
      "name": "_pForm._setTriggerInfo",
      "params": [
        "contents"
      ],
      "calls": [
        "this._trigger_manager._settriggerinfo",
        "this._trigger_manager.inittriggerinfo"
      ]
    },
    {
      "name": "_pForm._applyBinditemEnable",
      "params": [
        "binds"
      ],
      "calls": [
        "comp._p_parent._isEnable",
        "comp._setEnable"
      ]
    },
    {
      "name": "_pForm._init",
      "params": [],
      "calls": [
        "this._initLayoutManager"
      ]
    },
    {
      "name": "_pForm._initLayoutManager",
      "params": [],
      "calls": [
        "manager.createLayoutContainerInfo",
        "manager.setLayoutScrollType",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pForm._selectLayout",
      "params": [],
      "calls": [
        "layout_manager.applyFluid",
        "layout_manager.applyStep",
        "layout_manager.selectLayout",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pForm._setInnerFlexibleFlag",
      "params": [
        "is_flexible",
        "is_calc"
      ],
      "calls": [
        "this._applyFlexiblePosition",
        "this._setLayoutContainerProps",
        "this.getStepCount"
      ]
    },
    {
      "name": "_pForm._applyFlexiblePosition",
      "params": [
        "is_flexible"
      ],
      "calls": [
        "comp._setLayoutContentsProps",
        "comp.getElement",
        "comp.move",
        "control_elem._clearLayoutBasis",
        "control_elem.setElementLayoutFluidPos",
        "control_elem.setElementPosition"
      ]
    },
    {
      "name": "_pForm._notifyFrameResize",
      "params": [],
      "calls": [
        "comp._notify_frame_resize"
      ]
    },
    {
      "name": "_pForm._areConsecutive",
      "params": [
        "componentids"
      ],
      "calls": [
        "arr.push",
        "arr.sort",
        "arrorw.push",
        "comp._getTablecellareaCoordinate",
        "comp._group_panel._areConsecutive",
        "componentids.replace",
        "form_comps.add_item",
        "form_comps.indexOf",
        "manager.getLayoutType",
        "nexacro.Collection",
        "nexacro._getLayoutManager",
        "org_form_comps.indexOf",
        "parent._areConsecutive"
      ]
    },
    {
      "name": "_pForm._getComponentsRect",
      "params": [
        "componentids"
      ],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "comp._getForm",
        "comp._getTablecellareaCoordinate",
        "comp.getOffsetHeight",
        "comp.getOffsetLeft",
        "comp.getOffsetTop",
        "comp.getOffsetWidth",
        "componentids.replace",
        "manager.getLayoutType",
        "nexacro._getLayoutManager",
        "parent._getCurrentStyleBorder",
        "parent._getCurrentStylePadding",
        "parent.getOffsetHeight",
        "parent.getOffsetWidth",
        "this._areConsecutive",
        "this.getOffsetHeight",
        "this.getOffsetWidth"
      ]
    },
    {
      "name": "_pForm._removeChildFromContainer",
      "params": [
        "obj"
      ],
      "calls": [
        "container_elem.removeChildElement",
        "control_elem.removeChildElement",
        "obj.getElement",
        "this.getElement",
        "this.getStepCount"
      ]
    },
    {
      "name": "_pForm._addChildToContainer",
      "params": [
        "obj"
      ],
      "calls": [
        "client_elem.appendChildElement",
        "control_elem.appendChildElement",
        "control_elem.getContainerElement",
        "obj.getElement",
        "this.getElement",
        "this.getStepCount"
      ]
    },
    {
      "name": "nexacro._InnerForm",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Form.call"
      ]
    },
    {
      "name": "_pInnerForm.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.FormBase.prototype.on_created_contents.call",
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pInnerForm._resetProperties",
      "params": [],
      "calls": [
        "this._p_parent._getClientHeight",
        "this._p_parent._getClientWidth",
        "this.init"
      ]
    },
    {
      "name": "_pInnerForm.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "nexacro.Form.prototype.on_update_position.call"
      ]
    },
    {
      "name": "_pInnerForm.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus/*",
        "currentstatus",
        "currentuserstatus*/"
      ],
      "calls": []
    },
    {
      "name": "_pInnerForm._on_load",
      "params": [
        "obj",
        "url"
      ],
      "calls": [
        "nexacro.Form.prototype._on_load.call",
        "this._p_parent.applyTransitionEffect"
      ]
    },
    {
      "name": "_pInnerForm._onHttpSystemError",
      "params": [
        "obj",
        "bfireevent",
        "errorobj",
        "errortype",
        "url",
        "returncode",
        "requesturi",
        "locationuri",
        "extramsg"
      ],
      "calls": [
        "nexacro.Form.prototype._onHttpSystemError.call",
        "this._p_parent.cancelTransitionEffect"
      ]
    },
    {
      "name": "_pInnerForm._getScrollBarSize",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pInnerForm._getScrollIndicatorSize",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "nexacro.getEnvironment"
      ]
    },
    {
      "name": "_pInnerForm._createVScrollBar",
      "params": [
        "scroll_size"
      ],
      "calls": [
        "nexacro.ScrollBarControl",
        "nexacro.ScrollIndicatorControl",
        "nexacro._isNull",
        "this._getClientWidth",
        "this._getVScrollBarType",
        "this._p_vscrollbar.destroy",
        "vscrollbar._setEventHandler",
        "vscrollbar.createComponent",
        "vscrollbar.move",
        "vscrollbar.on_apply_cssclass",
        "vscrollbar.set_barminsize",
        "vscrollbar.set_baroutsize",
        "vscrollbar.set_decbuttonsize",
        "vscrollbar.set_direction",
        "vscrollbar.set_incbuttonsize",
        "vscrollbar.set_trackbarsize"
      ]
    },
    {
      "name": "_pInnerForm._createHScrollBar",
      "params": [
        "scroll_size"
      ],
      "calls": [
        "hscrollbar._setEventHandler",
        "hscrollbar.createComponent",
        "hscrollbar.move",
        "hscrollbar.on_apply_cssclass",
        "hscrollbar.set_barminsize",
        "hscrollbar.set_baroutsize",
        "hscrollbar.set_decbuttonsize",
        "hscrollbar.set_direction",
        "hscrollbar.set_incbuttonsize",
        "hscrollbar.set_trackbarsize",
        "nexacro.ScrollBarControl",
        "nexacro.ScrollIndicatorControl",
        "nexacro._isNull",
        "this._getClientHeight",
        "this._getHScrollBarType",
        "this._p_hscrollbar.destroy"
      ]
    },
    {
      "name": "_pInnerForm.set_url",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_parent.set_url"
      ]
    },
    {
      "name": "_pInnerForm.set_scrollbartype",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_scrollbartype"
      ]
    },
    {
      "name": "_pInnerForm.on_apply_scrollbartype",
      "params": [],
      "calls": [
        "control_elem.setElementScrollbarSize",
        "this._getHScrollBarSize",
        "this._getHScrollBarType",
        "this._getVScrollBarSize",
        "this._getVScrollBarType",
        "this._onResetScrollBar",
        "this.getElement",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pInnerForm.set_scrolltype",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isNull",
        "nexacro._toString",
        "this.on_apply_scrolltype",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pInnerForm.on_apply_scrolltype",
      "params": [],
      "calls": [
        "control_elem.setElementScrollbarSize",
        "this._getHScrollBarSize",
        "this._getHScrollBarType",
        "this._getVScrollBarSize",
        "this._getVScrollBarType",
        "this._onResetScrollBar",
        "this.getElement"
      ]
    },
    {
      "name": "_pInnerForm.set_scrollbarbarminsize",
      "params": [
        "scrollbarbarminsize"
      ],
      "calls": [
        "this.on_apply_scrollbarbarminsize"
      ]
    },
    {
      "name": "_pInnerForm.on_apply_scrollbarbarminsize",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "scrollbar.set_barminsize"
      ]
    },
    {
      "name": "_pInnerForm.set_scrollbarbaroutsize",
      "params": [
        "scrollbarbaroutsize"
      ],
      "calls": [
        "this.on_apply_scrollbarbaroutsize"
      ]
    },
    {
      "name": "_pInnerForm.on_apply_scrollbarbaroutsize",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "scrollbar.set_baroutsize"
      ]
    },
    {
      "name": "_pInnerForm.set_scrollbardecbuttonsize",
      "params": [
        "scrollbardecbuttonsize"
      ],
      "calls": [
        "this.on_apply_scrollbardecbuttonsize"
      ]
    },
    {
      "name": "_pInnerForm.on_apply_scrollbardecbuttonsize",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "scrollbar.set_decbuttonsize"
      ]
    },
    {
      "name": "_pInnerForm.set_scrollbarincbuttonsize",
      "params": [
        "scrollbarincbuttonsize"
      ],
      "calls": [
        "this.on_apply_scrollbarincbuttonsize"
      ]
    },
    {
      "name": "_pInnerForm.on_apply_scrollbarincbuttonsize",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "scrollbar.set_incbuttonsize"
      ]
    },
    {
      "name": "_pInnerForm.on_apply_scrollbarsize",
      "params": [],
      "calls": [
        "control_elem.setElementScrollbarSize",
        "this._getHScrollBarSize",
        "this._getHScrollBarType",
        "this._getVScrollBarSize",
        "this._getVScrollBarType",
        "this._onResetScrollBar",
        "this.getElement"
      ]
    },
    {
      "name": "_pInnerForm.set_scrollbartrackbarsize",
      "params": [
        "scrollbartrackbarsize"
      ],
      "calls": [
        "this.on_apply_scrollbartrackbarsize"
      ]
    },
    {
      "name": "_pInnerForm.on_apply_scrollbartrackbarsize",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "scrollbar.set_trackbarsize"
      ]
    },
    {
      "name": "_pInnerForm.loadForm",
      "params": [
        "formurl",
        "async",
        "reload",
        "baseurl"
      ],
      "calls": [
        "application._registerLoadforms",
        "nexacro.MakeURIError",
        "nexacro._getBaseUrl",
        "nexacro._getFDLLocation",
        "nexacro._getServiceObject",
        "nexacro.getApplication",
        "parent_context._getAsync",
        "parent_context.getParentContext",
        "this._clearUserFunctions",
        "this._load_manager.clearAllLoad",
        "this._load_manager.loadMainModule",
        "this._p_parent.beginTransitionEffect",
        "this.getParentContext"
      ]
    },
    {
      "name": "_pInnerForm.addChild",
      "params": [
        "id",
        "obj"
      ],
      "calls": [
        "nexacro.MakeNativeError",
        "nexacro.MakeReferenceError",
        "obj.getElement",
        "this._child_list.push",
        "this._control_element.appendChildElement",
        "this._p_all.add_item",
        "this._p_binds.add_item",
        "this._p_components.add_item",
        "this._p_objects.add_item",
        "this._p_parent._destroyTextElement",
        "this._setAccessibilityStatHidden"
      ]
    },
    {
      "name": "_pInnerForm.insertChild",
      "params": [
        "idx",
        "id",
        "obj"
      ],
      "calls": [
        "nexacro.Form.prototype.insertChild.call",
        "this._p_parent._destroyTextElement"
      ]
    },
    {
      "name": "_pInnerForm.removeChild",
      "params": [
        "id"
      ],
      "calls": [
        "nexacro.Form.prototype.removeChild.call",
        "this._p_parent.on_apply_text",
        "this._setAccessibilityStatHidden"
      ]
    },
    {
      "name": "_pInnerForm.go",
      "params": [
        "strUrl"
      ],
      "calls": [
        "this._checkAndConfirmClose",
        "this._on_beforeclose",
        "this._on_close",
        "this._resetComponent",
        "this.loadForm",
        "this.set_visible"
      ]
    },
    {
      "name": "_pInnerForm.reload",
      "params": [],
      "calls": [
        "this._p_parent.reload"
      ]
    },
    {
      "name": "_pInnerForm.getOwnerFrame",
      "params": [],
      "calls": [
        "this._p_parent.getOwnerFrame"
      ]
    },
    {
      "name": "_pInnerForm.getParentContext",
      "params": [],
      "calls": [
        "this._p_parent.getParentContext"
      ]
    },
    {
      "name": "_pInnerForm.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_onclick"
      ]
    },
    {
      "name": "_pInnerForm.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "_pInnerForm.on_fire_onhscroll",
      "params": [
        "eventid",
        "pos",
        "strType",
        "evtkind"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_onhscroll.call"
      ]
    },
    {
      "name": "_pInnerForm.on_fire_onvscroll",
      "params": [
        "eventid",
        "pos",
        "strType",
        "evtkind"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_onvscroll.call"
      ]
    },
    {
      "name": "nexacro._CompositeComponent",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "nexacro._CompositeForm"
      ]
    },
    {
      "name": "_pCompositeComponent._getFormPosition",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this._initControlElementCssInfo"
      ]
    },
    {
      "name": "_pCompositeComponent.getParentContext",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCompositeComponent.getOwnerFrame",
      "params": [],
      "calls": [
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pCompositeComponent._destroyTextElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCompositeComponent._destroyFormControl",
      "params": [],
      "calls": [
        "this._p_form._destroy"
      ]
    },
    {
      "name": "_pCompositeComponent.on_create_contents",
      "params": [],
      "calls": [
        "this._load_module"
      ]
    },
    {
      "name": "_pCompositeComponent.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "form.createComponent",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCompositeComponent._load_module",
      "params": [],
      "calls": [
        "form.loadModule",
        "nexacro._getFDLLocation",
        "refform._getRefFormBaseUrl",
        "this._get_form_module"
      ]
    },
    {
      "name": "_pCompositeComponent.on_destroy_contents",
      "params": [],
      "calls": [
        "this._destroyFormControl"
      ]
    },
    {
      "name": "_pCompositeComponent.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pCompositeComponent.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "form.createComponent",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCompositeComponent.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pCompositeComponent.on_change_containerPos",
      "params": [
        "/*left",
        "top*/"
      ],
      "calls": []
    },
    {
      "name": "_pCompositeComponent.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_form._setEnable"
      ]
    },
    {
      "name": "_pCompositeComponent.set_scrollbarbarminsize",
      "params": [
        "scrollbarbarminsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbarbarminsize.call"
      ]
    },
    {
      "name": "_pCompositeComponent.set_scrollbarbaroutsize",
      "params": [
        "scrollbarbaroutsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbarbaroutsize.call"
      ]
    },
    {
      "name": "_pCompositeComponent.set_scrollbardecbuttonsize",
      "params": [
        "scrollbardecbuttonsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbardecbuttonsize.call"
      ]
    },
    {
      "name": "_pCompositeComponent.set_scrollbarincbuttonsize",
      "params": [
        "scrollbarincbuttonsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbarincbuttonsize.call"
      ]
    },
    {
      "name": "_pCompositeComponent.set_scrollbarsize",
      "params": [
        "scrollbarsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbarsize.call"
      ]
    },
    {
      "name": "_pCompositeComponent.set_scrollbartrackbarsize",
      "params": [
        "scrollbartrackbarsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbartrackbarsize.call"
      ]
    },
    {
      "name": "_pCompositeComponent.set_scrollbartype",
      "params": [
        "scrollbartype"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollbartype.call"
      ]
    },
    {
      "name": "_pCompositeComponent.set_scrollindicatorsize",
      "params": [
        "scrollindicatorsize"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrollindicatorsize.call"
      ]
    },
    {
      "name": "_pCompositeComponent.set_scrolltype",
      "params": [
        "scrolltype"
      ],
      "calls": [
        "nexacro.Component.prototype.set_scrolltype.call"
      ]
    },
    {
      "name": "_pCompositeComponent.getFocus",
      "params": [],
      "calls": [
        "this._p_parent.getFocus"
      ]
    },
    {
      "name": "_pCompositeComponent._on_activate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_activate.call",
        "this._p_form._on_activate"
      ]
    },
    {
      "name": "_pCompositeComponent._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_deactivate.call",
        "this._p_form._on_deactivate"
      ]
    },
    {
      "name": "_pCompositeComponent._on_bubble_beforeclose",
      "params": [
        "root_closing_comp",
        "event_bubbles",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "this._p_parent._on_bubble_beforeclose"
      ]
    },
    {
      "name": "_pCompositeComponent._on_bubble_close",
      "params": [
        "event_bubbles",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "this._p_parent._on_bubble_close"
      ]
    },
    {
      "name": "_pCompositeComponent._closeForm",
      "params": [],
      "calls": [
        "this._destroyFormControl"
      ]
    },
    {
      "name": "_pCompositeComponent._recalcLayout",
      "params": [],
      "calls": [
        "form._setPos",
        "form._setSize",
        "this._getFormPosition"
      ]
    },
    {
      "name": "_pCompositeComponent._on_orientationchange",
      "params": [
        "orientation"
      ],
      "calls": [
        "this._p_form._on_orientationchange"
      ]
    },
    {
      "name": "_pCompositeComponent._getComponentsByTaborder",
      "params": [
        "/*p",
        "b_include_all*/"
      ],
      "calls": [
        "this._p_form._isEnable"
      ]
    },
    {
      "name": "_pCompositeComponent._searchNextTabFocus",
      "params": [
        "current",
        "bSearchFromFirst",
        "opt_force_cycle",
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._searchNextTabFocus.call",
        "this._p_parent._searchNextTabFocus"
      ]
    },
    {
      "name": "_pCompositeComponent._searchPrevTabFocus",
      "params": [
        "current",
        "bSearchFromLast",
        "opt_force_cycle",
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._searchPrevTabFocus.call"
      ]
    },
    {
      "name": "_pCompositeComponent._getTabOrderNext",
      "params": [
        "current",
        "direction",
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._getTabOrderNext.call"
      ]
    },
    {
      "name": "_pCompositeComponent._getTabOrderFirst",
      "params": [
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._getTabOrderFirst.call"
      ]
    },
    {
      "name": "_pCompositeComponent._getTabOrderLast",
      "params": [
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._getTabOrderLast.call"
      ]
    },
    {
      "name": "nexacro._CompositeForm",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._InnerForm.call"
      ]
    },
    {
      "name": "_pCompositeForm.loadModule",
      "params": [
        "url",
        "module"
      ],
      "calls": [
        "nexacro._getBaseUrl",
        "this._load_manager.loadMainModuleByScript"
      ]
    },
    {
      "name": "__pLoadManager.loadMainModuleByScript",
      "params": [
        "url",
        "module"
      ],
      "calls": [
        "this.on_load_main"
      ]
    }
  ],
  "FrameBase.js": [
    {
      "name": "nexacro.Frame",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent",
        "is_main"
      ],
      "calls": [
        "nexacro.Collection",
        "nexacro.FormBase.call"
      ]
    },
    {
      "name": "_pFrame.on_apply_font",
      "params": [
        "font"
      ],
      "calls": [
        "control_elem._refreshControl",
        "nexacro.Component.prototype.on_apply_font.call",
        "this._getWindow",
        "this._update_position",
        "this.getElement"
      ]
    },
    {
      "name": "_pFrame.set_padding",
      "params": [
        "/*val*/"
      ],
      "calls": []
    },
    {
      "name": "_pFrame.set_titlebarheight",
      "params": [
        "titlebarheight"
      ],
      "calls": [
        "nexacro._isHybrid",
        "this._getAppliedTitleHeight",
        "this._isShowTitleBar",
        "this.on_apply_titlebarheight"
      ]
    },
    {
      "name": "_pFrame.on_apply_titlebarheight",
      "params": [
        "titlebarheight"
      ],
      "calls": [
        "control_elem.setTitleBarControl"
      ]
    },
    {
      "name": "_pFrame.set_statusbarheight",
      "params": [
        "statusbarheight"
      ],
      "calls": [
        "nexacro._isHybrid",
        "this._getAppliedStatusHeight",
        "this.on_apply_statusbarheight"
      ]
    },
    {
      "name": "_pFrame.on_apply_statusbarheight",
      "params": [
        "statusbarheight"
      ],
      "calls": [
        "control_elem.setStatusBarControl"
      ]
    },
    {
      "name": "_pFrame.set_titlebartype",
      "params": [
        "titlebartype"
      ],
      "calls": [
        "this.on_apply_titlebartype"
      ]
    },
    {
      "name": "_pFrame.on_apply_titlebartype",
      "params": [
        "/*titlebartype*/"
      ],
      "calls": []
    },
    {
      "name": "_pFrame.set_titlebarbuttonsize",
      "params": [
        "titlebarbuttonsize"
      ],
      "calls": [
        "this.on_apply_titlebarbuttonsize"
      ]
    },
    {
      "name": "_pFrame.on_apply_titlebarbuttonsize",
      "params": [
        "titlebarbuttonsize"
      ],
      "calls": [
        "titlebar.set_buttonsize"
      ]
    },
    {
      "name": "_pFrame.set_titlebarbuttongap",
      "params": [
        "titlebarbuttongap"
      ],
      "calls": [
        "this.on_apply_titlebarbuttongap"
      ]
    },
    {
      "name": "_pFrame.on_apply_titlebarbuttongap",
      "params": [
        "titlebarbuttongap"
      ],
      "calls": [
        "titlebar.set_buttongap"
      ]
    },
    {
      "name": "_pFrame.set_progressbardirection",
      "params": [
        "progressbardirection"
      ],
      "calls": [
        "this.on_apply_progressbardirection"
      ]
    },
    {
      "name": "_pFrame.on_apply_progressbardirection",
      "params": [
        "progressbardirection"
      ],
      "calls": [
        "statusbar.set_progressbardirection"
      ]
    },
    {
      "name": "_pFrame.set_progressbargap",
      "params": [
        "progressbargap"
      ],
      "calls": [
        "this.on_apply_progressbargap"
      ]
    },
    {
      "name": "_pFrame.on_apply_progressbargap",
      "params": [
        "progressbargap"
      ],
      "calls": [
        "statusbar.set_progressbargap"
      ]
    },
    {
      "name": "_pFrame.set_progressbarsmooth",
      "params": [
        "progressbarsmooth"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_progressbarsmooth"
      ]
    },
    {
      "name": "_pFrame.on_apply_progressbarsmooth",
      "params": [
        "progressbarsmooth"
      ],
      "calls": [
        "statusbar.set_progressbarsmooth"
      ]
    },
    {
      "name": "_pFrame.set_progressbarsize",
      "params": [
        "progressbarsize"
      ],
      "calls": [
        "this.on_apply_progressbarsize"
      ]
    },
    {
      "name": "_pFrame.on_apply_progressbarsize",
      "params": [
        "progressbarsize"
      ],
      "calls": [
        "statusbar.set_progressbarsize"
      ]
    },
    {
      "name": "_pFrame.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "statusbar.on_created",
        "this._applyStatusBarProperties",
        "this._applyTitleBarProperties",
        "this._isShowTitleBar",
        "titlebar.on_created"
      ]
    },
    {
      "name": "_pFrame._initComponent",
      "params": [],
      "calls": [
        "nexacro._checkWindowActive",
        "this._initUniqueID"
      ]
    },
    {
      "name": "_pFrame._applyProperties",
      "params": [],
      "calls": [
        "this.on_apply_prop_stringresource"
      ]
    },
    {
      "name": "_pFrame._isShowTitleBar",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrame._isShowStatusBar",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrame.on_create_contents",
      "params": [],
      "calls": [
        "this._createStatusBar",
        "this._createTitleBar",
        "this._isShowStatusBar",
        "this._isShowTitleBar",
        "this._on_focus",
        "this._setNotifyTitleBar"
      ]
    },
    {
      "name": "_pFrame.on_created",
      "params": [
        "_window"
      ],
      "calls": [
        "control_elem._setResizable",
        "nexacro.FormBase.prototype.on_created.call",
        "this._applyStatusBarProperties",
        "this._applyStatusText",
        "this._applyTitleBarProperties",
        "this._applyTitleText",
        "this._canDragResize",
        "this._isShowTitleBar",
        "this._on_syscommand",
        "this._p_form._on_load"
      ]
    },
    {
      "name": "_pFrame.on_destroy_contents",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this._p_statusbar.destroyComponent",
        "this._p_titlebar.destroyComponent"
      ]
    },
    {
      "name": "_pFrame._createTitleBar",
      "params": [],
      "calls": [
        "nexacro.TitleBarControl",
        "this._isTopFrame",
        "titlebar.createComponent"
      ]
    },
    {
      "name": "_pFrame._setNotifyTitleBar",
      "params": [],
      "calls": [
        "titlebar._setNotifyHandler"
      ]
    },
    {
      "name": "_pFrame._createStatusBar",
      "params": [],
      "calls": [
        "nexacro.StatusBarControl",
        "nexacro._MainStatusBarControl",
        "statusbar.createComponent",
        "this._isTopFrame"
      ]
    },
    {
      "name": "_pFrame._applyStatusBarProperties",
      "params": [],
      "calls": [
        "statusbar.set_progressbardirection",
        "statusbar.set_progressbargap",
        "statusbar.set_progressbarsize",
        "statusbar.set_progressbarsmooth",
        "statusbar.set_resizable",
        "statusbar.set_text",
        "this._canDragResize",
        "this._getAppliedStatusHeight",
        "this._getStatusText",
        "this.on_apply_statusbarheight"
      ]
    },
    {
      "name": "_pFrame._applyTitleBarProperties",
      "params": [],
      "calls": [
        "this._getAppliedTitleHeight",
        "this._getTitleText",
        "this._resetTitleAbsoluteStyle",
        "this.on_apply_titlebarheight",
        "titlebar.set_buttongap",
        "titlebar.set_buttonsize",
        "titlebar.set_showtitleicon",
        "titlebar.set_text"
      ]
    },
    {
      "name": "_pFrame.on_changeStatus",
      "params": [
        "changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": [
        "this._changeStateActivate",
        "this._changeStateFocus",
        "this._getWindow"
      ]
    },
    {
      "name": "_pFrame.on_apply_status",
      "params": [
        "status",
        "userstatus"
      ],
      "calls": [
        "this._changeStateActivate"
      ]
    },
    {
      "name": "_pFrame.setFocus",
      "params": [
        "bResetScroll"
      ],
      "calls": [
        "this._active_frame.setFocus",
        "this._p_form._setFocus",
        "win._setFocus"
      ]
    },
    {
      "name": "_pFrame._update_position",
      "params": [
        "bsize",
        "bmove"
      ],
      "calls": [
        "this._adjustPosition",
        "this._apply_status",
        "this._isRtl",
        "this._p_parent._getClientHeight",
        "this._p_parent._getClientWidth",
        "this.on_update_position"
      ]
    },
    {
      "name": "_pFrame._adjustPosition",
      "params": [
        "left",
        "top",
        "right",
        "bottom",
        "width",
        "height",
        "parentWidth",
        "parentHeight"
      ],
      "calls": [
        "nexacro._getWindowHandleClientHeight",
        "nexacro._getWindowHandleClientWidth",
        "parent._getClientHeight",
        "parent._getClientWidth",
        "this._convToPixel",
        "this._isRtl"
      ]
    },
    {
      "name": "_pFrame._waitCursor",
      "params": [
        "wait_flag",
        "context"
      ],
      "calls": [
        "owner_frame._waitCursor",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "_window.moveTo",
        "_window.setSize",
        "nexacro.FormBase.prototype.on_update_position.call",
        "this._initControlElementCssInfo"
      ]
    },
    {
      "name": "_pFrame.set_left",
      "params": [
        "propVal"
      ],
      "calls": [
        "nexacro.FormBase.prototype.set_left.call",
        "this._canMove"
      ]
    },
    {
      "name": "_pFrame.set_top",
      "params": [
        "propVal"
      ],
      "calls": [
        "nexacro.FormBase.prototype.set_top.call",
        "this._canMove"
      ]
    },
    {
      "name": "_pFrame.set_right",
      "params": [
        "propVal"
      ],
      "calls": [
        "nexacro.FormBase.prototype.set_right.call",
        "this._canMove"
      ]
    },
    {
      "name": "_pFrame.set_bottom",
      "params": [
        "propVal"
      ],
      "calls": [
        "nexacro.FormBase.prototype.set_bottom.call",
        "this._canMove"
      ]
    },
    {
      "name": "_pFrame.set_width",
      "params": [
        "propVal"
      ],
      "calls": [
        "nexacro.FormBase.prototype.set_width.call",
        "this._canResize"
      ]
    },
    {
      "name": "_pFrame.set_height",
      "params": [
        "propVal"
      ],
      "calls": [
        "nexacro.FormBase.prototype.set_height.call",
        "this._canResize"
      ]
    },
    {
      "name": "_pFrame.set_openstatus",
      "params": [
        "v"
      ],
      "calls": [
        "this._on_syscommand"
      ]
    },
    {
      "name": "_pFrame.set_showcascadestatustext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._applyStatusText"
      ]
    },
    {
      "name": "_pFrame.set_showcascadetitletext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._applyTitleText"
      ]
    },
    {
      "name": "_pFrame.set_showstatusbar",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showstatusbar"
      ]
    },
    {
      "name": "_pFrame.on_apply_showstatusbar",
      "params": [
        "bshow"
      ],
      "calls": [
        "statusbar.on_created",
        "statusbar.set_visible",
        "this._applyStatusBarProperties",
        "this._createStatusBar",
        "this._isShowStatusBar",
        "this.on_apply_statusbarheight"
      ]
    },
    {
      "name": "_pFrame.set_showtitlebar",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._showTitleBar",
        "this.on_apply_showtitlebar"
      ]
    },
    {
      "name": "_pFrame.on_apply_showtitlebar",
      "params": [
        "bshow"
      ],
      "calls": [
        "this._applyDragMoveType",
        "this._applyTitleBarProperties",
        "this._createTitleBar",
        "this._isShowTitleBar",
        "this._setNotifyTitleBar",
        "this.on_apply_titlebarheight",
        "titlebar.destroyComponent",
        "titlebar.on_created",
        "titlebar.set_visible"
      ]
    },
    {
      "name": "_pFrame.set_showtitleicon",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showtitleicon"
      ]
    },
    {
      "name": "_pFrame.on_apply_showtitleicon",
      "params": [
        "showtitleicon"
      ],
      "calls": [
        "titlebar.set_showtitleicon"
      ]
    },
    {
      "name": "_pFrame.set_statustext",
      "params": [
        "v"
      ],
      "calls": [
        "this._applyStatusText"
      ]
    },
    {
      "name": "_pFrame.set_titletext",
      "params": [
        "v"
      ],
      "calls": [
        "this._applyTitleText"
      ]
    },
    {
      "name": "_pFrame.set_topmost",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._setWindowTopmost",
        "nexacro._toBoolean",
        "this._getWindow"
      ]
    },
    {
      "name": "_pFrame._applyElementVisible",
      "params": [
        "v"
      ],
      "calls": [
        "this._control_element.setElementDisplay"
      ]
    },
    {
      "name": "_pFrame.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.FormBase.prototype.set_visible.call",
        "nexacro._isDesktop",
        "nexacro._setPopupWindowHandleVisible",
        "nexacro._toBoolean",
        "nextframe._changeOpenStatus",
        "parent._getNextOrderFrame",
        "this._getWindow",
        "this.form._fitLayoutToParent"
      ]
    },
    {
      "name": "_pFrame.alert",
      "params": [
        "strText",
        "strCaption",
        "strType"
      ],
      "calls": [
        "nexacro._alert"
      ]
    },
    {
      "name": "_pFrame.confirm",
      "params": [
        "strText",
        "strCaption",
        "strType"
      ],
      "calls": [
        "nexacro._confirm"
      ]
    },
    {
      "name": "_pFrame.getHandle",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrame.getNativeHandle",
      "params": [],
      "calls": [
        "nexacro._getWindowHwndHandle",
        "this._getWindow"
      ]
    },
    {
      "name": "_pFrame.getOwnerFrame",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrame.addChild",
      "params": [
        "id",
        "obj"
      ],
      "calls": [
        "nexacro.MakeNativeError",
        "nexacro.MakeReferenceError",
        "nexacro.MakeTypeError",
        "this._frames.add_item",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._max_frame._changeOpenStatus",
        "this._p_all.add_item",
        "this._p_frames.add_item",
        "this._zordermap.add_item",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pFrame.insertChild",
      "params": [
        "idx",
        "id",
        "obj"
      ],
      "calls": [
        "nexacro.MakeNativeError",
        "nexacro.MakeReferenceError",
        "nexacro.MakeTypeError",
        "this._frames.insert_item",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._p_all.add_item",
        "this._p_frames.insert_item",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pFrame.removeChild",
      "params": [
        "id"
      ],
      "calls": [
        "_window._indexOfCurrentFocusPaths",
        "_window._removeFromCurrentFocusPath",
        "nexacro._SystemType.toLowerCase",
        "nexacro._getLocalStorageforService",
        "nexacro._unregisterPopupFrame",
        "nextframe._changeOpenStatus",
        "nextframe.setFocus",
        "obj._changeStateActivate",
        "obj._control_element._removeFromContainer",
        "obj._getWindow",
        "this._applyTitleText",
        "this._frames.remove_item",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getNextOrderFrame",
        "this._getWindow",
        "this._p_all.remove_item",
        "this._p_frames.remove_item",
        "this._zordermap.remove_item",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pFrame.move",
      "params": [
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom"
      ],
      "calls": [
        "owner_frame._on_child_movetrack",
        "this._canMove",
        "this._move",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame._move",
      "params": [
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom"
      ],
      "calls": [
        "this._adjustPosition",
        "this._isRtl",
        "this._p_parent._getClientHeight",
        "this._p_parent._getClientWidth",
        "this.on_update_position"
      ]
    },
    {
      "name": "_pFrame.resize",
      "params": [
        "w",
        "h"
      ],
      "calls": [
        "nexacro.FormBase.prototype.resize.call",
        "this._canResize"
      ]
    },
    {
      "name": "_pFrame._on_titlebar_dblclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_maxbutton_click",
        "this._on_normalbutton_click"
      ]
    },
    {
      "name": "_pFrame._on_titlebar_starttrack",
      "params": [],
      "calls": [
        "owner_frame._on_child_starttrack",
        "this._canDragMove",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame._on_titlebar_endtrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "owner_frame._on_child_endtrack",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame._on_titlebar_movetrack",
      "params": [
        "x",
        "y",
        "dragdata",
        "windowX",
        "windowY"
      ],
      "calls": [
        "nexacro._getDevicePixelRatio",
        "nexacro._toInt",
        "nexacro.getApplication",
        "owner_frame._on_child_movetrack",
        "this._getWindow",
        "this._move",
        "this._p_titlebar.getElement",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame._on_border_starttrack",
      "params": [
        "resize_cursor"
      ],
      "calls": [
        "this._canDragResize",
        "this._p_form._on_focus",
        "this.getElement"
      ]
    },
    {
      "name": "_pFrame._on_border_endtrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": []
    },
    {
      "name": "_pFrame._on_border_movetrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "nexacro._getDevicePixelRatio",
        "this._getMinMaxInfo",
        "this._move",
        "this.getElement"
      ]
    },
    {
      "name": "_pFrame.on_fire_sys_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._changeStateActivate",
        "this._changeStatus"
      ]
    },
    {
      "name": "_pFrame._on_minbutton_click",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_syscommand"
      ]
    },
    {
      "name": "_pFrame._on_maxbutton_click",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_syscommand"
      ]
    },
    {
      "name": "_pFrame._on_normalbutton_click",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_syscommand"
      ]
    },
    {
      "name": "_pFrame._on_closebutton_click",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro._SystemType.toLowerCase",
        "nexacro._unregisterPopupFrame",
        "owner_frame._getClientHeight",
        "owner_frame._getClientWidth",
        "owner_frame.on_change_containerRect",
        "owner_frame.removeChild",
        "this._checkAndConfirmClose",
        "this._control_element.destroy",
        "this._destroy",
        "this._on_beforeclose",
        "this._on_close",
        "this._window.destroy",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame._on_beforeclose",
      "params": [
        "root_closing_comp"
      ],
      "calls": [
        "this._appendBeforeCloseMsg",
        "this._on_bubble_beforeclose",
        "this._p_form._appendBeforeCloseMsg",
        "this._p_form._on_beforeclose",
        "this._p_frame._on_beforeclose"
      ]
    },
    {
      "name": "_pFrame._on_close",
      "params": [],
      "calls": [
        "this._getWindow",
        "this._on_bubble_close",
        "this._p_form._on_close",
        "this._p_frame._on_close"
      ]
    },
    {
      "name": "_pFrame._canMove",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrame._canDragMove",
      "params": [],
      "calls": [
        "this._canMove",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame._canResize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrame._canDragResize",
      "params": [],
      "calls": [
        "this._canResize",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame._procSysCommand",
      "params": [
        "systemcommand"
      ],
      "calls": [
        "this._changeOpenStatus",
        "this._window._procSysCommand"
      ]
    },
    {
      "name": "_pFrame._on_syscommand",
      "params": [
        "elem",
        "systemcommand",
        "event_bubbles",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "this._isEnable",
        "this._p_parent._on_syscommand",
        "this._procSysCommand",
        "this.on_fire_syscommand"
      ]
    },
    {
      "name": "_pFrame._on_activate",
      "params": [],
      "calls": [
        "nexacro.FormBase.prototype._on_activate.call",
        "this._p_form._on_activate",
        "this._p_titlebar._changeStatus"
      ]
    },
    {
      "name": "_pFrame._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.FormBase.prototype._on_deactivate.call",
        "this._p_form._on_deactivate",
        "this._p_titlebar._changeStatus"
      ]
    },
    {
      "name": "_pFrame._on_orientationchange",
      "params": [
        "orientation"
      ],
      "calls": [
        "form._on_orientationchange",
        "frame._on_orientationchange",
        "this._getWindow",
        "this.on_fire_onorientationchange"
      ]
    },
    {
      "name": "_pFrame._getRootLayerFrame",
      "params": [],
      "calls": [
        "frame.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame._isRootLayerFrame",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrame.on_fire_syscommand",
      "params": [
        "obj",
        "systemcommand"
      ],
      "calls": [
        "nexacro.SysCommandEventInfo",
        "this._p_form.onsyscommand._fireCheckEvent",
        "this.onsyscommand._fireCheckEvent"
      ]
    },
    {
      "name": "_pFrame._setVerticalMin",
      "params": [
        "v"
      ],
      "calls": [
        "control_elem.bringToFrontElement",
        "nexacro.ContainerElement.prototype.bringToFrontElement.call",
        "titlebar._setVerticalMin",
        "titlebar.getElement"
      ]
    },
    {
      "name": "_pFrame._resetTitleAbsoluteStyle",
      "params": [],
      "calls": [
        "owner_frame._isTopFrame",
        "this._isNested",
        "this._isRootLayerFrame",
        "this.getOwnerFrame",
        "titlebar._setAbsoluteStyle"
      ]
    },
    {
      "name": "_pFrame._getMinMaxInfo",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getCSSStyleValue",
        "this._isShowStatusBar",
        "this._isShowTitleBar"
      ]
    },
    {
      "name": "_pFrame._isTopFrame",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrame._getWindow",
      "params": [],
      "calls": [
        "nexacro._findWindow",
        "nexacro._getMainWindowHandle",
        "parent._getWindow"
      ]
    },
    {
      "name": "_pFrame._isEnable",
      "params": [],
      "calls": [
        "nexacro.FormBase.prototype._isEnable.call"
      ]
    },
    {
      "name": "_pFrame._isNested",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrame._getTitleText",
      "params": [
        "brecursive"
      ],
      "calls": [
        "this._getStringResourceProperty"
      ]
    },
    {
      "name": "_pFrame._applyTitleText",
      "params": [],
      "calls": [
        "parent._applyTitleText",
        "this._getStringResourceProperty",
        "this._getTitleText",
        "this._isNested",
        "this._window._setTitleText",
        "titlebar.set_text"
      ]
    },
    {
      "name": "_pFrame._applyStatusText",
      "params": [],
      "calls": [
        "parent._applyStatusText",
        "statusbar.set_text",
        "this._getStatusText",
        "this._getStringResourceProperty",
        "this._isNested",
        "this._window._setStatusText"
      ]
    },
    {
      "name": "_pFrame._changeOpenStatus",
      "params": [
        "cur"
      ],
      "calls": [
        "control_elem._setResizable",
        "owner_frame._getClientHeight",
        "owner_frame._getClientWidth",
        "owner_frame._max_frame._changeOpenStatus",
        "owner_frame.getElement",
        "owner_frame.on_change_containerRect",
        "this._canDragResize",
        "this._getWindow",
        "this._move",
        "this._setVerticalMin",
        "this.getOwnerFrame",
        "this.setFocus",
        "titlebar._changeOpenStatus"
      ]
    },
    {
      "name": "_pFrame._changeStateActivate",
      "params": [
        "cur"
      ],
      "calls": [
        "owner_frame._changeStateActivate",
        "owner_frame._getWindow",
        "this._applyStatusText",
        "this._applyTitleText",
        "this._changeStatus",
        "this._getWindow",
        "this._on_activate",
        "this._on_deactivate",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame._changeStateFocus",
      "params": [
        "cur"
      ],
      "calls": [
        "owner_frame._changeStateFocus",
        "owner_frame._getWindow",
        "this._applyStatusText",
        "this._applyTitleText",
        "this._changeStatus",
        "this._getWindow",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pFrame._getAppliedTitleHeight",
      "params": [
        "h"
      ],
      "calls": [
        "nexacro._appliedTitleBarHeight"
      ]
    },
    {
      "name": "_pFrame._getAppliedStatusHeight",
      "params": [
        "h"
      ],
      "calls": [
        "nexacro._appliedStatusBarHeight"
      ]
    },
    {
      "name": "_pFrame._getNextFrame",
      "params": [
        "cur"
      ],
      "calls": [
        "nexacro._indexOf",
        "next._getFirstChildFrame",
        "parent._getNextFrame",
        "this._getFrames"
      ]
    },
    {
      "name": "_pFrame._getPrevFrame",
      "params": [
        "cur"
      ],
      "calls": [
        "nexacro._indexOf",
        "parent._getPrevFrame",
        "prev._getLastChildFrame",
        "this._getFrames"
      ]
    },
    {
      "name": "_pFrame._getFrames",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrame._getFirstChildFrame",
      "params": [],
      "calls": [
        "item._getFirstChildFrame"
      ]
    },
    {
      "name": "_pFrame._getLastChildFrame",
      "params": [],
      "calls": [
        "item._getLastChildFrame"
      ]
    },
    {
      "name": "nexacro.MainFrame",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro.Frame.call",
        "nexacro._Window"
      ]
    },
    {
      "name": "_pMainFrame.getActiveFrame",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMainFrame._initComponent",
      "params": [],
      "calls": [
        "nexacro._checkWindowActive",
        "this._initUniqueID",
        "this._on_apply_locale",
        "this.createWindow"
      ]
    },
    {
      "name": "_pMainFrame.createWindow",
      "params": [],
      "calls": [
        "_win._setSystemMenuResizable",
        "_win.attachFrame",
        "_win.create",
        "nexacro._Window",
        "nexacro._getMainWindowHeight",
        "nexacro._getMainWindowWidth",
        "this._setSize"
      ]
    },
    {
      "name": "_pMainFrame.createBodyFrame",
      "params": [],
      "calls": [
        "this.on_createBodyFrame"
      ]
    },
    {
      "name": "_pMainFrame.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.Frame.prototype.on_create_contents.call",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._p_frame._changeOpenStatus",
        "this._p_frame._setPos",
        "this._p_frame._setSize",
        "this._p_frame.createComponent",
        "this.frame._setPos"
      ]
    },
    {
      "name": "_pMainFrame.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "control_element.setElementRtl",
        "nexacro.Frame.prototype.on_created_contents.call",
        "nexacro._refreshWindow",
        "nexacro._refreshWindowRegion",
        "this._getOpenAlignPos",
        "this._getWindow",
        "this._move",
        "this._p_frame.on_created"
      ]
    },
    {
      "name": "_pMainFrame.destroyComponent",
      "params": [],
      "calls": [
        "nexacro.Frame.prototype.destroyComponent.call",
        "this._waitcomp.destroy",
        "this._window.destroy"
      ]
    },
    {
      "name": "_pMainFrame.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.Frame.prototype.on_destroy_contents.call",
        "this._p_frame.destroyComponent"
      ]
    },
    {
      "name": "_pMainFrame._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.Frame.prototype._on_deactivate.call",
        "this._getWindow",
        "window._keydown_element_list.clear"
      ]
    },
    {
      "name": "_pMainFrame.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "frame._setPos"
      ]
    },
    {
      "name": "_pMainFrame.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "frame._setSize"
      ]
    },
    {
      "name": "_pMainFrame.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "_window.moveTo",
        "_window.setSize",
        "nexacro.FormBase.prototype.on_update_position.call",
        "nexacro._isDesktop"
      ]
    },
    {
      "name": "_pMainFrame._isShowTitleBar",
      "params": [],
      "calls": [
        "nexacro._isShowTitleBar"
      ]
    },
    {
      "name": "_pMainFrame._isShowStatusBar",
      "params": [],
      "calls": [
        "nexacro._isShowStatusBar"
      ]
    },
    {
      "name": "_pMainFrame._waitCursor",
      "params": [
        "wait_flag",
        "context"
      ],
      "calls": [
        "nexacro._WaitControl",
        "nexacro._getLoadingImageUrl",
        "this._window._blockImeInput",
        "this._window._cancelEvent",
        "this._window._updateWrapper",
        "waitcomp._addContext",
        "waitcomp._removeContext",
        "waitcomp._setAccessibilityStatHidden",
        "waitcomp._setAccessibilityStatLive",
        "waitcomp.createComponent",
        "waitcomp.hide",
        "waitcomp.on_created",
        "waitcomp.setImage",
        "waitcomp.show"
      ]
    },
    {
      "name": "_pMainFrame.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.set_visible.call",
        "nexacro._setPopupWindowHandleVisible",
        "nexacro._toBoolean",
        "this._getRootWindow"
      ]
    },
    {
      "name": "_pMainFrame.set_openalign",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.AlignObject",
        "this.on_apply_prop_openalign"
      ]
    },
    {
      "name": "_pMainFrame.set_resizable",
      "params": [
        "v"
      ],
      "calls": [
        "control_elem._setResizable",
        "nexacro._toBoolean",
        "this._canDragResize",
        "this._resetTitleAbsoluteStyle",
        "win._setSystemMenuResizable"
      ]
    },
    {
      "name": "_pMainFrame.set_layered",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pMainFrame.on_apply_prop_openalign",
      "params": [],
      "calls": [
        "this._getOpenAlignPos",
        "this._getWindow",
        "this._move"
      ]
    },
    {
      "name": "_pMainFrame.on_apply_borderRadius",
      "params": [
        "borderRadius"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_borderRadius.call",
        "nexacro._refreshWindowRegion"
      ]
    },
    {
      "name": "_pMainFrame._getParentEnable",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMainFrame.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "frame._setEnable"
      ]
    },
    {
      "name": "_pMainFrame.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "this._p_frame.on_apply_prop_stringresource"
      ]
    },
    {
      "name": "_pMainFrame.set_frame",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMainFrame._on_beforeclose",
      "params": [
        "root_closing_comp"
      ],
      "calls": [
        "application.on_fire_onbeforeexit",
        "nexacro.Frame.prototype._on_beforeclose.call",
        "nexacro.getApplication",
        "this._appendBeforeCloseMsg"
      ]
    },
    {
      "name": "_pMainFrame._on_syscommand",
      "params": [
        "elem",
        "systemcommand",
        "event_bubbles",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "nexacro._SystemType.toLowerCase",
        "this._procSysCommand",
        "this.on_fire_syscommand"
      ]
    },
    {
      "name": "_pMainFrame._on_closebutton_click",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "application.exit",
        "nexacro.getApplication"
      ]
    },
    {
      "name": "_pMainFrame._getOpenAlignPos",
      "params": [
        "parent_win",
        "left",
        "top",
        "width",
        "height"
      ],
      "calls": [
        "nexacro._getWindowRectforOpenAlign"
      ]
    },
    {
      "name": "_pMainFrame._changeStateActivate",
      "params": [
        "cur"
      ],
      "calls": [
        "frame._changeStateActivate",
        "nexacro.Frame.prototype._changeStateActivate.call",
        "this._applyStatusText",
        "this._applyTitleText",
        "this._changeStatus",
        "this._on_activate"
      ]
    },
    {
      "name": "_pMainFrame.on_changeStatus",
      "params": [
        "changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": [
        "this._changeStateActivate"
      ]
    },
    {
      "name": "_pMainFrame._getTitleText",
      "params": [
        "brecursive"
      ],
      "calls": [
        "frame._getTitleText",
        "this._getStringResourceProperty"
      ]
    },
    {
      "name": "_pMainFrame._getStatusText",
      "params": [
        "brecursive"
      ],
      "calls": [
        "frame._getStatusText"
      ]
    },
    {
      "name": "_pMainFrame._getWaitComponentElement",
      "params": [],
      "calls": [
        "waitComp.getElement"
      ]
    },
    {
      "name": "_pMainFrame._on_apply_locale",
      "params": [
        "v"
      ],
      "calls": [
        "frame._on_apply_locale"
      ]
    },
    {
      "name": "_pMainFrame._getNextFrame",
      "params": [
        "cur"
      ],
      "calls": [
        "nexacro._indexOf",
        "next._getFirstChildFrame",
        "this._getFrames"
      ]
    },
    {
      "name": "_pMainFrame._getPrevFrame",
      "params": [
        "cur"
      ],
      "calls": [
        "nexacro._indexOf",
        "prev._getLastChildFrame",
        "this._getFrames"
      ]
    },
    {
      "name": "nexacro.ChildFrame",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "url",
        "parent"
      ],
      "calls": [
        "nexacro.Frame.call",
        "nexacro.TitleBarControl",
        "this.set_formurl"
      ]
    },
    {
      "name": "_pChildFrame.on_apply_prop_openalign",
      "params": [],
      "calls": []
    },
    {
      "name": "_pChildFrame.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_form._setEnable"
      ]
    },
    {
      "name": "_pChildFrame.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "this._applyStatusText",
        "this._applyTitleText",
        "this._p_form.on_apply_prop_stringresource",
        "this.on_apply_prop_accessibilityaction",
        "this.on_apply_prop_accessibilitydescription",
        "this.on_apply_prop_accessibilitylabel",
        "this.on_apply_prop_tooltip"
      ]
    },
    {
      "name": "_pChildFrame.set_overlaycolor",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.BackgroundObject",
        "this.on_apply_overlaycolor"
      ]
    },
    {
      "name": "_pChildFrame.on_apply_overlaycolor",
      "params": [
        "overlaycolor"
      ],
      "calls": [
        "modal_overlay_elem.setElementBackground"
      ]
    },
    {
      "name": "_pChildFrame.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.Frame.prototype.on_create_contents.call",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._p_form._setPos",
        "this._p_form._setSize",
        "this._p_form.createComponent"
      ]
    },
    {
      "name": "_pChildFrame.destroyComponent",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "nexacro.Frame.prototype.destroyComponent.call",
        "nexacro._unblockScript",
        "this._getWindow",
        "this._runCallback",
        "this._setModalUnlock",
        "this._waitcomp.destroy",
        "this._window.destroy"
      ]
    },
    {
      "name": "_pChildFrame.on_destroy_contents",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_destroy_contents.call",
        "this._p_form.destroyComponent",
        "this._waitcomp.destroy"
      ]
    },
    {
      "name": "_pChildFrame._unregisterPopupFrame",
      "params": [
        "win",
        "closedpopupframeid"
      ],
      "calls": [
        "nexacro._unregisterPopupFrame"
      ]
    },
    {
      "name": "_pChildFrame._runCallback",
      "params": [],
      "calls": [
        "_call_callback_fn.call",
        "callback.call"
      ]
    },
    {
      "name": "_pChildFrame.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_created_contents.call",
        "this._changeStateActivate",
        "this._createForm",
        "this._getAutosizedFrameSize",
        "this._getOpenAlignPos",
        "this._getWindow",
        "this._move",
        "this._recalcModalPosition",
        "window._setSystemMenuResizable",
        "window.moveTo",
        "window.setSize"
      ]
    },
    {
      "name": "_pChildFrame.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "this._p_form._setPos"
      ]
    },
    {
      "name": "_pChildFrame.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro._isDesktop",
        "this._p_form._setSize",
        "this._p_titlebar._update_position",
        "this.form._fitLayoutToParent"
      ]
    },
    {
      "name": "_pChildFrame._isShowTitleBar",
      "params": [],
      "calls": [
        "nexacro._isShowTitleBar"
      ]
    },
    {
      "name": "_pChildFrame._isShowStatusBar",
      "params": [],
      "calls": [
        "nexacro._isShowStatusBar"
      ]
    },
    {
      "name": "_pChildFrame._createControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "this.getElement",
        "this.on_create_control_element"
      ]
    },
    {
      "name": "_pChildFrame._waitCursor",
      "params": [
        "wait_flag",
        "context"
      ],
      "calls": [
        "nexacro.Frame.prototype._waitCursor.call",
        "nexacro._WaitControl",
        "nexacro._getLoadingImageUrl",
        "this._isNested",
        "this._window._blockImeInput",
        "this._window._cancelEvent",
        "this._window._updateWrapper",
        "waitcomp._addContext",
        "waitcomp._removeContext",
        "waitcomp.createComponent",
        "waitcomp.hide",
        "waitcomp.on_created",
        "waitcomp.setImage",
        "waitcomp.show"
      ]
    },
    {
      "name": "_pChildFrame.set_autosize",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pChildFrame.set_dragmovetype",
      "params": [
        "v"
      ],
      "calls": [
        "this._applyDragMoveType"
      ]
    },
    {
      "name": "_pChildFrame.set_openalign",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.AlignObject"
      ]
    },
    {
      "name": "_pChildFrame.set_formurl",
      "params": [
        "url"
      ],
      "calls": [
        "nexacro._getFDLLocation",
        "this._checkAndConfirmClose",
        "this._createForm",
        "this._on_beforeclose",
        "this._on_close"
      ]
    },
    {
      "name": "_pChildFrame.set_resizable",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._canDragResize",
        "this._control_element._setResizable",
        "this._resetTitleAbsoluteStyle",
        "this._window._setSystemMenuResizable"
      ]
    },
    {
      "name": "_pChildFrame.set_layered",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._on_apply_layered",
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pChildFrame.set_showontaskbar",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pChildFrame.set_widget",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pChildFrame.init",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "strurl"
      ],
      "calls": [
        "this._adjustPosition",
        "this._p_parent._getClientHeight",
        "this._p_parent._getClientWidth",
        "this.on_update_position",
        "this.set_formurl"
      ]
    },
    {
      "name": "_pChildFrame._addVariable",
      "params": [
        "id",
        "val"
      ],
      "calls": [
        "this._variables.push"
      ]
    },
    {
      "name": "_pChildFrame.showModal",
      "params": [
        "str_id",
        "_parent_frame",
        "arr_arg",
        "opener",
        "_lockmode"
      ],
      "calls": [
        "_win._updateWrapper",
        "child_frame._addVariable",
        "child_frame._getOpenAlignPos",
        "frameElem.setElementSize",
        "frameElem.setElementZoom",
        "mainframe._changeStateActivate",
        "nexacro.MakeNativeError",
        "nexacro._checkClosePopupComponent",
        "nexacro._registerPopupFrame",
        "nexacro.getApplication",
        "parent_frame._getWindow",
        "parent_frame.addChild",
        "this._adjustPosition",
        "this._cancelTouchEvent",
        "this._getAutosizedFrameSize",
        "this._getMainFrame",
        "this._getWindow",
        "this._recalcModalPosition",
        "this._setModalLock",
        "this.createComponent",
        "this.getElement",
        "this.on_created",
        "this.set_visible"
      ]
    },
    {
      "name": "_pChildFrame.showModal",
      "params": [
        "str_id",
        "_parent_frame",
        "arr_arg",
        "opener",
        "callback",
        "is_async"
      ],
      "calls": [
        "_win._updateWrapper",
        "child_frame._addVariable",
        "child_frame._getOpenAlignPos",
        "frameElem.setElementSize",
        "frameElem.setElementZoom",
        "mainframe._changeStateActivate",
        "nexacro.MakeNativeError",
        "nexacro._checkClosePopupComponent",
        "nexacro._registerPopupFrame",
        "nexacro.getApplication",
        "parent_frame._getWindow",
        "parent_frame.addChild",
        "this._adjustPosition",
        "this._cancelTouchEvent",
        "this._getAutosizedFrameSize",
        "this._getMainFrame",
        "this._getWindow",
        "this._recalcModalPosition",
        "this._setModalLock",
        "this.createComponent",
        "this.getElement",
        "this.on_created",
        "this.set_visible"
      ]
    },
    {
      "name": "_pChildFrame._showModalSync",
      "params": [
        "str_id",
        "_parent_frame",
        "arr_arg",
        "opener"
      ],
      "calls": [
        "_win._updateWrapper",
        "child_frame._addVariable",
        "child_frame._getOpenAlignPos",
        "frameElem.setElementSize",
        "frameElem.setElementZoom",
        "nexacro.MakeNativeError",
        "nexacro._SysOnceCallbackTimer.callonce",
        "nexacro._blockScript",
        "nexacro._createVirtualWindowHandle",
        "nexacro._registerPopupFrame",
        "nexacro.getApplication",
        "parent_frame._getWindow",
        "parent_frame.addChild",
        "this._cancelTouchEvent",
        "this._getAutosizedFrameSize",
        "this._getWindow",
        "this._recalcModalPosition",
        "this._setModalLock",
        "this.createComponent",
        "this.getElement",
        "this.on_created",
        "win._cancelEvent"
      ]
    },
    {
      "name": "_pChildFrame._showModalWindow",
      "params": [
        "str_id",
        "_parent_frame",
        "arr_arg",
        "opener",
        "_lockmode"
      ],
      "calls": [
        "lockmode.indexOf",
        "lockmode.substr",
        "nexacro.MakeNativeError",
        "nexacro._SysOnceCallbackTimer.callonce",
        "nexacro._SystemType.toLowerCase",
        "nexacro._Window",
        "nexacro._registerPopupFrame",
        "parent_frame._getWindow",
        "parent_frame.addChild",
        "parent_window._cancelEvent",
        "parent_window.getLeft",
        "parent_window.getTop",
        "this._addVariable",
        "this._getOpenAlignPos",
        "this._loadedForm",
        "this._setModalLock",
        "this._window.attachFrame",
        "this._window.createModal",
        "this.set_formurl"
      ]
    },
    {
      "name": "_pChildFrame._showModalWindow",
      "params": [
        "str_id",
        "_parent_frame",
        "arr_arg",
        "opener",
        "_lockmode"
      ],
      "calls": [
        "lockmode.indexOf",
        "lockmode.substr",
        "nexacro.MakeNativeError",
        "nexacro._SysOnceCallbackTimer.callonce",
        "nexacro._SystemType.toLowerCase",
        "nexacro._Window",
        "nexacro._registerPopupFrame",
        "parent_frame._getWindow",
        "parent_frame.addChild",
        "parent_window._cancelEvent",
        "parent_window.getLeft",
        "parent_window.getTop",
        "this._addVariable",
        "this._getOpenAlignPos",
        "this._loadedForm",
        "this._setModalLock",
        "this._window.attachFrame",
        "this._window.createModal",
        "this.set_formurl"
      ]
    },
    {
      "name": "_pChildFrame._on_init",
      "params": [],
      "calls": [
        "addstr.indexOf",
        "nexacro.__setViewportScale",
        "nexacro._getLocale",
        "openstyle.split",
        "parent_frame.addChild",
        "this._addVariable",
        "this._setLocale",
        "this.init"
      ]
    },
    {
      "name": "_pChildFrame._on_load",
      "params": [],
      "calls": [
        "nexacro._initLayoutManager",
        "this._changeStateActivate",
        "this._on_focus",
        "this.createComponent",
        "this.on_created"
      ]
    },
    {
      "name": "_pChildFrame._loadApplicationCSS",
      "params": [],
      "calls": [
        "cssmapurl.lastIndexOf",
        "cssmapurl.substring",
        "cssurl.lastIndexOf",
        "cssurl.substring",
        "nexacro._getCSSFileName",
        "nexacro._getMapFileName",
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "nexacro._getVersionQueryString",
        "nexacro._isNull",
        "nexacro.getEnvironment",
        "this._load_manager.loadCssModule",
        "url.replace"
      ]
    },
    {
      "name": "_pChildFrame._loadEnvironment",
      "params": [
        "/*name",
        "target_win*/"
      ],
      "calls": [
        "this._loadInitValueFile",
        "this._loadTheme"
      ]
    },
    {
      "name": "_pChildFrame._loadTheme",
      "params": [
        "themeid"
      ],
      "calls": [
        "nexacro._addLocalCacheUrl",
        "nexacro._getCSSFileName",
        "nexacro._getLocalCacheUrl",
        "nexacro._getMapFileName",
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "nexacro._hasLocalCacheUrl",
        "this._clearLocalThemeCache",
        "this._load_manager.loadCssModule"
      ]
    },
    {
      "name": "_pChildFrame._loadInitValueFile",
      "params": [
        "initvaluefile"
      ],
      "calls": [
        "nexacro._addLocalCacheUrl",
        "nexacro._getLocalCacheUrl",
        "nexacro._getServiceLocation",
        "nexacro._getServiceObject",
        "nexacro._hasLocalCacheUrl",
        "this._clearLocalThemeCache",
        "this._load_manager.loadGlobalModule"
      ]
    },
    {
      "name": "_pChildFrame._showModeless",
      "params": [
        "name",
        "target_win"
      ],
      "calls": [
        "nexacro._registerPopupFrame",
        "this._loadApplicationCSS",
        "this._loadEnvironment"
      ]
    },
    {
      "name": "_pChildFrame.hideModal",
      "params": [],
      "calls": []
    },
    {
      "name": "_pChildFrame.hideModeless",
      "params": [],
      "calls": []
    },
    {
      "name": "_pChildFrame.getForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pChildFrame.on_fire_sys_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onkeydown.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onkeyup",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onkeyup.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onlbuttondown.call",
        "owner_frame._getClientHeight",
        "owner_frame._getClientWidth",
        "owner_frame.getElement",
        "owner_frame.on_change_containerRect",
        "owner_frame.removeChild",
        "this._control_element.destroy",
        "this._destroy",
        "this._isShowTitleBar",
        "this._window.destroy",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onlbuttonup.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onrbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onrbuttondown.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onrbuttonup.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onmousedown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onmousedown.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onmouseup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onmouseup.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onmouseenter",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onmouseenter.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onmouseleave",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onmouseleave.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onmousemove",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onmousemove.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_sys_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_sys_onmousewheel.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onkeydown.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onkeyup",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onkeyup.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onlbuttondown.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onlbuttonup.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onrbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onrbuttondown.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onrbuttonup.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onmouseup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onmouseup.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onmousedown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onmousedown.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onmouseenter",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onmouseenter.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onmouseleave",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onmouseleave.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onmousemove",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onmousemove.call"
      ]
    },
    {
      "name": "_pChildFrame.on_fire_user_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Frame.prototype.on_fire_user_onmousewheel.call"
      ]
    },
    {
      "name": "_pChildFrame._createForm",
      "params": [],
      "calls": [
        "form.createComponent",
        "form.destroyComponent",
        "form.loadForm",
        "nexacro.Form",
        "nexacro.getApplication",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pChildFrame._closeForm",
      "params": [
        "arg"
      ],
      "calls": [
        "allobj.get_id",
        "child._window.destroy",
        "nexacro._SystemType.toLowerCase",
        "nexacro._unregisterPopupFrame",
        "ownerframe.removeChild",
        "this._destroy",
        "this._p_form._destroy",
        "this._window.destroy",
        "this.getOwnerFrame",
        "this.removeChild"
      ]
    },
    {
      "name": "_pChildFrame._destroyForm",
      "params": [],
      "calls": [
        "this._p_form._destroy"
      ]
    },
    {
      "name": "_pChildFrame._loadedForm",
      "params": [],
      "calls": [
        "_window.attachFrame",
        "_window.create",
        "nexacro._Window",
        "this._applyDragMoveType",
        "this._getAutosizedFrameSize",
        "this._getOpenAlignPos",
        "this._getWindow",
        "this._move",
        "this._recalcModalPosition",
        "this._setLastFocus",
        "this._window.moveTo",
        "this._window.setSize",
        "this.set_openstatus"
      ]
    },
    {
      "name": "_pChildFrame._on_window_loaded",
      "params": [],
      "calls": [
        "this._checkValidWindowSize",
        "this._on_focus",
        "this.createComponent",
        "this.on_created"
      ]
    },
    {
      "name": "_pChildFrame._onHttpSystemError",
      "params": [
        "obj",
        "bfireevent",
        "errorobj",
        "errortype",
        "url",
        "returncode",
        "requesturi",
        "locationuri",
        "extramsg"
      ],
      "calls": []
    },
    {
      "name": "_pChildFrame._createdForm",
      "params": [],
      "calls": [
        "_win._isActiveLayerComponent",
        "frameElem._updateBorderElementsPosition",
        "frameElem.setElementSize",
        "frameElem.setElementZoom",
        "owner_frame._getTopOrderFrame",
        "owner_frame._getWindow",
        "this._changeStateActivate",
        "this._checkValidWindowSize",
        "this._getOpenAlignPos",
        "this._getWindow",
        "this._p_form._on_focus",
        "this._p_form._playAccessibilityWholeReadLabel",
        "this._recalcModalPosition",
        "this._setFocus",
        "this.getElement",
        "this.getOwnerFrame",
        "this.set_visible"
      ]
    },
    {
      "name": "_pChildFrame._applyDragMoveType",
      "params": [],
      "calls": [
        "form._setDragMove",
        "this._canDragMove",
        "this._isShowTitleBar",
        "this._p_titlebar._setDragMove"
      ]
    },
    {
      "name": "_pChildFrame._cancelTouchEvent",
      "params": [],
      "calls": [
        "session._cur_input.preventAction",
        "this._getWindow"
      ]
    },
    {
      "name": "_pChildFrame._getTitleText",
      "params": [
        "brecursive"
      ],
      "calls": [
        "this._getStringResourceProperty"
      ]
    },
    {
      "name": "_pChildFrame._getStatusText",
      "params": [
        "brecursive"
      ],
      "calls": []
    },
    {
      "name": "_pChildFrame._getOpenAlignPos",
      "params": [
        "parent_win",
        "left",
        "top",
        "width",
        "height"
      ],
      "calls": [
        "Math.round",
        "this._getWindow"
      ]
    },
    {
      "name": "_pChildFrame._checkValidWindowSize",
      "params": [],
      "calls": [
        "control_elem._updateClientSize",
        "control_elem.setElementSize",
        "this._move",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pChildFrame._setModalLock",
      "params": [
        "modalWindowOverlayColor"
      ],
      "calls": [
        "comp._changeStatus",
        "modal_overlay_elem.create",
        "modal_overlay_elem.setElementBackground",
        "modal_overlay_elem.setElementZIndex",
        "modal_overlay_elem.setLinkedControl",
        "nexacro.ModalOverlayElement",
        "nexacro._getMainWindowHandle",
        "nexacro.getApplication",
        "parent._accessibilityModalLock",
        "this._accessibilityModalLock",
        "this._getWindow",
        "this._p_parent._getWindow",
        "win._modal_frame_stack.push",
        "win._removeFromCurrentFocusPath",
        "win.getCurrentFocusPaths"
      ]
    },
    {
      "name": "_pChildFrame._setModalUnlock",
      "params": [],
      "calls": [
        "comp._changeStateActivate",
        "comp._on_activate",
        "comp._on_focus",
        "nexacro._getMainWindowHandle",
        "nexacro._unregisterPopupFrame",
        "this._accessibilityModalUnLock",
        "this._getWindow",
        "this._modal_overlay_elem.destroy",
        "this._p_parent._getWindow"
      ]
    },
    {
      "name": "_pChildFrame._setModalOverlaySize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._modal_overlay_elem.setElementSize",
        "this._setSize"
      ]
    },
    {
      "name": "_pChildFrame._recalcModalPosition",
      "params": [
        "left",
        "top",
        "width",
        "height"
      ],
      "calls": [
        "this._getWindow"
      ]
    },
    {
      "name": "_pChildFrame._getAutosizedFrameSize",
      "params": [
        "include_frame_nc"
      ],
      "calls": [
        "manager.getValidLayout",
        "nexacro._getLayoutManager",
        "this._isShowStatusBar",
        "this._isShowTitleBar"
      ]
    },
    {
      "name": "_pChildFrame._on_apply_locale",
      "params": [
        "v"
      ],
      "calls": [
        "form._setLocale"
      ]
    },
    {
      "name": "nexacro.FrameSetBase",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro.Collection",
        "nexacro.Frame.call"
      ]
    },
    {
      "name": "_pFrameSetBase.on_create_contents",
      "params": [],
      "calls": [
        "frame.createComponent",
        "frame.set_resizable",
        "nexacro.Frame.prototype.on_create_contents.call",
        "this._zordermap.add_item"
      ]
    },
    {
      "name": "_pFrameSetBase.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "_pFrameSetBase.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "frame_item._move",
        "frame_item.on_created",
        "nexacro.Frame.prototype.on_created_contents.call"
      ]
    },
    {
      "name": "_pFrameSetBase.on_destroy_contents",
      "params": [],
      "calls": [
        "frame_item.destroyComponent",
        "nexacro.Frame.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pFrameSetBase.set_ctrltaborder",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrameSetBase.set_ctrltabtype",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrameSetBase.set_separatesize",
      "params": [
        "v"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect",
        "v.split"
      ]
    },
    {
      "name": "_pFrameSetBase.set_keepseparatesizewhenswap",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pFrameSetBase.set_minimizedchildposition",
      "params": [
        "v"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pFrameSetBase._on_child_movetrack",
      "params": [
        "child",
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "frames.indexOf",
        "frames.insert_item",
        "frames.remove_item",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.frames.insert_item",
        "this.frames.remove_item",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pFrameSetBase._on_child_starttrack",
      "params": [
        "child",
        "x",
        "y",
        "dragdata"
      ],
      "calls": []
    },
    {
      "name": "_pFrameSetBase._on_child_endtrack",
      "params": [
        "child",
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pFrameSetBase._changeStateActivate",
      "params": [
        "cur",
        "activated_child"
      ],
      "calls": [
        "activated_child._changeOpenStatus",
        "child._changeStateActivate",
        "child._isNested",
        "cur_active._changeStateActivate",
        "nexacro.Frame.prototype._changeStateActivate.call",
        "this._control_element.bringToFrontElement",
        "this._zordermap.add_item",
        "this._zordermap.indexOf",
        "this._zordermap.insert_item",
        "this._zordermap.remove_item",
        "this.getActiveFrame"
      ]
    },
    {
      "name": "_pFrameSetBase._changeStateFocus",
      "params": [
        "cur",
        "activated_child"
      ],
      "calls": [
        "activated_child._changeOpenStatus",
        "child._changeStateActivate",
        "child._isNested",
        "cur_active._changeStateActivate",
        "nexacro.Frame.prototype._changeStateFocus.call",
        "this._control_element.bringToFrontElement",
        "this._zordermap.add_item",
        "this._zordermap.indexOf",
        "this._zordermap.insert_item",
        "this._zordermap.remove_item",
        "this.getActiveFrame"
      ]
    },
    {
      "name": "_pFrameSetBase.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "frame._setEnable"
      ]
    },
    {
      "name": "_pFrameSetBase.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "frame.on_apply_prop_stringresource",
        "this._applyStatusText",
        "this._applyTitleText",
        "this.on_apply_prop_accessibilityaction",
        "this.on_apply_prop_accessibilitydescription",
        "this.on_apply_prop_accessibilitylabel",
        "this.on_apply_prop_tooltip"
      ]
    },
    {
      "name": "_pFrameSetBase.getActiveFrame",
      "params": [],
      "calls": [
        "this._getTopOrderFrame"
      ]
    },
    {
      "name": "_pFrameSetBase.getHandle",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrameSetBase._getTopOrderFrame",
      "params": [],
      "calls": [
        "this._zordermap.get_item"
      ]
    },
    {
      "name": "_pFrameSetBase._getNextOrderFrame",
      "params": [
        "target"
      ],
      "calls": [
        "this._zordermap.get_item",
        "this._zordermap.indexOf"
      ]
    },
    {
      "name": "_pFrameSetBase._visibleFrameCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrameSetBase._getMinimizeFrameCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFrameSetBase._recalcSeparateFrameSize",
      "params": [
        "totalsize",
        "inframecnt",
        "inseparatecnt"
      ],
      "calls": [
        "Math.abs",
        "nexacro._parseInt",
        "str.indexOf",
        "str.substring",
        "str.trim",
        "this._visibleFrameCount"
      ]
    },
    {
      "name": "_pFrameSetBase._getTitleText",
      "params": [
        "brecursive"
      ],
      "calls": [
        "activeframe._getTitleText",
        "this._getStringResourceProperty",
        "this.getActiveFrame"
      ]
    },
    {
      "name": "_pFrameSetBase._getStatusText",
      "params": [
        "brecursive"
      ],
      "calls": [
        "activeframe._getStatusText",
        "this.getActiveFrame"
      ]
    },
    {
      "name": "_pFrameSetBase._getFrames",
      "params": [],
      "calls": [
        "_frames.add_item",
        "nexacro.Collection"
      ]
    },
    {
      "name": "_pFrameSetBase._getFocusChildFrame",
      "params": [
        "frame"
      ],
      "calls": [
        "_last_focused._isFocusAcceptable",
        "frame._isFocusAcceptable"
      ]
    },
    {
      "name": "_pFrameSetBase._getNextChildFrame",
      "params": [
        "frames"
      ],
      "calls": [
        "frame_._getNextChildFrame",
        "frame_._p_parent._getFocusChildFrame"
      ]
    },
    {
      "name": "_pFrameSetBase._getNextFrame",
      "params": [
        "id",
        "cycle"
      ],
      "calls": [
        "this._getFocusChildFrame",
        "this._p_parent._getNextFrame"
      ]
    },
    {
      "name": "_pFrameSetBase._getPrevChildFrame",
      "params": [
        "frames"
      ],
      "calls": [
        "frame_._getPrevChildFrame",
        "frame_._p_parent._getFocusChildFrame"
      ]
    },
    {
      "name": "_pFrameSetBase._getPrevFrame_",
      "params": [
        "id",
        "cycle"
      ],
      "calls": [
        "this._getFocusChildFrame",
        "this._p_parent._getPrevFrame_"
      ]
    },
    {
      "name": "_pFrameSetBase._on_apply_locale",
      "params": [
        "v"
      ],
      "calls": [
        "frame._on_apply_locale"
      ]
    },
    {
      "name": "nexacro.FrameSet",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro.FrameSetBase.call"
      ]
    },
    {
      "name": "_pFrameSet.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "child._move",
        "child._setVerticalMin",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._max_frame._move"
      ]
    },
    {
      "name": "_pFrameSet.set_tabkeycirculation",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pFrameSet.set_minimizewidth",
      "params": [
        "minimizewidth"
      ],
      "calls": [
        "this.on_apply_minimizewidth"
      ]
    },
    {
      "name": "_pFrameSet.on_apply_minimizewidth",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pFrameSet.set_minimizeheight",
      "params": [
        "minimizeheight"
      ],
      "calls": [
        "this.on_apply_minimizeheight"
      ]
    },
    {
      "name": "_pFrameSet.on_apply_minimizeheight",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pFrameSet.set_restorechildpositiontype",
      "params": [
        "val"
      ],
      "calls": []
    },
    {
      "name": "_pFrameSet.arrange",
      "params": [
        "v"
      ],
      "calls": [
        "Math.sqrt",
        "child._move",
        "max_frame._on_syscommand",
        "max_frame.getElement",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "nexacro.VFrameSet",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro.FrameSetBase.call"
      ]
    },
    {
      "name": "_pVFrameSet.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "borderval._getBorderBottomWidth",
        "borderval._getBorderTopWidth",
        "child._move",
        "child._setVerticalMin",
        "child.on_find_CurrentStyle_border",
        "nexacro.Frame.prototype.on_change_containerRect.call",
        "this._getClientHeight",
        "this._recalcSeparateFrameSize"
      ]
    },
    {
      "name": "nexacro.HFrameSet",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro.FrameSetBase.call"
      ]
    },
    {
      "name": "_pHFrameSet.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "borderval._getBorderLeftWidth",
        "borderval._getBorderRightWidth",
        "child._move",
        "child._setVerticalMin",
        "child.on_find_CurrentStyle_border",
        "nexacro.Frame.prototype.on_change_containerRect.call",
        "this._getClientWidth",
        "this._recalcSeparateFrameSize"
      ]
    },
    {
      "name": "nexacro.TileFrameSet",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro.FrameSetBase.call"
      ]
    },
    {
      "name": "_pTileFrameSet.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "border._getBorderHeight",
        "child._getCurrentStyleBorder",
        "child._move",
        "child._setVerticalMin",
        "nexacro.Frame.prototype.on_change_containerRect.call",
        "this._control_element.bringToFrontElement",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getMaxMinimizedHeight",
        "this._getMaxMinimizedWidth",
        "this._getMinimizeFrameCount",
        "this._max_frame._move",
        "this._recalcSeparateFrameSize"
      ]
    },
    {
      "name": "_pTileFrameSet.set_separatetype",
      "params": [
        "v"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pTileFrameSet.set_separatecount",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._parseInt",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pTileFrameSet.set_fullframemaximize",
      "params": [
        "v"
      ],
      "calls": [
        "child._p_titlebar._setAbsoluteStyle",
        "nexacro._toBoolean",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pTileFrameSet.set_minimizewidth",
      "params": [
        "minimizewidth"
      ],
      "calls": [
        "this.on_apply_minimizewidth"
      ]
    },
    {
      "name": "_pTileFrameSet.on_apply_minimizewidth",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pTileFrameSet.set_minimizeheight",
      "params": [
        "minimizeheight"
      ],
      "calls": [
        "this.on_apply_minimizeheight"
      ]
    },
    {
      "name": "_pTileFrameSet.on_apply_minimizeheight",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pTileFrameSet._getMaxMinimizedWidth",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTileFrameSet._getMaxMinimizedHeight",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "child._getCurrentStyleBorder"
      ]
    },
    {
      "name": "nexacro._MainStatusBarControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.StatusBarControl.call"
      ]
    },
    {
      "name": "__pMainStatusBarControl._beginCommProgress",
      "params": [],
      "calls": [
        "Math.max",
        "nexacro._CallbackTimer",
        "progress_timer.start",
        "progressbar.set_max",
        "progressbar.set_pos"
      ]
    },
    {
      "name": "__pMainStatusBarControl._stepCommProgress",
      "params": [
        "current",
        "overall"
      ],
      "calls": [
        "progressbar.set_max",
        "progressbar.set_pos"
      ]
    },
    {
      "name": "__pMainStatusBarControl._endCommProgress",
      "params": [],
      "calls": [
        "progressbar.set_pos",
        "this._comm_progress_timer.stop"
      ]
    }
  ],
  "GoogleMap.js": [
    {
      "name": "nexacro.GoogleMapEventInfo",
      "params": [
        "obj",
        "id",
        "centerlocation",
        "coordinates",
        "viewmode",
        "zoomlevel",
        "addresses"
      ],
      "calls": []
    },
    {
      "name": "nexacro.GoogleMapErrorEventInfo",
      "params": [
        "obj",
        "id",
        "errorcode",
        "errormsg"
      ],
      "calls": []
    },
    {
      "name": "nexacro.GoogleMapClickEventInfo",
      "params": [
        "obj",
        "id",
        "location"
      ],
      "calls": []
    },
    {
      "name": "nexacro.GoogleMapDragEventInfo",
      "params": [
        "obj",
        "id",
        "location"
      ],
      "calls": []
    },
    {
      "name": "nexacro.GoogleMap",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pGoogleMap.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._GoogleMapPluginElement",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._ifrm_elem.setElementSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pGoogleMap.on_create_contents_command",
      "params": [],
      "calls": [
        "nexacro._GoogleMapPluginElement",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._ifrm_elem.createCommand",
        "this._ifrm_elem.setElementSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pGoogleMap.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._ifrm_elem.attachHandle"
      ]
    },
    {
      "name": "_pGoogleMap.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "ifrm_elem.create",
        "ifrm_elem.initEvent"
      ]
    },
    {
      "name": "_pGoogleMap.on_destroy_contents",
      "params": [],
      "calls": [
        "ifrm_elem.destroy",
        "nexacro._stopSysObserving"
      ]
    },
    {
      "name": "_pGoogleMap.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "ifrm_elem.on_update_position",
        "nexacro.Component.prototype.on_update_position.call"
      ]
    },
    {
      "name": "_pGoogleMap.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "ifrm_elem.setElementSize"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_onload",
      "params": [
        "obj",
        "id",
        "centerlocation",
        "coordinates",
        "viewmode",
        "zoomlevel",
        "addresses"
      ],
      "calls": [
        "nexacro.GoogleMapEventInfo",
        "this.onload._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_onerror",
      "params": [
        "obj",
        "id",
        "errorcode",
        "errormsg"
      ],
      "calls": [
        "nexacro.GoogleMapErrorEventInfo",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_onrecvsuccess",
      "params": [
        "obj",
        "id",
        "centerlocation",
        "coordinates",
        "viewmode",
        "zoomlevel",
        "addresses"
      ],
      "calls": [
        "nexacro.GoogleMapEventInfo",
        "this.onrecvsuccess._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_oncenterchanged",
      "params": [
        "obj",
        "id",
        "centerlocation",
        "coordinates",
        "viewmode",
        "zoomlevel",
        "addresses"
      ],
      "calls": [
        "nexacro.GoogleMapEventInfo",
        "this.oncenterchanged._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_onclick",
      "params": [
        "obj",
        "id",
        "location"
      ],
      "calls": [
        "nexacro.GoogleMapClickEventInfo",
        "this.onclick._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_ondrag",
      "params": [
        "obj",
        "id",
        "location"
      ],
      "calls": [
        "nexacro.GoogleMapDragEventInfo",
        "this.ondrag._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_onmapdragstart",
      "params": [
        "obj",
        "id",
        "location"
      ],
      "calls": [
        "nexacro.GoogleMapDragEventInfo",
        "this.onmapdragstart._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_onmapdrag",
      "params": [
        "obj",
        "id",
        "location"
      ],
      "calls": [
        "nexacro.GoogleMapDragEventInfo",
        "this.onmapdrag._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_onmapdragend",
      "params": [
        "obj",
        "id",
        "location"
      ],
      "calls": [
        "nexacro.GoogleMapDragEventInfo",
        "this.onmapdragend._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap._apply_setfocus",
      "params": [
        "/*evt_name*/"
      ],
      "calls": [
        "ifrm_elem.setElementFocus"
      ]
    },
    {
      "name": "_pGoogleMap.set_text",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "v.replace"
      ]
    },
    {
      "name": "_pGoogleMap.set_viewmode",
      "params": [
        "v"
      ],
      "calls": [
        "ifrm_elem.setElementParam"
      ]
    },
    {
      "name": "_pGoogleMap.set_zoomlevel",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_showzoom",
      "params": [
        "v"
      ],
      "calls": [
        "ifrm_elem.setElementParam"
      ]
    },
    {
      "name": "_pGoogleMap.set_shownavigator",
      "params": [
        "v"
      ],
      "calls": [
        "ifrm_elem.setElementParam"
      ]
    },
    {
      "name": "_pGoogleMap.set_showmapscale",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_showmode",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_showcompass",
      "params": [
        "v"
      ],
      "calls": [
        "ifrm_elem.setElementParam"
      ]
    },
    {
      "name": "_pGoogleMap.set_enable",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._ifrm_elem.setElementEnable"
      ]
    },
    {
      "name": "_pGoogleMap.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "ifrm_elem.setElementVisible",
        "nexacro.Component.prototype.set_visible.call",
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pGoogleMap.load",
      "params": [
        "bUseSensor",
        "nLatitude",
        "nLongitude",
        "constViewMode",
        "nZoomLevel"
      ],
      "calls": [
        "JSON.stringify",
        "_color.substring",
        "_color_fill.substring",
        "_color_stroke.substring",
        "_itemsname.push",
        "_itemsname.splice",
        "_pGoogleMap._removeItem",
        "_pGoogleMap.addCircle",
        "_pGoogleMap.addMarker",
        "_pGoogleMap.addPolygon",
        "_pGoogleMap.addPolyline",
        "_v.substring",
        "arr_lat.push",
        "arr_lng.push",
        "elem._setCircle",
        "elem._setMarker",
        "elem._setPolygon",
        "elem._setPolyline",
        "elem._setRemove",
        "ifrm_elem._getAddress",
        "ifrm_elem._getCoordinates",
        "ifrm_elem._setLoad",
        "markObj.imageurl.toString",
        "nLatitude.toString",
        "nLongitude.toString",
        "nZoomLevel.toString",
        "nexacro.Device.makeID",
        "nexacro._createPrototype",
        "nexacro._getFileCache",
        "nexacro._toBoolean",
        "polygonObj.locationdata.toString",
        "polylineObj.locationdata.toString",
        "strItemID.trim",
        "this._ifrm_elem.callScriptMethod",
        "this._p_items.indexOf",
        "this._p_items.push",
        "this._p_items.splice",
        "this.align.set_halign",
        "this.align.set_valign",
        "this.on_fire_oncenterchanged",
        "this.on_fire_onclick",
        "this.on_fire_ondrag",
        "this.on_fire_onerror",
        "this.on_fire_onload",
        "this.on_fire_onmapdrag",
        "this.on_fire_onmapdragend",
        "this.on_fire_onmapdragstart",
        "this.on_fire_onrecvsuccess",
        "v.split",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMap.setMarkerLoc",
      "params": [
        "strItemID",
        "lat",
        "lng"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.getAddress",
      "params": [
        "nLatitude",
        "nLongitude",
        "nMaxResultCount",
        "enumLocale"
      ],
      "calls": [
        "ifrm_elem._getAddress"
      ]
    },
    {
      "name": "_pGoogleMap.getCoordinates",
      "params": [
        "strAddress"
      ],
      "calls": [
        "ifrm_elem._getCoordinates"
      ]
    },
    {
      "name": "_pGoogleMap.addItem",
      "params": [
        "strItemID",
        "objComponent"
      ],
      "calls": [
        "_pGoogleMap.addCircle",
        "_pGoogleMap.addMarker",
        "_pGoogleMap.addPolygon",
        "_pGoogleMap.addPolyline",
        "strItemID.trim",
        "this._p_items.push",
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pGoogleMap.addMarker",
      "params": [
        "elem",
        "markName",
        "markObj"
      ],
      "calls": [
        "_itemsname.push",
        "_v.substring",
        "elem._setMarker",
        "markObj.imageurl.toString",
        "nexacro._getFileCache"
      ]
    },
    {
      "name": "_pGoogleMap.addPolygon",
      "params": [
        "elem",
        "polygonName",
        "polygonObj"
      ],
      "calls": [
        "JSON.stringify",
        "_color_fill.substring",
        "_color_stroke.substring",
        "_itemsname.push",
        "arr_lat.push",
        "arr_lng.push",
        "elem._setPolygon",
        "polygonObj.locationdata.toString"
      ]
    },
    {
      "name": "_pGoogleMap.addPolyline",
      "params": [
        "elem",
        "polylineName",
        "polylineObj"
      ],
      "calls": [
        "JSON.stringify",
        "_color.substring",
        "_itemsname.push",
        "arr_lat.push",
        "arr_lng.push",
        "elem._setPolyline",
        "polylineObj.locationdata.toString"
      ]
    },
    {
      "name": "_pGoogleMap.addCircle",
      "params": [
        "elem",
        "circleName",
        "circleObj"
      ],
      "calls": [
        "_itemsname.push",
        "elem._setCircle"
      ]
    },
    {
      "name": "_pGoogleMap.removeItem",
      "params": [
        "strItemID"
      ],
      "calls": [
        "_pGoogleMap._removeItem",
        "this._p_items.indexOf",
        "this._p_items.splice",
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pGoogleMap._removeItem",
      "params": [
        "elem",
        "itemname"
      ],
      "calls": [
        "_itemsname.splice",
        "elem._setRemove"
      ]
    },
    {
      "name": "_pGoogleMap.on_load_handler",
      "params": [
        "id",
        "centerlocation",
        "coordinates",
        "viewmode",
        "zoomlevel",
        "addresses"
      ],
      "calls": [
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pGoogleMap.on_error_handler",
      "params": [
        "id",
        "code",
        "msg"
      ],
      "calls": [
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pGoogleMap.on_recvsuccess_handler",
      "params": [
        "id",
        "centerlocation",
        "coordinates",
        "viewmode",
        "zoomlevel",
        "addresses"
      ],
      "calls": [
        "this.on_fire_onrecvsuccess"
      ]
    },
    {
      "name": "_pGoogleMap.on_centerchanged_handler",
      "params": [
        "id",
        "centerlocation",
        "viewmode",
        "zoomlevel",
        "addresses"
      ],
      "calls": [
        "this.on_fire_oncenterchanged"
      ]
    },
    {
      "name": "_pGoogleMap.on_click_handler",
      "params": [
        "id",
        "location"
      ],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pGoogleMap.on_drag_handler",
      "params": [
        "id",
        "location"
      ],
      "calls": [
        "this.on_fire_ondrag"
      ]
    },
    {
      "name": "_pGoogleMap.on_mapdragstart_handler",
      "params": [
        "id",
        "location"
      ],
      "calls": [
        "this.on_fire_onmapdragstart"
      ]
    },
    {
      "name": "_pGoogleMap.on_mapdrag_handler",
      "params": [
        "id",
        "location"
      ],
      "calls": [
        "this.on_fire_onmapdrag"
      ]
    },
    {
      "name": "_pGoogleMap.on_mapdragend_handler",
      "params": [
        "id",
        "location"
      ],
      "calls": [
        "this.on_fire_onmapdragend"
      ]
    },
    {
      "name": "_pGoogleMap.callMethod",
      "params": [
        "func"
      ],
      "calls": [
        "this._ifrm_elem.callScriptMethod"
      ]
    },
    {
      "name": "nexacro.GoogleMapMarker",
      "params": [
        "name"
      ],
      "calls": [
        "nexacro.Device.makeID",
        "this.align.set_halign",
        "this.align.set_valign",
        "v.split",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapMarker.set_longitude",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapMarker.set_latitude",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapMarker.set_text",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapMarker.set_imageurl",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapMarker.set_draggable",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapMarker.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "nexacro.GoogleMapPolyline",
      "params": [
        "name"
      ],
      "calls": [
        "nexacro.Device.makeID"
      ]
    },
    {
      "name": "_pGoogleMapPolyline.set_locationdata",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapPolyline.set_linewidth",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapPolyline.set_linecolor",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolyline.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "nexacro.GoogleMapPolygon",
      "params": [
        "name"
      ],
      "calls": [
        "nexacro.Device.makeID"
      ]
    },
    {
      "name": "_pGoogleMapPolygon.set_locationdata",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapPolygon.set_linewidth",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapPolygon.set_linecolor",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolygon.set_fillbrushcolor",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolygon.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "nexacro.GoogleMapCircle",
      "params": [
        "name/*",
        "obj*/"
      ],
      "calls": [
        "nexacro.Device.makeID"
      ]
    },
    {
      "name": "_pGoogleMapCircle.set_longitude",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapCircle.set_latitude",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapCircle.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pGoogleMapCircle.set_radius",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "nexacro.googlemaps_callback",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.load_googlemaps",
      "params": [
        "googleapikey",
        "language",
        "region"
      ],
      "calls": [
        "document.body.appendChild",
        "document.createElement"
      ]
    },
    {
      "name": "nexacro.GoogleMap",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "nexacro.Device.makeID",
        "nexacro.load_googlemaps"
      ]
    },
    {
      "name": "_pGoogleMap.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.Element",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._map_elem.setElementSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pGoogleMap.on_create_contents_command",
      "params": [],
      "calls": [
        "nexacro.Element",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._map_elem.createCommand",
        "this._map_elem.setElementSize",
        "this._map_elem.setElementTypeCSSSelector",
        "this.getElement"
      ]
    },
    {
      "name": "_pGoogleMap.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._map_elem.attachHandle"
      ]
    },
    {
      "name": "_pGoogleMap.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "map_elem.create",
        "map_elem.setElementTypeCSSSelector"
      ]
    },
    {
      "name": "_pGoogleMap.on_destroy_contents",
      "params": [],
      "calls": [
        "map_elem.destroy"
      ]
    },
    {
      "name": "_pGoogleMap.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "map_elem.setElementSize"
      ]
    },
    {
      "name": "_pGoogleMap.on_apply_text",
      "params": [],
      "calls": [
        "nexacro.TextBoxElement",
        "text_elem.create",
        "text_elem.setElementAlign",
        "text_elem.setElementColor",
        "text_elem.setElementFont",
        "text_elem.setElementSize",
        "text_elem.setElementText",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._updateElementPositions"
      ]
    },
    {
      "name": "_pGoogleMap.on_apply_expr",
      "params": [],
      "calls": [
        "expr.join",
        "expr.slice",
        "expr.trim",
        "exprfn.call",
        "nexacro.ExprParser",
        "nexacro._createInlineFunc",
        "parser.makeExpr",
        "this.getElement",
        "this.set_text"
      ]
    },
    {
      "name": "_pGoogleMap.on_apply_prop_taborder",
      "params": [],
      "calls": [
        "textElem.setElementTabIndex"
      ]
    },
    {
      "name": "_pGoogleMap.set_draggable",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_zoomalign",
      "params": [
        "name",
        "val"
      ],
      "calls": [
        "this._getalign"
      ]
    },
    {
      "name": "_pGoogleMap.set_enableevent",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pGoogleMap.set_viewmode",
      "params": [
        "v"
      ],
      "calls": [
        "this._getMapType"
      ]
    },
    {
      "name": "_pGoogleMap.set_showmode",
      "params": [
        "v"
      ],
      "calls": [
        "google.maps.LatLng"
      ]
    },
    {
      "name": "_pGoogleMap.set_showmapscale",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_shownavigator",
      "params": [
        "v"
      ],
      "calls": [
        "google.maps.LatLng"
      ]
    },
    {
      "name": "_pGoogleMap.set_apikey",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_language",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pGoogleMap.set_region",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pGoogleMap.set_zoomlevel",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMap.set_enable",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_showzoom",
      "params": [
        "v"
      ],
      "calls": [
        "google.maps.LatLng",
        "self._activateZoomControls"
      ]
    },
    {
      "name": "_pGoogleMap.load",
      "params": [
        "bUseSensor",
        "nLatitude",
        "nLongitude",
        "constViewMode",
        "nZoomLevel",
        "retry"
      ],
      "calls": [
        "_pGoogleMap._getMapType",
        "_pGoogleMap.addCircle",
        "_pGoogleMap.addMarker",
        "_pGoogleMap.addPolygon",
        "_pGoogleMap.addPolyline",
        "button.addEventListener",
        "button.click",
        "e.latLng.lat",
        "e.latLng.lng",
        "e.stopPropagation",
        "geo.getCurrentPosition",
        "google.gears.factory.create",
        "google.maps.LatLng",
        "google.maps.Map",
        "google.maps.event.addListener",
        "google.maps.event.addListenerOnce",
        "google_map.getCenter",
        "google_map.getZoom",
        "google_map.setCenter",
        "mapElement.querySelectorAll",
        "map_elem.create",
        "nLatitude.toString",
        "nLongitude.toString",
        "nZoomLevel.toString",
        "navigator.geolocation.getCurrentPosition",
        "nexacro.Device.makeID",
        "nexacro.GoogleMapClickEventInfo",
        "nexacro.GoogleMapEventInfo",
        "nexacro._OnceCallbackTimer.callonce",
        "nexacro.load_googlemaps",
        "parentMap._activateZoomControls",
        "parentMap._apply_onerror",
        "parentMap._apply_onload",
        "parentMap.oncenterchanged._fireEvent",
        "parentMap.onclick._fireEvent",
        "parentMap.onviewmodechanged._fireEvent",
        "parentMap.onzoomchanged._fireEvent",
        "target.load",
        "zoomButtons.forEach"
      ]
    },
    {
      "name": "_pGoogleMap._activateZoomControls",
      "params": [],
      "calls": [
        "button.addEventListener",
        "button.click",
        "e.stopPropagation",
        "mapElement.querySelectorAll",
        "zoomButtons.forEach"
      ]
    },
    {
      "name": "_pGoogleMap.setMarkerLoc",
      "params": [
        "strItemID",
        "lat",
        "lng"
      ],
      "calls": [
        "console.log"
      ]
    },
    {
      "name": "_pGoogleMap.getAddress",
      "params": [
        "nLatitude",
        "nLongitude",
        "nMaxResultCount",
        "strLocale"
      ],
      "calls": [
        "JSON.stringify",
        "nexacro.Device.exec"
      ]
    },
    {
      "name": "_pGoogleMap.getCoordinates",
      "params": [
        "strAddress"
      ],
      "calls": [
        "JSON.stringify",
        "nexacro.Device.exec"
      ]
    },
    {
      "name": "_pGoogleMap.addItem",
      "params": [
        "strItemID",
        "objItem"
      ],
      "calls": [
        "_pGoogleMap.addCircle",
        "_pGoogleMap.addMarker",
        "_pGoogleMap.addPolygon",
        "_pGoogleMap.addPolyline",
        "nexacro.Device.makeID",
        "strItemID.trim",
        "this._apply_onerror",
        "this._p_items.push"
      ]
    },
    {
      "name": "_pGoogleMap.setMarkerOptions",
      "params": [
        "markName",
        "markObj"
      ],
      "calls": [
        "_infowindowname.push",
        "_v.substring",
        "google.maps.InfoWindow",
        "google.maps.LatLng",
        "google.maps.event.addListener",
        "markObj.imageurl.toString"
      ]
    },
    {
      "name": "_pGoogleMap.addMarker",
      "params": [
        "markName",
        "markObj",
        "parentMap",
        "obj"
      ],
      "calls": [
        "_infowindowname.push",
        "_itemsname.push",
        "_pGoogleMap._google_map.setCenter",
        "_pGoogleMap.gmap_onoverlayclick",
        "_v.substring",
        "console.log",
        "e.latLng.lng",
        "google.maps.InfoWindow",
        "google.maps.LatLng",
        "google.maps.Marker",
        "google.maps.event.addListener",
        "img_path.charAt",
        "markObj.imageurl.toString",
        "marker.getPosition",
        "marker.setMap",
        "nexacro.GoogleMapDragEventInfo",
        "parentMap.onmapdrag._fireEvent",
        "parentMap.onmapdragend._fireEvent",
        "parentMap.onmapdragstart._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap.setPolygonOptions",
      "params": [
        "polygonName",
        "polygonObj"
      ],
      "calls": [
        "_color_fill.substring",
        "_color_stroke.substring",
        "_pGoogleMap.gmap_onoverlayclick",
        "_path.push",
        "e.latLng.lat",
        "e.latLng.lng",
        "google.maps.LatLng",
        "google.maps.event.addListener",
        "polygonObj.locationdata.toString"
      ]
    },
    {
      "name": "_pGoogleMap.addPolygon",
      "params": [
        "polygonName",
        "polygonObj"
      ],
      "calls": [
        "_color_fill.substring",
        "_color_stroke.substring",
        "_itemsname.push",
        "_pGoogleMap.gmap_onoverlayclick",
        "_path.push",
        "e.latLng.lat",
        "e.latLng.lng",
        "google.maps.LatLng",
        "google.maps.Polygon",
        "google.maps.event.addListener",
        "polygonObj.locationdata.toString",
        "polygonPath.setMap"
      ]
    },
    {
      "name": "_pGoogleMap.setPolylineOptions",
      "params": [
        "polylineName",
        "polylineObj"
      ],
      "calls": [
        "_color.substring",
        "_pGoogleMap.gmap_onoverlayclick",
        "_path.push",
        "e.latLng.lat",
        "e.latLng.lng",
        "google.maps.LatLng",
        "google.maps.event.addListener",
        "polylineObj.locationdata.toString"
      ]
    },
    {
      "name": "_pGoogleMap.addPolyline",
      "params": [
        "polylineName",
        "polylineObj"
      ],
      "calls": [
        "_color.substring",
        "_itemsname.push",
        "_pGoogleMap.gmap_onoverlayclick",
        "_path.push",
        "e.latLng.lat",
        "e.latLng.lng",
        "google.maps.LatLng",
        "google.maps.Polyline",
        "google.maps.event.addListener",
        "polyLinePath.setMap",
        "polylineObj.locationdata.toString"
      ]
    },
    {
      "name": "_pGoogleMap.setCircleOptions",
      "params": [
        "circleName",
        "ciecleObj"
      ],
      "calls": [
        "google.maps.LatLng"
      ]
    },
    {
      "name": "_pGoogleMap.addCircle",
      "params": [
        "circleName",
        "ciecleObj"
      ],
      "calls": [
        "_itemsname.push",
        "circle.setMap",
        "google.maps.Circle",
        "google.maps.LatLng"
      ]
    },
    {
      "name": "_pGoogleMap.removeItem",
      "params": [
        "strItemID"
      ],
      "calls": [
        "_pGoogleMap._removeItem",
        "this._apply_onerror",
        "this._p_items.indexOf",
        "this._p_items.splice"
      ]
    },
    {
      "name": "_pGoogleMap.gmap_ondrag",
      "params": [
        "lat",
        "lng"
      ],
      "calls": [
        "nexacro.GoogleMapDragEventInfo",
        "this.on_fire_ondragstart"
      ]
    },
    {
      "name": "_pGoogleMap.gmap_ondragenter",
      "params": [
        "objData"
      ],
      "calls": [
        "nexacro.GoogleMapDragEventInfo",
        "this._fire_ondragenter"
      ]
    },
    {
      "name": "_pGoogleMap.gmap_ondragmove",
      "params": [
        "lat",
        "lng"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.gmap_ondragleave",
      "params": [
        "objData"
      ],
      "calls": [
        "nexacro.GoogleMapDragEventInfo",
        "this._fire_ondragleave"
      ]
    },
    {
      "name": "_pGoogleMap.gmap_dragend",
      "params": [
        "lat",
        "lng"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.gmap_onclick",
      "params": [
        "lat",
        "lng",
        "x",
        "y"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.gmap_onoverlayclick",
      "params": [
        "fromobj",
        "lat",
        "lng",
        "x",
        "y"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap._on_click",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap._on_sys_click",
      "params": [
        "node",
        "e",
        "bubble"
      ],
      "calls": [
        "nexacro.ajaxlog",
        "this._fire_onclick",
        "this._fire_onoverlayclick"
      ]
    },
    {
      "name": "_pGoogleMap._fire_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.GoogleMapClickEventInfo",
        "this.onclick._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap._fire_onoverlayclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.GoogleMapClickEventInfo",
        "this.onoverlayclick._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap._apply_onload",
      "params": [],
      "calls": [
        "this.__map",
        "this._google_map.showBlock",
        "this.on_fire_onload"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_onload",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.GoogleMapEventInfo",
        "this.onload._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap._onrecvsuccess",
      "params": [
        "objData"
      ],
      "calls": [
        "this.on_fire_onrecvsuccess"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_onrecvsuccess",
      "params": [
        "obj",
        "id",
        "addresses",
        "coordinates"
      ],
      "calls": [
        "nexacro.GoogleMapEventInfo",
        "this.onrecvsuccess._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap._apply_onerror",
      "params": [
        "objData"
      ],
      "calls": [
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pGoogleMap.on_fire_onerror",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.GoogleMapErrorEventInfo",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "_pGoogleMap.__onDragEnter",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "console.debug"
      ]
    },
    {
      "name": "_pGoogleMap._getalign",
      "params": [
        "h",
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap._getMapType",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.__map",
      "params": [],
      "calls": [
        "document.getElementById"
      ]
    },
    {
      "name": "_pGoogleMap._set_option",
      "params": [],
      "calls": [
        "google.maps.LatLng",
        "this._getMapType"
      ]
    },
    {
      "name": "_pGoogleMap.map_starter",
      "params": [
        "v"
      ],
      "calls": [
        "this._getMapType",
        "this._google_map.setOptions",
        "this.setOptions"
      ]
    },
    {
      "name": "_pGoogleMap.__onTextchanged",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap._removeItem",
      "params": [
        "itemname"
      ],
      "calls": [
        "_infowindowname.splice",
        "_itemsname.splice"
      ]
    },
    {
      "name": "nexacro.GoogleMapMarker",
      "params": [
        "name",
        "obj"
      ],
      "calls": [
        "__parent._map.setMarkerOptions",
        "fn.call",
        "nexacro.Device.makeID",
        "this.align.set_halign",
        "this.align.set_valign",
        "this.style.align.set_parentID",
        "this.style.set_parentID",
        "v.split",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapMarker.set_longitude",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setMarkerOptions",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapMarker.set_latitude",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setMarkerOptions",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapMarker.set_text",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setMarkerOptions"
      ]
    },
    {
      "name": "_pGoogleMapMarker.set_draggable",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapMarker.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setMarkerOptions"
      ]
    },
    {
      "name": "_pGoogleMapMarker.set_imageurl",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setMarkerOptions"
      ]
    },
    {
      "name": "_pGoogleMapMarker.set_style",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setMarkerOptions",
        "this.style.set_align",
        "v.split"
      ]
    },
    {
      "name": "nexacro.GoogleMapPolyline",
      "params": [
        "name",
        "obj"
      ],
      "calls": [
        "nexacro.Device.makeID"
      ]
    },
    {
      "name": "_pGoogleMapPolyline.set_locationdata",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setPolylineOptions",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapPolyline.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setPolylineOptions"
      ]
    },
    {
      "name": "_pGoogleMapPolyline.set_linewidth",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setPolylineOptions",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapPolyline.set_linecolor",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "nexacro.GoogleMapPolygon",
      "params": [
        "name",
        "obj"
      ],
      "calls": [
        "nexacro.Device.makeID"
      ]
    },
    {
      "name": "_pGoogleMapPolygon.set_locationdata",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setPolygonOptions",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapPolygon.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setPolygonOptions"
      ]
    },
    {
      "name": "_pGoogleMapPolygon.set_linewidth",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setPolygonOptions",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapPolygon.set_linecolor",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolygon.set_fillbrushcolor",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "nexacro.GoogleMapCircle",
      "params": [
        "name",
        "obj"
      ],
      "calls": [
        "nexacro.Device.makeID"
      ]
    },
    {
      "name": "_pGoogleMapCircle.set_longitude",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setCircleOptions",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapCircle.set_latitude",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setCircleOptions",
        "v.toString"
      ]
    },
    {
      "name": "_pGoogleMapCircle.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "this._map.setCircleOptions"
      ]
    },
    {
      "name": "_pGoogleMapCircle.set_radius",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "nexacro.GoogleMap",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pGoogleMap.set_viewmode",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_zoomlevel",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_showzoom",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pGoogleMap.set_shownavigator",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_showcompass",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_showmapscale",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_centerlocation",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_showmode",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_zoomalign",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_navigatoralign",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_mapscalealign",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_draggable",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.set_apikey",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.load",
      "params": [
        "bUseSensor",
        "nLatitude",
        "nLongitude",
        "constViewMode",
        "nZoomLevel"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.setMarkerLoc",
      "params": [
        "strItemID",
        "lat",
        "lng"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.getAddress",
      "params": [
        "nLatitude",
        "nLongitude",
        "nMaxResultCount",
        "strLocale"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.getCoordinates",
      "params": [
        "straddress"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.addItem",
      "params": [
        "strItemID",
        "objComponent"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.setMarkerOptions",
      "params": [
        "markName",
        "markObj"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.addMarker",
      "params": [
        "elem",
        "markName",
        "markObj"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.addPolyline",
      "params": [
        "elem",
        "polylineName",
        "polylineObj"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.removeItem",
      "params": [
        "strItemID"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMap.on_fire_onclick",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGoogleMap._removeItem",
      "params": [
        "elem",
        "itemname"
      ],
      "calls": []
    },
    {
      "name": "nexacro.GoogleMapMarker",
      "params": [
        "name",
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapMarker.set_latitude",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapMarker.set_longitude",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapMarker.set_text",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapMarker.set_draggable",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapMarker.set_visible",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapMarker.set_style",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "nexacro.GoogleMapPolyline",
      "params": [
        "name",
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolyline.set_locationdata",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolyline.set_linewidth",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolyline.set_linecolor",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolyline.set_visible",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "nexacro.GoogleMapPolygon",
      "params": [
        "name",
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolygon.set_locationdata",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolygon.set_linewidth",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolygon.set_linecolor",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolygon.set_fillbrushcolor",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapPolygon.set_visible",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "nexacro.GoogleMapCircle",
      "params": [
        "name",
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapCircle.set_latitude",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapCircle.set_longitude",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapCircle.set_radius",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pGoogleMapCircle.set_visible",
      "params": [
        "v"
      ],
      "calls": []
    }
  ],
  "GroupBox.js": [
    {
      "name": "nexacro.GroupBox",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pGroupBox.on_create_contents",
      "params": [],
      "calls": [
        "boxcontrol._setControl",
        "boxcontrol.createComponent",
        "nexacro.Static",
        "nexacro._IconText",
        "this.getElement",
        "titlecontrol._setControl",
        "titlecontrol.createComponent",
        "titlecontrol.set_text"
      ]
    },
    {
      "name": "_pGroupBox.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "boxcontrol.on_created",
        "this._recalcLayout",
        "titlecontrol.on_created"
      ]
    },
    {
      "name": "_pGroupBox.on_destroy_contents",
      "params": [],
      "calls": [
        "this._boxcontrol.destroy",
        "this._titlecontrol.destroy"
      ]
    },
    {
      "name": "_pGroupBox.on_create_contents_command",
      "params": [],
      "calls": [
        "boxcontrol.createCommand",
        "this._recalcLayout",
        "titlecontrol.createCommand"
      ]
    },
    {
      "name": "_pGroupBox.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "boxcontrol.attachHandle",
        "titlecontrol.attachHandle"
      ]
    },
    {
      "name": "_pGroupBox.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pGroupBox.on_change_containerPos",
      "params": [
        "/*left",
        "top*/"
      ],
      "calls": []
    },
    {
      "name": "_pGroupBox.on_get_prop_tabstop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGroupBox._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pGroupBox.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "boxcontrol.set_enable",
        "titlecontrol.set_enable"
      ]
    },
    {
      "name": "_pGroupBox.set_titlealign",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_titlealign",
        "titlealign_enum.indexOf"
      ]
    },
    {
      "name": "_pGroupBox.on_apply_titlealign",
      "params": [
        "/*titlealign*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pGroupBox.set_titlegap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_titlegap"
      ]
    },
    {
      "name": "_pGroupBox.on_apply_titlegap",
      "params": [
        "/*titlegap*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pGroupBox.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "this._recalcLayout",
        "titlecontrol.set_text"
      ]
    },
    {
      "name": "_pGroupBox.on_apply_font",
      "params": [
        "font"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_font.call",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pGroupBox.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "boxcontrol.on_apply_cssclass",
        "this._recalcLayout",
        "titlecontrol.on_apply_cssclass"
      ]
    },
    {
      "name": "_pGroupBox._recalcLayout",
      "params": [],
      "calls": [
        "boxcontrol.move",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.getElement",
        "titlealign.indexOf",
        "titlecontrol._on_getFitSize",
        "titlecontrol.move"
      ]
    }
  ],
  "HTMLContentBox.js": [
    {
      "name": "nexacro.HTMLContentBox",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.HTMLComponent.call"
      ]
    }
  ],
  "ImageViewer.js": [
    {
      "name": "nexacro.ImageViewer",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pImageViewer.on_create_contents",
      "params": [],
      "calls": [
        "this._createImageControl",
        "this._createImageTextControl",
        "this._on_apply_fittocontents",
        "this.getElement"
      ]
    },
    {
      "name": "_pImageViewer.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._image.on_created",
        "this._imagetext.on_created",
        "this._on_created_accessibility_contents",
        "this.on_apply_stretch"
      ]
    },
    {
      "name": "_pImageViewer.on_create_contents_command",
      "params": [],
      "calls": [
        "this._image.createCommand",
        "this._imagetext.createCommand",
        "this.on_apply_stretch"
      ]
    },
    {
      "name": "_pImageViewer.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._image.attachHandle",
        "this._imagetext.attachHandle",
        "this._on_attach_accessibility_contents_handle"
      ]
    },
    {
      "name": "_pImageViewer.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro._getImageLocation",
        "nexacro._getURIValue",
        "nexacro._releaseImageViewUrl",
        "nexacro._toString",
        "this._getRefFormBaseUrl",
        "this._image._getImageType",
        "this._image._getstretchedmode",
        "this._image.destroy",
        "this._imagetext.destroy"
      ]
    },
    {
      "name": "_pImageViewer.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro._resizeImageViewManager",
        "this._image.resize",
        "this._imagetext.resize"
      ]
    },
    {
      "name": "_pImageViewer._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "image.getOriginalImageSize",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._imagetext._on_getFitSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pImageViewer.on_apply_text",
      "params": [],
      "calls": [
        "text_control.set_text",
        "text_control.set_visible",
        "this._createImageTextControl",
        "this.getElement"
      ]
    },
    {
      "name": "_pImageViewer.set_image",
      "params": [
        "v"
      ],
      "calls": [
        "this._convertImageValue",
        "this.on_apply_image"
      ]
    },
    {
      "name": "_pImageViewer.on_apply_image",
      "params": [],
      "calls": [
        "this._createImageControl",
        "this._image.set_image",
        "this.getElement"
      ]
    },
    {
      "name": "_pImageViewer.set_stretch",
      "params": [
        "v"
      ],
      "calls": [
        "stretch_enum.indexOf",
        "this.on_apply_stretch"
      ]
    },
    {
      "name": "_pImageViewer.on_apply_stretch",
      "params": [],
      "calls": [
        "image._getstretchedmode",
        "image.set_stretch",
        "nexacro._getImageLocation",
        "nexacro._getURIValue",
        "nexacro._releaseImageViewUrl",
        "nexacro._toString",
        "this._getRefFormBaseUrl",
        "this._image._getImageType"
      ]
    },
    {
      "name": "_pImageViewer.set_imagealign",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_imagealign"
      ]
    },
    {
      "name": "_pImageViewer.on_apply_imagealign",
      "params": [],
      "calls": [
        "image.set_imagealign"
      ]
    },
    {
      "name": "_pImageViewer.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": [
        "this._imagetext.set_textAlign"
      ]
    },
    {
      "name": "_pImageViewer.on_apply_verticalAlign",
      "params": [
        "valign"
      ],
      "calls": [
        "this._imagetext.set_verticalAlign"
      ]
    },
    {
      "name": "_pImageViewer.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._image._setEnable",
        "this._imagetext._setEnable"
      ]
    },
    {
      "name": "_pImageViewer.getImageCount",
      "params": [],
      "calls": [
        "image_control.getImageCount"
      ]
    },
    {
      "name": "_pImageViewer.setImageIndex",
      "params": [
        "nIndex"
      ],
      "calls": [
        "image_control.setImageIndex"
      ]
    },
    {
      "name": "_pImageViewer._on_element_swap",
      "params": [],
      "calls": [
        "control_elem.sendToBackElement",
        "this._image.getElement",
        "this._imagetext.getElement",
        "this.getElement"
      ]
    },
    {
      "name": "_pImageViewer._on_image_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pImageViewer.on_fire_onload",
      "params": [
        "obj",
        "url"
      ],
      "calls": [
        "nexacro.LoadEventInfo",
        "this.onload._fireEvent"
      ]
    },
    {
      "name": "_pImageViewer.on_fire_sys_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onkeydown.call",
        "this._getWindow"
      ]
    },
    {
      "name": "_pImageViewer.on_fire_sys_onkeyup",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onkeyup.call",
        "this._getWindow",
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pImageViewer._createImageControl",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "image_control._setEventHandler",
        "image_control._setNotifyFn",
        "image_control.createComponent",
        "image_control.set_image",
        "image_control.set_imagealign",
        "image_control.set_stretch",
        "nexacro._ImageAreaControl",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pImageViewer._createImageTextControl",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "imagetext_control._setControl",
        "imagetext_control._setEventHandler",
        "imagetext_control.createComponent",
        "imagetext_control.set_text",
        "nexacro.Static",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pImageViewer._convertImageValue",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._transImageBase64StringFormat",
        "v.toString"
      ]
    },
    {
      "name": "_pImageViewer._setImageSize",
      "params": [
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "nexacro._ImageAreaControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pImageAreaControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.ImageElement",
        "this.getElement"
      ]
    },
    {
      "name": "_pImageAreaControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._img_elem.create",
        "this.on_apply_image"
      ]
    },
    {
      "name": "_pImageAreaControl.on_create_contents_command",
      "params": [],
      "calls": [
        "img_elem.createCommand"
      ]
    },
    {
      "name": "_pImageAreaControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "img_elem.attachHandle",
        "this.on_apply_image"
      ]
    },
    {
      "name": "_pImageAreaControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._img_elem.destroy"
      ]
    },
    {
      "name": "_pImageAreaControl.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._updateElementPositions"
      ]
    },
    {
      "name": "_pImageAreaControl.set_image",
      "params": [
        "v"
      ],
      "calls": [
        "this._convertImageValue",
        "this.on_apply_image"
      ]
    },
    {
      "name": "_pImageAreaControl.on_apply_image",
      "params": [],
      "calls": [
        "this._load_image"
      ]
    },
    {
      "name": "_pImageAreaControl.set_imagealign",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_imagealign"
      ]
    },
    {
      "name": "_pImageAreaControl.on_apply_imagealign",
      "params": [],
      "calls": [
        "nexacro.AlignObject",
        "this._updateElementPositions"
      ]
    },
    {
      "name": "_pImageAreaControl.set_stretch",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_stretch"
      ]
    },
    {
      "name": "_pImageAreaControl.on_apply_stretch",
      "params": [],
      "calls": [
        "this._load_image",
        "this._updateElementPositions"
      ]
    },
    {
      "name": "_pImageAreaControl._convertImageValue",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._transImageBase64StringFormat",
        "v.toString"
      ]
    },
    {
      "name": "_pImageAreaControl._on_load_image",
      "params": [
        "imgurl",
        "w",
        "h"
      ],
      "calls": [
        "imageviewer._update_position",
        "imgurl.indexOf",
        "imgurl.substring",
        "nexacro._releaseImageViewUrl",
        "nexacro._removeImageViewUrl",
        "this._getstretchedmode",
        "this._load_image_completed",
        "this._setImageSize",
        "url.split"
      ]
    },
    {
      "name": "_pImageAreaControl._load_image",
      "params": [],
      "calls": [
        "img_elem.setElementImage",
        "img_elem.setElementVisible",
        "nexacro._getImageLocation",
        "nexacro._getImageSize",
        "nexacro._getImageViewSize",
        "nexacro._getURIValue",
        "nexacro._toString",
        "this._getImageType",
        "this._getRefFormBaseUrl",
        "this._getstretchedmode",
        "this._load_image_completed",
        "this._setImageSize",
        "this._updateElementPositions",
        "this.getElement"
      ]
    },
    {
      "name": "_pImageAreaControl._load_image_completed",
      "params": [
        "url",
        "w",
        "h"
      ],
      "calls": [
        "imageviewer._on_element_swap",
        "imageviewer._update_position",
        "imageviewer.on_fire_onload",
        "img_elem.setElementImage",
        "img_elem.setElementVisible",
        "nexacro.UrlObject",
        "nexacro._getImageLocation",
        "nexacro._releaseImageViewUrl",
        "nexacro._removeImageViewUrl",
        "this._getImageType",
        "this._getRefFormBaseUrl",
        "this._getstretchedmode",
        "this._on_fire_onimageerror",
        "this._setImageSize",
        "this._updateElementPositions",
        "v.substring",
        "v.toString"
      ]
    },
    {
      "name": "_pImageAreaControl._updateElementPositions",
      "params": [],
      "calls": [
        "Math.floor",
        "img_elem.setElementPosition",
        "img_elem.setElementSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._recalcImageSize"
      ]
    },
    {
      "name": "_pImageAreaControl._recalcImageSize",
      "params": [],
      "calls": [
        "Math.floor",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._setImageSize"
      ]
    },
    {
      "name": "_pImageAreaControl._setNotifyFn",
      "params": [
        "target",
        "fn"
      ],
      "calls": []
    },
    {
      "name": "_pImageAreaControl._setImageSize",
      "params": [
        "w",
        "h"
      ],
      "calls": [
        "this._notifyFn.call"
      ]
    },
    {
      "name": "_pImageAreaControl._getImageType",
      "params": [],
      "calls": [
        "nexacro._transImageBase64StringFormat"
      ]
    },
    {
      "name": "_pImageAreaControl.getImageCount",
      "params": [],
      "calls": [
        "img_elem.getImageCount"
      ]
    },
    {
      "name": "_pImageAreaControl.getOriginalImageSize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pImageAreaControl.setImageIndex",
      "params": [
        "nIndex"
      ],
      "calls": [
        "img_elem.setImageIndex"
      ]
    },
    {
      "name": "_pImageAreaControl._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pImageAreaControl._getstretchedmode",
      "params": [
        "_imageViewer_fittocontents",
        "_stretch"
      ],
      "calls": []
    }
  ],
  "ImportObject.js": [
    {
      "name": "nexacro.ExcelImportEventInfo",
      "params": [
        "obj",
        "id",
        "url",
        "refferObj",
        "importid"
      ],
      "calls": []
    },
    {
      "name": "nexacro.ExcelImportErrorEventInfo",
      "params": [
        "obj",
        "id",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode"
      ],
      "calls": []
    },
    {
      "name": "nexacro.ExcelImportObject",
      "params": [
        "name",
        "parent"
      ],
      "calls": [
        "app.getActiveForm",
        "nexacro.EventListener",
        "nexacro._append_hidden_item",
        "nexacro._append_hidden_textitem",
        "nexacro._create_hidden_frame",
        "nexacro._destroy_hidden_frame",
        "nexacro._get_hidden_frame",
        "nexacro.getApplication",
        "this._initUniqueID"
      ]
    },
    {
      "name": "_pExcelImport._initUniqueID",
      "params": [],
      "calls": []
    },
    {
      "name": "_pExcelImport.set_importtype",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelImport.set_separator",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isInt",
        "pattern16.test",
        "v.substr",
        "v.toString"
      ]
    },
    {
      "name": "_pExcelImport.set_quotechar",
      "params": [
        "v"
      ],
      "calls": [
        "quotechar_enum.indexOf"
      ]
    },
    {
      "name": "_pExcelImport.set_importurl",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._getServiceLocation",
        "this._p_parent._getFormBaseUrl",
        "uploadservlet.lastIndexOf",
        "uploadservlet.substring"
      ]
    },
    {
      "name": "_pExcelImport.set_commdataformat",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pExcelImport.set_commcompress",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pExcelImport.set_importfilemode",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelImport.set_userawdatevalue",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pExcelImport.set_userawnumbervalue",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pExcelImport.set_filefilter",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelImport.set_filefilterindex",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelImport.set_commandversion",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pExcelImport._setImportRange",
      "params": [
        "range"
      ],
      "calls": [
        "cells.indexOf",
        "cells.split",
        "range.indexOf",
        "range.split",
        "this._getExcelRowCol",
        "this._range.push"
      ]
    },
    {
      "name": "_pExcelImport.importData",
      "params": [
        "fileurl",
        "range",
        "responseData",
        "userData"
      ],
      "calls": [
        "nexacro.ExcelImportErrorEventInfo",
        "nexacro._change_inputnode_name",
        "nexacro._findclick",
        "nexacro.replaceAll",
        "responseData.split",
        "this._checkFileName",
        "this._requestImport",
        "this._responseLVal.push",
        "this._responseRVal.push",
        "this._setImportRange",
        "this.importfilemode.toLowerCase",
        "this.on_fire_onerror",
        "userDatas.join",
        "userDatas.splice"
      ]
    },
    {
      "name": "_pExcelImport.importDataEx",
      "params": [
        "importid",
        "fileurl",
        "range",
        "responseData",
        "userData"
      ],
      "calls": [
        "nexacro.ExcelImportErrorEventInfo",
        "this._addImportId",
        "this.importData",
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pExcelImport._addImportId",
      "params": [
        "v"
      ],
      "calls": [
        "list.push"
      ]
    },
    {
      "name": "_pExcelImport._removeImportId",
      "params": [
        "v"
      ],
      "calls": [
        "list.splice"
      ]
    },
    {
      "name": "_pExcelImport.destroy",
      "params": [],
      "calls": [
        "nexacro._destroy_hidden_frame",
        "nexacro._remove_hidden_item",
        "this._p_parent.removeChild"
      ]
    },
    {
      "name": "_pExcelImport.on_fire_onerror",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "event._fireEvent",
        "this._setWaitCursor"
      ]
    },
    {
      "name": "_pExcelImport.on_fire_onsuccess",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "event._fireEvent",
        "this._setWaitCursor"
      ]
    },
    {
      "name": "_pExcelImport._getExcelRowCol",
      "params": [
        "cell"
      ],
      "calls": [
        "arr.push",
        "cell.substring"
      ]
    },
    {
      "name": "_pExcelImport._transaction",
      "params": [
        "id",
        "url",
        "inDatasetsParam",
        "outDatasetsParam",
        "userData",
        "callbackFn",
        "isAsync",
        "datatype",
        "isCompress"
      ],
      "calls": [
        "nexacro._LoadManager",
        "nexacro._getServiceObject",
        "this._load_manager.loadDataModule"
      ]
    },
    {
      "name": "_pExcelImport._getDataset",
      "params": [
        "ds_id"
      ],
      "calls": [
        "this._getDatasetObject"
      ]
    },
    {
      "name": "_pExcelImport._getDatasetObject",
      "params": [
        "queryid"
      ],
      "calls": [
        "nexacro.getApplication",
        "this._p_parent._getDatasetObject"
      ]
    },
    {
      "name": "_pExcelImport._getForm",
      "params": [],
      "calls": [
        "app.getActiveForm",
        "app.getActiveFrame",
        "nexacro.getApplication"
      ]
    },
    {
      "name": "_pExcelImport._isPopupFrame",
      "params": [],
      "calls": []
    },
    {
      "name": "_pExcelImport._makeImportFormat",
      "params": [],
      "calls": [
        "range.indexOf",
        "range.split",
        "this._range.split"
      ]
    },
    {
      "name": "_pExcelImport._requestImport",
      "params": [
        "fileUrl"
      ],
      "calls": [
        "ds_command.addColumn",
        "ds_command.addRow",
        "ds_command.setColumn",
        "nexacro.ExcelImportErrorEventInfo",
        "nexacro.NormalDataset",
        "nexacro.TransactionItem",
        "nexacro._isSameOrigin",
        "nexacro._setImportCommand",
        "nexacro._submit",
        "nexacro.base32Encode",
        "nexacro.base64Encode",
        "this._makeImportFormat",
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pExcelImport._uploadComplete",
      "params": [
        "status",
        "data",
        "url",
        "errcode",
        "httpcode",
        "locationurl",
        "extramsg"
      ],
      "calls": [
        "application._endCommProgress",
        "data.indexOf",
        "data.slice",
        "data.substr",
        "data.trimLeft",
        "data_type.indexOf",
        "nexacro.ExcelImportErrorEventInfo",
        "nexacro.ExcelImportEventInfo",
        "nexacro.MakeCommunicationError",
        "nexacro._append_hidden_item",
        "nexacro._getXMLDocument",
        "nexacro._onHttpSystemError",
        "nexacro._remove_hidden_item",
        "nexacro.getApplication",
        "this._file_url_ds.getColumn",
        "this._removeImportId",
        "this.on_fire_onerror",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pExcelImport._uploadComplete",
      "params": [
        "status",
        "data",
        "url/*",
        "errcode",
        "httpcode",
        "errmsg*/"
      ],
      "calls": [
        "data.indexOf",
        "data.slice",
        "data.substr",
        "data_type.indexOf",
        "nexacro.ExcelImportErrorEventInfo",
        "nexacro.ExcelImportEventInfo",
        "nexacro._append_hidden_item",
        "nexacro._decodeXml",
        "nexacro._getDataFromDOM",
        "nexacro._getXMLDocument",
        "nexacro._parseXMLDocument",
        "nexacro._remove_hidden_item",
        "nexacro._setPostMessage",
        "this._file_url_ds.getColumn",
        "this._removeImportId",
        "this.on_fire_onerror",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pExcelImport.on_after_load",
      "params": [
        "messageObj"
      ],
      "calls": []
    },
    {
      "name": "_pExcelImport._checkFileName",
      "params": [
        "str"
      ],
      "calls": [
        "extension.toLowerCase",
        "filename.split",
        "str.lastIndexOf",
        "str.substring"
      ]
    },
    {
      "name": "_pExcelImport._checkUploadFile",
      "params": [
        "excel"
      ],
      "calls": [
        "nexacro.ExcelImportErrorEventInfo",
        "this._checkFileName",
        "this._requestImport",
        "this._setWaitCursor",
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pExcelImport._setWaitCursor",
      "params": [
        "wait_flag"
      ],
      "calls": [
        "form.setWaitCursor",
        "this._getForm"
      ]
    },
    {
      "name": "_pExcelImport._getWindow",
      "params": [],
      "calls": [
        "form._getWindow"
      ]
    },
    {
      "name": "_pExcelImport._getWindowHandle",
      "params": [],
      "calls": [
        "form._getWindowHandle"
      ]
    }
  ],
  "ListBox.js": [
    {
      "name": "nexacro.ListBox",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "this._initInnerdatasetInfo"
      ]
    },
    {
      "name": "_pListBox.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._ListBoxItemControl",
        "this._temp_item.createComponent"
      ]
    },
    {
      "name": "_pListBox.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._getContentsItem",
        "this._onRecalcScrollSize",
        "this._on_created_accessibility_contents",
        "this._redrawListBoxContents",
        "this._setEventHandler",
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pListBox.on_destroy_contents",
      "params": [],
      "calls": [
        "item.destroy",
        "this._destroyListBoxContents",
        "this._removeEventHandler",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pListBox._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pListBox.on_create_contents_command",
      "params": [],
      "calls": [
        "this._getContentsItem",
        "this._parseInnerDataset",
        "this._redrawListBoxContents",
        "this._setInnerDatasetStr"
      ]
    },
    {
      "name": "_pListBox.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._getContentsItem",
        "this._onRecalcScrollSize",
        "this._on_attach_accessibility_contents_handle",
        "this._setEventHandler"
      ]
    },
    {
      "name": "_pListBox.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getItemHeight",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._recalcLayout",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pListBox.on_change_containerPos",
      "params": [
        "/*left",
        "top*/"
      ],
      "calls": []
    },
    {
      "name": "_pListBox.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pListBox.on_killfocus_basic_action",
      "params": [
        "/*new_focus",
        "new_refer_focus*/"
      ],
      "calls": [
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "rowobj._changeStatus",
        "this._getItem"
      ]
    },
    {
      "name": "_pListBox.on_apply_prop_enable",
      "params": [
        "enable"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_enable.call",
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pListBox.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pListBox.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._redrawListBoxContents",
        "this.set_value"
      ]
    },
    {
      "name": "_pListBox.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.findRow",
        "ds.getColumn",
        "this._convertValueType",
        "this._doSelect",
        "this._onRecalcScrollSize",
        "this._redrawListBoxContents",
        "this._setIndex",
        "this._setText",
        "this._setValue"
      ]
    },
    {
      "name": "_pListBox._onRecalcScrollSize",
      "params": [],
      "calls": [
        "Math.max",
        "control_elem.setElementScrollMaxSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._onResetScrollBar",
        "this.getElement"
      ]
    },
    {
      "name": "_pListBox._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": []
    },
    {
      "name": "_pListBox._setFocus",
      "params": [
        "bResetScroll",
        "dir",
        "bInner"
      ],
      "calls": [
        "this.setFocus"
      ]
    },
    {
      "name": "_pListBox._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "item._on_focus",
        "nexacro.Component.prototype._on_focus.call",
        "this._do_defocus",
        "this._getInnerdatasetInfo",
        "this._getItem",
        "this._isAccessibilityEnable",
        "this._isItemAccessibilityEnable",
        "this._refreshScroll"
      ]
    },
    {
      "name": "_pListBox._on_getFitSize",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._getInnerdatasetInfo",
        "this.getElement"
      ]
    },
    {
      "name": "_pListBox.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pListBox._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro.Component.prototype._convertValueType.call",
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pListBox.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "ds.findRow",
        "nexacro._isNull",
        "nexacro._toString",
        "this._convertValueType",
        "this.applyto_bindSource",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pListBox.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "ds.findRow",
        "ds.getColumn",
        "this._doSelect",
        "this._setIndex",
        "this._setText"
      ]
    },
    {
      "name": "_pListBox.set_index",
      "params": [
        "v"
      ],
      "calls": [
        "ds.getRowCount",
        "this._on_last_selectfocuschanged",
        "this.on_apply_index"
      ]
    },
    {
      "name": "_pListBox.on_apply_index",
      "params": [
        "index"
      ],
      "calls": [
        "this._doSelect",
        "this._getInnerdatasetInfo",
        "this._setText",
        "this._setValue",
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pListBox.set_innerdataset",
      "params": [
        "v"
      ],
      "calls": [
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset"
      ]
    },
    {
      "name": "_pListBox.on_apply_innerdataset",
      "params": [
        "ds"
      ],
      "calls": [
        "ds._setEventHandler",
        "this._onRecalcScrollSize",
        "this._parseInnerDataset",
        "this._redrawListBoxContents",
        "this.getElement"
      ]
    },
    {
      "name": "_pListBox.set_codecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_codecolumn"
      ]
    },
    {
      "name": "_pListBox.on_apply_codecolumn",
      "params": [
        "codecolumn"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._parseInnerDataset",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pListBox.set_datacolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datacolumn"
      ]
    },
    {
      "name": "_pListBox.on_apply_datacolumn",
      "params": [
        "datacolumn"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._parseInnerDataset",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pListBox.set_multiselect",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_multiselect"
      ]
    },
    {
      "name": "_pListBox.on_apply_multiselect",
      "params": [
        "multiselect"
      ],
      "calls": [
        "this._select_clear",
        "this.getElement",
        "this.setSelect"
      ]
    },
    {
      "name": "_pListBox.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._setAccessibilityFlagReadOnly",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pListBox.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "this._changeStatus",
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pListBox.set_itemheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_itemheight"
      ]
    },
    {
      "name": "_pListBox.on_apply_itemheight",
      "params": [
        "itemheight"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._redrawListBoxContents",
        "this.getElement"
      ]
    },
    {
      "name": "_pListBox.set_dragscrolltype",
      "params": [
        "v"
      ],
      "calls": [
        "dragscrolltype_enum.indexOf"
      ]
    },
    {
      "name": "_pListBox.set_selectscrollmode",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pListBox.set_itemaccessibilityrole",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilityrole"
      ]
    },
    {
      "name": "_pListBox.on_apply_itemaccessibilityrole",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pListBox.set_itemaccessibilitylabel",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilitylabel"
      ]
    },
    {
      "name": "_pListBox.on_apply_itemaccessibilitylabel",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pListBox.set_itemaccessibilityenable",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilityenable"
      ]
    },
    {
      "name": "_pListBox.on_apply_itemaccessibilityenable",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pListBox.set_itemaccessibilitydescription",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilitydescription"
      ]
    },
    {
      "name": "_pListBox.on_apply_itemaccessibilitydescription",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pListBox.set_itemaccessibilityaction",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilityaction"
      ]
    },
    {
      "name": "_pListBox.on_apply_itemaccessibilityaction",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pListBox.set_itemaccessibilitydesclevel",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilitydesclevel"
      ]
    },
    {
      "name": "_pListBox.on_apply_itemaccessibilitydesclevel",
      "params": [
        "val"
      ],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pListBox.set_acceptvaluetype",
      "params": [
        "v"
      ],
      "calls": [
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pListBox.getCount",
      "params": [],
      "calls": [
        "this._getInnerdatasetInfo"
      ]
    },
    {
      "name": "_pListBox.getSelectedCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pListBox.getSelect",
      "params": [
        "v"
      ],
      "calls": [
        "this.getCount"
      ]
    },
    {
      "name": "_pListBox.getSelectedItems",
      "params": [],
      "calls": [
        "objsorted.sort"
      ]
    },
    {
      "name": "_pListBox.clearSelect",
      "params": [],
      "calls": [
        "this._changeIndex",
        "this._select_clear",
        "this.on_apply_index"
      ]
    },
    {
      "name": "_pListBox.redraw",
      "params": [],
      "calls": [
        "this._onRecalcScrollSize",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pListBox.setSelect",
      "params": [
        "index",
        "select"
      ],
      "calls": [
        "item.set_selected",
        "nexacro._toBoolean",
        "obj.indexOf",
        "this._changeIndex",
        "this._clearListBoxBufferPage",
        "this._deselect_all",
        "this._doSelect",
        "this._getItem",
        "this._select_add",
        "this._select_clear",
        "this._select_remove",
        "this.on_apply_index"
      ]
    },
    {
      "name": "_pListBox.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pListBox.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this._removeEventHandlerToInnerDataset",
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pListBox.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pListBox._on_dataset_onload",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._changeIndex",
        "this._innerdataset.findRow",
        "this._onRecalcScrollSize",
        "this._redrawListBoxContents",
        "this.on_apply_index"
      ]
    },
    {
      "name": "_pListBox._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._parseInnerDataset",
        "this._redrawListBoxContents",
        "this.on_fire_oninnerdatachanged"
      ]
    },
    {
      "name": "_pListBox._on_dataset_onrowsetchanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._parseInnerDataset",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pListBox._on_item_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "item._changeStatus",
        "obj._changeStatus",
        "obj._changeUserStatus",
        "this._getItem"
      ]
    },
    {
      "name": "_pListBox._on_item_ondblclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_onitemdblclick"
      ]
    },
    {
      "name": "_pListBox._on_beforescroll",
      "params": [
        "prehpos",
        "prevpos",
        "posthpos",
        "postvpos",
        "evttype",
        "evtkind"
      ],
      "calls": [
        "navigator.userAgent.indexOf",
        "nexacro.AnimationFrame",
        "pThis._adjustScrollRows_callback",
        "this._adjustScrollRows_callback",
        "this._aniframe_rowscroll.start",
        "this._scroll_vpos_queue.push"
      ]
    },
    {
      "name": "_pListBox._adjustScrollRows_callback",
      "params": [
        "no_ani",
        "pos"
      ],
      "calls": [
        "Math.floor",
        "this._aniframe_rowscroll.start",
        "this._control_element.setElementVScrollPos",
        "this._createListBoxContents",
        "this._doSelect",
        "this._getInnerdatasetInfo",
        "this._getItemHeight",
        "this._scroll_vpos_queue.pop"
      ]
    },
    {
      "name": "_pListBox._setVScrollDefaultAction",
      "params": [
        "wheelDeltaY"
      ],
      "calls": [
        "this._getItemHeight",
        "this._scrollTo",
        "this.getElement"
      ]
    },
    {
      "name": "_pListBox.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onlbuttonup.call"
      ]
    },
    {
      "name": "_pListBox.on_fire_sys_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "down_item._changeStatus",
        "down_item._changeUserStatus",
        "nexacro.Component.prototype.on_fire_sys_onlbuttonup.call",
        "sel_item._changeUserStatus",
        "this._changeIndex",
        "this._contains",
        "this._deselect_all",
        "this._do_select",
        "this._getItem",
        "this._getWindow",
        "this._select_withmouseevent",
        "this.on_apply_index",
        "this.on_fire_onitemclick"
      ]
    },
    {
      "name": "_pListBox.on_fire_sys_onslidestart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslidestart.call"
      ]
    },
    {
      "name": "_pListBox.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslide.call",
        "nexacro._isNumber",
        "rows.push",
        "this._changeIndex",
        "this._deselect_all",
        "this._doMultiSelect",
        "this._getInnerdatasetInfo"
      ]
    },
    {
      "name": "_pListBox.on_fire_sys_onslideend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslideend.call"
      ]
    },
    {
      "name": "_pListBox.on_fire_sys_onflingstart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onflingstart.call"
      ]
    },
    {
      "name": "_pListBox.on_fire_sys_onflingend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onflingend.call"
      ]
    },
    {
      "name": "_pListBox.on_fire_onitemclick",
      "params": [
        "obj",
        "index",
        "itemtext",
        "itemvalue",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ItemClickEventInfo",
        "nexacro._toBoolean",
        "this.onitemclick._fireEvent"
      ]
    },
    {
      "name": "_pListBox.on_fire_canitemchange",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "nexacro._toBoolean",
        "this.canitemchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pListBox.on_fire_onitemchanged",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "nexacro._toBoolean",
        "this.onitemchanged._fireEvent"
      ]
    },
    {
      "name": "_pListBox.on_fire_onitemdblclick",
      "params": [
        "obj",
        "index",
        "itemtext",
        "itemvalue",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ItemClickEventInfo",
        "nexacro._toBoolean",
        "this.onitemdblclick._fireEvent"
      ]
    },
    {
      "name": "_pListBox.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pListBox.on_fire_sys_onaccessibilitygesture",
      "params": [
        "direction",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "obj._setAccessibilityNotifyEvent",
        "this._getContentsItem",
        "this._getItemByRealIdx"
      ]
    },
    {
      "name": "_pListBox.on_keydown_basic_action",
      "params": [
        "/*keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pListBox.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp"
      ],
      "calls": [
        "cur_item.set_selected",
        "this._changeIndex",
        "this._do_defocus",
        "this._do_deselect",
        "this._do_scroll",
        "this._getInnerdatasetInfo",
        "this._getItem",
        "this._select_add",
        "this._select_withkeydownevent",
        "this._select_withkeyupevent",
        "this.on_apply_index"
      ]
    },
    {
      "name": "_pListBox._redrawListBoxContents",
      "params": [
        "bScrollChange"
      ],
      "calls": [
        "Math.ceil",
        "Math.floor",
        "nexacro._isMobile",
        "this._createListBoxContents",
        "this._getClientHeight",
        "this._getInnerdatasetInfo",
        "this._getItemHeight",
        "this._get_first_visible_row",
        "this._get_last_visible_row",
        "this._recalcContentsMaxSize",
        "this._redrawListBoxContentsAfter",
        "this._redrawListBoxContentsBefore",
        "this.set_index",
        "this.set_value"
      ]
    },
    {
      "name": "_pListBox._redrawListBoxContentsBefore",
      "params": [],
      "calls": [
        "this._destroyListBoxContents"
      ]
    },
    {
      "name": "_pListBox._redrawListBoxContentsAfter",
      "params": [],
      "calls": [
        "comp._on_focus",
        "this._getItem"
      ]
    },
    {
      "name": "_pListBox._createListBoxContents",
      "params": [
        "start",
        "end",
        "createonly"
      ],
      "calls": [
        "this._addListBoxBufferPage",
        "this._adjustListBoxBufferPage",
        "this._clearListBoxBufferPage",
        "this._getInnerdatasetInfo",
        "this._insertListBoxBufferPage",
        "this._isRange",
        "this._removeListBoxBufferPage",
        "this._resetListBoxBufferPage"
      ]
    },
    {
      "name": "_pListBox._destroyListBoxContents",
      "params": [],
      "calls": [
        "this._clearListBoxBufferPage"
      ]
    },
    {
      "name": "_pListBox._createListItemControl",
      "params": [
        "index"
      ],
      "calls": [
        "Math.max",
        "item._setAccessibilityStatSelected",
        "item._setEventHandler",
        "item.createComponent",
        "item.set_index",
        "item.set_readonly",
        "item.set_selected",
        "item.set_text",
        "item.set_value",
        "this._createListItem",
        "this._getClientWidth",
        "this._getInnerdatasetInfo",
        "this._getItemHeight",
        "this._setItemAccessibility",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pListBox._createListItem",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._ListBoxItemControl"
      ]
    },
    {
      "name": "_pListBox._addListBoxBufferPage",
      "params": [
        "itemcount",
        "itemindex"
      ],
      "calls": [
        "page.push",
        "this._buffer_pages.push",
        "this._createListItemControl"
      ]
    },
    {
      "name": "_pListBox._insertListBoxBufferPage",
      "params": [
        "pageindex",
        "itemcount",
        "itemindex"
      ],
      "calls": [
        "page.push",
        "this._buffer_pages.splice",
        "this._createListItemControl"
      ]
    },
    {
      "name": "_pListBox._adjustListBoxBufferPage",
      "params": [
        "pageindex"
      ],
      "calls": [
        "this._insertListBoxBufferPage",
        "this._removeListBoxBufferPage"
      ]
    },
    {
      "name": "_pListBox._removeListBoxBufferPage",
      "params": [
        "pageindex"
      ],
      "calls": [
        "del_page.hasOwnProperty",
        "this._buffer_pages.splice"
      ]
    },
    {
      "name": "_pListBox._clearListBoxBufferPage",
      "params": [],
      "calls": [
        "pages.hasOwnProperty"
      ]
    },
    {
      "name": "_pListBox._resetListBoxBufferPage",
      "params": [
        "startindex",
        "endindex"
      ],
      "calls": [
        "this._removeListBoxBufferPage"
      ]
    },
    {
      "name": "_pListBox._recalcLayout",
      "params": [],
      "calls": [
        "Math.max",
        "item.move",
        "this._getClientWidth",
        "this._getContentsItem",
        "this._getItemHeight"
      ]
    },
    {
      "name": "_pListBox._recalcContentsMaxSize",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getInnerdatasetInfo",
        "this._getItemHeight",
        "this._onRecalcScrollSize"
      ]
    },
    {
      "name": "_pListBox._parseInnerDataset",
      "params": [],
      "calls": [
        "ds.getColumn",
        "ds.getRowCount",
        "nexacro._getTextSize",
        "this._convertValueType",
        "this._getReferenceAbsoluteFont",
        "this._initInnerdatasetInfo",
        "this._setInnerdatasetInfoMaxSize",
        "this._setInnerdatasetInfoRowCount",
        "this._setInnerdatasetInfoRowData",
        "tmp_item._getCurrentStyleInheritValue",
        "tmp_item._on_getFitSize",
        "tmp_item.set_text"
      ]
    },
    {
      "name": "_pListBox._doSelect",
      "params": [
        "rows",
        "keepExisting",
        "isNotFireEvent"
      ],
      "calls": [
        "this._doMultiSelect",
        "this._doSingleSelect"
      ]
    },
    {
      "name": "_pListBox._doSingleSelect",
      "params": [
        "idx",
        "isNotFireEvent"
      ],
      "calls": [
        "this._on_select_change",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pListBox._doMultiSelect",
      "params": [
        "rows",
        "keepExisting",
        "isNotFireEvent"
      ],
      "calls": [
        "this._do_deselect",
        "this._is_selected",
        "this._on_select_change",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pListBox._select_withmouseevent",
      "params": [
        "idx"
      ],
      "calls": [
        "item.set_selected",
        "obj.indexOf",
        "this._changeIndex",
        "this._deselect_all",
        "this._do_select",
        "this._getItem",
        "this._is_selected",
        "this._select_add",
        "this._select_range",
        "this._select_remove",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pListBox._select_withkeyupevent",
      "params": [
        "shiftkey"
      ],
      "calls": [
        "item._setFocus",
        "this._deselect_all",
        "this._do_deselect",
        "this._do_select",
        "this._getItem",
        "this._isAccessibilityEnable",
        "this._is_selected",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pListBox._select_withkeydownevent",
      "params": [
        "shiftkey"
      ],
      "calls": [
        "nexacro._isNumber",
        "this._deselect_all",
        "this._do_deselect",
        "this._do_select",
        "this._getInnerdatasetInfo",
        "this._is_selected",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pListBox._do_scroll",
      "params": [
        "dir"
      ],
      "calls": [
        "this._getItemHeight",
        "this._get_first_visible_row",
        "this._scrollTo"
      ]
    },
    {
      "name": "_pListBox._select_add",
      "params": [
        "selectIdx",
        "isNotFireEvent"
      ],
      "calls": [
        "info.items.push",
        "info.keys.push",
        "this._changeIndex",
        "this._innerdataset.getRowCount",
        "this._select_replace"
      ]
    },
    {
      "name": "_pListBox._select_replace",
      "params": [
        "k",
        "selectIdx"
      ],
      "calls": [
        "this._select_indexOfkey"
      ]
    },
    {
      "name": "_pListBox._select_indexOfkey",
      "params": [
        "k"
      ],
      "calls": [
        "nexacro._indexOf"
      ]
    },
    {
      "name": "_pListBox._select_remove",
      "params": [
        "selectIdx"
      ],
      "calls": [
        "info.items.splice",
        "info.keys.splice",
        "this._select_indexOfkey"
      ]
    },
    {
      "name": "_pListBox._select_indexOf",
      "params": [
        "selectIdx"
      ],
      "calls": [
        "nexacro._indexOf"
      ]
    },
    {
      "name": "_pListBox._select_clear",
      "params": [],
      "calls": [
        "this._getContentsItem"
      ]
    },
    {
      "name": "_pListBox._select_range",
      "params": [
        "startRow",
        "endRow",
        "keepExisting",
        "dir"
      ],
      "calls": [
        "nexacro._isNumber",
        "rows.push",
        "this._changeIndex",
        "this._deselect_all",
        "this._doMultiSelect",
        "this._do_deselect",
        "this._getInnerdatasetInfo",
        "this._is_selected"
      ]
    },
    {
      "name": "_pListBox._deselect_all",
      "params": [
        "isNotFireEvent"
      ],
      "calls": [
        "this._do_deselect",
        "this._getInnerdatasetInfo"
      ]
    },
    {
      "name": "_pListBox._do_select",
      "params": [
        "rows",
        "keepExisting",
        "isNotFireEvent"
      ],
      "calls": [
        "this._doMultiSelect",
        "this._doSingleSelect"
      ]
    },
    {
      "name": "_pListBox._do_deselect",
      "params": [
        "rows",
        "isNotFireEvent"
      ],
      "calls": [
        "nexacro._isArray",
        "nexacro._isNumber",
        "this._is_selected",
        "this._on_select_change"
      ]
    },
    {
      "name": "_pListBox._select_commit",
      "params": [
        "jobgbn",
        "row",
        "params",
        "isNotFireEvent"
      ],
      "calls": [
        "this._do_deselect",
        "this._select_add",
        "this._select_remove"
      ]
    },
    {
      "name": "_pListBox._set_last_selectfocused",
      "params": [
        "idx",
        "isNotFireEvent"
      ],
      "calls": [
        "this._on_last_selectfocuschanged"
      ]
    },
    {
      "name": "_pListBox._on_select_change",
      "params": [
        "idx",
        "isSelected",
        "jobgbn",
        "params",
        "isNotFireEvent"
      ],
      "calls": [
        "rowobj._setAccessibilityInfoCount",
        "rowobj._setAccessibilityInfoIndex",
        "rowobj._setAccessibilityStatSelected",
        "rowobj.set_selected",
        "this._getInnerdatasetInfo",
        "this._getItem",
        "this._select_commit"
      ]
    },
    {
      "name": "_pListBox._on_last_selectfocuschanged",
      "params": [
        "newFocused",
        "isNotFireEvent"
      ],
      "calls": [
        "item.getElement",
        "item_control_elem.setElementFocus",
        "this._getItem",
        "this._getItemHeight",
        "this._get_first_visible_row",
        "this._get_last_visible_row",
        "this.getElement",
        "vscrollbar.set_pos"
      ]
    },
    {
      "name": "_pListBox._do_defocus",
      "params": [
        "target",
        "bParent"
      ],
      "calls": [
        "_window._removeFromCurrentFocusPath",
        "this._getWindow"
      ]
    },
    {
      "name": "_pListBox._changeIndex",
      "params": [
        "v",
        "change_by_script",
        "isNotFireEvent"
      ],
      "calls": [
        "dataset.getColumn",
        "this._convertValueType",
        "this.applyto_bindSource",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged"
      ]
    },
    {
      "name": "_pListBox._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._convertObjectContents",
        "this.set_innerdataset"
      ]
    },
    {
      "name": "_pListBox._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pListBox._setIndex",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pListBox._setText",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pListBox._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pListBox._setItemAccessibility",
      "params": [
        "item"
      ],
      "calls": [
        "item.set_accessibilityaction",
        "item.set_accessibilitydesclevel",
        "item.set_accessibilitydescription",
        "item.set_accessibilityenable",
        "item.set_accessibilitylabel",
        "item.set_accessibilityrole",
        "this._getAccessibilityRole"
      ]
    },
    {
      "name": "_pListBox._getItem",
      "params": [
        "index"
      ],
      "calls": []
    },
    {
      "name": "_pListBox._getItemHeight",
      "params": [],
      "calls": [
        "item._on_getFitSize"
      ]
    },
    {
      "name": "_pListBox._getContentsItem",
      "params": [],
      "calls": [
        "pages.hasOwnProperty",
        "ret.concat"
      ]
    },
    {
      "name": "_pListBox._getContentsCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pListBox._isRange",
      "params": [
        "start",
        "end"
      ],
      "calls": []
    },
    {
      "name": "_pListBox._get_first_visible_row",
      "params": [],
      "calls": [
        "Math.floor",
        "this._getItemHeight"
      ]
    },
    {
      "name": "_pListBox._get_last_visible_row",
      "params": [
        "bPrecision"
      ],
      "calls": [
        "this._getInnerdatasetInfo",
        "this._get_first_visible_row"
      ]
    },
    {
      "name": "_pListBox._get_page_from_rowidx",
      "params": [
        "rowidx"
      ],
      "calls": [
        "Math.floor"
      ]
    },
    {
      "name": "_pListBox._refreshScroll",
      "params": [
        "rowidx",
        "direction",
        "keycode"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getInnerdatasetInfo",
        "this._getItemHeight",
        "this._p_vscrollbar.set_pos",
        "this.getElement"
      ]
    },
    {
      "name": "_pListBox._getNextAccessibilityOrderIndex",
      "params": [
        "direction"
      ],
      "calls": [
        "this._getInnerdatasetInfo"
      ]
    },
    {
      "name": "_pListBox._is_selected",
      "params": [
        "idx"
      ],
      "calls": [
        "this._select_indexOf"
      ]
    },
    {
      "name": "_pListBox._initInnerdatasetInfo",
      "params": [],
      "calls": []
    },
    {
      "name": "_pListBox._getInnerdatasetInfo",
      "params": [
        "prop"
      ],
      "calls": []
    },
    {
      "name": "_pListBox._setInnerdatasetInfoRowCount",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pListBox._setInnerdatasetInfoRowData",
      "params": [
        "v"
      ],
      "calls": [
        "this._innerdataset_info._rows.push"
      ]
    },
    {
      "name": "_pListBox._setInnerdatasetInfoMaxSize",
      "params": [
        "w",
        "h"
      ],
      "calls": []
    },
    {
      "name": "nexacro._ListBoxItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Static.call"
      ]
    },
    {
      "name": "_pListBoxItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pListBoxItemControl._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "nexacro.Component.prototype._apply_setfocus.call"
      ]
    },
    {
      "name": "_pListBoxItemControl._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pListBoxItemControl._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getTextSize",
        "this._getCSSStyleValue",
        "this._getCurrentStyleBorder",
        "this._getCurrentStyleInheritValue",
        "this._getCurrentStylePadding",
        "this._getReferenceAbsoluteFont",
        "this.getElement"
      ]
    },
    {
      "name": "_pListBoxItemControl.on_tap_default_action",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp"
      ],
      "calls": [
        "border._getBorderLeftWidth",
        "border._getBorderTopWidth",
        "down_item._changeUserStatus",
        "listbox._changeIndex",
        "listbox._do_select",
        "listbox._getClientXY",
        "listbox._getCurrentStyleBorder",
        "listbox._select_withmouseevent",
        "listbox.on_apply_index",
        "listbox.on_fire_onitemclick",
        "sel_info_list.shift",
        "this._contains",
        "this._getWindow"
      ]
    },
    {
      "name": "_pListBoxItemControl.set_index",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pListBoxItemControl.set_value",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pListBoxItemControl.set_selected",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_selected"
      ]
    },
    {
      "name": "_pListBoxItemControl.on_apply_selected",
      "params": [],
      "calls": [
        "this._changeStatus",
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pListBoxItemControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pListBoxItemControl.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pListBoxItemControl.on_fire_sys_onflingstart",
      "params": [
        "elem",
        "touch_manager",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pListBoxItemControl._getStringResourceProperty",
      "params": [
        "v"
      ],
      "calls": []
    }
  ],
  "MaskEdit.js": [
    {
      "name": "nexacro.MaskEdit",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pMaskEdit.on_create_contents",
      "params": [],
      "calls": [
        "input_elem.setElementAutoSelect",
        "input_elem.setElementAutoSkip",
        "input_elem.setElementImeAction",
        "input_elem.setElementImeMode",
        "input_elem.setElementPadding",
        "input_elem.setElementPosition",
        "input_elem.setElementReadonly",
        "input_elem.setElementSize",
        "input_elem.setElementTextAlign",
        "input_elem.setElementTextDecoration",
        "input_elem.setElementUseIme",
        "input_elem.setElementVerticalAlign",
        "nexacro.InputElement",
        "nexacro.TextBoxElement",
        "nexacro._EditUndoStack",
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth",
        "this.getElement"
      ]
    },
    {
      "name": "_pMaskEdit.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "input_elem.create",
        "nexacro._createNotifyAccessibilityInputElement",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._getLocale",
        "this._getStringResourceProperty",
        "this._isInvalidValue",
        "this._on_apply_format",
        "this.on_apply_clipmode",
        "this.on_apply_displayinvalidtext",
        "this.on_apply_displaynulltext",
        "this.on_apply_limitbymask",
        "this.on_apply_locale",
        "this.on_apply_maskchar",
        "this.on_apply_postfixtext",
        "this.on_apply_type",
        "this.on_apply_usesoftkeyboard",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMaskEdit.on_destroy_contents",
      "params": [],
      "calls": [
        "input_elem.destroy",
        "undostack.destroy"
      ]
    },
    {
      "name": "_pMaskEdit.on_create_contents_command",
      "params": [],
      "calls": [
        "input_elem.createCommand",
        "this._getLocale",
        "this._getStringResourceProperty",
        "this._on_apply_format",
        "this.on_apply_clipmode",
        "this.on_apply_limitbymask",
        "this.on_apply_locale",
        "this.on_apply_maskchar",
        "this.on_apply_postfixtext",
        "this.on_apply_prop_enable",
        "this.on_apply_type",
        "this.on_apply_usesoftkeyboard",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMaskEdit.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "input_elem.attachHandle",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._isInvalidValue",
        "this._on_attach_accessibility_contents_handle",
        "this.on_apply_displayinvalidtext",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pMaskEdit.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "input_elem.setElementSize"
      ]
    },
    {
      "name": "_pMaskEdit.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "input_elem.setElementPosition"
      ]
    },
    {
      "name": "_pMaskEdit._getInputElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskEdit._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.setElementDefaultValue",
        "input_elem.setElementFocus",
        "input_elem.setElementSetSelect",
        "input_elem.setElementValue",
        "maskobj.applyMask",
        "maskobj.setEditStatus",
        "nexacro._isNull",
        "nexacro._notifyAccessibilityInputElement",
        "this._changeUserStatus",
        "this._getAccessibilityReadLabel",
        "this._getEmptyText",
        "this._getMaskObj",
        "this._isComponentKeydownAction",
        "this._isInvalidValue"
      ]
    },
    {
      "name": "_pMaskEdit.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskEdit.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementEnable",
        "this._getCSSStyleValue"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._getStringResourceProperty",
        "this.on_apply_displayinvalidtext",
        "this.on_apply_displaynulltext",
        "this.on_apply_postfixtext"
      ]
    },
    {
      "name": "_pMaskEdit.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._setValue",
        "this._undostack.clear"
      ]
    },
    {
      "name": "_pMaskEdit.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "this._convertValueType",
        "this._setValue",
        "this._undostack.clear"
      ]
    },
    {
      "name": "_pMaskEdit.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus/*",
        "currentstatus",
        "currentuserstatus*/"
      ],
      "calls": []
    },
    {
      "name": "_pMaskEdit._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": []
    },
    {
      "name": "_pMaskEdit._getDragData",
      "params": [],
      "calls": [
        "this.getSelectedText"
      ]
    },
    {
      "name": "_pMaskEdit._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getTextSize",
        "this._getCurrentStyleBorder",
        "this._getCurrentStyleInheritValue",
        "this._getCurrentStylePadding",
        "this._getReferenceAbsoluteFont",
        "this.getElement"
      ]
    },
    {
      "name": "_pMaskEdit.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this._convertValueType",
        "this._setValue",
        "this._updateAccessibilityLabel",
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.getElementText",
        "input_elem.setElementDefaultValue",
        "input_elem.setElementSetSelect",
        "input_elem.setElementText",
        "input_elem.setElementValue",
        "maskobj.applyMask",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._getMaskObj",
        "this._getStringResourceProperty",
        "this._isInvalidValue",
        "this._undostack.push",
        "this._updateAccessibilityLabel"
      ]
    },
    {
      "name": "_pMaskEdit.set_displaynulltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_displaynulltext",
      "params": [
        "displaynulltext"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.setElementDisplayNullText",
        "this._getEmptyText",
        "this._getStringResourceProperty",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMaskEdit.set_displayinvalidtext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_displayinvalidtext"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_displayinvalidtext",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.setElementDisplayInvalidText",
        "nexacro._toString",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMaskEdit.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "input_elem.setElementReadonly",
        "this._changeStatus"
      ]
    },
    {
      "name": "_pMaskEdit.set_autoselect",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoselect"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_autoselect",
      "params": [
        "autoselect"
      ],
      "calls": [
        "input_elem.setElementAutoSelect"
      ]
    },
    {
      "name": "_pMaskEdit.set_autoskip",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoskip"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_autoskip",
      "params": [
        "autoskip"
      ],
      "calls": [
        "input_elem.setElementAutoSkip"
      ]
    },
    {
      "name": "_pMaskEdit.set_clipmode",
      "params": [
        "v"
      ],
      "calls": [
        "clipmode_enum.indexOf",
        "this.on_apply_clipmode"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_clipmode",
      "params": [
        "clipmode"
      ],
      "calls": [
        "maskobj.setFillChar"
      ]
    },
    {
      "name": "_pMaskEdit.set_limitbymask",
      "params": [
        "v"
      ],
      "calls": [
        "limitbymask_enum.indexOf",
        "this.on_apply_limitbymask",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_limitbymask",
      "params": [
        "limitbymask"
      ],
      "calls": [
        "maskobj.setLimitType"
      ]
    },
    {
      "name": "_pMaskEdit.set_format",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._on_apply_format",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMaskEdit._on_apply_format",
      "params": [
        "mask"
      ],
      "calls": [
        "mask.replace",
        "maskobj.setMask",
        "this._on_apply_inputtype"
      ]
    },
    {
      "name": "_pMaskEdit.set_maskchar",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_maskchar",
        "this.on_apply_value",
        "v.charAt"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_maskchar",
      "params": [
        "maskchar"
      ],
      "calls": [
        "maskobj.setMaskChar"
      ]
    },
    {
      "name": "_pMaskEdit.set_trimtype",
      "params": [
        "v"
      ],
      "calls": [
        "trimtype_enum.indexOf"
      ]
    },
    {
      "name": "_pMaskEdit.set_type",
      "params": [
        "v"
      ],
      "calls": [
        "this._getLocale",
        "this._on_apply_format",
        "this.on_apply_clipmode",
        "this.on_apply_limitbymask",
        "this.on_apply_locale",
        "this.on_apply_maskchar",
        "this.on_apply_type",
        "this.on_apply_value",
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_type",
      "params": [
        "type"
      ],
      "calls": [
        "input_elem.setElementInputType",
        "input_elem.setElementTextAlignByClassCSSSelector",
        "nexacro._EditMaskTypeNumber",
        "nexacro._EditMaskTypeString"
      ]
    },
    {
      "name": "_pMaskEdit.set_locale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_locale",
      "params": [
        "locale"
      ],
      "calls": [
        "maskobj.setLocale"
      ]
    },
    {
      "name": "_pMaskEdit.set_usesoftkeyboard",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_usesoftkeyboard",
      "params": [],
      "calls": [
        "input_elem.setElementUseSoftKeyboard",
        "this._getUseSoftKeyboardValue"
      ]
    },
    {
      "name": "_pMaskEdit.set_usecontextmenu",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pMaskEdit.set_cursor",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.CursorObject",
        "this.on_apply_cursor"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": [
        "input_elem.setElementTextAlign"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_padding",
      "params": [
        "padding"
      ],
      "calls": [
        "input_elem.setElementPadding"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_textDecoration",
      "params": [
        "textDecoration"
      ],
      "calls": [
        "input_elem.setElementTextDecoration"
      ]
    },
    {
      "name": "_pMaskEdit.set_postfixtext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_postfixtext"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_postfixtext",
      "params": [
        "v"
      ],
      "calls": [
        "maskobj.setPostfixtext",
        "this._getStringResourceProperty",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMaskEdit.set_imeaction",
      "params": [
        "v"
      ],
      "calls": [
        "imeaction_enum.indexOf",
        "this.on_apply_imeaction",
        "v.split"
      ]
    },
    {
      "name": "_pMaskEdit.on_apply_imeaction",
      "params": [
        "imeaction"
      ],
      "calls": [
        "input_elem.setElementImeAction"
      ]
    },
    {
      "name": "_pMaskEdit.getLength",
      "params": [],
      "calls": [
        "regExp.test",
        "val.replace"
      ]
    },
    {
      "name": "_pMaskEdit.getCaretPos",
      "params": [],
      "calls": [
        "input_elem.getElementCaretPos",
        "this._isEnable"
      ]
    },
    {
      "name": "_pMaskEdit.setCaretPos",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "nexacro._toInt",
        "this._isEnable"
      ]
    },
    {
      "name": "_pMaskEdit.getSelect",
      "params": [],
      "calls": [
        "input_elem.getElementSelectionRange"
      ]
    },
    {
      "name": "_pMaskEdit.setSelect",
      "params": [
        "start",
        "end"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "nexacro._isNull",
        "nexacro._isNumber",
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pMaskEdit.getSelectedText",
      "params": [],
      "calls": [
        "input_elem.getElementSelectionRange",
        "text.substring"
      ]
    },
    {
      "name": "_pMaskEdit.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pMaskEdit.on_deactivate_process",
      "params": [],
      "calls": [
        "input_elem._setElementLastSelectionRange",
        "input_elem.getElementSelectionRange",
        "input_elem.setCompositionComplete"
      ]
    },
    {
      "name": "_pMaskEdit._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_deactivate.call",
        "this.on_deactivate_process.call"
      ]
    },
    {
      "name": "_pMaskEdit._on_value_change",
      "params": [
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.setElementSetSelect",
        "input_elem.setElementValue",
        "this._updateAccessibilityLabel",
        "this.applyto_bindSource",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pMaskEdit._on_input_undo",
      "params": [
        "item"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "input_elem.updateElementText",
        "this._isEnable"
      ]
    },
    {
      "name": "_pMaskEdit._on_input_redo",
      "params": [
        "item"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "input_elem.updateElementText",
        "this._isEnable"
      ]
    },
    {
      "name": "_pMaskEdit._on_input_autoskip",
      "params": [],
      "calls": [
        "maskobj.isFilled",
        "nexacro._nvl",
        "this._getMaskObj",
        "this._setFocusToNextComponent"
      ]
    },
    {
      "name": "_pMaskEdit.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.stopSysEvent",
        "this._isEnable",
        "this._undostack.redo",
        "this._undostack.undo",
        "this._undostack.update"
      ]
    },
    {
      "name": "_pMaskEdit.on_keydown_default_action",
      "params": [
        "keycode/*",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.setElementSetSelect",
        "input_elem.setElementValue",
        "input_elem.stopSysEvent",
        "input_handle.blur",
        "input_handle.focus",
        "input_value.charAt",
        "maskobj.applyMask",
        "maskobj.isDeletableChar",
        "this._getMaskObj",
        "this._isEnable",
        "this._on_value_change"
      ]
    },
    {
      "name": "_pMaskEdit.on_keypress_basic_action",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key/*",
        "shift_key*/"
      ],
      "calls": [
        "String.fromCharCode",
        "input_elem.getElementCaretPos",
        "input_elem.stopSysEvent",
        "maskobj.findNearEditablePos",
        "maskobj.isFilterChar",
        "maskobj.keyPressed",
        "this._getDlgCode",
        "this._getMaskObj",
        "this._on_input_autoskip"
      ]
    },
    {
      "name": "_pMaskEdit.on_beforekeyinput_basic_action",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "this._beforeinput_process_with_HTMLEvent",
        "this._beforeinput_process_with_NexacroInputEvent",
        "this._isEnable"
      ]
    },
    {
      "name": "_pMaskEdit.on_keyinput_basic_action",
      "params": [],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_value.replace",
        "maskobj.removeMask",
        "this._getMaskObj",
        "this._isEnable",
        "this._undostack.push"
      ]
    },
    {
      "name": "_pMaskEdit.on_keyinput_default_action",
      "params": [],
      "calls": [
        "this._isEnable",
        "this._on_input_autoskip"
      ]
    },
    {
      "name": "_pMaskEdit.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "_win._indexOfCurrentFocusPaths",
        "input_elem._setElementLastSelectionRange",
        "input_elem.getElementCaretPos",
        "input_elem.getElementSelectionRange",
        "input_elem.setElementBlur",
        "input_elem.setElementDefaultValue",
        "input_elem.setElementText",
        "input_elem.setElementValue",
        "maskobj.applyMask",
        "maskobj.setEditStatus",
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._getMaskObj",
        "this._getRootComponent",
        "this._getRootWindow",
        "this._isInvalidValue",
        "this._on_value_change",
        "this._setAccessibilityStatKillFocus"
      ]
    },
    {
      "name": "_pMaskEdit.on_click_basic_action",
      "params": [
        "elem",
        "button/*",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY*/"
      ],
      "calls": [
        "_window._getCaptureComp",
        "input_elem.setElementFocus",
        "this._getWindow"
      ]
    },
    {
      "name": "_pMaskEdit.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.EditClickEventInfo",
        "this._getClientXY",
        "this.getCaretPos",
        "this.oneditclick._fireEvent"
      ]
    },
    {
      "name": "_pMaskEdit.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.InputEventInfo",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pMaskEdit.on_fire_canchange",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.canchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pMaskEdit.on_fire_onchanged",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pMaskEdit._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro._getDatatypeRule",
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pMaskEdit._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isNull",
        "nexacro._toString",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMaskEdit._setLocale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMaskEdit._setEnableView",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementEnable"
      ]
    },
    {
      "name": "_pMaskEdit._setFocusToNextComponent",
      "params": [],
      "calls": [
        "next_comp._setDefaultCaret",
        "next_comp.setFocus",
        "this._getForm",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pMaskEdit._on_apply_inputtype",
      "params": [],
      "calls": [
        "input_elem.setElementInputType",
        "maskobj.getInputMode",
        "this._getMaskObj"
      ]
    },
    {
      "name": "_pMaskEdit._getMaskObj",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMaskEdit._getEmptyText",
      "params": [],
      "calls": [
        "maskobj.applyMask"
      ]
    },
    {
      "name": "_pMaskEdit._beforeinput_process_with_HTMLEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "input_elem._getInputValue",
        "input_value.substring",
        "maskobj.applyMask",
        "maskobj.arrangeMask",
        "maskobj.findNearEditablePos",
        "maskobj.isFilterChar",
        "ret.push",
        "this._getMaskObj"
      ]
    },
    {
      "name": "_pMaskEdit._beforeinput_process_with_NexacroInputEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end"
      ],
      "calls": [
        "input_elem.replaceElementText",
        "input_elem.stopSysEvent",
        "input_elem.updateElementText",
        "input_value.replace",
        "maskobj.arrangeMask",
        "maskobj.findNearEditablePos",
        "maskobj.removeMask",
        "this._getMaskObj"
      ]
    },
    {
      "name": "_pMaskEdit._isInvalidValue",
      "params": [
        "v"
      ],
      "calls": [
        "maskobj.applyMask",
        "nexacro._isNull",
        "this._getMaskObj"
      ]
    },
    {
      "name": "_pMaskEdit._on_input_compositionend",
      "params": [
        "value"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "this._undostack.push"
      ]
    }
  ],
  "Menu.js": [
    {
      "name": "nexacro._MenuItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Static.call"
      ]
    },
    {
      "name": "_pMenuItemControl.on_tap_basic_action",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp"
      ],
      "calls": [
        "curr_popupmenu._is_popup",
        "curr_popupmenu.cancelPopup",
        "nexacro.Component.prototype.on_tap_basic_action.call",
        "p_popupmenu._showPopup",
        "prev_item._changeUserStatus",
        "root_comp._closePopup",
        "root_comp._isPopupVisible",
        "this._getRootComponent",
        "this._isEnable"
      ]
    },
    {
      "name": "_pMenuItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMenuItemControl._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._getTextSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pMenuItemControl._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "control_elem.setElementFocus",
        "this._on_apply_selected"
      ]
    },
    {
      "name": "_pMenuItemControl._getTextSize",
      "params": [
        "text"
      ],
      "calls": [
        "nexacro._getTextSize",
        "this._getCurrentStyleInheritValue",
        "this._getReferenceAbsoluteFont"
      ]
    },
    {
      "name": "_pMenuItemControl._on_apply_mouseover",
      "params": [
        "isovered"
      ],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pMenuItemControl._on_apply_selected",
      "params": [
        "bflag"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pMenuItemControl._getStringResourceProperty",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMenuItemControl._getWindowPosition",
      "params": [],
      "calls": [
        "nexacro._getElementXYInWindow"
      ]
    },
    {
      "name": "_pMenuItemControl._isSelected",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.MenuClickEventInfo",
      "params": [
        "obj",
        "id",
        "itemid",
        "itemuserdata",
        "index",
        "level",
        "refobj"
      ],
      "calls": []
    },
    {
      "name": "nexacro.MenuMouseEventInfo",
      "params": [
        "obj",
        "id",
        "itemid",
        "strButton",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "level",
        "index",
        "bindindex",
        "metaKey"
      ],
      "calls": []
    },
    {
      "name": "nexacro.MenuContextMenuEventInfo",
      "params": [
        "obj",
        "id",
        "itemid",
        "strButton",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "level",
        "index",
        "bindindex",
        "metaKey"
      ],
      "calls": [
        "nexacro.ContextMenuEventInfo.call"
      ]
    },
    {
      "name": "nexacro.Menu",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pMenu.on_create_contents",
      "params": [],
      "calls": [
        "this._createMenu"
      ]
    },
    {
      "name": "_pMenu.on_created_contents",
      "params": [],
      "calls": [
        "this._recalcLayout",
        "this._registerItemHotkey",
        "this.getElement",
        "this.on_apply_enablecolumn"
      ]
    },
    {
      "name": "_pMenu.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMenu.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._recalcLayout",
        "this._registerItemHotkey",
        "this.on_apply_enablecolumn"
      ]
    },
    {
      "name": "_pMenu.on_destroy_contents",
      "params": [],
      "calls": [
        "popupmenu.destroy",
        "this._removeEventHandlerToInnerDataset",
        "this._unregisterItemHotkey"
      ]
    },
    {
      "name": "_pMenu.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "item._applyElementVisible",
        "item.move",
        "item.resize",
        "this._getCSSStyleValue",
        "this._isNavigationVisible",
        "this._rearrangeMenuItems",
        "this._showNavigationButton"
      ]
    },
    {
      "name": "_pMenu._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "control_elem.setElementFocus",
        "this._select_menuitem"
      ]
    },
    {
      "name": "_pMenu._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "item._on_getFitSize",
        "items_width.push",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this.getElement"
      ]
    },
    {
      "name": "_pMenu._on_hotkey",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "this.on_fire_onitemclick",
        "this.setFocus"
      ]
    },
    {
      "name": "_pMenu._unregisterItemHotkey",
      "params": [
        "hotkey"
      ],
      "calls": [
        "nexacro._unregisterHotkeyComp",
        "this._getMainForm",
        "this._hot_key_list.pop",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pMenu._registerItemHotkey",
      "params": [
        "hotkey"
      ],
      "calls": [
        "nexacro._registerHotkeyComp",
        "this._getMainForm",
        "this._setAccessibilityHotKey",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pMenu._getDlgCode",
      "params": [
        "keycode/*",
        "altKey",
        "ctrlKey",
        "shiftKey*/"
      ],
      "calls": []
    },
    {
      "name": "_pMenu.set_autohotkey",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autohotkey"
      ]
    },
    {
      "name": "_pMenu.on_apply_autohotkey",
      "params": [
        "autohotkey"
      ],
      "calls": [
        "popupmenu.set_autohotkey",
        "this._registerItemHotkey",
        "this._unregisterItemHotkey"
      ]
    },
    {
      "name": "_pMenu.set_popupitemheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_popupitemheight"
      ]
    },
    {
      "name": "_pMenu.on_apply_popupitemheight",
      "params": [
        "popupitemheight"
      ],
      "calls": [
        "popupmenu.set_itemheight"
      ]
    },
    {
      "name": "_pMenu.set_popuptype",
      "params": [
        "popuptype"
      ],
      "calls": [
        "popuptype_enum.indexOf",
        "this.on_apply_popuptype"
      ]
    },
    {
      "name": "_pMenu.on_apply_popuptype",
      "params": [
        "popuptype"
      ],
      "calls": [
        "popupmenu.set_popuptype"
      ]
    },
    {
      "name": "_pMenu.set_navigationbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_navigationbuttonsize"
      ]
    },
    {
      "name": "_pMenu.on_apply_navigationbuttonsize",
      "params": [
        "/*val*/"
      ],
      "calls": [
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pMenu.set_popupnavigationbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_popupnavigationbuttonsize"
      ]
    },
    {
      "name": "_pMenu.on_apply_popupnavigationbuttonsize",
      "params": [
        "/*val*/"
      ],
      "calls": [
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pMenu.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "item._setEnable",
        "nextbutton._changeStatus",
        "nextbutton._setEnable",
        "popupemenu._setEnable",
        "prevbutton._changeStatus",
        "prevbutton._setEnable"
      ]
    },
    {
      "name": "_pMenu.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "item.on_apply_cssclass",
        "popupemenu.on_apply_cssclass"
      ]
    },
    {
      "name": "_pMenu.set_captioncolumn",
      "params": [
        "v"
      ],
      "calls": [
        "popupmenu.set_captioncolumn",
        "this.on_apply_captioncolumn"
      ]
    },
    {
      "name": "_pMenu.on_apply_captioncolumn",
      "params": [],
      "calls": [
        "this._createMenu",
        "this._innerdataset.getColumn"
      ]
    },
    {
      "name": "_pMenu.set_checkboxcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this._createMenu",
        "this._popupmenu.set_checkboxcolumn"
      ]
    },
    {
      "name": "_pMenu.set_enablecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_enablecolumn"
      ]
    },
    {
      "name": "_pMenu.on_apply_enablecolumn",
      "params": [],
      "calls": [
        "this._createMenu",
        "this._popupmenu.set_enablecolumn"
      ]
    },
    {
      "name": "_pMenu.set_hotkeycolumn",
      "params": [
        "v"
      ],
      "calls": [
        "popupmenu.set_hotkeycolumn",
        "this._createMenu"
      ]
    },
    {
      "name": "_pMenu.set_iconcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_iconcolumn"
      ]
    },
    {
      "name": "_pMenu.on_apply_iconcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "item._changeUserStatus",
        "popupmenu.set_iconcolumn",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pMenu.set_idcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "popupmenu.set_idcolumn",
        "this.on_apply_idcolumn"
      ]
    },
    {
      "name": "_pMenu.on_apply_idcolumn",
      "params": [],
      "calls": [
        "this._createMenu",
        "this._innerdataset.getColumn"
      ]
    },
    {
      "name": "_pMenu.set_levelcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "popupmenu.set_levelcolumn",
        "this.on_apply_levelcolumn"
      ]
    },
    {
      "name": "_pMenu.on_apply_levelcolumn",
      "params": [],
      "calls": [
        "this._createMenu",
        "this._innerdataset.getColumn"
      ]
    },
    {
      "name": "_pMenu.set_userdatacolumn",
      "params": [
        "v"
      ],
      "calls": [
        "popupmenu.set_userdatacolumn",
        "this.on_apply_userdatacolumn"
      ]
    },
    {
      "name": "_pMenu.on_apply_userdatacolumn",
      "params": [],
      "calls": [
        "this._innerdataset.getColumn",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pMenu.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this._removeEventHandlerToInnerDataset",
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pMenu._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pMenu.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMenu.set_innerdataset",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset",
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset"
      ]
    },
    {
      "name": "_pMenu.on_apply_innerdataset",
      "params": [],
      "calls": [
        "popupmenu.set_innerdataset",
        "this._createMenu",
        "this._setEventHandlerToInnerDataset",
        "this.getElement"
      ]
    },
    {
      "name": "_pMenu.set_icontextpadding",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_icontextpadding"
      ]
    },
    {
      "name": "_pMenu.on_apply_icontextpadding",
      "params": [],
      "calls": [
        "this._popupmenu.set_icontextpadding"
      ]
    },
    {
      "name": "_pMenu.set_hotkeytextgap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_hotkeytextgap"
      ]
    },
    {
      "name": "_pMenu.on_apply_wordSpacing",
      "params": [
        "wordSpacing"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_wordSpacing.call",
        "this._createMenu"
      ]
    },
    {
      "name": "_pMenu.on_apply_letterSpacing",
      "params": [
        "letterSpacing"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_letterSpacing.call",
        "this._createMenu"
      ]
    },
    {
      "name": "_pMenu.isPopup",
      "params": [],
      "calls": [
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pMenu.trackPopup",
      "params": [
        "index",
        "x",
        "y",
        "bcapture"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._showPopup"
      ]
    },
    {
      "name": "_pMenu.cancelPopup",
      "params": [],
      "calls": [
        "popupmenu.cancelPopup",
        "popupmenu.isPopup"
      ]
    },
    {
      "name": "_pMenu._callback_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oninnerdatachanged"
      ]
    },
    {
      "name": "_pMenu.on_notify_menuitem_onmouseleave",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": []
    },
    {
      "name": "_pMenu.on_notify_menuitem_onmouseenter",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": [
        "item._changeStatus",
        "item._on_apply_selected",
        "obj._on_apply_selected",
        "popupmenu._is_popup",
        "popupmenu.cancelPopup",
        "this._item_focus",
        "this._showPopup"
      ]
    },
    {
      "name": "_pMenu.on_notify_menuitem_onclick",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": [
        "item._on_apply_selected",
        "obj._isEnable",
        "obj._on_apply_selected",
        "this._getRootComponent",
        "this._isEnable",
        "this._isPopupVisible",
        "this._item_focus",
        "this.on_fire_onitemclick"
      ]
    },
    {
      "name": "_pMenu.on_notify_menuitem_onlbuttondown",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": [
        "item._on_apply_selected",
        "obj._isEnable",
        "obj._on_apply_selected",
        "popupmenu._is_popup",
        "popupmenu.cancelPopup",
        "this._item_focus",
        "this._showPopup"
      ]
    },
    {
      "name": "_pMenu.on_notify_navigationnext_onclick",
      "params": [],
      "calls": [
        "this._closePopup",
        "this._navigationNext"
      ]
    },
    {
      "name": "_pMenu.on_notify_navigationprev_onclick",
      "params": [],
      "calls": [
        "this._closePopup",
        "this._navigationPrev"
      ]
    },
    {
      "name": "_pMenu.on_notify_onclosepopup",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": [
        "_window._releaseCaptureLock",
        "item._on_apply_selected",
        "this._changeStatus",
        "this._getWindow"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onlbuttondown._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onlbuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_onrbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onrbuttondown._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onrbuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_oncontextmenu",
      "params": [
        "from_comp",
        "from_refer_comp",
        "button",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuContextMenuEventInfo",
        "this._getEventInfoComponent",
        "this.oncontextmenu._fireEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_onmouseup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onmouseup._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_onmousedown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onmousedown._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_onmouseenter",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onmouseenter._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_onmouseleave",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onmouseleave._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_onmousemove",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onmousemove._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_ondrag",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "refer_comp",
        "self_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuDragEventInfo",
        "this._getDragData",
        "this._getEventInfoComponent",
        "this.ondrag._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_ondrop",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuDragEventInfo",
        "this._getEventInfoComponent",
        "this.ondrop._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_ondragenter",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuDragEventInfo",
        "this._getEventInfoComponent",
        "this.ondragenter._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_ondragleave",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuDragEventInfo",
        "this._getEventInfoComponent",
        "this.ondragleave._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_user_ondragmove",
      "params": [
        "src_comp",
        "src_refer_comp",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuDragEventInfo",
        "this._getEventInfoComponent",
        "this.ondragmove._fireUserEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_sys_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "item._changeUserStatus",
        "item._isEnable",
        "item._on_apply_selected",
        "item._on_focus",
        "nexacro.Component.prototype.on_fire_sys_onkeydown.call",
        "nexacro._isNull",
        "this._fire_on_Popupmenu",
        "this._getItemIndex",
        "this._isNavigationVisible",
        "this._isPopupmenuVisible",
        "this._item_killfocus",
        "this._popupmenu_find",
        "this._popupmenuitem_extend",
        "this._rearrangeMenuItems",
        "this._select_menuitem",
        "this._showPopup",
        "this.nextbutton._changeStatus",
        "this.on_notify_menuitem_onclick",
        "this.prevbutton._changeStatus"
      ]
    },
    {
      "name": "_pMenu.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pMenu.on_fire_onkillfocus",
      "params": [
        "obj",
        "fromObj"
      ],
      "calls": [
        "item._on_apply_selected",
        "lastfocuseditem._changeStatus",
        "nexacro.Component.prototype.on_fire_onkillfocus.call",
        "this._closePopup",
        "this._do_defocus"
      ]
    },
    {
      "name": "_pMenu.on_fire_onitemclick",
      "params": [
        "obj",
        "itemid",
        "itemuserdata",
        "index",
        "level",
        "refobj"
      ],
      "calls": [
        "nexacro.MenuClickEventInfo",
        "this.onmenuclick._fireEvent"
      ]
    },
    {
      "name": "_pMenu._fire_on_Popupmenu",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "popupmenu.on_fire_sys_onkeydown"
      ]
    },
    {
      "name": "_pMenu._createMenu",
      "params": [],
      "calls": [
        "ds.getColumn",
        "ds.getRowCount",
        "item._on_getFitSize",
        "item._setEventHandler",
        "item.createComponent",
        "item.move",
        "item.set_enable",
        "item.set_text",
        "nexacro._MenuItemControl",
        "this._deleteMenu",
        "this._getMenuHeight",
        "this._items.push",
        "this._items_width.push",
        "this._on_getFitSize",
        "this._setHotkey",
        "this._update_position",
        "this.getElement"
      ]
    },
    {
      "name": "_pMenu._deleteMenu",
      "params": [],
      "calls": [
        "nexacro._unregisterHotkeyComp",
        "this._getMainForm",
        "this._on_focus"
      ]
    },
    {
      "name": "_pMenu._createNavigationButton",
      "params": [],
      "calls": [
        "navagationnextbutton._setControl",
        "navagationnextbutton._setEventHandler",
        "navagationnextbutton.createComponent",
        "navagationnextbutton.on_created",
        "navagationnextbutton.set_visible",
        "navagationprevbutton._changeStatus",
        "navagationprevbutton._setControl",
        "navagationprevbutton._setEventHandler",
        "navagationprevbutton.createComponent",
        "navagationprevbutton.on_created",
        "navagationprevbutton.set_visible",
        "nexacro.Button"
      ]
    },
    {
      "name": "_pMenu._recalcLayout",
      "params": [],
      "calls": [
        "this._isNavigationVisible",
        "this._rearrangeMenuItems",
        "this._showNavigationButton"
      ]
    },
    {
      "name": "_pMenu._showNavigationButton",
      "params": [
        "navigation_visible"
      ],
      "calls": [
        "nextbutton.move",
        "nextbutton.set_visible",
        "prevbutton.move",
        "prevbutton.set_visible",
        "this._createNavigationButton",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getNavigationbuttonWidth",
        "this.nextbutton.on_created",
        "this.prevbutton.on_created"
      ]
    },
    {
      "name": "_pMenu._rearrangeMenuItems",
      "params": [
        "need_calc",
        "dir"
      ],
      "calls": [
        "this._getClientWidth",
        "this._getMenuHeight"
      ]
    },
    {
      "name": "_pMenu._navigationNext",
      "params": [
        "bKeyaction"
      ],
      "calls": [
        "this._navigationNext",
        "this._rearrangeMenuItems",
        "this.nextbutton._changeStatus",
        "this.prevbutton._changeStatus"
      ]
    },
    {
      "name": "_pMenu._navigationPrev",
      "params": [
        "bKeyaction"
      ],
      "calls": [
        "this._navigationPrev",
        "this._rearrangeMenuItems",
        "this.nextbutton._changeStatus",
        "this.prevbutton._changeStatus"
      ]
    },
    {
      "name": "_pMenu._showPopup",
      "params": [
        "obj",
        "x",
        "y",
        "bcapture"
      ],
      "calls": [
        "_window._releaseCaptureLock",
        "_window._setCaptureLock",
        "nexacro.PopupMenu",
        "popupmenu._is_popup",
        "popupmenu._setControl",
        "popupmenu._setEventHandler",
        "popupmenu._trackPopup",
        "popupmenu.createComponent",
        "popupmenu.setInnerDataset",
        "popupmenu.set_captioncolumn",
        "popupmenu.set_checkboxcolumn",
        "popupmenu.set_color",
        "popupmenu.set_cssclass",
        "popupmenu.set_enablecolumn",
        "popupmenu.set_font",
        "popupmenu.set_hotkeycolumn",
        "popupmenu.set_iconcolumn",
        "popupmenu.set_icontextpadding",
        "popupmenu.set_idcolumn",
        "popupmenu.set_itemheight",
        "popupmenu.set_levelcolumn",
        "popupmenu.set_navigationbuttonsize",
        "popupmenu.set_userdatacolumn",
        "this._getCurrentStyleInheritValue",
        "this._getWindow",
        "this._setPopupContains"
      ]
    },
    {
      "name": "_pMenu._closePopup",
      "params": [],
      "calls": [
        "_window._releaseCaptureLock",
        "item._on_apply_selected",
        "popup.cancelPopup",
        "this._getWindow"
      ]
    },
    {
      "name": "_pMenu._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._convertObjectContents",
        "this.set_innerdataset"
      ]
    },
    {
      "name": "_pMenu._callbackFromDataset",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._createMenu",
        "this._deleteMenu",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pMenu._item_focus",
      "params": [
        "obj",
        "bflag"
      ],
      "calls": [
        "obj._on_focus",
        "this._do_defocus"
      ]
    },
    {
      "name": "_pMenu._item_killfocus",
      "params": [
        "obj"
      ],
      "calls": [
        "_window._removeFromCurrentFocusPath",
        "this._getWindow"
      ]
    },
    {
      "name": "_pMenu._select_menuitem",
      "params": [
        "nextitemindex",
        "previtemindex",
        "popupvisible",
        "direction"
      ],
      "calls": [
        "next_item._on_apply_selected",
        "next_item._on_focus",
        "popupmenu._getItemIndex",
        "popupmenu._select_menuitem",
        "prev_item._changeStatus",
        "prev_item._changeUserStatus",
        "prev_item._on_apply_selected",
        "this._closePopup",
        "this._do_defocus",
        "this._isNavigationVisible",
        "this._item_focus",
        "this._navigationNext",
        "this._navigationPrev",
        "this._showPopup"
      ]
    },
    {
      "name": "_pMenu._getItemIndex",
      "params": [
        "inc"
      ],
      "calls": [
        "this._getItemIndex"
      ]
    },
    {
      "name": "_pMenu._getMenuHeight",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._on_getFitSize"
      ]
    },
    {
      "name": "_pMenu._getNavigationbuttonWidth",
      "params": [
        "prevbutton",
        "nextbutton"
      ],
      "calls": [
        "nexacro._getImageSize",
        "nextbutton._getCSSStyleValue",
        "prevbutton._getCSSStyleValue"
      ]
    },
    {
      "name": "_pMenu._getPopupControl",
      "params": [],
      "calls": [
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pMenu._getEventInfoComponent",
      "params": [
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pMenu._setEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._innerdataset._setEventHandler"
      ]
    },
    {
      "name": "_pMenu._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pMenu._setFocus",
      "params": [
        "bResetScroll",
        "dir/*",
        "bInner*/"
      ],
      "calls": [
        "this._do_defocus",
        "this._isNavigationVisible",
        "this._item_focus",
        "this._on_focus",
        "this._rearrangeMenuItems",
        "this._select_menuitem",
        "this.setFocus"
      ]
    },
    {
      "name": "_pMenu._setHotkey",
      "params": [
        "id",
        "v",
        "item"
      ],
      "calls": [
        "hotkey._isEmpty",
        "nexacro._HotKey",
        "this._hot_key_list.push",
        "this._registerItemHotkey"
      ]
    },
    {
      "name": "_pMenu._loaded_expImage",
      "params": [
        "imgurl",
        "w",
        "h"
      ],
      "calls": []
    },
    {
      "name": "_pMenu._loaded_chkImage",
      "params": [
        "imgurl",
        "w",
        "h"
      ],
      "calls": []
    },
    {
      "name": "_pMenu._load_image",
      "params": [
        "strImageUrl",
        "flag"
      ],
      "calls": [
        "nexacro._getImageLocation",
        "nexacro._getImageSize",
        "nexacro._getURIValue",
        "this._getRefFormBaseUrl"
      ]
    },
    {
      "name": "_pMenu._isPopupVisible",
      "params": [],
      "calls": [
        "this._popupmenu._is_popup"
      ]
    },
    {
      "name": "_pMenu._isPopupmenuVisible",
      "params": [
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pMenu._isNavigationVisible",
      "params": [],
      "calls": [
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pMenu._item_find",
      "params": [
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pMenu._popupmenu_find",
      "params": [
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pMenu._popupmenuitem_extend",
      "params": [
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pMenu._do_defocus",
      "params": [
        "target",
        "bParent"
      ],
      "calls": [
        "_window._removeFromCurrentFocusPath",
        "target._changeStatus",
        "this._getWindow"
      ]
    }
  ],
  "MobileCompBase.js": [
    {
      "name": "nexacro.FlexibleComponent",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "this._setFlexible"
      ]
    },
    {
      "name": "_pFlexibleComponent.on_create_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setLinkedControl",
        "nexacro.FlexibleControlElement"
      ]
    },
    {
      "name": "_pFlexibleComponent.on_after_created",
      "params": [],
      "calls": [
        "this.on_apply_flexcrossaxisalign",
        "this.on_apply_flexmainaxisalign"
      ]
    },
    {
      "name": "_pFlexibleComponent.set_flexwrap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_flexwrap"
      ]
    },
    {
      "name": "_pFlexibleComponent.on_apply_flexwrap",
      "params": [],
      "calls": [
        "control_elem.setElementFlexWrap"
      ]
    },
    {
      "name": "_pFlexibleComponent.set_flexcrossaxisalign",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_flexcrossaxisalign"
      ]
    },
    {
      "name": "_pFlexibleComponent.on_apply_flexcrossaxisalign",
      "params": [],
      "calls": [
        "control_elem.setElementFlexCrossAxisAlign"
      ]
    },
    {
      "name": "_pFlexibleComponent.set_flexmainaxisalign",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_flexmainaxisalign"
      ]
    },
    {
      "name": "_pFlexibleComponent.on_apply_flexmainaxisalign",
      "params": [],
      "calls": [
        "control_elem.setElementFlexCrossAxisAlign"
      ]
    },
    {
      "name": "_pFlexibleComponent._isSupportFlexDisplay",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFlexibleComponent._setFlexible",
      "params": [],
      "calls": [
        "this._isSupportFlexDisplay"
      ]
    },
    {
      "name": "_pFlexibleComponent._isFlexible",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.TextControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Static.call"
      ]
    },
    {
      "name": "_pTextControl.on_create_contents",
      "params": [],
      "calls": [
        "cellElem.setElementCSSMapInfo",
        "cellElem.setElementDecorateText",
        "cellElem.setElementPointerEvents",
        "cellElem.setElementPosition",
        "cellElem.setElementSize",
        "cellElem.setElementText",
        "cellElem.setElementTextAlign",
        "cellElem.setElementTextDecoration",
        "cellElem.setElementVerticalAlign",
        "cellElem.setElementWordWrap",
        "nexacro.TextBoxElement",
        "nexacro.TextBoxVirtualFlexElement",
        "this._getCSSStyleValue",
        "this._getClientLeft",
        "this._getClientTop",
        "this.getElement"
      ]
    },
    {
      "name": "_pTextControl.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pTextControl._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getTextSize",
        "text.search",
        "this._getCSSStyleValue",
        "this._getCurrentStyleBorder",
        "this._getCurrentStyleInheritValue",
        "this._getCurrentStylePadding",
        "this._getReferenceAbsoluteFont",
        "this.getElement"
      ]
    },
    {
      "name": "nexacro.IconControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.TextControl.call"
      ]
    },
    {
      "name": "_pIconControl._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pIconControl._click",
      "params": [
        "keycode"
      ],
      "calls": [
        "this._isAccessibilityEnable",
        "this._notifyAccessibility",
        "this.click"
      ]
    },
    {
      "name": "_pIconControl.getSelectStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pIconControl.setSelectStatus",
      "params": [
        "select"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pIconControl.toggleSelectStatus",
      "params": [],
      "calls": [
        "this.setSelectStatus"
      ]
    },
    {
      "name": "_pIconControl.click",
      "params": [],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pIconControl._on_hotkey",
      "params": [
        "/*keycode",
        "altKey",
        "ctrlKey",
        "shiftKey*/"
      ],
      "calls": [
        "this.click"
      ]
    },
    {
      "name": "_pIconControl.on_keydown_basic_action",
      "params": [
        "keycode/*",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pIconControl.on_keyup_basic_action",
      "params": [
        "/*keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pIconControl.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._getWindow"
      ]
    },
    {
      "name": "_pIconControl.on_keyup_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._click",
        "this._getWindow"
      ]
    },
    {
      "name": "nexacro.LabelControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.TextControl.call"
      ]
    },
    {
      "name": "_pLabelControl.on_create_normal_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setLinkedControl",
        "nexacro.LabelElement"
      ]
    },
    {
      "name": "_pLabelControl.For",
      "params": [
        "input_elem"
      ],
      "calls": [
        "this._control_element.For"
      ]
    },
    {
      "name": "_pLabelControl._on_getFitSize",
      "params": [],
      "calls": [
        "nexacro.TextControl.prototype._on_getFitSize.call"
      ]
    },
    {
      "name": "nexacro.FieldBaseTextControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.TextControl.call"
      ]
    },
    {
      "name": "_pFieldBaseTextControl._update_position",
      "params": [
        "isrtl"
      ],
      "calls": [
        "this._isFluidContainer",
        "this._update_position_fluid",
        "this._update_position_static"
      ]
    },
    {
      "name": "_pFieldBaseTextControl._update_position_fluid",
      "params": [
        "isAllContainer"
      ],
      "calls": [
        "nexacro._getLayoutManager",
        "this._apply_status",
        "this._update_layoutbasis",
        "this.getOffsetHeight",
        "this.getOffsetWidth"
      ]
    },
    {
      "name": "nexacro.FieldBaseIconControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.IconControl.call"
      ]
    },
    {
      "name": "_pFieldBaseIconControl.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "nexacro.FieldBaseLabelControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.LabelControl.call"
      ]
    },
    {
      "name": "_pFieldBaseLabelControl.on_destroy_contents",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFieldBaseLabelControl.onApplyProperties",
      "params": [],
      "calls": [
        "this._control_element.setElementPointerEvents",
        "this.on_apply_floating"
      ]
    },
    {
      "name": "_pFieldBaseLabelControl.set_floating",
      "params": [
        "v",
        "no_transition"
      ],
      "calls": [
        "this.on_apply_floating"
      ]
    },
    {
      "name": "_pFieldBaseLabelControl.on_apply_floating",
      "params": [
        "no_transition"
      ],
      "calls": [
        "this._changeUserStatus",
        "this.transitionON"
      ]
    },
    {
      "name": "_pFieldBaseLabelControl._shake",
      "params": [
        "apply"
      ],
      "calls": [
        "this.set_cssclass"
      ]
    },
    {
      "name": "_pFieldBaseLabelControl.transitionON",
      "params": [
        "on"
      ],
      "calls": [
        "this._control_element._setElementTransition"
      ]
    },
    {
      "name": "_pFieldBaseLabelControl._changeUserStatus",
      "params": [
        "changestatus",
        "value"
      ],
      "calls": [
        "nexacro.FieldBaseTextControl.prototype._changeUserStatus.call",
        "this._changeStatus"
      ]
    },
    {
      "name": "nexacro.FieldBaseBox",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.FlexibleComponent.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pFieldBaseBox.set_usesoftkeyboard",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pFieldBaseBox._getWantLabelLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFieldBaseBox._getWantLabelWidth",
      "params": [],
      "calls": [
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pFieldBaseBox._getLayoutBasis",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFieldBaseBox.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "_field.on_keydown_default_action"
      ]
    },
    {
      "name": "_pFieldBaseBox.on_keyup_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "_field.on_keyup_default_action"
      ]
    },
    {
      "name": "_pFieldBaseBox.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus/*",
        "currentstatus",
        "currentuserstatus*/"
      ],
      "calls": []
    },
    {
      "name": "_pFieldBaseBox._on_beforekeyinput",
      "params": [
        "elem",
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "this._p_parent.on_beforekeyinput_basic_action"
      ]
    },
    {
      "name": "_pFieldBaseBox._beforeinput_process_with_HTMLEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "this._p_parent.on_beforeinput_process_with_HTMLEvent.call"
      ]
    },
    {
      "name": "_pFieldBaseBox._fix_composition",
      "params": [
        "value",
        "beginOffset",
        "endOffset"
      ],
      "calls": [
        "textField._fix_composition"
      ]
    },
    {
      "name": "nexacro.FieldBaseScrollableBox",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.FlexibleComponent.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pFieldBaseScrollableBox.on_create_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Component.prototype.on_create_control_element.call"
      ]
    },
    {
      "name": "_pFieldBaseScrollableBox._onResetScrollBar",
      "params": [],
      "calls": [
        "this._createHScrollBar",
        "this._createVScrollBar",
        "this._getHScrollBarSize",
        "this._getHScrollBarType",
        "this._getVScrollBarSize",
        "this._getVScrollBarType",
        "this._getWindow",
        "this._isEnable",
        "this._p_hscrollbar._setScrollInfo",
        "this._p_hscrollbar.destroy",
        "this._p_hscrollbar.on_created",
        "this._p_hscrollbar.set_visible",
        "this._p_parent.getAttachClientTop",
        "this._p_vscrollbar._setScrollInfo",
        "this._p_vscrollbar.destroy",
        "this._p_vscrollbar.on_created",
        "this._p_vscrollbar.set_visible"
      ]
    },
    {
      "name": "nexacro.FieldBase",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.FlexibleComponent.call"
      ]
    },
    {
      "name": "_pFieldBase.on_create_contents",
      "params": [
        "ext_arg"
      ],
      "calls": [
        "contbox_control._update_layoutbasis",
        "contbox_control.createComponent",
        "contbox_control.getElement",
        "contbox_elem.setElementTableCellArea",
        "control_elem.setElementLayoutType",
        "control_elem.setElementTableTemplateArea",
        "label.createComponent",
        "nexacro.FieldBaseLabelControl",
        "this._initAreaSize",
        "this._isFlexible",
        "this._recalc_contents",
        "this._refreshLabel",
        "this._updateCharCount",
        "this._updateHelperText",
        "this.getElement"
      ]
    },
    {
      "name": "_pFieldBase._updateHelperText",
      "params": [
        "b_create"
      ],
      "calls": [
        "helptxt_control._update_layoutbasis",
        "helptxt_control.createComponent",
        "helptxt_control.getElement",
        "helptxt_elem.setElementTableCellArea",
        "nexacro.FieldBaseTextControl",
        "this._destroyHelperText",
        "this._initHelperTextSize",
        "this._isFlexible",
        "this._refreshErrorHelper"
      ]
    },
    {
      "name": "_pFieldBase._updateCharCount",
      "params": [
        "b_create"
      ],
      "calls": [
        "charcnt_control._update_layoutbasis",
        "charcnt_control.createComponent",
        "charcnt_control.getElement",
        "charcnt_elem.setElementTableCellArea",
        "nexacro.FieldBaseTextControl",
        "this._destroyCharCount",
        "this._initCharCountSize",
        "this._isFlexible",
        "this.getElement",
        "this.on_apply_charcnt"
      ]
    },
    {
      "name": "_pFieldBase._updateNullTextControl",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.FieldBaseTextControl",
        "nulltext_control.createComponent",
        "nulltext_control.getElement",
        "nulltext_control.set_text",
        "this._destroyNullTextControl",
        "this._getStringResourceProperty",
        "this._nulltext_control.set_text",
        "this.getElement"
      ]
    },
    {
      "name": "_pFieldBase._destroyHelperText",
      "params": [],
      "calls": [
        "this._helptxt_control.destroy"
      ]
    },
    {
      "name": "_pFieldBase._destroyCharCount",
      "params": [],
      "calls": [
        "this._charcnt_control.destroy"
      ]
    },
    {
      "name": "_pFieldBase._destroyNullTextControl",
      "params": [],
      "calls": [
        "this._nulltext_control.destroy"
      ]
    },
    {
      "name": "_pFieldBase._initAreaSize",
      "params": [],
      "calls": [
        "this._initCharCountSize",
        "this._initHelperTextSize",
        "this._initLabelTextSize",
        "this._on_init_areasize"
      ]
    },
    {
      "name": "_pFieldBase.getAttachClientTop",
      "params": [],
      "calls": [
        "this.getFloatingLabelHeight"
      ]
    },
    {
      "name": "_pFieldBase._onRecalcScrollSize",
      "params": [],
      "calls": [
        "this._box._onRecalcScrollSize"
      ]
    },
    {
      "name": "_pFieldBase._onResetScrollBar",
      "params": [],
      "calls": [
        "this._box._onResetScrollBar"
      ]
    },
    {
      "name": "_pFieldBase._recalcScrollSize",
      "params": [],
      "calls": [
        "this._box._recalcScrollSize"
      ]
    },
    {
      "name": "_pFieldBase._resetScrollBar",
      "params": [],
      "calls": [
        "this._box._resetScrollBar"
      ]
    },
    {
      "name": "_pFieldBase._on_init_areasize",
      "params": [],
      "calls": [
        "elem._setAttachCliendTop",
        "this._box.getElement",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this.getAttachClientTop"
      ]
    },
    {
      "name": "_pFieldBase._initLabelTextSize",
      "params": [],
      "calls": [
        "label._on_getFitSize",
        "label.set_floating"
      ]
    },
    {
      "name": "_pFieldBase._initHelperTextSize",
      "params": [],
      "calls": [
        "this._helptxt_control._on_getFitSize"
      ]
    },
    {
      "name": "_pFieldBase._initCharCountSize",
      "params": [],
      "calls": [
        "this._charcnt_control._on_getFitSize"
      ]
    },
    {
      "name": "_pFieldBase.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._box.on_created",
        "this._charcnt_control.on_created",
        "this._helptxt_control.on_created",
        "this._label.on_created",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pFieldBase.on_after_created",
      "params": [],
      "calls": [
        "this._box._setEventHandler",
        "this._refreshValidStatus",
        "this.on_after_created_ext",
        "this.on_apply_displaynulltext",
        "this.on_apply_labelposition",
        "this.on_apply_usecharcount",
        "this.on_apply_usehelpertext"
      ]
    },
    {
      "name": "_pFieldBase.on_after_created_ext",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFieldBase.on_create_contents_command",
      "params": [],
      "calls": [
        "this._box.createCommand",
        "this._charcnt_control.createCommand",
        "this._helptxt_control.createCommand",
        "this._label.createCommand",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pFieldBase.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._box.attachHandle",
        "this._charcnt_control.attachHandle",
        "this._helptxt_control.attachHandle",
        "this._label._setAccessibilityStatHidden",
        "this._label.attachHandle"
      ]
    },
    {
      "name": "_pFieldBase.on_destroy_contents",
      "params": [],
      "calls": [
        "this._box.destroy",
        "this._destroyCharCount",
        "this._destroyHelperText",
        "this._destroyNullTextControl",
        "this._label.destroy"
      ]
    },
    {
      "name": "_pFieldBase._recalc_contents",
      "params": [
        "kind"
      ],
      "calls": [
        "charcnt_control._on_getFitSize",
        "charcnt_control.move",
        "charcnt_control.resize",
        "contbox_control.move",
        "contbox_control.resize",
        "control_elem.setElementTableTemplate",
        "helptxt_control.move",
        "helptxt_control.resize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getHelperLineHeight",
        "this._isFlexible",
        "this._recalcLabel",
        "this.getElement",
        "this.getFloatingLabelSpace",
        "this.set_height"
      ]
    },
    {
      "name": "_pFieldBase._recalcCharCount",
      "params": [],
      "calls": [
        "charcnt_control._on_getFitSize",
        "charcnt_control.move",
        "charcnt_control.resize",
        "control_elem.setElementTableTemplate",
        "helptxt_control.move",
        "helptxt_control.resize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getHelperLineHeight",
        "this._isFlexible",
        "this.getElement",
        "this.getFloatingLabelSpace"
      ]
    },
    {
      "name": "_pFieldBase._recalcLabel",
      "params": [
        "kind"
      ],
      "calls": [
        "contbox_control._getCurrentStyleBorder",
        "contbox_control._getWantLabelLeft",
        "contbox_control._getWantLabelWidth",
        "label.move",
        "label.transitionON",
        "nulltxt_control.move",
        "nulltxt_control.set_visible",
        "this._isFocused",
        "this.getFloatingLabelHeight",
        "this.getFloatingLabelSpace"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "box._setEnable"
      ]
    },
    {
      "name": "_pFieldBase._setLabelFloating",
      "params": [
        "v",
        "is_value_check",
        "no_transition"
      ],
      "calls": [
        "this._isContainsText",
        "this._label.set_floating",
        "this._refreshLabel"
      ]
    },
    {
      "name": "_pFieldBase._isContainsText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFieldBase._setCharCount",
      "params": [
        "cur",
        "max"
      ],
      "calls": [
        "this.on_apply_charcnt"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_charcnt",
      "params": [],
      "calls": [
        "this._charcnt_control.set_text",
        "this._recalcCharCount"
      ]
    },
    {
      "name": "_pFieldBase.set_headerheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_headerheight"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_headerheight",
      "params": [],
      "calls": [
        "this._recalc_contents"
      ]
    },
    {
      "name": "_pFieldBase.set_footerheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_footerheight"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_footerheight",
      "params": [],
      "calls": [
        "this._recalc_contents"
      ]
    },
    {
      "name": "_pFieldBase.set_contentheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_contentheight"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_contentheight",
      "params": [],
      "calls": [
        "this._recalc_contents"
      ]
    },
    {
      "name": "_pFieldBase.set_invalidtext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString"
      ]
    },
    {
      "name": "_pFieldBase._invalidStatus",
      "params": [
        "show",
        "no_shake"
      ],
      "calls": [
        "label._shake",
        "this._label._shake",
        "this._recalc_contents",
        "this._refreshErrorHelper",
        "this._refreshValidStatus"
      ]
    },
    {
      "name": "_pFieldBase._validStatus",
      "params": [
        "show",
        "no_shake"
      ],
      "calls": [
        "label._shake",
        "this._label._shake",
        "this._recalc_contents",
        "this._refreshErrorHelper",
        "this._refreshValidStatus"
      ]
    },
    {
      "name": "_pFieldBase.on_invalid",
      "params": [
        "apply_value"
      ],
      "calls": [
        "nexacro._getErrorMessge",
        "this._invalidStatus",
        "this.on_fire_oninvalid",
        "this.on_invalid_basic_action"
      ]
    },
    {
      "name": "_pFieldBase.on_invalid_basic_action",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFieldBase.on_valid",
      "params": [
        "apply_value"
      ],
      "calls": [
        "this._validStatus",
        "this.on_valid_basic_action"
      ]
    },
    {
      "name": "_pFieldBase.on_fire_oninvalid",
      "params": [],
      "calls": [
        "nexacro.EventInfo",
        "this.oninvalid._fireEvent"
      ]
    },
    {
      "name": "_pFieldBase.on_valid_basic_action",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFieldBase._changeValidStatusChild",
      "params": [
        "status",
        "show"
      ],
      "calls": []
    },
    {
      "name": "_pFieldBase._detectStatus",
      "params": [
        "status",
        "show"
      ],
      "calls": [
        "ctbox._changeStatus",
        "label._changeStatus",
        "this._recalc_contents",
        "this._refreshErrorHelper"
      ]
    },
    {
      "name": "_pFieldBase.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.FlexibleComponent.prototype.on_focus_basic_action.call",
        "this._detectStatus",
        "this._nulltext_control.set_visible",
        "this._setLabelFloating"
      ]
    },
    {
      "name": "_pFieldBase.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "nexacro.FlexibleComponent.prototype.on_killfocus_basic_action.call",
        "this._nulltext_control.set_visible",
        "this._setLabelFloating"
      ]
    },
    {
      "name": "_pFieldBase.on_changeStatus",
      "params": [
        "changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": [
        "this._detectStatus"
      ]
    },
    {
      "name": "_pFieldBase._refreshErrorHelper",
      "params": [],
      "calls": [
        "helpr.set_text",
        "this._getInvalidText",
        "this._getStringResourceProperty",
        "this._refreshValidStatus"
      ]
    },
    {
      "name": "_pFieldBase._refreshValidStatus",
      "params": [
        "b_label",
        "b_box",
        "b_help"
      ],
      "calls": [
        "box._changeUserStatus",
        "help._changeUserStatus",
        "label._changeUserStatus",
        "this._changeValidStatusChild"
      ]
    },
    {
      "name": "_pFieldBase.getValidStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFieldBase._getInvalidText",
      "params": [
        "errkind"
      ],
      "calls": [
        "this._getStringResourceProperty"
      ]
    },
    {
      "name": "_pFieldBase.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalc_contents"
      ]
    },
    {
      "name": "_pFieldBase.LabelFor",
      "params": [
        "input_elem"
      ],
      "calls": [
        "this._label.For"
      ]
    },
    {
      "name": "_pFieldBase.getFloatingLabelHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFieldBase.getFloatingLabelSpace",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFieldBase._getHelperLineHeight",
      "params": [],
      "calls": [
        "Math.max"
      ]
    },
    {
      "name": "_pFieldBase.set_labelfloatingfixed",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_labelfloatingfixed"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_labelfloatingfixed",
      "params": [],
      "calls": [
        "this._setLabelFloating"
      ]
    },
    {
      "name": "_pFieldBase.set_labelposition",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_labelposition"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_labelposition",
      "params": [],
      "calls": [
        "this._initAreaSize",
        "this._refreshAll",
        "this.getElement"
      ]
    },
    {
      "name": "_pFieldBase.set_usehelpertext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usehelpertext"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_usehelpertext",
      "params": [],
      "calls": [
        "this._recalc_contents",
        "this._updateHelperText"
      ]
    },
    {
      "name": "_pFieldBase.set_helpertext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_usehelpertext"
      ]
    },
    {
      "name": "_pFieldBase.set_usecharcount",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usecharcount"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_usecharcount",
      "params": [],
      "calls": [
        "this._recalc_contents",
        "this._updateCharCount"
      ]
    },
    {
      "name": "_pFieldBase._refreshAll",
      "params": [],
      "calls": [
        "this._label.on_apply_floating",
        "this._recalc_contents"
      ]
    },
    {
      "name": "_pFieldBase.set_labeltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._refreshLabel"
      ]
    },
    {
      "name": "_pFieldBase.set_labelgap",
      "params": [
        "v"
      ],
      "calls": [
        "this._recalcLabel"
      ]
    },
    {
      "name": "_pFieldBase.set_displaynulltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_displaynulltext",
      "params": [],
      "calls": [
        "this._isContainsText",
        "this._recalcLabel",
        "this._setLabelFloating",
        "this._updateNullTextControl"
      ]
    },
    {
      "name": "_pFieldBase.set_autoskip",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoskip"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_autoskip",
      "params": [
        "autoskip"
      ],
      "calls": [
        "input_elem.setElementAutoSkip"
      ]
    },
    {
      "name": "_pFieldBase.set_usesoftkeyboard",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_usesoftkeyboard",
      "params": [],
      "calls": [
        "comp._getUseSoftKeyboardValue",
        "comp.set_usesoftkeyboard",
        "input_elem.setElementUseSoftKeyboard",
        "this._getInputElement",
        "this._getUseSoftKeyboardValue"
      ]
    },
    {
      "name": "_pFieldBase._refreshLabel",
      "params": [
        "kind"
      ],
      "calls": [
        "label.set_text",
        "this._getStringResourceProperty",
        "this._initLabelTextSize",
        "this._on_init_areasize",
        "this._recalcLabel",
        "this._recalc_contents"
      ]
    },
    {
      "name": "_pFieldBase.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_value",
      "params": [],
      "calls": [
        "this._refreshLabel",
        "this._setLabelFloating"
      ]
    },
    {
      "name": "_pFieldBase._isChar",
      "params": [
        "keyCode"
      ],
      "calls": []
    },
    {
      "name": "_pFieldBase._isFocused",
      "params": [],
      "calls": [
        "lastfocus._getLastFocused",
        "modalframe._contains",
        "this._find_lastFocused",
        "this._getOwnerFrame",
        "this._getWindow"
      ]
    },
    {
      "name": "_pFieldBase._on_killfocus",
      "params": [
        "new_focus",
        "new_ref_focus"
      ],
      "calls": [
        "nexacro.FlexibleComponent.prototype._on_killfocus.call"
      ]
    },
    {
      "name": "_pFieldBase._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.FlexibleComponent.prototype._on_focus.call"
      ]
    },
    {
      "name": "_pFieldBase._on_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pFieldBase.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._getStringResourceProperty",
        "this._refreshErrorHelper",
        "this._refreshLabel",
        "this.on_apply_displaynulltext",
        "this.on_apply_usehelpertext"
      ]
    }
  ],
  "MobileElement_HTML5.js": [
    {
      "name": "nexacro.FlexibleControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.ControlElement.call"
      ]
    },
    {
      "name": "_pFlexibleControlElement._refreshControl",
      "params": [
        "handle",
        "handle_style"
      ],
      "calls": [
        "nexacro.ControlElement.prototype._refreshControl.call",
        "nexacro.__clearDOMStyle_LayoutGap",
        "nexacro.__clearDOMStyle_LayoutSpacing",
        "nexacro.__setDOMStyle_CompLayoutType",
        "nexacro.__setDOMStyle_FlexCrossAxisAlign",
        "nexacro.__setDOMStyle_FlexCrossAxisWrapAlign",
        "nexacro.__setDOMStyle_FlexMainAxisAlign",
        "nexacro.__setDOMStyle_FlexWrap",
        "nexacro.__setDOMStyle_LayoutGap",
        "nexacro.__setDOMStyle_LayoutSpacing",
        "nexacro.__setDOMStyle_LayoutType",
        "nexacro.__setDOMStyle_TableCellHAlign",
        "nexacro.__setDOMStyle_TableCellVAlign",
        "nexacro.__setDOMStyle_TableCellinCompHAlign",
        "nexacro.__setDOMStyle_TableCellinCompVAlign",
        "nexacro.__setDOMStyle_TableDirection",
        "nexacro.__setDOMStyle_TableTemplate",
        "nexacro.__setDOMStyle_TableTemplateArea"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementPadding",
      "params": [
        "padding"
      ],
      "calls": [
        "this.onApplyPadding"
      ]
    },
    {
      "name": "_pFlexibleControlElement.onApplyPadding",
      "params": [],
      "calls": [
        "nexacro.__setDOMStyle_PaddingObject"
      ]
    },
    {
      "name": "_pFlexibleControlElement._refreshCommonStyleProps",
      "params": [
        "handle_style"
      ],
      "calls": [
        "nexacro.ControlElement.prototype._refreshCommonStyleProps.call",
        "this.onApplyPadding"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementStatus",
      "params": [
        "status"
      ],
      "calls": [
        "nexacro.ControlElement.prototype.setElementStatus.call",
        "this.onApplyPadding"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementUserStatus",
      "params": [
        "userstatus"
      ],
      "calls": [
        "nexacro.ControlElement.prototype.setElementUserStatus.call",
        "this.onApplyPadding"
      ]
    },
    {
      "name": "_pFlexibleControlElement._getCommonStyleStr",
      "params": [],
      "calls": [
        "nexacro.ControlElement.prototype._getCommonStyleStr.call",
        "nexacro.__getHTMLStyle_CompLayoutType",
        "nexacro.__getHTMLStyle_FlexCrossAxisAlign",
        "nexacro.__getHTMLStyle_FlexCrossAxisWrapAlign",
        "nexacro.__getHTMLStyle_FlexMainAxisAlign",
        "nexacro.__getHTMLStyle_FlexWrap",
        "nexacro.__getHTMLStyle_LayoutGap",
        "nexacro.__getHTMLStyle_LayoutSpacing",
        "nexacro.__getHTMLStyle_PaddingObject",
        "nexacro.__getHTMLStyle_TableCellHAlign",
        "nexacro.__getHTMLStyle_TableCellVAlign",
        "nexacro.__getHTMLStyle_TableCellinCompHAlign",
        "nexacro.__getHTMLStyle_TableCellinCompVAlign",
        "nexacro.__getHTMLStyle_TableDirection",
        "nexacro.__getHTMLStyle_TableTemplate",
        "nexacro.__getHTMLStyle_TableTemplateArea"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementLayoutType",
      "params": [
        "layouttype"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutType"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementLayoutHorizontalGap",
      "params": [
        "layouthorizontalgap"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutGap"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementLayoutVerticalGap",
      "params": [
        "layoutverticalgap"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutGap"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementFlexMainAxisAlign",
      "params": [
        "flexmainaxisalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexMainAxisAlign"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementFlexCrossAxisAlign",
      "params": [
        "flexcrossaxisalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexCrossAxisAlign"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementFlexCrossAxisWrapAlign",
      "params": [
        "flexcrossaxiswrapalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexCrossAxisWrapAlign"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementFlexWrap",
      "params": [
        "flexwrap"
      ],
      "calls": [
        "nexacro.__setDOMStyle_FlexWrap"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementLayoutSpacing",
      "params": [
        "layoutspacing"
      ],
      "calls": [
        "nexacro.__setDOMStyle_LayoutSpacing"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementTableCellAlign",
      "params": [
        "tablecellalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TableCellHAlign",
        "nexacro.__setDOMStyle_TableCellVAlign",
        "this._parseLayoutCellAlign"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementTableCellinCompAlign",
      "params": [
        "tablecellincompalign"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TableCellinCompHAlign",
        "this._parseLayoutCellAlign"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementTableDirection",
      "params": [
        "tabledirection"
      ],
      "calls": [
        "nexacro.__setDOMStyle_TableDirection"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementTableTemplate",
      "params": [
        "tabletemplate"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_TableTemplate",
        "nexacro.__setDOMStyle_TableTemplate",
        "nexacro.__setDOMStyle_TableTemplateArea"
      ]
    },
    {
      "name": "_pFlexibleControlElement.setElementTableTemplateArea",
      "params": [
        "tabletemplatearea"
      ],
      "calls": [
        "nexacro.__clearDOMStyle_TableTemplateArea",
        "nexacro.__setDOMStyle_TableTemplateArea"
      ]
    },
    {
      "name": "nexacro.LabelElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.ControlElement.call"
      ]
    },
    {
      "name": "_pLabelElement.For",
      "params": [
        "input_elem"
      ],
      "calls": []
    },
    {
      "name": "_pLabelElement._isFluid",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.SimpleInputElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": [
        "nexacro.InputElement.call"
      ]
    },
    {
      "name": "_pSimpleInputElement._createElementHandle",
      "params": [
        "owner_elem",
        "_doc"
      ],
      "calls": [
        "_doc.createElement",
        "nexacro.__appendDOMNode",
        "nexacro.__setDOMNode_Autocomplete",
        "nexacro.__setDOMNode_ClassName",
        "nexacro.__setDOMNode_Enable",
        "nexacro.__setDOMNode_InputMode",
        "nexacro.__setDOMNode_MaxLength",
        "nexacro.__setDOMNode_ReadOnly",
        "nexacro.__setDOMNode_Type",
        "nexacro.__setDOMNode_Value",
        "nexacro.__setDOMStyle_PaddingObject",
        "nexacro.__setDOMStyle_textAlign",
        "this._getElementClassName",
        "this._on_createAccessibilityHandle",
        "this._refreshCommonStyleProps",
        "this._setElementDefaultLineHeight"
      ]
    },
    {
      "name": "_pSimpleInputElement._TestDisplayArea",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.BorderObject",
        "nexacro.__setDOMStyle_BorderObject"
      ]
    },
    {
      "name": "_pSimpleInputElement.createCommand",
      "params": [],
      "calls": [
        "nexacro.__getHTMLAttr_Autocomplete",
        "nexacro.__getHTMLAttr_Enable",
        "nexacro.__getHTMLAttr_InputMode",
        "nexacro.__getHTMLAttr_InputType",
        "nexacro.__getHTMLAttr_MaxLength",
        "nexacro.__getHTMLAttr_ReadOnly",
        "nexacro.__getHTMLStyle_Enable",
        "nexacro.__getHTMLStyle_ImeMode",
        "nexacro.__getHTMLStyle_PaddingObject",
        "nexacro.__getHTMLStyle_textAlign",
        "nexacro._encodeXml",
        "nexacro._isNull",
        "this._getCommonStyleStr",
        "this._getElementClassName",
        "this._getElementDefaultLineHeight",
        "this._isParentRtl",
        "this._on_createAccessibilityCommand",
        "this.parent_elem.getContainerElement"
      ]
    },
    {
      "name": "_pSimpleInputElement._bindSysEvent",
      "params": [],
      "calls": [
        "nexacro.InputElement.prototype._bindSysEvent.call",
        "nexacro._observeSysEvent"
      ]
    },
    {
      "name": "_pSimpleInputElement._unbindSysEvent",
      "params": [],
      "calls": [
        "nexacro.InputElement.prototype._unbindSysEvent.call",
        "nexacro._stopSysObserving"
      ]
    },
    {
      "name": "_pSimpleInputElement.attachHandle",
      "params": [
        "win"
      ],
      "calls": [
        "this._bindSysEvent",
        "win._doc.getElementById"
      ]
    },
    {
      "name": "_pSimpleInputElement._getCommonStyleStr",
      "params": [],
      "calls": [
        "nexacro.Element.prototype._getCommonStyleStr.call",
        "nexacro.__getHTMLStyle_Size"
      ]
    },
    {
      "name": "_pSimpleInputElement._refreshCommonStyleProps",
      "params": [
        "handle_style"
      ],
      "calls": [
        "nexacro.Element.prototype._refreshCommonStyleProps.call",
        "nexacro.__setDOMStyle_Size"
      ]
    },
    {
      "name": "_pSimpleInputElement._getInputID",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSimpleInputElement._getInputValue",
      "params": [],
      "calls": [
        "nexacro.__getDOMNodeValue"
      ]
    },
    {
      "name": "_pSimpleInputElement._clearNumberGabageValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSimpleInputElement._getValidity",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSimpleInputElement.setElementInputType",
      "params": [
        "type"
      ],
      "calls": [
        "nexacro.__changeInputDOMNodeType"
      ]
    },
    {
      "name": "_pSimpleInputElement.setElementInputMode",
      "params": [
        "mode"
      ],
      "calls": [
        "nexacro.__setDOMNode_InputMode"
      ]
    },
    {
      "name": "_pSimpleInputElement.setElementInputType",
      "params": [
        "type"
      ],
      "calls": [
        "nexacro.__changeInputDOMNodeType"
      ]
    },
    {
      "name": "_pSimpleInputElement.setElementInputMode",
      "params": [
        "mode"
      ],
      "calls": [
        "nexacro.__setDOMNode_InputMode"
      ]
    },
    {
      "name": "_pSimpleInputElement.setElementUseSoftKeyboard",
      "params": [
        "usesoftkeyboard"
      ],
      "calls": [
        "this.setElementInputMode"
      ]
    },
    {
      "name": "_pSimpleInputElement._on_sys_focus",
      "params": [
        "evt"
      ],
      "calls": [
        "comp.on_input_focus",
        "pThis.on_sys_focus_before_process",
        "pThis.on_sys_focus_process"
      ]
    },
    {
      "name": "_pSimpleInputElement._on_sys_invalid",
      "params": [
        "evt"
      ],
      "calls": [
        "comp.on_input_invalid"
      ]
    },
    {
      "name": "_pSimpleInputElement._on_sys_compositionend",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis.on_sys_compositionend_process.call"
      ]
    },
    {
      "name": "_pSimpleInputElement.on_sys_compositionend_process",
      "params": [
        "evt"
      ],
      "calls": [
        "comp.on_input_compositionend",
        "pThis._composer.setStatus",
        "pThis.getElementCaretPos"
      ]
    },
    {
      "name": "_pSimpleInputElement._on_sys_compositionstart",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._composer.setStatus",
        "pThis.getElementCaretPos"
      ]
    },
    {
      "name": "_pSimpleInputElement._on_sys_compositionupdate",
      "params": [
        "evt"
      ],
      "calls": [
        "pThis._composer.setStatus",
        "pThis.getElementCaretPos",
        "pThis.on_sys_compositionupdate_process.call"
      ]
    },
    {
      "name": "_pSimpleInputElement.setElementValue",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro._isNull",
        "text.substring",
        "this._getInputValue",
        "this._setElementLastSelectionRange",
        "this._updateInputValue"
      ]
    },
    {
      "name": "_pSimpleInputElement._on_sys_beforeinput_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "evt.preventDefault",
        "nexacro.InputElement.prototype._on_sys_beforeinput_forward.call"
      ]
    },
    {
      "name": "_pSimpleInputElement.on_apply_imeSet",
      "params": [
        "evt"
      ],
      "calls": [
        "comp.on_apply_imeSet",
        "pThis._imelocale.getLocale",
        "pThis.on_apply_ime_environment"
      ]
    },
    {
      "name": "_pSimpleInputElement.on_apply_imeSet",
      "params": [
        "evt"
      ],
      "calls": [
        "comp.on_apply_imeSet",
        "pThis._imelocale.getLocale",
        "pThis.on_apply_ime_environment"
      ]
    },
    {
      "name": "nexacro.SimpleTextAreaElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": [
        "nexacro.TextAreaElement.call"
      ]
    },
    {
      "name": "_pSimpleTextAreaElement._TestDisplayArea",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.BorderObject",
        "nexacro.__setDOMStyle_BorderObject"
      ]
    },
    {
      "name": "_pSimpleTextAreaElement._getInputID",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSimpleTextAreaElement._on_sys_focus",
      "params": [
        "evt"
      ],
      "calls": [
        "comp.on_input_focus",
        "pThis.on_sys_focus_before_process",
        "pThis.on_sys_focus_process"
      ]
    },
    {
      "name": "_pSimpleTextAreaElement._on_sys_beforeinput_forward",
      "params": [
        "evt"
      ],
      "calls": [
        "evt.preventDefault",
        "nexacro.TextAreaElement.prototype._on_sys_beforeinput_forward.call"
      ]
    },
    {
      "name": "_pSimpleTextAreaElement.on_apply_imeSet",
      "params": [
        "evt"
      ],
      "calls": [
        "comp.on_apply_imeSet",
        "pThis._imelocale.getLocale",
        "pThis.on_apply_ime_environment"
      ]
    },
    {
      "name": "nexacro._ButtonBoxElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    },
    {
      "name": "_pButtonBoxElement.createCommandStart",
      "params": [],
      "calls": [
        "nexacro.__getHTMLStyleSize",
        "this._getCommonStyleStr",
        "this._getElementNexaClassName",
        "this._on_createAccessibilityCommand"
      ]
    },
    {
      "name": "_pButtonBoxElement.createCommandEnd",
      "params": [],
      "calls": []
    },
    {
      "name": "_pButtonBoxElement._getCommonStyleStr",
      "params": [],
      "calls": [
        "nexacro.ControlElement.prototype._getCommonStyleStr.call",
        "nexacro.__getHTMLStyle_CompLayoutType"
      ]
    }
  ],
  "MobileElement_Runtime.js": [
    {
      "name": "nexacro.FlexibleControlElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.ControlElement.call"
      ]
    },
    {
      "name": "nexacro.LabelElement",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.ControlElement.call"
      ]
    },
    {
      "name": "nexacro.SimpleInputElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": [
        "nexacro.InputElement.call"
      ]
    },
    {
      "name": "_pSimpleInputElement._TestDisplayArea",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.__setElementHandleBorderObject"
      ]
    },
    {
      "name": "_pSimpleInputElement._getInputID",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSimpleInputElement._on_sys_focus",
      "params": [],
      "calls": [
        "comp.on_input_focus",
        "nexacro.InputElement.prototype._on_sys_focus.call"
      ]
    },
    {
      "name": "nexacro.SimpleTextAreaElement",
      "params": [
        "parent_elem",
        "id"
      ],
      "calls": [
        "nexacro.TextAreaElement.call"
      ]
    },
    {
      "name": "_pSimpleTextAreaElement._TestDisplayArea",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.__setElementHandleBorderObject"
      ]
    },
    {
      "name": "_pSimpleTextAreaElement._getInputID",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSimpleTextAreaElement._on_sys_focus",
      "params": [
        "evt"
      ],
      "calls": [
        "comp.on_input_focus",
        "nexacro.TextAreaElement.prototype._on_sys_focus.call"
      ]
    },
    {
      "name": "nexacro._ButtonBoxElement",
      "params": [
        "parent_elem"
      ],
      "calls": []
    }
  ],
  "MultiCombo.js": [
    {
      "name": "nexacro.MultiCombo",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pMultiCombo.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._MultiComboButtonControl",
        "this._createMultiComboTagBoxControl",
        "this._createMultiComboTextControl",
        "this._p_dropbutton.createComponent",
        "this.getElement"
      ]
    },
    {
      "name": "_pMultiCombo.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._isDesktop",
        "this._p_dropbutton._setAccessibilityStatHidden",
        "this._p_dropbutton.on_created",
        "this._p_multicombotagbox.on_created",
        "this._p_multicombotext._setAccessibilityStatHidden",
        "this._p_multicombotext._setReadonlyView",
        "this._p_multicombotext.on_created",
        "this._recalcLayout",
        "this._setAccessibilityStatAutoComplete",
        "this._setDefaultProps",
        "this._setEventHandlerToDropButton",
        "this._setEventHandlerToMultiComboTagBox",
        "this._setEventHandlerToMultiComboText",
        "this._setInnerDatasetStr",
        "this.on_apply_autoselect",
        "this.on_apply_autoskip",
        "this.on_apply_displaynulltext",
        "this.on_apply_imemode",
        "this.on_apply_index",
        "this.on_apply_innerdataset",
        "this.on_apply_text",
        "this.on_apply_type",
        "this.on_apply_usecontextmenu",
        "this.on_apply_value",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.on_destroy_contents",
      "params": [],
      "calls": [
        "this._p_dropbutton.destroy",
        "this._p_multicombolist.destroy",
        "this._p_multicombotagbox.destroy",
        "this._p_multicombotext.destroy",
        "this._popupcontrol.destroy",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pMultiCombo._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._filtereddataset.destroy",
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pMultiCombo.on_create_contents_command",
      "params": [],
      "calls": [
        "this._getStringResourceProperty",
        "this._p_dropbutton.createCommand",
        "this._p_multicombotagbox.createCommand",
        "this._p_multicombotext.createCommand",
        "this._recalcLayout",
        "this._setEventHandlerToDropButton",
        "this._setEventHandlerToMultiComboTagBox",
        "this._setEventHandlerToMultiComboText",
        "this.on_apply_autoselect",
        "this.on_apply_autoskip",
        "this.on_apply_displaynulltext",
        "this.on_apply_imemode",
        "this.on_apply_index",
        "this.on_apply_text",
        "this.on_apply_usecontextmenu",
        "this.on_apply_value",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._p_dropbutton._setAccessibilityStatHidden",
        "this._p_dropbutton.attachHandle",
        "this._p_multicombotagbox._setAccessibilityStatHidden",
        "this._p_multicombotagbox.attachHandle",
        "this._p_multicombotext._setAccessibilityStatHidden",
        "this._p_multicombotext._setReadonlyView",
        "this._p_multicombotext.attachHandle",
        "this._setAccessibilityStatAutoComplete",
        "this._setDefaultProps",
        "this.on_apply_type"
      ]
    },
    {
      "name": "_pMultiCombo.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pMultiCombo.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pMultiCombo._getInputElement",
      "params": [],
      "calls": [
        "edit._getInputElement"
      ]
    },
    {
      "name": "_pMultiCombo._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "multicombotext._changeStatus",
        "multicombotext._on_focus",
        "tagboxedit._changeStatus",
        "tagboxedit._on_focus"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._isEnable",
        "this._isReadOnly",
        "this._p_dropbutton._setEnable",
        "this._p_multicombolist._setEnable",
        "this._p_multicombotagbox._setEnable",
        "this._p_multicombotext._setEnable"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "this._p_dropbutton.on_apply_cssclass",
        "this._p_multicombolist.on_apply_cssclass",
        "this._p_multicombotagbox.on_apply_cssclass",
        "this._p_multicombotext.on_apply_cssclass"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._getStringResourceProperty",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pMultiCombo.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._createFilteredDataset",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "index.toString",
        "nexacro.getEnvironment",
        "rows.push",
        "this._convertValueType",
        "this._createFilteredDataset",
        "this._getIndexFromValue",
        "this._getItemText",
        "this._selectDataset",
        "this._select_add",
        "this._select_remove",
        "this._setDefaultProps",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.redraw",
        "val.split"
      ]
    },
    {
      "name": "_pMultiCombo.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiCombo._getDragData",
      "params": [],
      "calls": [
        "multicombotext.getSelectedText"
      ]
    },
    {
      "name": "_pMultiCombo._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": []
    },
    {
      "name": "_pMultiCombo._getAccessibilityReadLabel",
      "params": [
        "bwholeread"
      ],
      "calls": [
        "nexacro.Component.prototype._getAccessibilityReadLabel.call",
        "this._p_multicombotext._input_element._wantAccessibilityAdditionalLabel"
      ]
    },
    {
      "name": "_pMultiCombo.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "this._p_multicombotagbox._onRecalcScrollSize",
        "this.on_fire_onmove",
        "this.on_fire_onsize"
      ]
    },
    {
      "name": "_pMultiCombo.set_text",
      "params": [
        "v"
      ],
      "calls": [
        "ds.findRow",
        "nexacro._isString",
        "texts.filter",
        "texts.indexOf",
        "texts.join",
        "this.on_apply_text",
        "v.split"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_text",
      "params": [
        "texts"
      ],
      "calls": [
        "nexacro._isArray",
        "nexacro.getEnvironment",
        "texts.split",
        "this._getIndexFromText",
        "this._getItemValue",
        "this._selectDataset",
        "this._select_add",
        "this._select_remove",
        "this._setDefaultProps",
        "this._setIndex",
        "this._setTextValue",
        "this._setValue",
        "this.applyto_bindSource",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "ds.findRow",
        "nexacro._isString",
        "nexacro.getEnvironment",
        "this.on_apply_value",
        "this.redraw",
        "values.filter",
        "values.indexOf",
        "values.join",
        "values.split"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_value",
      "params": [
        "values"
      ],
      "calls": [
        "nexacro._isArray",
        "nexacro.getEnvironment",
        "this._getIndexFromValue",
        "this._getItemText",
        "this._selectDataset",
        "this._select_add",
        "this._select_remove",
        "this._setDefaultProps",
        "this._setIndex",
        "this._setText",
        "this.applyto_bindSource",
        "this.getElement",
        "values.split"
      ]
    },
    {
      "name": "_pMultiCombo.set_index",
      "params": [
        "v"
      ],
      "calls": [
        "ds.getRowCount",
        "indexes.filter",
        "indexes.indexOf",
        "indexes.join",
        "indexes.split",
        "nexacro._isString",
        "this.on_apply_index",
        "this.redraw",
        "v.replace"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_index",
      "params": [
        "indexes"
      ],
      "calls": [
        "indexes.split",
        "nexacro._isArray",
        "nexacro.getEnvironment",
        "this._getItemText",
        "this._getItemValue",
        "this._select_add",
        "this._select_remove",
        "this._setDefaultProps",
        "this._setText",
        "this._setValue",
        "this.applyto_bindSource",
        "this.getElement"
      ]
    },
    {
      "name": "_pMultiCombo.set_displaynulltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_displaynulltext",
      "params": [
        "displaynulltext"
      ],
      "calls": [
        "multicombotext.set_displaynulltext",
        "tagboxedit.set_displaynulltext"
      ]
    },
    {
      "name": "_pMultiCombo.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pMultiCombo._isReadOnly",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiCombo.on_apply_readonly",
      "params": [],
      "calls": [
        "dropbutton._setEnable",
        "multicombolist.set_readonly",
        "multicombotagbox.set_readonly",
        "multicombotext._changeStatus",
        "multicombotext._setAccessibilityFlagReadOnly",
        "multicombotext._setReadonlyView",
        "multicombotext.set_readonly",
        "this._changeStatus",
        "this._isEnable",
        "this._isReadOnly"
      ]
    },
    {
      "name": "_pMultiCombo.set_autoselect",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoselect"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_autoselect",
      "params": [
        "autoselect"
      ],
      "calls": [
        "tagboxedit.set_autoselect"
      ]
    },
    {
      "name": "_pMultiCombo.set_autoskip",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoskip"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_autoskip",
      "params": [
        "autoskip"
      ],
      "calls": [
        "multicombotext.set_autoskip"
      ]
    },
    {
      "name": "_pMultiCombo.set_usesoftkeyboard",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_usesoftkeyboard",
      "params": [],
      "calls": [
        "multicomboedit.set_usesoftkeyboard",
        "tagboxedit.set_usesoftkeyboard",
        "this._getUseSoftKeyboardValue"
      ]
    },
    {
      "name": "_pMultiCombo.set_imemode",
      "params": [
        "v"
      ],
      "calls": [
        "imemode_enum.indexOf",
        "this.on_apply_imemode"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_imemode",
      "params": [
        "imemode"
      ],
      "calls": [
        "multicomboedit.set_imemode",
        "tagboxedit.set_imemode"
      ]
    },
    {
      "name": "_pMultiCombo.set_type",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_type",
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_type",
      "params": [
        "type"
      ],
      "calls": [
        "multicombotagbox._recalcLayout",
        "this._filtereddataset.filter",
        "this.getElement",
        "this.on_apply_autoselect",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pMultiCombo.set_popuptype",
      "params": [
        "v"
      ],
      "calls": [
        "popuptype_enum.indexOf",
        "this.on_apply_popuptype"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_popuptype",
      "params": [
        "popuptype"
      ],
      "calls": [
        "popupcontrol._setType"
      ]
    },
    {
      "name": "_pMultiCombo.set_popupsize",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMultiCombo.set_usecontextmenu",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usecontextmenu"
      ]
    },
    {
      "name": "_pMultiCombo.set_acceptvaluetype",
      "params": [
        "v"
      ],
      "calls": [
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_usecontextmenu",
      "params": [
        "usecontextmenu"
      ],
      "calls": [
        "multicombotext.set_usecontextmenu",
        "tagboxedit.set_usecontextmenu"
      ]
    },
    {
      "name": "_pMultiCombo.set_innerdataset",
      "params": [
        "v"
      ],
      "calls": [
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset",
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset",
        "v.replace"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_innerdataset",
      "params": [
        "ds"
      ],
      "calls": [
        "checkboxset.setInnerDataset",
        "ds._setEventHandler",
        "this._createFilteredDataset",
        "this._recheckIndex",
        "this._recheckText",
        "this._recheckValue",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.set_codecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_codecolumn"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_codecolumn",
      "params": [
        "codecolumn"
      ],
      "calls": [
        "checkboxset.set_codecolumn",
        "this._createFilteredDataset",
        "this._recheckIndex",
        "this._recheckText",
        "this._recheckValue",
        "this._setDefaultProps",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.set_datacolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datacolumn"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_datacolumn",
      "params": [
        "datacolumn"
      ],
      "calls": [
        "checkboxset.set_datacolumn",
        "this._createFilteredDataset",
        "this._recheckIndex",
        "this._recheckText",
        "this._recheckValue",
        "this._setDefaultProps",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.set_readonlycolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_readonlycolumn"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_readonlycolumn",
      "params": [
        "readonlycolumn"
      ],
      "calls": [
        "checkboxset.set_readonlycolumn",
        "this._createFilteredDataset"
      ]
    },
    {
      "name": "_pMultiCombo.set_buttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_buttonsize"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_buttonsize",
      "params": [
        "buttonsize"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pMultiCombo.set_displayrowcount",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMultiCombo.set_itemheight",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_itemheight"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_itemheight",
      "params": [
        "itemheight"
      ],
      "calls": [
        "checkboxset.set_itemheight"
      ]
    },
    {
      "name": "_pMultiCombo.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.set_visible.call",
        "this._closePopup",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_accessibility",
      "params": [
        "accessibility"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_accessibility.call",
        "this._p_multicomboedit.on_apply_accessibility"
      ]
    },
    {
      "name": "_pMultiCombo.set_scrollbarbarminsize",
      "params": [
        "scrollbarbarminsize"
      ],
      "calls": [
        "this.on_apply_scrollbarbarminsize"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_scrollbarbarminsize",
      "params": [
        "scrollbarbarminsize"
      ],
      "calls": [
        "checkboxset.set_scrollbarbarminsize"
      ]
    },
    {
      "name": "_pMultiCombo.set_scrollbardecbuttonsize",
      "params": [
        "scrollbardecbuttonsize"
      ],
      "calls": [
        "this.on_apply_scrollbardecbuttonsize"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_scrollbardecbuttonsize",
      "params": [
        "scrollbardecbuttonsize"
      ],
      "calls": [
        "checkboxset.set_scrollbardecbuttonsize"
      ]
    },
    {
      "name": "_pMultiCombo.set_scrollbarbaroutsize",
      "params": [
        "scrollbarbaroutsize"
      ],
      "calls": [
        "this.on_apply_scrollbarbaroutsize"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_scrollbarbaroutsize",
      "params": [
        "scrollbarbaroutsize"
      ],
      "calls": [
        "checkboxset.set_scrollbarbaroutsize"
      ]
    },
    {
      "name": "_pMultiCombo.set_scrollbarincbuttonsize",
      "params": [
        "scrollbarincbuttonsize"
      ],
      "calls": [
        "this.on_apply_scrollbarincbuttonsize"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_scrollbarincbuttonsize",
      "params": [
        "scrollbarincbuttonsize"
      ],
      "calls": [
        "checkboxset.set_scrollbarincbuttonsize"
      ]
    },
    {
      "name": "_pMultiCombo.set_scrollbarsize",
      "params": [
        "scrollbarsize"
      ],
      "calls": [
        "this.on_apply_scrollbarsize"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_scrollbarsize",
      "params": [
        "scrollbarsize"
      ],
      "calls": [
        "checkboxset.set_scrollbarsize"
      ]
    },
    {
      "name": "_pMultiCombo.set_scrollbartrackbarsize",
      "params": [
        "scrollbartrackbarsize"
      ],
      "calls": [
        "this.on_apply_scrollbartrackbarsize"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_scrollbartrackbarsize",
      "params": [
        "scrollbartrackbarsize"
      ],
      "calls": [
        "checkboxset.set_scrollbartrackbarsize"
      ]
    },
    {
      "name": "_pMultiCombo.set_showselectallcheckbox",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showselectallcheckbox"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_showselectallcheckbox",
      "params": [],
      "calls": [
        "this._createPopupListBoxControl",
        "this._p_multicombolist.destroy",
        "this._popupcontrol.destroy",
        "this._selectDataset",
        "this.isDropdown"
      ]
    },
    {
      "name": "_pMultiCombo.set_selectallcheckboxheight",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMultiCombo.set_edittype",
      "params": [
        "v"
      ],
      "calls": [
        "edittype_enum.indexOf",
        "this.on_apply_edittype"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_edittype",
      "params": [],
      "calls": [
        "this._createMultiComboTagBoxControl",
        "this._createMultiComboTextControl",
        "this._recalcLayout",
        "this._setEventHandlerToMultiComboTagBox",
        "this._setEventHandlerToMultiComboText",
        "this.getElement",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.set_textseparator",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_textseparator"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_textseparator",
      "params": [],
      "calls": [
        "this._getItemText",
        "this._setMultiComboTextValue",
        "this._setText"
      ]
    },
    {
      "name": "_pMultiCombo.set_counttextformat",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_counttextformat"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_counttextformat",
      "params": [
        "format"
      ],
      "calls": [
        "this._setMultiComboCountValue"
      ]
    },
    {
      "name": "_pMultiCombo.set_tagboxitemhorizontalgap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tagboxitemhorizontalgap"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_tagboxitemhorizontalgap",
      "params": [
        "v"
      ],
      "calls": [
        "multicombotagbox._recalcLayout"
      ]
    },
    {
      "name": "_pMultiCombo.set_tagboxitemverticalgap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tagboxitemverticalgap"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_tagboxitemverticalgap",
      "params": [
        "v"
      ],
      "calls": [
        "multicombotagbox._recalcLayout"
      ]
    },
    {
      "name": "_pMultiCombo.set_tagboxscrollbartype",
      "params": [
        "v"
      ],
      "calls": [
        "tagboxscrollbartype_enum.indexOf",
        "this.on_apply_tagboxscrollbartype"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_tagboxscrollbartype",
      "params": [
        "v"
      ],
      "calls": [
        "multicombotagbox.set_scrollbartype"
      ]
    },
    {
      "name": "_pMultiCombo.set_tagboxscrollbarsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tagboxscrollbarsize"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_tagboxscrollbarsize",
      "params": [
        "v"
      ],
      "calls": [
        "multicombotagbox.set_scrollbarsize"
      ]
    },
    {
      "name": "_pMultiCombo.set_tagboxscrollindicatorsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tagboxscrollindicatorsize"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_tagboxscrollindicatorsize",
      "params": [
        "v"
      ],
      "calls": [
        "multicombotagbox.set_scrollindicatorsize"
      ]
    },
    {
      "name": "_pMultiCombo.set_tagbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tagbuttonsize"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_tagbuttonsize",
      "params": [],
      "calls": [
        "multicombotagbox._recalcLayout"
      ]
    },
    {
      "name": "_pMultiCombo.on_apply_font",
      "params": [
        "font"
      ],
      "calls": [
        "control_elem.setElementFont",
        "this._isEnableRedraw",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.dropdown",
      "params": [],
      "calls": [
        "input_elem._is_accept_touch",
        "lastfocus._getLastFocused",
        "this._find_lastFocused",
        "this._selectDataset",
        "this._showPopup",
        "this.isDropdown",
        "this.setFocus"
      ]
    },
    {
      "name": "_pMultiCombo.isDropdown",
      "params": [],
      "calls": [
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pMultiCombo.getCaretPos",
      "params": [],
      "calls": [
        "multicombotext.getCaretPos",
        "tagboxedit.getCaretPos"
      ]
    },
    {
      "name": "_pMultiCombo.getSelect",
      "params": [
        "v"
      ],
      "calls": [
        "this.getCount"
      ]
    },
    {
      "name": "_pMultiCombo.setSelect",
      "params": [
        "index",
        "bSelect"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._clear_all",
        "this._getItemReadonly",
        "this._insertIndex",
        "this._removeindex",
        "this._select_add",
        "this._select_remove",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.getSelectedText",
      "params": [],
      "calls": [
        "this._p_multicombotext.getSelectedText",
        "this.getElement"
      ]
    },
    {
      "name": "_pMultiCombo.setSelectedText",
      "params": [
        "v"
      ],
      "calls": [
        "tagboxedit.setSelectedText"
      ]
    },
    {
      "name": "_pMultiCombo.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiCombo.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this._recheckIndex",
        "this._removeEventHandlerToInnerDataset",
        "this.on_apply_innerdataset",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.getCount",
      "params": [],
      "calls": [
        "checkboxset.getCount",
        "this._innerdataset.getRowCount",
        "this.getElement"
      ]
    },
    {
      "name": "_pMultiCombo.redraw",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "this._p_multicombotagbox._setScrollMaxPos",
        "this._setEditValue",
        "this._setMultiComboCountValue",
        "this._setMultiComboTagBoxValue",
        "this._setMultiComboTextValue"
      ]
    },
    {
      "name": "_pMultiCombo.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pMultiCombo.getSelectedCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiCombo.getSelectedItems",
      "params": [],
      "calls": [
        "objsorted.sort"
      ]
    },
    {
      "name": "_pMultiCombo.selectAll",
      "params": [],
      "calls": [
        "this._select_all",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.clearSelect",
      "params": [],
      "calls": [
        "this._clear_all",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.setSelectRange",
      "params": [
        "start",
        "end",
        "bSelect"
      ],
      "calls": [
        "nexacro._toBoolean",
        "rows.push",
        "this._getItemReadonly",
        "this._insertIndex",
        "this._removeindex",
        "this._select_add",
        "this._select_remove",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.setSelectItems",
      "params": [
        "items",
        "bSelect"
      ],
      "calls": [
        "nexacro._toBoolean",
        "rows.push",
        "this._getItemReadonly",
        "this._insertIndex",
        "this._removeindex",
        "this._select_add",
        "this._select_remove",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo._on_activate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_activate.call",
        "nexacro.Edit.prototype._on_activate.call"
      ]
    },
    {
      "name": "_pMultiCombo._on_dropdown",
      "params": [],
      "calls": [
        "input_elem._is_accept_touch",
        "this._clearFilteredDataset",
        "this._closePopup",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._showPopup"
      ]
    },
    {
      "name": "_pMultiCombo._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._createFilteredDataset",
        "this._recheckValue",
        "this.on_fire_oninnerdatachanged",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo._on_dataset_onrowsetchanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._createFilteredDataset",
        "this._recheckIndex",
        "this._recheckText",
        "this._recheckValue",
        "this.redraw",
        "this.set_index"
      ]
    },
    {
      "name": "_pMultiCombo._on_multicombotext_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "input_elem._is_accept_touch",
        "this._closePopup",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._showPopup"
      ]
    },
    {
      "name": "_pMultiCombo._on_edit_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "input_elem._is_accept_touch",
        "this._closePopup",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._showPopup"
      ]
    },
    {
      "name": "_pMultiCombo._on_multicombotext_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "checkboxset._change_status_item_from_key",
        "checkboxset._get_rowobj_status",
        "checkboxset._refreshScroll",
        "checkboxset._select_add",
        "checkboxset._select_withkeydownevent",
        "checkboxset._select_withkeyupevent",
        "checkboxset._select_withmouseevent",
        "ds.getColumn",
        "ds.getRowCount",
        "ds.set_filterstr",
        "input_elem._is_accept_touch",
        "this._clear_all",
        "this._closePopup",
        "this._getItemReadonly",
        "this._getItemText",
        "this._getRawIndex",
        "this._insertIndex",
        "this._isPopupVisible",
        "this._p_multicombotext.set_value",
        "this._selectDataset",
        "this._select_all",
        "this._setDefaultProps",
        "this._setEditValue",
        "this._setFocusToNextComponent",
        "this._showPopup",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo._on_edit_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "checkboxset._change_status_item_from_key",
        "checkboxset._get_rowobj_status",
        "checkboxset._refreshScroll",
        "checkboxset._select_add",
        "checkboxset._select_withkeydownevent",
        "checkboxset._select_withkeyupevent",
        "checkboxset._select_withmouseevent",
        "ds.getColumn",
        "ds.getRowCount",
        "ds.set_filterstr",
        "input_elem._is_accept_touch",
        "this._clear_all",
        "this._closePopup",
        "this._getItemReadonly",
        "this._getItemText",
        "this._getRawIndex",
        "this._insertIndex",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._select_all",
        "this._setDefaultProps",
        "this._setEditValue",
        "this._setFocusToNextComponent",
        "this._showPopup",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo._on_multicombotext_onkeyup",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "checkboxset._get_rowobj_status",
        "this._isPopupVisible",
        "this._selectDataset"
      ]
    },
    {
      "name": "_pMultiCombo._on_edit_onkeyup",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "checkboxset._get_rowobj_status",
        "this._isPopupVisible",
        "this._selectDataset"
      ]
    },
    {
      "name": "_pMultiCombo._on_edit_oninput",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "checkboxset._getItem",
        "checkboxset._set_last_selectfocused",
        "ds.findRowAs",
        "ds.findRowExpr",
        "ds.getRowCount",
        "ds.set_filterstr",
        "edit_val.charAt",
        "edit_val.lastIndexOf",
        "edit_val.substr",
        "input_elem._is_accept_touch",
        "nexacro.ExprParser",
        "nexacro._SystemType.toLowerCase",
        "nexacro._flushCommand",
        "regExp.test",
        "row_item._changeStatus",
        "rowobj._changeStatus",
        "this._closePopup",
        "this._createPopupListBoxControl",
        "this._getWindow",
        "this._isEnable",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._showPopup",
        "this.on_fire_oninput"
      ]
    },
    {
      "name": "_pMultiCombo._on_edit_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oneditclick"
      ]
    },
    {
      "name": "_pMultiCombo._on_multicombotext_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oneditclick"
      ]
    },
    {
      "name": "_pMultiCombo._on_edit_mobile_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "input_elem._is_accept_touch",
        "this._closePopup",
        "this._getItemText",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._setEditValue",
        "this._showPopup",
        "this.on_fire_oneditclick"
      ]
    },
    {
      "name": "_pMultiCombo._on_multicombotext_mobile_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "input_elem._is_accept_touch",
        "this._closePopup",
        "this._getItemText",
        "this._isPopupVisible",
        "this._selectDataset",
        "this._setEditValue",
        "this._showPopup",
        "this.on_fire_oneditclick"
      ]
    },
    {
      "name": "_pMultiCombo._on_drop_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_dropdown"
      ]
    },
    {
      "name": "_pMultiCombo._on_drop_mobile_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_dropdown"
      ]
    },
    {
      "name": "_pMultiCombo._on_drop_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_dropdown"
      ]
    },
    {
      "name": "_pMultiCombo._on_tagbox_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "multicombotagbox._scrollTo",
        "multicombotagbox.tagboxedit._apply_setfocus",
        "selectItems.indexOf",
        "this._getItemReadonly",
        "this._isPopupVisible",
        "this._p_multicombolist.checkboxset._select_withmouseevent",
        "this._p_multicombotagbox._destroyMulticomboTag",
        "this._recalcLayout",
        "this._removeindex",
        "this._select_remove",
        "this.getCaretPos",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo._on_tagbox_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "tagboxedit._apply_setfocus",
        "this._on_dropdown"
      ]
    },
    {
      "name": "_pMultiCombo._on_tagbox_mobile_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "tagboxedit._apply_setfocus",
        "this._on_dropdown"
      ]
    },
    {
      "name": "_pMultiCombo._on_list_onitemclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "checkboxset._onRecalcScrollSize",
        "checkboxset._redrawListBoxContents",
        "checkboxset._select_withmouseevent",
        "ds.set_filterstr",
        "multicombolist._setSelectedSelectall",
        "popupcontrol._popupAuto",
        "this._closePopup",
        "this._getItemText",
        "this._getItemValue",
        "this._getRawIndex",
        "this._getViewItemCount",
        "this._isPopupVisible",
        "this._p_multicombolist.multicomboedit._apply_setfocus",
        "this._p_multicombotagbox.tagboxedit._apply_setfocus",
        "this._p_multicombotext._apply_setfocus",
        "this._selectDataset",
        "this._setFocusToNextComponent",
        "this.getSelectedCount",
        "this.on_fire_onitemclick",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo._on_list_oncloseup",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "_window._releaseCaptureLock",
        "multicombotext._apply_setfocus",
        "nexacro._isNull",
        "this._changeStatus",
        "this._clearFilteredDataset",
        "this._getWindow",
        "this._p_dropbutton._changeStatus",
        "this._p_multicombotagbox._changeStatus",
        "this._p_multicombotext._changeStatus",
        "this._setEditValue",
        "this.on_fire_oncloseup"
      ]
    },
    {
      "name": "_pMultiCombo.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "this._apply_setfocus",
        "this._changeStatus",
        "this._setAccessibilityStatFocus"
      ]
    },
    {
      "name": "_pMultiCombo.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "multicombotext._changeStatus",
        "multicombotext.setCaretPos",
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this._closePopup",
        "this._isPopupVisible",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_sys_onaccessibilitygesture",
      "params": [
        "direction",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "checkboxset._getContentsCount",
        "checkboxset._getItem",
        "item._setAccessibilityNotifyEvent",
        "this._closePopup",
        "this._isPopupVisible"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslide.call",
        "this._popupcontrol._is_popup"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_sys_onfling",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onfling.call",
        "this._popupcontrol._is_popup"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_oneditclick",
      "params": [
        "obj",
        "caretpos",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.EditClickEventInfo",
        "this.oneditclick._fireEvent"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_onitemclick",
      "params": [
        "obj",
        "index",
        "itemtext",
        "itemvalue",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ItemClickEventInfo",
        "this.onitemclick._fireEvent"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_canitemchange",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "nexacro._toBoolean",
        "this.canitemchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_onitemchanged",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "this.onitemchanged._fireEvent"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_oncloseup",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue",
        "is_select"
      ],
      "calls": [
        "nexacro.ComboCloseUpEventInfo",
        "nexacro._toBoolean",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_ondropdown",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.EventInfo",
        "this.ondropdown._fireCheckEvent"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.InputEventInfo",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pMultiCombo.on_fire_sys_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "down_item._stat_change",
        "info.obj._stat_change",
        "sel_info_list.shift",
        "sel_info_list.splice",
        "this.isDropdown"
      ]
    },
    {
      "name": "_pMultiCombo._on_tagbutton_onclick",
      "params": [
        "index",
        "obj"
      ],
      "calls": [
        "checkboxset._select_withmouseevent",
        "this._getItemReadonly",
        "this._isPopupVisible",
        "this._p_multicombotagbox._destroyMulticomboTag",
        "this._recalcLayout",
        "this._removeindex",
        "this._select_remove",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo._createMultiComboTagBoxControl",
      "params": [],
      "calls": [
        "multicombotagbox.createComponent",
        "multicombotagbox.set_scrollbarsize",
        "multicombotagbox.set_scrollbartype",
        "multicombotagbox.set_scrollindicatorsize",
        "multicombotagbox.set_scrolltype",
        "nexacro._MultiComboTagBoxControl",
        "this._p_multicombotext.destroy"
      ]
    },
    {
      "name": "_pMultiCombo._createMultiComboTextControl",
      "params": [],
      "calls": [
        "multicombotext._setControl",
        "multicombotext._setReadonlyView",
        "multicombotext.createComponent",
        "multicombotext.on_created",
        "multicombotext.set_displaynulltext",
        "multicombotext.set_readonly",
        "multicombotext.set_usecontextmenu",
        "nexacro.Edit",
        "this._p_multicombotagbox.destroy"
      ]
    },
    {
      "name": "_pMultiCombo._createListBoxControl",
      "params": [
        "ds"
      ],
      "calls": [
        "multicombolist._createCheckBoxSetControl",
        "multicombolist._createPopupEditControl",
        "multicombolist._createSelectAllCheckBoxControl",
        "multicombolist._setPopupContains",
        "multicombolist.createComponent",
        "nexacro._MultiComboListControl"
      ]
    },
    {
      "name": "_pMultiCombo._createdListBoxControl",
      "params": [],
      "calls": [
        "multicombolist._createdCheckBoxSetControl",
        "multicombolist._createdPopupEditControl",
        "multicombolist._createdSelectAllCheckBoxControl",
        "multicombolist.on_created"
      ]
    },
    {
      "name": "_pMultiCombo._createPopupControl",
      "params": [],
      "calls": [
        "nexacro._MultiComboPopupControl",
        "popupcontrol._setType",
        "popupcontrol.createComponent"
      ]
    },
    {
      "name": "_pMultiCombo._createdPopupControl",
      "params": [
        "attach_comp"
      ],
      "calls": [
        "popupcontrol._attach",
        "popupcontrol.on_created"
      ]
    },
    {
      "name": "_pMultiCombo._createPopupListBoxControl",
      "params": [
        "ds"
      ],
      "calls": [
        "this._createListBoxControl",
        "this._createPopupControl",
        "this._createdListBoxControl",
        "this._createdPopupControl",
        "this._isUsableDataset"
      ]
    },
    {
      "name": "_pMultiCombo._createFilteredDataset",
      "params": [],
      "calls": [
        "checkboxset._onRecalcScrollSize",
        "checkboxset._redrawListBoxContents",
        "fds.addColumn",
        "fds.clear",
        "fds.insertRow",
        "fds.setColumn",
        "fds.set_enableevent",
        "ids.getColumn",
        "ids.getRowCount",
        "nexacro.Dataset",
        "this._isUsableDataset"
      ]
    },
    {
      "name": "_pMultiCombo._recalcLayout",
      "params": [],
      "calls": [
        "dropbutton.move",
        "dropbutton_size.split",
        "multicombotagbox._recalcLayout",
        "multicombotagbox.move",
        "multicombotext.move",
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pMultiCombo._recheckIndex",
      "params": [],
      "calls": [
        "idx.split",
        "index.toString",
        "nexacro.getEnvironment",
        "this._getItemText",
        "this._getItemValue",
        "this._select_remove",
        "this._setIndex",
        "this._setText",
        "this._setValue"
      ]
    },
    {
      "name": "_pMultiCombo._recheckValue",
      "params": [],
      "calls": [
        "index.toString",
        "nexacro.getEnvironment",
        "this._getIndexFromValue",
        "this._getItemText",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "val.split"
      ]
    },
    {
      "name": "_pMultiCombo._recheckText",
      "params": [],
      "calls": [
        "index.toString",
        "nexacro.getEnvironment",
        "this._getIndexFromText",
        "this._getItemValue",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "txt.split"
      ]
    },
    {
      "name": "_pMultiCombo._selectDataset",
      "params": [
        "bInit"
      ],
      "calls": [
        "this._clearFilteredDataset",
        "this._createFilteredDataset"
      ]
    },
    {
      "name": "_pMultiCombo._showPopup",
      "params": [
        "ds",
        "index",
        "use_timer"
      ],
      "calls": [
        "this._on_showPopup"
      ]
    },
    {
      "name": "_pMultiCombo._on_showPopup",
      "params": [
        "ds",
        "index"
      ],
      "calls": [
        "checkboxset._getInnerdatasetInfo",
        "checkboxset._onRecalcScrollSize",
        "checkboxset._on_last_selectfocuschanged",
        "checkboxset._redrawListBoxContents",
        "checkboxset._refreshScroll",
        "checkboxset._setAccessibilityNotifyEvent",
        "checkboxset.setFocus",
        "multicomboedit._apply_setfocus",
        "multicombotext._setAccessibilityAction",
        "multicombotext._setAccessibilityDescription",
        "multicombotext._setAccessibilityLabel",
        "multicombotext.setFocus",
        "popupcontrol._popupAuto",
        "tagboxedit._apply_setfocus",
        "this._closePopup",
        "this._createPopupListBoxControl",
        "this._getPopupType",
        "this._getWindow",
        "this._isPopupVisible",
        "this._isUsableDataset",
        "this._setAccessibilityStatExpanded",
        "this.on_fire_ondropdown",
        "win._setCaptureLock"
      ]
    },
    {
      "name": "_pMultiCombo._applyZoomPopup",
      "params": [],
      "calls": [
        "ds.getRowCount",
        "this._popupcontrol._is_popup",
        "this._selectDataset",
        "this._showPopup"
      ]
    },
    {
      "name": "_pMultiCombo._closePopup",
      "params": [],
      "calls": [
        "_window._releaseCaptureLock",
        "multicombotext.on_apply_accessibility",
        "nexacro._refreshWindow",
        "popupcontrol._closePopup",
        "this._getWindow",
        "this._setAccessibilityStatExpanded"
      ]
    },
    {
      "name": "_pMultiCombo._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._convertObjectContents",
        "this.set_innerdataset"
      ]
    },
    {
      "name": "_pMultiCombo._select_indexOfkey",
      "params": [
        "k"
      ],
      "calls": [
        "nexacro._indexOf"
      ]
    },
    {
      "name": "_pMultiCombo._select_replace",
      "params": [
        "k",
        "selectIdx"
      ],
      "calls": [
        "this._select_indexOfkey"
      ]
    },
    {
      "name": "_pMultiCombo._select_add",
      "params": [
        "selectIdx"
      ],
      "calls": [
        "info.items.push",
        "info.keys.push",
        "this._innerdataset.getRowCount",
        "this._select_indexOfkey"
      ]
    },
    {
      "name": "_pMultiCombo._select_remove",
      "params": [
        "selectIdx"
      ],
      "calls": [
        "info.items.splice",
        "info.keys.splice",
        "this._select_indexOfkey"
      ]
    },
    {
      "name": "_pMultiCombo._clear_all",
      "params": [
        "change_by_script",
        "isNotFireEvent"
      ],
      "calls": [
        "checkboxset._getItem",
        "item.set_selected",
        "rows.push",
        "this._getItemReadonly",
        "this._p_multicombolist._setSelectedSelectall",
        "this._removeindex",
        "this._select_remove"
      ]
    },
    {
      "name": "_pMultiCombo._select_all",
      "params": [
        "change_by_script"
      ],
      "calls": [
        "checkboxset._getItem",
        "item.set_selected",
        "rows.push",
        "this._getItemReadonly",
        "this._insertIndex",
        "this._p_multicombolist._setSelectedSelectall",
        "this._select_add"
      ]
    },
    {
      "name": "_pMultiCombo._selectAll",
      "params": [],
      "calls": [
        "this._clear_all",
        "this._getViewItemCount",
        "this._select_all",
        "this.getSelectedCount",
        "this.redraw"
      ]
    },
    {
      "name": "_pMultiCombo._getViewItemCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiCombo._changeIndex",
      "params": [
        "v",
        "change_by_script",
        "isNotFireEvent"
      ],
      "calls": [
        "nexacro.getEnvironment",
        "this._getItemText",
        "this._getItemValue",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged"
      ]
    },
    {
      "name": "_pMultiCombo._insertIndex",
      "params": [
        "v",
        "change_by_script",
        "isNotFireEvent"
      ],
      "calls": [
        "nexacro.getEnvironment",
        "preidx.split",
        "preidx_arr.indexOf",
        "this._getItemText",
        "this._getItemValue",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged",
        "v.filter",
        "v.indexOf"
      ]
    },
    {
      "name": "_pMultiCombo._removeindex",
      "params": [
        "v",
        "change_by_script",
        "isNotFireEvent"
      ],
      "calls": [
        "nexacro.getEnvironment",
        "postidx.indexOf",
        "postidx.join",
        "postidx.splice",
        "posttext.indexOf",
        "posttext.join",
        "posttext.splice",
        "postvalue.indexOf",
        "postvalue.join",
        "postvalue.splice",
        "preidx.indexOf",
        "this._getItemText",
        "this._getItemValue",
        "this._p_index.split",
        "this._p_text.split",
        "this._p_value.split",
        "this._setIndex",
        "this._setText",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged",
        "v.filter",
        "v.indexOf"
      ]
    },
    {
      "name": "_pMultiCombo._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro.Component.prototype._convertValueType.call",
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pMultiCombo._setValue",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMultiCombo._setEditValue",
      "params": [
        "v",
        "b"
      ],
      "calls": [
        "multicomboedit._setValue",
        "tagboxedit._notifyAccessibility",
        "tagboxedit._setAccessibilityLabel",
        "tagboxedit._setValue",
        "tagboxedit._updateAccessibilityLabel"
      ]
    },
    {
      "name": "_pMultiCombo._setTextValue",
      "params": [
        "v"
      ],
      "calls": [
        "multicombotext._setValue"
      ]
    },
    {
      "name": "_pMultiCombo._setIndex",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMultiCombo._setText",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMultiCombo._setDefaultProps",
      "params": [
        "index",
        "value",
        "text"
      ],
      "calls": []
    },
    {
      "name": "_pMultiCombo._setEventHandlerToMultiComboText",
      "params": [],
      "calls": [
        "multicombotext._setEventHandler",
        "this._setEventHandler"
      ]
    },
    {
      "name": "_pMultiCombo._setEventHandlerToDropButton",
      "params": [],
      "calls": [
        "dropbutton._setEventHandler"
      ]
    },
    {
      "name": "_pMultiCombo._setEventHandlerToMultiComboTagBox",
      "params": [],
      "calls": [
        "multicombotagbox._setEventHandler",
        "tagboxedit._setEventHandler",
        "this._setEventHandler"
      ]
    },
    {
      "name": "_pMultiCombo._setEventHandlerToListBox",
      "params": [],
      "calls": [
        "checkboxset._setEventHandler"
      ]
    },
    {
      "name": "_pMultiCombo._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pMultiCombo._setDefaultCaret",
      "params": [],
      "calls": [
        "tagboxedit.setCaretPos"
      ]
    },
    {
      "name": "_pMultiCombo._setFocusToNextComponent",
      "params": [],
      "calls": [
        "next_comp._setDefaultCaret",
        "next_comp.setFocus",
        "this._getForm",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pMultiCombo._getColumn",
      "params": [
        "ds",
        "index",
        "column"
      ],
      "calls": [
        "ds.getColumn"
      ]
    },
    {
      "name": "_pMultiCombo._getRowCount",
      "params": [
        "ds"
      ],
      "calls": [
        "ds.getRowCount"
      ]
    },
    {
      "name": "_pMultiCombo._getItemValue",
      "params": [
        "index"
      ],
      "calls": [
        "this._convertValueType",
        "this._filtereddataset.getColumn",
        "this._getColumn"
      ]
    },
    {
      "name": "_pMultiCombo._getItemText",
      "params": [
        "index"
      ],
      "calls": [
        "nexacro._toString",
        "this._filtereddataset.getColumn",
        "this._getColumn"
      ]
    },
    {
      "name": "_pMultiCombo._getItemReadonly",
      "params": [
        "index"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._filtereddataset.getColumn",
        "this._getColumn",
        "this._getRowCount"
      ]
    },
    {
      "name": "_pMultiCombo._getIndexFromValue",
      "params": [
        "ds",
        "value"
      ],
      "calls": [
        "ds._isValidColumn",
        "this._getItemValue",
        "this._getRowCount",
        "v.toString",
        "value.toString"
      ]
    },
    {
      "name": "_pMultiCombo._getIndexFromText",
      "params": [
        "ds",
        "text"
      ],
      "calls": [
        "this._getItemText",
        "this._getRowCount"
      ]
    },
    {
      "name": "_pMultiCombo._getRawToListindex",
      "params": [
        "idx"
      ],
      "calls": [
        "this._getFilteredDataset"
      ]
    },
    {
      "name": "_pMultiCombo._getRawIndex",
      "params": [
        "fds",
        "idx"
      ],
      "calls": []
    },
    {
      "name": "_pMultiCombo._getPopupType",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiCombo._isUsableDataset",
      "params": [
        "ds"
      ],
      "calls": []
    },
    {
      "name": "_pMultiCombo._isPopupVisible",
      "params": [],
      "calls": [
        "popupcontrol._is_popup"
      ]
    },
    {
      "name": "_pMultiCombo._clearFilteredDataset",
      "params": [],
      "calls": [
        "this._filtereddataset.set_filterstr"
      ]
    },
    {
      "name": "_pMultiCombo._setAccessibilityInfoByHover",
      "params": [
        "control"
      ],
      "calls": [
        "checkboxset._setAccessibilityInfoByHover",
        "this._isPopupVisible",
        "this._setAccessibilityNotifyEvent"
      ]
    },
    {
      "name": "_pMultiCombo._clearAccessibilityInfoByHover",
      "params": [],
      "calls": [
        "checkboxset._clearAccessibilityInfoByHover"
      ]
    },
    {
      "name": "_pMultiCombo._getPopupSizeArr",
      "params": [],
      "calls": [
        "size.split"
      ]
    },
    {
      "name": "_pMultiCombo._cancelEvent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiCombo._setMultiComboTextValue",
      "params": [],
      "calls": [
        "this._getItemText",
        "this._p_multicombotagbox.destroy",
        "this._setTextValue"
      ]
    },
    {
      "name": "_pMultiCombo._setMultiComboCountValue",
      "params": [],
      "calls": [
        "format.replace",
        "multicombotext.set_value",
        "this._p_multicombotagbox.destroy",
        "this.getSelectedCount"
      ]
    },
    {
      "name": "_pMultiCombo._setMultiComboTagBoxValue",
      "params": [],
      "calls": [
        "multicombotagbox._setMultiComboTagValue"
      ]
    },
    {
      "name": "nexacro._MultiComboEditControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.Edit.call"
      ]
    },
    {
      "name": "_pMultiComboEditControl._getFromComponent",
      "params": [
        "comp"
      ],
      "calls": [
        "nexacro.Component.prototype._getFromComponent.call",
        "parent._isPopupVisible"
      ]
    },
    {
      "name": "_pMultiComboEditControl._apply_setfocus",
      "params": [
        "evt_name",
        "self_flag"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.on_apply_force_imeSet",
        "input_elem.on_apply_imeSet",
        "input_elem.setElementFocus",
        "input_elem.setElementSetSelect",
        "nexacro._isDesktop",
        "nexacro._notifyAccessibilityInputElement",
        "this._changeUserStatus",
        "this._getAccessibilityReadLabel",
        "this._isComponentKeydownAction",
        "this._p_parent._setScrollMaxPos"
      ]
    },
    {
      "name": "_pMultiComboEditControl.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.isComposing",
        "input_elem.setCompositionComplete",
        "input_elem.stopSysEvent",
        "this._isEnable",
        "this._undostack.redo",
        "this._undostack.undo",
        "this._undostack.update"
      ]
    },
    {
      "name": "_pMultiComboEditControl.on_keyup_basic_action",
      "params": [
        "/*keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboEditControl.on_keyup_basic_action",
      "params": [
        "/*keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboEditControl.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Edit.prototype.set_value.call",
        "this._setAccessibilityValue"
      ]
    },
    {
      "name": "_pMultiComboEditControl.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_ondblclick"
      ]
    },
    {
      "name": "nexacro._MultiComboButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pMultiComboButtonControl.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "multicombo._apply_setfocus",
        "nexacro.Component.prototype.on_focus_basic_action.call",
        "this._setAccessibilityStatFocus"
      ]
    },
    {
      "name": "_pMultiComboButtonControl._on_click",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._p_parent._isEnable",
        "this.on_click_basic_action",
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "nexacro._MultiComboCheckBoxSetControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.CheckBoxSet.call"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._CheckBoxSetItemControl",
        "this._temp_item.createComponent"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._getContentsItem",
        "this._onRecalcScrollSize",
        "this._redrawListBoxContents",
        "this._setEventHandler",
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.on_apply_prop_accessibilitylabel"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_destroy_contents",
      "params": [],
      "calls": [
        "item.destroy",
        "this._destroyListBoxContents",
        "this._removeEventHandler",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this._getContentsItem",
        "this._parseInnerDataset",
        "this._redrawListBoxContents",
        "this._setInnerDatasetStr"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._getContentsItem",
        "this._onRecalcScrollSize",
        "this._setEventHandler",
        "this.on_apply_prop_accessibilitylabel"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getItemHeight",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._recalcLayout",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._on_getFitSize",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._getInnerdatasetInfo",
        "this.getElement"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._onRecalcScrollSize",
      "params": [],
      "calls": [
        "Math.max",
        "control_elem.setElementScrollMaxSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._onResetScrollBar",
        "this.getElement"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_apply_index",
      "params": [
        "index"
      ],
      "calls": [
        "this._getInnerdatasetInfo",
        "this._setText",
        "this._setValue"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "ds.findRow",
        "ds.getColumn",
        "this._setIndex",
        "this._setText"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_apply_codecolumn",
      "params": [
        "codecolumn"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._parseInnerDataset",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_apply_datacolumn",
      "params": [
        "datacolumn"
      ],
      "calls": [
        "this._onRecalcScrollSize",
        "this._parseInnerDataset",
        "this._redrawListBoxContents"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_notify_item_onlbuttondown",
      "params": [
        "obj",
        "e"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_notify_item_onlbuttonup",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._contains",
        "this._getWindow",
        "this._select_withmouseevent",
        "this.on_fire_onitemclick"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_notify_item_ontouchstart",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._do_select"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_notify_item_ontouchend",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_notify_item_onlbuttonup"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_notify_listbox_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_notify_item_onmouseenter",
      "params": [
        "obj",
        "e"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_notify_item_onmouseleave",
      "params": [
        "obj",
        "e"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_notify_item_onmousemove",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "rowobj._changeStatus",
        "this._getItem"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "multicombo._apply_setfocus",
        "multicombo._setAccessibilityStatFocus"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onkeydown.call"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onlbuttonup.call"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_fire_sys_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onlbuttonup.call"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_fire_sys_ontouchstart",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_ontouchstart.call"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_fire_sys_ontouchend",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_ontouchend.call"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_fire_sys_ontouchcancel",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboCheckBoxSetControl.on_fire_oncloseup",
      "params": [
        "obj"
      ],
      "calls": [
        "rowobj._changeStatus",
        "this._get_rowobj_status",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._set_last_selectfocused",
      "params": [
        "idx",
        "isNotFireEvent"
      ],
      "calls": [
        "this._on_last_selectfocuschanged"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._select_add",
      "params": [
        "selectIdx",
        "isNotFireEvent"
      ],
      "calls": [
        "info.items.push",
        "info.keys.push",
        "this._changeIndex",
        "this._select_replace"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._select_remove",
      "params": [
        "selectIdx"
      ],
      "calls": [
        "info.items.splice",
        "info.keys.splice",
        "this._select_indexOfkey"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._select_withmouseevent",
      "params": [
        "idx",
        "obj"
      ],
      "calls": [
        "_item.set_selected",
        "all_item._changeStatus",
        "item.set_selected",
        "multicombo._insertIndex",
        "multicombo._removeindex",
        "nexacro._isNumber",
        "rows.push",
        "this._do_deselect",
        "this._do_select",
        "this._getContentsItem",
        "this._getInnerdatasetInfo",
        "this._getItem",
        "this._select_add",
        "this._select_remove",
        "this._set_last_selectfocused"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._select_withkeyupevent",
      "params": [
        "shiftkey",
        "curidx",
        "nextidx"
      ],
      "calls": [
        "cur_item.set_selected",
        "multicombo._changeIndex",
        "multicombo._clear_all",
        "multicombo._insertIndex",
        "multicombo._p_index.toString",
        "multicombo._removeindex",
        "multicombo.redraw",
        "next_item.set_selected",
        "rows.toString",
        "this._change_status_item_from_key",
        "this._do_deselect",
        "this._do_select",
        "this._getItem",
        "this._select_add",
        "this._select_remove"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._select_withkeydownevent",
      "params": [
        "shiftkey",
        "curidx",
        "nextidx"
      ],
      "calls": [
        "cur_item.set_selected",
        "multicombo._changeIndex",
        "multicombo._clear_all",
        "multicombo._insertIndex",
        "multicombo._p_index.toString",
        "multicombo._removeindex",
        "multicombo.redraw",
        "next_item.set_selected",
        "rows.toString",
        "this._change_status_item_from_key",
        "this._do_deselect",
        "this._do_select",
        "this._getItem",
        "this._select_add",
        "this._select_remove"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._createListItemControl",
      "params": [
        "index"
      ],
      "calls": [
        "Math.max",
        "ds.getColumn",
        "item._setEventHandler",
        "item.createComponent",
        "item.set_index",
        "item.set_readonly",
        "item.set_selected",
        "item.set_text",
        "item.set_value",
        "nexacro._toString",
        "this._convertValueType",
        "this._createListItem",
        "this._getClientWidth",
        "this._getItemHeight",
        "this._setItemAccessibility"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._change_status_item_from_key",
      "params": [
        "curidx",
        "nextidx"
      ],
      "calls": [
        "currowobj._changeStatus",
        "rowobj._changeStatus",
        "this._getItem"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._selectAll",
      "params": [
        "idx"
      ],
      "calls": [
        "item._changeStatus",
        "item.set_selected",
        "this._getItem",
        "this._select_add"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._clearAll",
      "params": [
        "idx"
      ],
      "calls": [
        "item._changeStatus",
        "item.set_selected",
        "obj.indexOf",
        "this._changeIndex",
        "this._getItem",
        "this._select_remove"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._createListItem",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._MultiComboListItemControl"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._on_select_change",
      "params": [
        "idx",
        "isSelected",
        "jobgbn",
        "params",
        "isNotFireEvent"
      ],
      "calls": [
        "rowobj._setAccessibilityInfoCount",
        "rowobj._setAccessibilityInfoIndex",
        "rowobj.set_selected",
        "this._getInnerdatasetInfo",
        "this._getItem",
        "this._select_commit"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._changeIndex",
      "params": [
        "v"
      ],
      "calls": [
        "dataset.getColumn",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._getItem",
      "params": [
        "index"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._getContentsItem",
      "params": [],
      "calls": [
        "pages.hasOwnProperty",
        "ret.concat"
      ]
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._get_rowobj_status",
      "params": [
        "status",
        "flag",
        "lastselected"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboCheckBoxSetControl._get_all_rowobj_status",
      "params": [
        "status",
        "flag"
      ],
      "calls": [
        "ret.push"
      ]
    },
    {
      "name": "nexacro._MultiComboListItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._CheckBoxSetItemControl.call"
      ]
    },
    {
      "name": "_pMultiComboListItemControl._redrawListBoxContents",
      "params": [
        "bScrollChange"
      ],
      "calls": [
        "Math.ceil",
        "Math.floor",
        "nexacro._isMobile",
        "this._createListBoxContents",
        "this._getInnerdatasetInfo",
        "this._get_first_visible_row",
        "this._get_last_visible_row",
        "this._p_parent._getClientHeight",
        "this._p_parent._getItemHeight",
        "this._recalcContentsMaxSize",
        "this._redrawListBoxContentsAfter",
        "this._redrawListBoxContentsBefore",
        "this.on_apply_index",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMultiComboListItemControl._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getTextSize",
        "this._getCSSStyleValue",
        "this._getCurrentStyleBorder",
        "this._getCurrentStyleInheritValue",
        "this._getCurrentStylePadding",
        "this._getReferenceAbsoluteFont",
        "this.getElement"
      ]
    },
    {
      "name": "_pMultiComboListItemControl._getStringResourceProperty",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboListItemControl.on_fire_sys_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onlbuttonup.call",
        "this._getWindow",
        "window.findComponent"
      ]
    },
    {
      "name": "_pMultiComboListItemControl.on_fire_sys_ontouchend",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_ontouchend.call",
        "this._getWindow",
        "window.findComponent"
      ]
    },
    {
      "name": "_pMultiComboListItemControl.on_tap_basic_action",
      "params": [
        "elem",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "nexacro._MultiComboPopupControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.PopupControl.call"
      ]
    },
    {
      "name": "_pMultiComboPopupControl._popupAuto",
      "params": [],
      "calls": [
        "this._getPopupPosition",
        "this._getPopupPositionCenter",
        "this._getRootFrame",
        "this._popupBy"
      ]
    },
    {
      "name": "_pMultiComboPopupControl._setType",
      "params": [
        "type"
      ],
      "calls": []
    },
    {
      "name": "_pMultiComboPopupControl._getElementPosition",
      "params": [],
      "calls": [
        "multicombo.getElement",
        "nexacro._getElementPositionInFrame"
      ]
    },
    {
      "name": "_pMultiComboPopupControl._getPopupParentPos",
      "params": [],
      "calls": [
        "multicombo.getElement",
        "nexacro._getElementPositionInFrame",
        "rootframe.getElement",
        "this._getRootFrame"
      ]
    },
    {
      "name": "_pMultiComboPopupControl._getPopupPosition",
      "params": [],
      "calls": [
        "Math.max",
        "Math.round",
        "checkboxset._getCurrentStyleBorder",
        "checkboxset._getCurrentStylePadding",
        "checkboxset._getItemHeight",
        "checkboxset._getTextHeight",
        "checkboxset._on_getFitSize",
        "checkboxset_bordersize._getBorderHeight",
        "edit_bordersize._getBorderHeight",
        "multicombo._getPopupSizeArr",
        "multicombo._getVScrollBarSize",
        "multicombo._selectDataset",
        "multicomboedit._getCurrentStyleBorder",
        "multicomboedit._getCurrentStylePadding",
        "multicombolist._getCurrentStyleBorder",
        "multicombolist._getCurrentStylePadding",
        "multicombolist_bordersize._getBorderHeight",
        "nexacro._getDevicePixelRatio",
        "nexacro._getElementPositionInFrame",
        "nexacro._getWindowHandleClientHeight",
        "nexacro._getWindowHandleClientWidth",
        "nexacro._getWindowOffsetPosition",
        "rootframe.getElement",
        "selectall_bordersize._getBorderHeight",
        "selectallcheckbox._getCurrentStyleBorder",
        "selectallcheckbox._getCurrentStylePadding",
        "selectallcheckbox._on_getFitSize",
        "this._getPopupParentPos",
        "this._getRootFrame",
        "this._getWindow"
      ]
    },
    {
      "name": "_pMultiComboPopupControl._getPopupPositionCenter",
      "params": [],
      "calls": [
        "Math.max",
        "Math.round",
        "checkboxset._getCurrentStyleBorder",
        "checkboxset._getCurrentStylePadding",
        "checkboxset._getItemHeight",
        "checkboxset._getTextHeight",
        "checkboxset._on_getFitSize",
        "checkboxset_bordersize._getBorderHeight",
        "edit_bordersize._getBorderHeight",
        "multicombo._getPopupSizeArr",
        "multicombo._getVScrollBarSize",
        "multicombo._selectDataset",
        "multicombo.getElement",
        "multicomboedit._getCurrentStyleBorder",
        "multicomboedit._getCurrentStylePadding",
        "multicombolist._getCurrentStyleBorder",
        "multicombolist._getCurrentStylePadding",
        "multicombolist_bordersize._getBorderHeight",
        "nexacro._getDevicePixelRatio",
        "nexacro._getWindowDestinationHandle",
        "nexacro._getWindowHandleClientHeight",
        "nexacro._getWindowHandleClientWidth",
        "selectall_bordersize._getBorderHeight",
        "selectallcheckbox._getCurrentStyleBorder",
        "selectallcheckbox._getCurrentStylePadding",
        "selectallcheckbox._on_getFitSize",
        "this._getWindow"
      ]
    },
    {
      "name": "_pMultiComboPopupControl._setZoom",
      "params": [
        "scale"
      ],
      "calls": [
        "elem.setElementZoom",
        "nexacro.ScrollableControlElement.prototype.setElementZoom.call",
        "this.getElement"
      ]
    },
    {
      "name": "nexacro._MultiComboTagBoxControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._MultiComboEditControl",
        "this._createMultiComboTagControl",
        "this.getElement",
        "this.tagboxedit.createComponent"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "tagboxedit.on_created",
        "tagboxedit.set_displaynulltext",
        "tagboxedit.set_readonly",
        "tagboxedit.set_usecontextmenu",
        "this._onRecalcScrollSize"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._removeEventHandlerToInnerDataset",
        "this.tagboxedit.destroy"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiComboTagBoxControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this.tagboxedit.createCommand"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this.tagboxedit.attachHandle"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this.tagboxedit._setEnable"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl._onRecalcScrollSize",
      "params": [],
      "calls": [
        "Math.max",
        "control_elem.setElementScrollMaxSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._onResetScrollBar",
        "this.getElement"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._onResetScrollBar",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "tagboxedit.set_readonly",
        "this._changeStatus"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl._createMultiComboTagControl",
      "params": [
        "index"
      ],
      "calls": [
        "multicombo._getItemText",
        "multicombo._getItemValue",
        "this._createMultiComboTag"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl._createMultiComboTag",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._TagBoxControl"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiComboTagBoxControl._recalcLayout",
      "params": [],
      "calls": [
        "Math.max",
        "edit_bordersize._getBorderHeight",
        "edit_bordersize._getBorderWidth",
        "nexacro._getTextSize",
        "tag.move",
        "tag.tagbutton.move",
        "tag.tagtext._on_getFitSize",
        "tag.tagtext.move",
        "tag.tagtext.set_text",
        "tag_bordersize._getBorderHeight",
        "tag_bordersize._getBorderWidth",
        "tagboxedit._getCurrentStyleBorder",
        "tagboxedit._getCurrentStyleInheritValue",
        "tagboxedit._getCurrentStylePadding",
        "tagboxedit._getReferenceAbsoluteFont",
        "tagboxedit.move",
        "tagbutton_size.split",
        "tagitem._getCurrentStyleBorder",
        "tagitem._getCurrentStylePadding",
        "tagitem.tagtext._on_getFitSize",
        "tagitem.tagtext.set_text",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._onRecalcScrollSize"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl._setScrollMaxPos",
      "params": [],
      "calls": [
        "this.hscrollbar.set_pos",
        "this.vscrollbar.set_pos"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl._setMultiComboTagValue",
      "params": [],
      "calls": [
        "this._createMultiComboTagControl",
        "this._destroyMulticomboTags",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pMultiComboTagBoxControl._destroyMulticomboTags",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiComboTagBoxControl._destroyMulticomboTag",
      "params": [
        "index"
      ],
      "calls": [
        "Object.keys"
      ]
    },
    {
      "name": "nexacro._TagBoxControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pTagBoxControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTagBoxControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.Static",
        "nexacro._MultiComboTagButtonControl",
        "tagbutton._setEventHandlerToTagButton",
        "tagtext.set_text",
        "this.getElement",
        "this.tagbutton.createComponent",
        "this.tagtext._setControl",
        "this.tagtext.createComponent"
      ]
    },
    {
      "name": "_pTagBoxControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this.tagbutton.on_created",
        "this.tagtext.on_created"
      ]
    },
    {
      "name": "_pTagBoxControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this.tagbutton.destroy",
        "this.tagtext.destroy"
      ]
    },
    {
      "name": "_pTagBoxControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this.tagbutton.createCommand",
        "this.tagtext.createCommand"
      ]
    },
    {
      "name": "_pTagBoxControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this.tagbutton._setAccessibilityStatHidden",
        "this.tagbutton.attachHandle",
        "this.tagtext._setAccessibilityStatHidden",
        "this.tagtext.attachHandle"
      ]
    },
    {
      "name": "_pTagBoxControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this.tagbutton._setEnable",
        "this.tagtext._setEnable"
      ]
    },
    {
      "name": "_pTagBoxControl.set_index",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTagBoxControl.set_value",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTagBoxControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pTagBoxControl.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "tagbutton._setEnable",
        "tagtext._setEnable",
        "this._changeStatus",
        "this._isEnable"
      ]
    },
    {
      "name": "nexacro._MultiComboTagButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pMultiComboTagButtonControl._on_tagbutton_onclick",
      "params": [
        "obj",
        "evt"
      ],
      "calls": [
        "root_comp._on_tagbutton_onclick"
      ]
    },
    {
      "name": "_pMultiComboTagButtonControl._setEventHandlerToTagButton",
      "params": [],
      "calls": [
        "this._setEventHandler"
      ]
    },
    {
      "name": "nexacro._SelectAllCheckBoxControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.CheckBox.call"
      ]
    },
    {
      "name": "_pSelectAllCheckBoxControl._on_click",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "root_comp._selectAll",
        "this.set_selected"
      ]
    },
    {
      "name": "_pSelectAllCheckBoxControl._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "nexacro.Component.prototype._apply_setfocus.call"
      ]
    },
    {
      "name": "_pSelectAllCheckBoxControl.set_selected",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_selected"
      ]
    },
    {
      "name": "_pSelectAllCheckBoxControl.on_apply_selected",
      "params": [],
      "calls": [
        "this._changeStatus",
        "this._changeUserStatus"
      ]
    },
    {
      "name": "nexacro._MultiComboListControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pMultiComboListControl.on_fire_oncloseup",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue",
        "is_select"
      ],
      "calls": [
        "checkboxset._get_rowobj_status",
        "rowobj._changeStatus",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pMultiComboListControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this.checkboxset.destroy",
        "this.multicomboedit.destroy",
        "this.selectallcheckbox.destroy"
      ]
    },
    {
      "name": "_pMultiComboListControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this.checkboxset.createCommand",
        "this.multicomboedit.createCommand",
        "this.selectallcheckbox.createCommand"
      ]
    },
    {
      "name": "_pMultiComboListControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiComboListControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pMultiComboListControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this.checkboxset._setEnable",
        "this.multicomboedit._setEnable",
        "this.selectallcheckbox._setEnable"
      ]
    },
    {
      "name": "_pMultiComboListControl._setScrollMaxPos",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiComboListControl._createPopupEditControl",
      "params": [],
      "calls": [
        "multicomboedit._setPopupContains",
        "multicomboedit.createComponent",
        "multicomboedit.set_usecontextmenu",
        "nexacro._MultiComboEditControl"
      ]
    },
    {
      "name": "_pMultiComboListControl._createCheckBoxSetControl",
      "params": [
        "ds"
      ],
      "calls": [
        "checkboxset._setPopupContains",
        "checkboxset.createComponent",
        "checkboxset.setInnerDataset",
        "checkboxset.set_codecolumn",
        "checkboxset.set_cssclass",
        "checkboxset.set_datacolumn",
        "checkboxset.set_index",
        "checkboxset.set_itemheight",
        "checkboxset.set_readonlycolumn",
        "checkboxset.set_scrollbarbarminsize",
        "checkboxset.set_scrollbarbaroutsize",
        "checkboxset.set_scrollbardecbuttonsize",
        "checkboxset.set_scrollbarincbuttonsize",
        "checkboxset.set_scrollbarsize",
        "checkboxset.set_scrollbartrackbarsize",
        "checkboxset.set_scrollbartype",
        "checkboxset.set_scrolltype",
        "nexacro._MultiComboCheckBoxSetControl",
        "this._getVScrollBarType"
      ]
    },
    {
      "name": "_pMultiComboListControl._createSelectAllCheckBoxControl",
      "params": [
        "ds"
      ],
      "calls": [
        "nexacro._SelectAllCheckBoxControl",
        "nexacro._toString",
        "selectallcheckbox._setPopupContains",
        "selectallcheckbox.createComponent",
        "selectallcheckbox.set_text"
      ]
    },
    {
      "name": "_pMultiComboListControl._createdPopupEditControl",
      "params": [],
      "calls": [
        "multicomboedit.on_created",
        "this._setEventHandlerToMultiComboEdit"
      ]
    },
    {
      "name": "_pMultiComboListControl._createdCheckBoxSetControl",
      "params": [
        "ds"
      ],
      "calls": [
        "checkboxset._setEventHandler",
        "checkboxset.on_created",
        "this._setEventHandler"
      ]
    },
    {
      "name": "_pMultiComboListControl._createdSelectAllCheckBoxControl",
      "params": [
        "ds"
      ],
      "calls": [
        "selectallcheckbox.on_created"
      ]
    },
    {
      "name": "_pMultiComboListControl._setEventHandlerToMultiComboEdit",
      "params": [],
      "calls": [
        "multicomboedit._setEventHandler",
        "this._setEventHandler"
      ]
    },
    {
      "name": "_pMultiComboListControl.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pMultiComboListControl.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "checkboxset.set_readonly",
        "multicomboedit.set_readonly",
        "selectallcheckbox.set_readonly",
        "this._changeStatus"
      ]
    },
    {
      "name": "_pMultiComboListControl.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "multicombo._apply_setfocus",
        "multicombo._setAccessibilityStatFocus"
      ]
    },
    {
      "name": "_pMultiComboListControl._recalcLayout",
      "params": [],
      "calls": [
        "checkboxset._getTextHeight",
        "checkboxset.move",
        "edit_bordersize._getBorderHeight",
        "multicomboedit._getCurrentStyleBorder",
        "multicomboedit._getCurrentStylePadding",
        "multicomboedit.move",
        "selectallcheckbox._on_getFitSize",
        "selectallcheckbox.move",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pMultiComboListControl._setSelectedSelectall",
      "params": [
        "selectall"
      ],
      "calls": [
        "this.selectallcheckbox.set_selected"
      ]
    }
  ],
  "MultiLineTextField.js": [
    {
      "name": "nexacro.MultiLineTextField",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.FieldBase.call"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_create_contents",
      "params": [],
      "calls": [
        "input_elem.setElementAutoSelect",
        "input_elem.setElementAutoSkip",
        "input_elem.setElementCSSMapInfo",
        "input_elem.setElementInputMode",
        "input_elem.setElementMaxLength",
        "input_elem.setElementPadding",
        "input_elem.setElementReadonly",
        "input_elem.setElementTextAlign",
        "input_elem.setElementTextDecoration",
        "input_elem.setElementWordWrap",
        "nexacro.FieldBase.prototype.on_create_contents.call",
        "nexacro._EditUndoStack",
        "this._getCSSStyleValue",
        "this._getInputElement",
        "this.on_apply_scrollbarbarminsize",
        "this.on_apply_scrollbarbaroutsize",
        "this.on_apply_scrollbardecbuttonsize",
        "this.on_apply_scrollbarincbuttonsize",
        "this.on_apply_scrollbarsize",
        "this.on_apply_scrollbartrackbarsize",
        "this.on_apply_scrollbartype",
        "this.on_apply_scrollindicatorsize",
        "this.on_apply_scrolltype",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.FieldBase.prototype.on_created_contents.call",
        "this._getCSSStyleValue",
        "this._getInputElement",
        "this._hscrollbartype.indexOf",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._setAccessibilityFlagMultiLine",
        "this._setAccessibilityFlagReadOnly",
        "this.on_apply_padding",
        "this.on_apply_scrollbartype",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_destroy_contents",
      "params": [],
      "calls": [
        "undostack.destroy"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_create_contents_command",
      "params": [],
      "calls": [
        "nexacro.FieldBase.prototype.on_create_contents_command.call",
        "this._getCSSStyleValue",
        "this._hscrollbartype.indexOf",
        "this.on_apply_padding"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_after_created_ext",
      "params": [],
      "calls": [
        "this.LabelFor",
        "this._getInputElement",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._setAccessibilityFlagMultiLine",
        "this._setAccessibilityFlagReadOnly",
        "this._setEventHandlerToBox",
        "this.on_apply_readonly",
        "this.on_apply_scrollbartype"
      ]
    },
    {
      "name": "_pMultiLineTextField._setEventHandlerToBox",
      "params": [],
      "calls": [
        "box._setEventHandler"
      ]
    },
    {
      "name": "_pMultiLineTextField._getInputElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiLineTextField._apply_setfocus",
      "params": [
        "evt_name",
        "self_flag"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.on_apply_force_imeSet",
        "input_elem.on_apply_imeSet",
        "input_elem.setElementFocus",
        "nexacro._needAdjustScrollPosition",
        "nexacro._notifyAccessibilityInputElement",
        "this._adjust_scrollPosition",
        "this._getAccessibilityReadLabel",
        "this._getInputElement",
        "this._getWindow",
        "this._isComponentKeydownAction"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "input_elem.getElementCaretPos",
        "input_elem.setElementSetSelect",
        "this._convertValueType",
        "this._getInputElement",
        "this._setValue",
        "this._undostack.clear"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "box._setEnable",
        "input_elem.setElementEnable",
        "this._getCSSStyleValue",
        "this._isEnable"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.getElementText",
        "input_elem.setElementText",
        "input_elem.setElementValue",
        "this._getInputElement",
        "this._isContainsText",
        "this._isFocused",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._refreshLabel",
        "this._setCharCount",
        "this._setLabelFloating",
        "this._undostack.push",
        "this._updateAccessibilityLabel"
      ]
    },
    {
      "name": "_pMultiLineTextField._isContainsText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiLineTextField.on_apply_readonly",
      "params": [],
      "calls": [
        "input_elem.setElementReadonly",
        "this._box._changeStatus",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_scrollbartype",
      "params": [],
      "calls": [
        "this._box.set_scrollbartype"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_scrolltype",
      "params": [],
      "calls": [
        "this._box.set_scrolltype"
      ]
    },
    {
      "name": "_pMultiLineTextField.set_scrollbarsize",
      "params": [
        "scrollbarsize"
      ],
      "calls": [
        "this.on_apply_scrollbarsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_scrollbarsize",
      "params": [],
      "calls": [
        "this._box.set_scrollbarsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.set_scrollbarbarminsize",
      "params": [
        "scrollbarbarminsize"
      ],
      "calls": [
        "this.on_apply_scrollbarbarminsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_scrollbarbarminsize",
      "params": [],
      "calls": [
        "this._box.set_scrollbarbarminsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.set_scrollbarbaroutsize",
      "params": [
        "scrollbarbaroutsize"
      ],
      "calls": [
        "this.on_apply_scrollbarbaroutsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_scrollbarbaroutsize",
      "params": [],
      "calls": [
        "this._box.set_scrollbarbaroutsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.set_scrollbardecbuttonsize",
      "params": [
        "scrollbardecbuttonsize"
      ],
      "calls": [
        "this.on_apply_scrollbardecbuttonsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_scrollbardecbuttonsize",
      "params": [],
      "calls": [
        "this._box.set_scrollbardecbuttonsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.set_scrollbarincbuttonsize",
      "params": [
        "scrollbarincbuttonsize"
      ],
      "calls": [
        "this.on_apply_scrollbarincbuttonsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_scrollbarincbuttonsize",
      "params": [],
      "calls": [
        "this._box.set_scrollbarincbuttonsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.set_scrollbarbaroutsize",
      "params": [
        "scrollbarbaroutsize"
      ],
      "calls": [
        "this.on_apply_scrollbarbaroutsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_scrollbarbaroutsize",
      "params": [],
      "calls": [
        "this._box.set_scrollbarbaroutsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.set_scrollbartrackbarsize",
      "params": [
        "scrollbartrackbarsize"
      ],
      "calls": [
        "this.on_apply_scrollbartrackbarsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_scrollbartrackbarsize",
      "params": [],
      "calls": [
        "this._box.set_scrollbartrackbarsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.set_scrollindicatorsize",
      "params": [
        "scrollindicatorsize"
      ],
      "calls": [
        "this.on_apply_scrollindicatorsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_scrollindicatorsize",
      "params": [],
      "calls": [
        "this._box.set_scrollindicatorsize"
      ]
    },
    {
      "name": "_pMultiLineTextField.set_dragscrolltype",
      "params": [
        "v"
      ],
      "calls": [
        "dragscrolltype_enum.indexOf",
        "this._box.set_dragscrolltype"
      ]
    },
    {
      "name": "_pMultiLineTextField.set_maxlength",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_maxlength"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_maxlength",
      "params": [
        "maxlength"
      ],
      "calls": [
        "input_elem.setElementMaxLength",
        "this._getInputElement",
        "this._setCharCount"
      ]
    },
    {
      "name": "_pMultiLineTextField._on_getDisplayText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiLineTextField.on_input_focus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pMultiLineTextField.on_input_compositionend",
      "params": [],
      "calls": [
        "nexacro._OnceCallbackTimer.callonce",
        "this._getInputElement",
        "this._setFocusToNextComponent"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_fire_onsetfocus",
      "params": [
        "oldobj",
        "oldreferobj",
        "from_comp",
        "from_refer_comp",
        "from_input"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "nexacro.SetFocusEventInfo",
        "nexacro._isDesktop",
        "this.onsetfocus._fireEvent"
      ]
    },
    {
      "name": "_pMultiLineTextField._cancelValue",
      "params": [],
      "calls": [
        "this._setValue"
      ]
    },
    {
      "name": "_pMultiLineTextField._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_deactivate.call",
        "this.on_deactivate_process.call"
      ]
    },
    {
      "name": "_pMultiLineTextField._confirmValue",
      "params": [],
      "calls": [
        "cur_value.substr",
        "input_elem._updateElementValue",
        "input_elem.getElementCaretPos",
        "input_elem.setElementSetSelect",
        "input_elem.setElementValue",
        "this._getInputElement",
        "this._on_value_change",
        "this._setValue"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_fire_onkillfocus",
      "params": [
        "obj",
        "fromObj"
      ],
      "calls": [
        "_win._indexOfCurrentFocusPaths",
        "input_elem.setElementBlur",
        "nexacro.Component.prototype.on_fire_onkillfocus.call",
        "nexacro._isNull",
        "this._adjust_scrollPosition",
        "this._changeUserStatus",
        "this._confirmValue",
        "this._getInputElement",
        "this._getRootWindow"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_keydown_default_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._cancelValue",
        "this._isEnable",
        "this.getSelect"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "input_elem._setElementLastSelectionRange",
        "input_elem.getElementSelectionRange",
        "nexacro.FieldBase.prototype.on_killfocus_basic_action.call"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_fire_onkillfocus",
      "params": [
        "obj",
        "fromObj"
      ],
      "calls": [
        "input_elem._updateElementValue",
        "nexacro.Component.prototype.on_fire_onkillfocus.call",
        "this._setValue"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_keydown_default_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._cancelValue",
        "this._isEnable"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "nexacro.FieldBase.prototype.on_killfocus_basic_action.call",
        "nexacro.TextArea.prototype.on_killfocus_basic_action.call"
      ]
    },
    {
      "name": "_pMultiLineTextField._adjust_scrollPosition",
      "params": [
        "input_elem",
        "evt_name"
      ],
      "calls": [
        "this._box._adjust_scrollPosition"
      ]
    },
    {
      "name": "_pMultiLineTextField._setFocusToNextComponent",
      "params": [],
      "calls": [
        "next_comp._setDefaultCaret",
        "next_comp.setFocus",
        "this._getForm",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_fire_oninput",
      "params": [],
      "calls": [
        "input_element.isComposing",
        "input_element.setElementValue",
        "nexacro.InputEventInfo",
        "this._getInputElement",
        "this._setCharCount",
        "this._setFocusToNextComponent",
        "this.oninput._fireEvent",
        "v.substr"
      ]
    },
    {
      "name": "_pMultiLineTextField.on_apply_imeSet",
      "params": [],
      "calls": [
        "input_elem._imelocale.getLocale"
      ]
    },
    {
      "name": "nexacro.MultiLineTextFieldBox",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.FieldBaseScrollableBox.call"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_create_contents",
      "params": [],
      "calls": [
        "input_elem.setElementFlexGrow",
        "input_elem.setElementVerticalAlign",
        "nexacro.SimpleTextAreaElement",
        "nexacro.TextBoxElement",
        "this._recalc_box",
        "this.getElement"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._input_element.create"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_create_contents_command",
      "params": [],
      "calls": [
        "this._input_element.createCommand"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._input_element.attachHandle",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._setAccessibilityFlagMultiLine",
        "this._setAccessibilityFlagReadOnly",
        "this.on_apply_scrollbartype"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_destroy_contents",
      "params": [],
      "calls": [
        "hscroll_animationframe.destroy",
        "input_elem.destroy",
        "vscroll_animationframe.destroy"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalc_box"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox._recalc_box",
      "params": [],
      "calls": [
        "_pScrollableControlElement._on_updateClientRect",
        "input_elem.setElementPosition",
        "input_elem.setElementSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_input_focus",
      "params": [],
      "calls": [
        "this._p_parent.on_fire_onsetfocus",
        "this._p_parent.on_input_focus"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_input_compositionend",
      "params": [],
      "calls": [
        "this._p_parent.on_input_compositionend"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_keyinput_basic_action",
      "params": [
        "input_text"
      ],
      "calls": [
        "this._p_parent.on_keyinput_basic_action"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox._on_input_compositionend",
      "params": [
        "value",
        "_pos"
      ],
      "calls": [
        "this._p_parent._on_input_compositionend"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_click_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_click_basic_action"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_fire_onhscroll",
      "params": [
        "eventid",
        "pos",
        "strType",
        "evtkind"
      ],
      "calls": [
        "this._p_parent.on_fire_onhscroll"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_fire_onvscroll",
      "params": [
        "eventid",
        "pos",
        "strType",
        "evtkind"
      ],
      "calls": [
        "this._p_parent.on_fire_onvscroll"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_fire_onmousewheel",
      "params": [
        "eventid",
        "pos",
        "strType",
        "evtkind"
      ],
      "calls": [
        "this._p_parent.on_fire_onvscroll"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_fire_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_onmousewheel"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_fire_sys_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_sys_onmousewheel"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_fire_user_onmousewheel",
      "params": [
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_user_onmousewheel"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox._on_contextmenu_default_action",
      "params": [],
      "calls": [
        "nexacro._checkShowContextMenu"
      ]
    },
    {
      "name": "_pMultiLineTextFieldBox.on_apply_imeSet",
      "params": [],
      "calls": [
        "multilinetextField.on_apply_imeSet"
      ]
    }
  ],
  "Paginator.js": [
    {
      "name": "nexacro.PageChangeEventInfo",
      "params": [
        "obj",
        "id",
        "prepage",
        "postpage"
      ],
      "calls": []
    },
    {
      "name": "nexacro.Paginator",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "this._setFlingScrollBezier",
        "this._setFlingScrollMaxDistance"
      ]
    },
    {
      "name": "_pPaginator._vibrate",
      "params": [],
      "calls": [
        "navigator.vibrate"
      ]
    },
    {
      "name": "_pPaginator.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.Button",
        "this._firstButton._setControl",
        "this._firstButton._setEventHandler",
        "this._firstButton.createComponent",
        "this._firstButton.set_text",
        "this._lastButton._setControl",
        "this._lastButton._setEventHandler",
        "this._lastButton.createComponent",
        "this._lastButton.set_text",
        "this._nextButton._setControl",
        "this._nextButton._setEventHandler",
        "this._nextButton.createComponent",
        "this._nextButton.set_text",
        "this._prevButton._setControl",
        "this._prevButton._setEventHandler",
        "this._prevButton.createComponent",
        "this._prevButton.set_text",
        "this._updateButtons",
        "this.getElement"
      ]
    },
    {
      "name": "_pPaginator._updateButtons",
      "params": [
        "create_only"
      ],
      "calls": [
        "button.destroy",
        "nexacro.Button",
        "nexacro.Component.prototype._on_focus.call",
        "page_btn._setControl",
        "page_btn._setEventHandler",
        "page_btn.createComponent",
        "page_btn.set_text",
        "this._doSelect",
        "this._recalcLayout",
        "this.button._on_getFitSize",
        "this.button.move"
      ]
    },
    {
      "name": "page_btn.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "page_btn._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call"
      ]
    },
    {
      "name": "_pPaginator.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "button.on_created",
        "this._firstButton.on_created",
        "this._lastButton.on_created",
        "this._nextButton.on_created",
        "this._prevButton.on_created",
        "this.on_apply_pagesiblingmaxcount"
      ]
    },
    {
      "name": "_pPaginator.on_create_contents_command",
      "params": [],
      "calls": [
        "button.createCommand"
      ]
    },
    {
      "name": "_pPaginator.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "button.attachHandle",
        "this._firstButton.on_created",
        "this._lastButton.on_created",
        "this._nextButton.on_created",
        "this._prevButton.on_created",
        "this.on_apply_pagesiblingmaxcount"
      ]
    },
    {
      "name": "_pPaginator.destroyComponent",
      "params": [],
      "calls": [
        "button.destroy",
        "nexacro.Component.prototype.destroyComponent.call",
        "this._firstButton.destroy",
        "this._lastButton.destroy",
        "this._nextButton.destroy",
        "this._prevButton.destroy"
      ]
    },
    {
      "name": "_pPaginator.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": []
    },
    {
      "name": "_pPaginator.on_fire_onsize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_onsize.call",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pPaginator.set_datacount",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datacount"
      ]
    },
    {
      "name": "_pPaginator.on_apply_datacount",
      "params": [],
      "calls": [
        "Math.ceil",
        "this._updateButtons",
        "this.set_page"
      ]
    },
    {
      "name": "_pPaginator.set_pagesize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_pagesize"
      ]
    },
    {
      "name": "_pPaginator.on_apply_pagesize",
      "params": [],
      "calls": [
        "Math.ceil",
        "this._updateButtons"
      ]
    },
    {
      "name": "_pPaginator.set_page",
      "params": [
        "v"
      ],
      "calls": [
        "this._doSelect"
      ]
    },
    {
      "name": "_pPaginator.set_showprevnextbutton",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showfirstlastbutton"
      ]
    },
    {
      "name": "_pPaginator.on_apply_showprevnextbutton",
      "params": [],
      "calls": [
        "this._updateButtons"
      ]
    },
    {
      "name": "_pPaginator.set_showfirstlastbutton",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showfirstlastbutton"
      ]
    },
    {
      "name": "_pPaginator.on_apply_showfirstlastbutton",
      "params": [],
      "calls": [
        "this._updateButtons"
      ]
    },
    {
      "name": "_pPaginator.set_prevbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_prevbuttontext"
      ]
    },
    {
      "name": "_pPaginator.on_apply_prevbuttontext",
      "params": [],
      "calls": [
        "this._prevButton.set_text",
        "this._updateButtons"
      ]
    },
    {
      "name": "_pPaginator.set_nextbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_nextbuttontext"
      ]
    },
    {
      "name": "_pPaginator.on_apply_nextbuttontext",
      "params": [],
      "calls": [
        "this._nextButton.set_text",
        "this._updateButtons"
      ]
    },
    {
      "name": "_pPaginator.set_firstbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_firstbuttontext"
      ]
    },
    {
      "name": "_pPaginator.on_apply_firstbuttontext",
      "params": [],
      "calls": [
        "this._firstButton.set_text",
        "this._updateButtons"
      ]
    },
    {
      "name": "_pPaginator.set_lastbuttontext",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_lastbuttontext"
      ]
    },
    {
      "name": "_pPaginator.on_apply_lastbuttontext",
      "params": [],
      "calls": [
        "this._lastButton.set_text",
        "this._updateButtons"
      ]
    },
    {
      "name": "_pPaginator.set_navibuttongap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_navibuttongap"
      ]
    },
    {
      "name": "_pPaginator.on_apply_navibuttongap",
      "params": [
        "v"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pPaginator.set_pagebuttongap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_pagebuttongap"
      ]
    },
    {
      "name": "_pPaginator.on_apply_pagebuttongap",
      "params": [
        "v"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pPaginator.set_pagesiblingmaxcount",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_pagesiblingmaxcount"
      ]
    },
    {
      "name": "_pPaginator.on_apply_pagesiblingmaxcount",
      "params": [
        "v"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pPaginator.set_outsidegap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_outsidegap"
      ]
    },
    {
      "name": "_pPaginator.on_apply_outsidegap",
      "params": [
        "v"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pPaginator._doSelect",
      "params": [
        "postpage",
        "no_focus_act"
      ],
      "calls": [
        "button._changeUserStatus",
        "nexacro._toInt",
        "this._doFocus",
        "this._getPageSlot",
        "this.on_fire_onpagechanged"
      ]
    },
    {
      "name": "_pPaginator._doFocus",
      "params": [
        "postpage",
        "no_focus_act"
      ],
      "calls": [
        "nexacro._toInt",
        "pagebutton.setFocus",
        "this._getPageSlot",
        "this._isFocused",
        "this._movePage"
      ]
    },
    {
      "name": "_pPaginator._isFocused",
      "params": [],
      "calls": [
        "form._isMainForm",
        "lastfocus._getLastFocused",
        "modalframe._contains",
        "this._find_lastFocused",
        "this._getForm",
        "this._getOwnerFrame",
        "this._getWindow"
      ]
    },
    {
      "name": "_pPaginator._recalcLayout",
      "params": [
        "moving_calc",
        "resize_calc",
        "recursive"
      ],
      "calls": [
        "control_elem._setAttachClientLeft",
        "control_elem._setAttachClientRight",
        "control_elem.setElementHScrollPos",
        "control_elem.setElementScrollMaxSize",
        "this._calcClientWidth",
        "this._firstButton._on_getFitSize",
        "this._firstButton.move",
        "this._firstButton.set_enable",
        "this._firstButton.set_visible",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getScreenLeftSlot",
        "this._isContentsClipping",
        "this._isNcClipping",
        "this._lastButton._on_getFitSize",
        "this._lastButton.move",
        "this._lastButton.set_visible",
        "this._nextButton._on_getFitSize",
        "this._nextButton.move",
        "this._nextButton.set_visible",
        "this._prevButton._on_getFitSize",
        "this._prevButton.move",
        "this._prevButton.set_enable",
        "this._prevButton.set_visible",
        "this._recalcLayout",
        "this._scrollTo",
        "this.getElement",
        "this.getHScrollPos"
      ]
    },
    {
      "name": "_pPaginator._calcClientWidth",
      "params": [],
      "calls": [
        "Math.min",
        "this._getScreenLeftSlot"
      ]
    },
    {
      "name": "_pPaginator._isContentsClipping",
      "params": [
        "client_left"
      ],
      "calls": [
        "this._getClientLeft"
      ]
    },
    {
      "name": "_pPaginator._isNcClipping",
      "params": [],
      "calls": [
        "this._getClientLeft",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pPaginator._isShowPage",
      "params": [
        "page"
      ],
      "calls": [
        "this._getClientWidth",
        "this._getPageSlot",
        "this._getScrollLeft"
      ]
    },
    {
      "name": "_pPaginator._animateAdjustScroll",
      "params": [
        "kind",
        "no_ani",
        "no_fire"
      ],
      "calls": [
        "Math.min",
        "Math.pow",
        "aniframe.start",
        "nexacro.AnimationFrame",
        "performance.now",
        "pthis._animateAdjustScrollEnd",
        "pthis._scrollTo",
        "this._aniframe_adjust.destroy",
        "this._animateAdjustScrollEnd",
        "this._getScreenLeftSlot",
        "this.getHScrollPos"
      ]
    },
    {
      "name": "_pPaginator._animateAdjustScrollEnd",
      "params": [
        "kind",
        "no_fire"
      ],
      "calls": [
        "this._vibrate"
      ]
    },
    {
      "name": "_pPaginator._movePage",
      "params": [
        "page"
      ],
      "calls": [
        "Math.floor",
        "this._getPageSlot",
        "this._scrollTo"
      ]
    },
    {
      "name": "_pPaginator._getPageSlot",
      "params": [
        "page"
      ],
      "calls": []
    },
    {
      "name": "_pPaginator.on_fire_sys_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "button.click",
        "this._doFocus",
        "this._getPageSlot"
      ]
    },
    {
      "name": "_pPaginator.on_fire_onpagechanged",
      "params": [
        "prev_page",
        "post_page"
      ],
      "calls": [
        "nexacro.PageChangeEventInfo",
        "this.onpagechanged._fireEvent"
      ]
    },
    {
      "name": "_pPaginator._setDSEventHandlers",
      "params": [
        "ds"
      ],
      "calls": [
        "ds._setEventHandler"
      ]
    },
    {
      "name": "_pPaginator._removeDSEventHandlers",
      "params": [
        "ds"
      ],
      "calls": [
        "ds._removeEventHandler"
      ]
    },
    {
      "name": "_pPaginator.on_dsnotify_onload",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "Math.ceil",
        "this._updateButtons"
      ]
    },
    {
      "name": "_pPaginator.on_dsnotify_onrowsetchanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "Math.ceil",
        "this._updateButtons"
      ]
    },
    {
      "name": "_pPaginator.on_notify_first_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._doSelect",
        "this._movePage"
      ]
    },
    {
      "name": "_pPaginator.on_notify_last_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._doSelect",
        "this._movePage"
      ]
    },
    {
      "name": "_pPaginator.on_notify_prev_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._doSelect",
        "this._getPageSlot",
        "this._getScreenLeftSlot",
        "this._scrollTo"
      ]
    },
    {
      "name": "_pPaginator.on_notify_next_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._doSelect",
        "this._getPageSlot",
        "this._getScreenLeftSlot",
        "this._scrollTo"
      ]
    },
    {
      "name": "_pPaginator._on_repeat",
      "params": [
        "fromComp",
        "x",
        "y"
      ],
      "calls": [
        "this.on_notify_next_onclick",
        "this.on_notify_prev_onclick"
      ]
    },
    {
      "name": "_pPaginator.on_notify_page_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._doSelect"
      ]
    },
    {
      "name": "_pPaginator.on_notify_page_onfocus",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._doFocus"
      ]
    },
    {
      "name": "_pPaginator._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call"
      ]
    },
    {
      "name": "_pPaginator._on_killfocus",
      "params": [
        "new_focus",
        "new_ref_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_killfocus.call"
      ]
    },
    {
      "name": "_pPaginator.on_fire_sys_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._animateAdjustScroll"
      ]
    },
    {
      "name": "_pPaginator.on_fire_sys_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._animateAdjustScroll"
      ]
    },
    {
      "name": "_pPaginator.on_touchend_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_touchend_basic_action.call",
        "this._aniframe_adjust.stop",
        "this._animateAdjustScroll",
        "this.getHScrollPos"
      ]
    },
    {
      "name": "_pPaginator.on_slidestart_default_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": [
        "this._aniframe_adjust.stop",
        "this.getHScrollPos"
      ]
    },
    {
      "name": "_pPaginator.on_slideend_default_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": [
        "this._aniframe_adjust.stop",
        "this._animateAdjustScroll",
        "this.getHScrollPos"
      ]
    },
    {
      "name": "_pPaginator.on_flingend_default_action",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "refer_comp"
      ],
      "calls": [
        "this._animateAdjustScroll",
        "this.getHScrollPos"
      ]
    },
    {
      "name": "_pPaginator._getScreenLeftSlot",
      "params": [
        "last"
      ],
      "calls": [
        "this.getHScrollPos"
      ]
    },
    {
      "name": "_pPaginator._updateScreenLeftSlot",
      "params": [],
      "calls": [
        "this.getHScrollPos"
      ]
    },
    {
      "name": "_pPaginator.on_fire_sys_onfling",
      "params": [
        "elem",
        "touch_manager",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "Math.abs",
        "this._getScrollable",
        "this._scrollBy",
        "this.getHScrollPos",
        "this.getVScrollPos"
      ]
    },
    {
      "name": "_pPaginator.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp",
        "scroll_start"
      ],
      "calls": [
        "Math.abs",
        "this._getZoom",
        "this._scrollTo",
        "this.getHScrollPos",
        "this.getVScrollPos"
      ]
    },
    {
      "name": "_pPaginator._setHscrollPos",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt",
        "this._updateScreenLeftSlot",
        "this._vibrate"
      ]
    },
    {
      "name": "_pPaginator._scrollTo",
      "params": [
        "hpos",
        "vpos",
        "bapplyscrollbar",
        "bautohidetimer",
        "evttype",
        "evtkind"
      ],
      "calls": [
        "nexacro.Component.prototype._scrollTo.call",
        "this._recalcLayout"
      ]
    }
  ],
  "Panel.js": [
    {
      "name": "nexacro.Panel",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Collection",
        "nexacro.Component.call",
        "this._init"
      ]
    },
    {
      "name": "_pPanel.on_create_contents",
      "params": [],
      "calls": [
        "comp.createComponent",
        "this._setDefaultLayout",
        "this._setGroup",
        "this._setInnerFlexibleFlag",
        "this._setLayoutContainerProps"
      ]
    },
    {
      "name": "_pPanel.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "comp.on_created",
        "this._applyElementVisible",
        "this._getWindow"
      ]
    },
    {
      "name": "_pPanel.on_create_contents_command",
      "params": [],
      "calls": [
        "comp.createCommand",
        "item._getComponent"
      ]
    },
    {
      "name": "_pPanel.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._applyElementVisible"
      ]
    },
    {
      "name": "_pPanel._on_apply_LayoutSpacing",
      "params": [],
      "calls": [
        "control_elem._setElementLayoutSpacing",
        "nexacro.PaddingObject",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel._recalcitemPosition",
      "params": [],
      "calls": [
        "item._attachPanel",
        "item._on_apply_itemLayoutProperties",
        "item._on_apply_itemPosition",
        "this.getItemIndex"
      ]
    },
    {
      "name": "_pPanel.on_after_created",
      "params": [],
      "calls": [
        "this._on_apply_fittocontents",
        "this._on_apply_layoutProp",
        "this._recalcitemPosition",
        "this._recalculateLayout"
      ]
    },
    {
      "name": "_pPanel.destroy",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "item._destroy",
        "parent._update_position_fluid",
        "this._getForm",
        "this._isFluidContainer",
        "this.destroyComponent"
      ]
    },
    {
      "name": "_pPanel._destroy",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "comp._destroy",
        "this._isFluidContainer",
        "this.destroyComponent"
      ]
    },
    {
      "name": "_pPanel.on_destroy_contents",
      "params": [],
      "calls": [
        "item.destroy"
      ]
    },
    {
      "name": "_pPanel.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._on_change_containerRect_fluid"
      ]
    },
    {
      "name": "_pPanel._on_change_containerRect_static",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "comp._update_position",
        "this._isRtl"
      ]
    },
    {
      "name": "_pPanel._on_change_containerRect_fluid",
      "params": [],
      "calls": [
        "comp._update_position",
        "this._isRtl",
        "this._recalculateLayout"
      ]
    },
    {
      "name": "_pPanel._on_init",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPanel._init",
      "params": [],
      "calls": [
        "this._initLayoutManager"
      ]
    },
    {
      "name": "_pPanel._setContents",
      "params": [
        "contents"
      ],
      "calls": [
        "item.getAttribute",
        "nexacro._parseXMLDocument",
        "panelitem._attachPanel",
        "panelitem._on_apply_itemLayoutProperties",
        "panelitem._on_apply_itemPosition",
        "this._addItem",
        "this._clear",
        "this._getIndexByComponetid",
        "this._recalculateLayout",
        "this.addItem",
        "this.getItemIndex"
      ]
    },
    {
      "name": "_pPanel.set_type",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_type",
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pPanel.on_apply_type",
      "params": [],
      "calls": [
        "control_elem._setElementLayoutType",
        "layout.set_type",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_spacing",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.PaddingObject",
        "this.on_apply_spacing"
      ]
    },
    {
      "name": "_pPanel.on_apply_spacing",
      "params": [],
      "calls": [
        "control_elem._setElementLayoutSpacing",
        "layout.set_spacing",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_horizontalgap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_horizontalgap"
      ]
    },
    {
      "name": "_pPanel.on_apply_horizontalgap",
      "params": [],
      "calls": [
        "control_elem._setElementLayoutHorizontalGap",
        "layout.set_horizontalgap",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_verticalgap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_verticalgap"
      ]
    },
    {
      "name": "_pPanel.on_apply_verticalgap",
      "params": [],
      "calls": [
        "control_elem._setElementLayoutVerticalGap",
        "layout.set_verticalgap",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_flexwrap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_flexwrap",
        "wrap_enum.indexOf"
      ]
    },
    {
      "name": "_pPanel.on_apply_flexwrap",
      "params": [],
      "calls": [
        "control_elem._setElementFlexWrap",
        "layout.set_flexwrap",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_flexmainaxisalign",
      "params": [
        "v"
      ],
      "calls": [
        "align_enum.indexOf",
        "this._prop_map_layoutalign_basic.concat",
        "this.on_apply_flexmainaxisalign"
      ]
    },
    {
      "name": "_pPanel.on_apply_flexmainaxisalign",
      "params": [],
      "calls": [
        "control_elem._setElementFlexMainAxisAlign",
        "layout.set_flexmainaxisalign",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_flexcrossaxisalign",
      "params": [
        "v"
      ],
      "calls": [
        "align_enum.indexOf",
        "this.on_apply_flexcrossaxisalign"
      ]
    },
    {
      "name": "_pPanel.on_apply_flexcrossaxisalign",
      "params": [],
      "calls": [
        "control_elem._setElementFlexCrossAxisAlign",
        "layout.set_flexcrossaxisalign",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_flexcrossaxiswrapalign",
      "params": [
        "v"
      ],
      "calls": [
        "align_enum.indexOf",
        "this._prop_map_layoutalign_basic.concat",
        "this.on_apply_flexcrossaxiswrapalign"
      ]
    },
    {
      "name": "_pPanel.on_apply_flexcrossaxiswrapalign",
      "params": [],
      "calls": [
        "control_elem._setElementFlexCrossAxisWrapAlign",
        "layout.set_flexcrossaxiswrapalign",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_tabletemplate",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tabletemplate"
      ]
    },
    {
      "name": "_pPanel._setDefaultTabletemplate",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pPanel.on_apply_tabletemplate",
      "params": [],
      "calls": [
        "control_elem._setElementTableTemplate",
        "layout.set_tabletemplate",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_tabletemplatearea",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tabletemplatearea"
      ]
    },
    {
      "name": "_pPanel.on_apply_tabletemplatearea",
      "params": [
        "v"
      ],
      "calls": [
        "control_elem._setElementTableTemplateArea",
        "layout.set_tabletemplatearea",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_tablecellmovingtype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tablecellmovingtype",
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pLayout.on_apply_tablecellmovingtype",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isDesignMode",
        "this.on_apply_tabletemplate"
      ]
    },
    {
      "name": "_pPanel.set_tabledirection",
      "params": [
        "v"
      ],
      "calls": [
        "direction_enum.indexOf",
        "this.on_apply_tabledirection"
      ]
    },
    {
      "name": "_pPanel.on_apply_tabledirection",
      "params": [],
      "calls": [
        "control_elem._setElementTableDirection",
        "layout.set_tabledirection",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_tablecellalign",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tablecellalign"
      ]
    },
    {
      "name": "_pPanel.on_apply_tablecellalign",
      "params": [
        "v"
      ],
      "calls": [
        "control_elem._setElementTableCellAlign",
        "layout.set_tablecellalign",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.set_tablecellincompalign",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_tablecellincompalign"
      ]
    },
    {
      "name": "_pPanel.on_apply_tablecellincompalign",
      "params": [],
      "calls": [
        "control_elem._setElementTableCellinCompAlign",
        "layout.set_tablecellincompalign",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel.on_apply_fittocontents",
      "params": [],
      "calls": [
        "manager.calcLayout",
        "manager.setContainerFitType",
        "nexacro._getLayoutManager",
        "this._on_apply_fittocontents"
      ]
    },
    {
      "name": "_pPanel.on_apply_prop_enable",
      "params": [
        "enable"
      ],
      "calls": [
        "comp._setEnable",
        "form._applyBinditemEnable",
        "form._getParentForm",
        "item._getComponent",
        "nexacro.Component.prototype.on_apply_prop_enable.call",
        "this._getRootForm"
      ]
    },
    {
      "name": "_pPanel.addItem",
      "params": [
        "id",
        "componentid"
      ],
      "calls": [
        "item._attachPanel",
        "item._on_apply_itemLayoutProperties",
        "item._on_apply_itemPosition",
        "this._addItem",
        "this._getIndexByComponetid",
        "this.getItemIndex"
      ]
    },
    {
      "name": "_pPanel._getItembyIndex",
      "params": [
        "idx"
      ],
      "calls": [
        "items.get_id"
      ]
    },
    {
      "name": "_pPanel.removeItem",
      "params": [
        "itemid"
      ],
      "calls": [
        "item._getComponent",
        "this._p_items.delete_item",
        "this._update_removeitem"
      ]
    },
    {
      "name": "_pPanel.insertItem",
      "params": [
        "idx",
        "id",
        "componentid"
      ],
      "calls": [
        "item._attachPanel",
        "item._on_apply_itemPosition",
        "this._getIndexByComponetid",
        "this._insertItem",
        "this.getItemIndex"
      ]
    },
    {
      "name": "_pPanel.getItemCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPanel.getItem",
      "params": [
        "itemid"
      ],
      "calls": []
    },
    {
      "name": "_pPanel.getItemIDByComponent",
      "params": [
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pPanel.getItemIndex",
      "params": [
        "itemid"
      ],
      "calls": [
        "items.indexOf"
      ]
    },
    {
      "name": "_pPanel.getComponentByID",
      "params": [
        "itemid"
      ],
      "calls": [
        "item._getComponent",
        "items.indexOf",
        "this._getItembyIndex"
      ]
    },
    {
      "name": "_pPanel.setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._setContents"
      ]
    },
    {
      "name": "_pPanel._refreshControl",
      "params": [],
      "calls": [
        "item.move",
        "manager.getLayoutType",
        "nexacro._getLayoutManager",
        "this._getTablecellarea",
        "this.move",
        "this.resize",
        "this.set_tablecellarea"
      ]
    },
    {
      "name": "_pPanel._recalculateLayout",
      "params": [],
      "calls": [
        "manager.calcFluidLayoutContents",
        "nexacro._getLayoutManager",
        "this._on_apply_LayoutSpacing"
      ]
    },
    {
      "name": "_pPanel._getTablecellarea",
      "params": [
        "tablecellarea"
      ],
      "calls": [
        "cell_pos.split",
        "cell_pos.trim",
        "coord.forEach",
        "merge_pos.push",
        "tablecellarea.split",
        "tmp.forEach",
        "tmp.push",
        "tmp.shift"
      ]
    },
    {
      "name": "_pPanel._getIndexByComponetid",
      "params": [
        "id"
      ],
      "calls": []
    },
    {
      "name": "_pPanel._addItem",
      "params": [
        "id",
        "componentid"
      ],
      "calls": [
        "item.set_componentid",
        "nexacro.PanelItem",
        "this._p_items.add_item"
      ]
    },
    {
      "name": "_pPanel._insertItem",
      "params": [
        "idx",
        "id",
        "componentid"
      ],
      "calls": [
        "item.set_componentid",
        "nexacro.PanelItem",
        "this._p_items.insert_item"
      ]
    },
    {
      "name": "_pPanel._removeItem",
      "params": [
        "componentid"
      ],
      "calls": [
        "this._p_items.delete_item"
      ]
    },
    {
      "name": "_pPanel._getNewPanelItemId",
      "params": [],
      "calls": [
        "this.getComponentByID"
      ]
    },
    {
      "name": "_pPanel._initLayoutManager",
      "params": [],
      "calls": [
        "manager.createLayoutContainerInfo",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pPanel._setDefaultLayout",
      "params": [],
      "calls": [
        "obj.set_type",
        "this._addLayout"
      ]
    },
    {
      "name": "_pPanel._addLayout",
      "params": [
        "name",
        "obj"
      ],
      "calls": [
        "manager.addLayoutList",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pPanel._unGroup",
      "params": [],
      "calls": [
        "this._clear",
        "this.destroyComponent"
      ]
    },
    {
      "name": "_pPanel._clear",
      "params": [
        "is_ungroup"
      ],
      "calls": [
        "item._getComponent",
        "parent.addItem",
        "this._getNewPanelItemId",
        "this._p_items.delete_item",
        "this._update_removeitem"
      ]
    },
    {
      "name": "_pPanel._update_removeitem",
      "params": [
        "comp"
      ],
      "calls": [
        "comp._restorePosition",
        "comp._setEnable",
        "comp.getElement",
        "comp_control_element._removeFromContainer",
        "comp_control_element.setElementLayoutFluidPos",
        "form._addChildToContainer",
        "form.getElement",
        "manager.calcFluidLayoutContents",
        "manager.getLayoutType",
        "nexacro._getLayoutManager",
        "this._getForm",
        "this._setGroup"
      ]
    },
    {
      "name": "_pPanel._setGroup",
      "params": [
        "target",
        "flag"
      ],
      "calls": [
        "manager.updateLayoutContainerInfo",
        "nexacro._getLayoutManager"
      ]
    },
    {
      "name": "_pPanel._setLayoutContentsMaxRect",
      "params": [
        "w",
        "h"
      ],
      "calls": []
    },
    {
      "name": "_pPanel._getLayoutContentsMaxRect",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPanel._getComponentsByLayoutorder",
      "params": [],
      "calls": [
        "ar.reduce",
        "this._getComponents"
      ]
    },
    {
      "name": "_pPanel._getLayoutOrderFirst",
      "params": [],
      "calls": [
        "this._getComponentsByLayoutorder"
      ]
    },
    {
      "name": "_pPanel._getLayoutOrderLast",
      "params": [],
      "calls": [
        "this._getComponentsByLayoutorder"
      ]
    },
    {
      "name": "_pPanel._getLayoutOrderNext",
      "params": [
        "currentid",
        "direction"
      ],
      "calls": [
        "this._getComponentsByLayoutorder"
      ]
    },
    {
      "name": "_pPanel._getComponents",
      "params": [],
      "calls": [
        "comps.add_item",
        "item._getComponent",
        "nexacro.Collection"
      ]
    },
    {
      "name": "_pPanel._on_apply_layoutProp",
      "params": [],
      "calls": [
        "control_elem._setElementFlexCrossAxisAlign",
        "control_elem._setElementFlexCrossAxisWrapAlign",
        "control_elem._setElementFlexMainAxisAlign",
        "control_elem._setElementFlexWrap",
        "control_elem._setElementLayoutHorizontalGap",
        "control_elem._setElementLayoutSpacing",
        "control_elem._setElementLayoutType",
        "control_elem._setElementLayoutVerticalGap",
        "control_elem._setElementTableCellAlign",
        "control_elem._setElementTableCellinCompAlign",
        "control_elem._setElementTableDirection",
        "control_elem._setElementTableTemplate",
        "control_elem._setElementTableTemplateArea",
        "layout.set_flexcrossaxisalign",
        "layout.set_flexcrossaxiswrapalign",
        "layout.set_flexmainaxisalign",
        "layout.set_flexwrap",
        "layout.set_horizontalgap",
        "layout.set_spacing",
        "layout.set_tablecellalign",
        "layout.set_tablecellincompalign",
        "layout.set_tabledirection",
        "layout.set_tabletemplate",
        "layout.set_tabletemplatearea",
        "layout.set_type",
        "layout.set_verticalgap",
        "this._recalculateLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel._areConsecutive",
      "params": [
        "componentids"
      ],
      "calls": [
        "arr.push",
        "arr.sort",
        "arrorw.push",
        "comp._getTablecellareaCoordinate",
        "componentids.replace",
        "form_comps.indexOf",
        "manager.getLayoutType",
        "nexacro._getLayoutManager",
        "this._getComponents",
        "this._getIndexByComponetid"
      ]
    },
    {
      "name": "_pPanel._getSizeInfo",
      "params": [],
      "calls": [
        "this._getAdjustFitPositionHeight",
        "this._getAdjustFitPositionWidth",
        "this._getParentComponent",
        "this._on_getFitSize"
      ]
    },
    {
      "name": "_pPanel._on_getFitSize",
      "params": [],
      "calls": [
        "manager.getContentsMaxRect",
        "nexacro._getLayoutManager",
        "this._on_getFitSize_style"
      ]
    },
    {
      "name": "_pPanel._on_getFluidHorizontalContainerSize",
      "params": [
        "contents_max_rect"
      ],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getCurrentStyleBorder"
      ]
    },
    {
      "name": "_pPanel._initComponent",
      "params": [],
      "calls": [
        "this._init",
        "this._initUniqueID"
      ]
    },
    {
      "name": "_pPanel._getForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPanel._getRootForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPanel._removeChildFromContainer",
      "params": [
        "obj"
      ],
      "calls": [
        "obj.getElement",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel._addChildToContainer",
      "params": [
        "obj"
      ],
      "calls": [
        "control_element.appendChildElement",
        "obj.getElement",
        "this.getElement"
      ]
    },
    {
      "name": "_pPanel._setInnerFlexibleFlag",
      "params": [
        "is_flexible",
        "is_calc"
      ],
      "calls": []
    },
    {
      "name": "_pPanel._resetScrollPos",
      "params": [
        "target_comp",
        "left",
        "top",
        "right",
        "bottom",
        "focus_direction"
      ],
      "calls": [
        "parent._resetScrollPos",
        "this.getElement"
      ]
    },
    {
      "name": "nexacro.PanelItem",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro._EventSinkObject.call"
      ]
    },
    {
      "name": "_pPanelItem._destroy",
      "params": [],
      "calls": [
        "comp._destroy",
        "nexacro._EventSinkObject.prototype.destroy.call",
        "this._getComponent"
      ]
    },
    {
      "name": "_pPanelItem.set_componentid",
      "params": [
        "componentid"
      ],
      "calls": [
        "this.on_apply_componentid"
      ]
    },
    {
      "name": "_pPanelItem.on_apply_componentid",
      "params": [
        "componentid"
      ],
      "calls": [
        "panel._getForm"
      ]
    },
    {
      "name": "_pPanelItem._getComponent",
      "params": [
        "componentid"
      ],
      "calls": []
    },
    {
      "name": "_pPanelItem._attachPanel",
      "params": [
        "idx"
      ],
      "calls": [
        "_form._removeChildFromContainer",
        "comp._getForm",
        "comp._initControlElementLayoutProps",
        "comp.getElement",
        "control_elem.setParentElement",
        "manager.getLayoutType",
        "nexacro._getLayoutManager",
        "nextcomp.getElement",
        "panel._addChildToContainer",
        "panel._getForm",
        "panel._setGroup",
        "panel.getElement",
        "panel_control_elem.insertChildElement",
        "prev_panel._removeChildFromContainer",
        "prev_panel._removeItem",
        "this._getComponent",
        "this._getNextComponent"
      ]
    },
    {
      "name": "_pPanelItem._getNextComponent",
      "params": [
        "index",
        "panel"
      ],
      "calls": [
        "item._getComponent",
        "panel._getItembyIndex",
        "panel.getItemCount"
      ]
    },
    {
      "name": "_pPanelItem._on_apply_itemPosition",
      "params": [
        "brecalc"
      ],
      "calls": [
        "comp._getForm",
        "comp._initControlElementLayoutProps",
        "comp._on_apply_fittocontents",
        "comp._setAdjustPosition",
        "comp._setEnable",
        "comp._update_position_fluid",
        "comp.getElement",
        "control_elem._setElementLayoutPosition",
        "control_elem.clearElementPosition",
        "control_elem.setElementSize",
        "manager.calcFluidLayoutContents",
        "manager.getLayoutType",
        "nexacro._getLayoutManager",
        "panel._update_position_fluid",
        "this._getComponent"
      ]
    },
    {
      "name": "_pPanelItem._on_apply_itemLayoutProperties",
      "params": [],
      "calls": [
        "comp._refreshLayoutInfo",
        "this._getComponent"
      ]
    }
  ],
  "Plugin.js": [
    {
      "name": "nexacro.Plugin",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Collection",
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pPlugin.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.set_visible.call",
        "nexacro._toBoolean",
        "obj_elem.setElementVisible"
      ]
    },
    {
      "name": "_pPlugin.on_create_contents",
      "params": [],
      "calls": [
        "events.get_id",
        "events.get_item",
        "nexacro.PluginElement",
        "obj_elem.addEventHandler",
        "obj_elem.setElementParam",
        "obj_elem.setElementSize",
        "params.get_id",
        "params.get_item",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.getElement",
        "this.on_apply_adjustalpha",
        "this.on_apply_archive",
        "this.on_apply_classid",
        "this.on_apply_classid64",
        "this.on_apply_code",
        "this.on_apply_codebase",
        "this.on_apply_license",
        "this.on_apply_lpkpath",
        "this.on_apply_mimetype",
        "this.on_apply_pluginpage",
        "this.on_apply_pluginsrc",
        "this.on_apply_plugintype",
        "this.on_apply_popupstyle",
        "this.on_apply_usepersistdata",
        "this.on_apply_windowed"
      ]
    },
    {
      "name": "_pPlugin.on_create_contents_command",
      "params": [],
      "calls": [
        "this._obj_elem.createCommand"
      ]
    },
    {
      "name": "_pPlugin.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._obj_elem.attachHandle"
      ]
    },
    {
      "name": "_pPlugin.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "obj_elem.create",
        "obj_elem.initEvent",
        "obj_elem.setElementVisible"
      ]
    },
    {
      "name": "_pPlugin.on_destroy_contents",
      "params": [],
      "calls": [
        "obj_elem.destroy"
      ]
    },
    {
      "name": "_pPlugin.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "nexacro.Component.prototype.on_update_position.call",
        "obj_elem.on_update_position"
      ]
    },
    {
      "name": "_pPlugin._apply_setfocus",
      "params": [
        "/*focus*/"
      ],
      "calls": [
        "obj_elem.setElementFocus"
      ]
    },
    {
      "name": "_pPlugin.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "obj_elem.setElementSize"
      ]
    },
    {
      "name": "_pPlugin._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "doc.getElementsByTagName",
        "nexacro._parseXMLDocument",
        "obj_elem.setElementParam",
        "param.getAttribute",
        "str.indexOf",
        "this._params.add_item",
        "this._params.clear"
      ]
    },
    {
      "name": "_pPlugin.set_contents",
      "params": [
        "str"
      ],
      "calls": [
        "this._setContents"
      ]
    },
    {
      "name": "_pPlugin.set_classid",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_classid"
      ]
    },
    {
      "name": "_pPlugin.on_apply_classid",
      "params": [],
      "calls": [
        "elem.setElementClassId"
      ]
    },
    {
      "name": "_pPlugin.set_classid64",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_classid64"
      ]
    },
    {
      "name": "_pPlugin.on_apply_classid64",
      "params": [],
      "calls": [
        "elem.setElementClassId64"
      ]
    },
    {
      "name": "_pPlugin.set_codebase",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_codebase"
      ]
    },
    {
      "name": "_pPlugin.on_apply_codebase",
      "params": [],
      "calls": [
        "elem.setElementCodebase"
      ]
    },
    {
      "name": "_pPlugin.set_code",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_code"
      ]
    },
    {
      "name": "_pPlugin.on_apply_code",
      "params": [],
      "calls": [
        "elem.setElementCode"
      ]
    },
    {
      "name": "_pPlugin.set_archive",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_archive"
      ]
    },
    {
      "name": "_pPlugin.on_apply_archive",
      "params": [],
      "calls": [
        "elem.setElementArchive"
      ]
    },
    {
      "name": "_pPlugin.set_mimetype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_mimetype"
      ]
    },
    {
      "name": "_pPlugin.on_apply_mimetype",
      "params": [],
      "calls": [
        "elem.setElementMIMEType"
      ]
    },
    {
      "name": "_pPlugin.set_pluginsrc",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_pluginsrc"
      ]
    },
    {
      "name": "_pPlugin.on_apply_pluginsrc",
      "params": [],
      "calls": [
        "elem.setElementPluginSrc"
      ]
    },
    {
      "name": "_pPlugin.set_plugintype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_plugintype"
      ]
    },
    {
      "name": "_pPlugin.on_apply_plugintype",
      "params": [],
      "calls": [
        "elem.setElementPluginMIMEType"
      ]
    },
    {
      "name": "_pPlugin.set_pluginpage",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_pluginpage"
      ]
    },
    {
      "name": "_pPlugin.on_apply_pluginpage",
      "params": [],
      "calls": [
        "elem.setElementPluginPage"
      ]
    },
    {
      "name": "_pPlugin.set_license",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_license"
      ]
    },
    {
      "name": "_pPlugin.on_apply_license",
      "params": [],
      "calls": [
        "elem.setElementLicense"
      ]
    },
    {
      "name": "_pPlugin.set_lpkpath",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_lpkpath"
      ]
    },
    {
      "name": "_pPlugin.on_apply_lpkpath",
      "params": [],
      "calls": [
        "elem.setElementLicenseFile"
      ]
    },
    {
      "name": "_pPlugin.set_adjustalpha",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_adjustalpha"
      ]
    },
    {
      "name": "_pPlugin.on_apply_adjustalpha",
      "params": [],
      "calls": [
        "elem.setElementAdjustAlpha"
      ]
    },
    {
      "name": "_pPlugin.set_usepersistdata",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_usepersistdata"
      ]
    },
    {
      "name": "_pPlugin.get_usepersistdata",
      "params": [
        "v"
      ],
      "calls": [
        "elem.getElementUsePersistData"
      ]
    },
    {
      "name": "_pPlugin.on_apply_usepersistdata",
      "params": [],
      "calls": [
        "elem.setElementUsePersistData"
      ]
    },
    {
      "name": "_pPlugin.set_windowed",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pPlugin.on_apply_windowed",
      "params": [],
      "calls": [
        "elem.setElementWindowed"
      ]
    },
    {
      "name": "_pPlugin.set_popupstyle",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_popupstyle"
      ]
    },
    {
      "name": "_pPlugin.on_apply_popupstyle",
      "params": [],
      "calls": [
        "elem.setElementPopupStyle"
      ]
    },
    {
      "name": "_pPlugin.install",
      "params": [],
      "calls": [
        "elem.install"
      ]
    },
    {
      "name": "_pPlugin.isInstalled",
      "params": [],
      "calls": [
        "elem.isInstalled"
      ]
    },
    {
      "name": "_pPlugin.isLoaded",
      "params": [],
      "calls": [
        "elem.isLoaded"
      ]
    },
    {
      "name": "_pPlugin.setProperty",
      "params": [
        "propId",
        "val"
      ],
      "calls": [
        "obj_elem.setElementPluginMIMEType",
        "obj_elem.setElementPluginSrc",
        "propId.toLowerCase",
        "setFn.call",
        "this._setParam"
      ]
    },
    {
      "name": "_pPlugin.getProperty",
      "params": [
        "propId"
      ],
      "calls": [
        "this._getParam"
      ]
    },
    {
      "name": "_pPlugin.callMethod",
      "params": [],
      "calls": [
        "Array.prototype.slice.call",
        "plugin_elem.getPluginObject",
        "this._callMethod.apply"
      ]
    },
    {
      "name": "_pPlugin._fireEvent",
      "params": [],
      "calls": [
        "h.handler.apply"
      ]
    },
    {
      "name": "_pPlugin.addEventHandler",
      "params": [
        "evt_id",
        "func",
        "target"
      ],
      "calls": [
        "nexacro.Component.prototype.addEventHandler.call",
        "obj_elem.addEventHandler",
        "this._events.add_item"
      ]
    },
    {
      "name": "_pPlugin.removeEventHandler",
      "params": [
        "evt_id",
        "func",
        "target"
      ],
      "calls": [
        "nexacro.Component.prototype.removeEventHandler.call",
        "obj_elem.removeEventHandler",
        "this._events.delete_item"
      ]
    },
    {
      "name": "_pPlugin._getParam",
      "params": [
        "propId"
      ],
      "calls": [
        "obj_elem.getElementParam",
        "this._params.get_item"
      ]
    },
    {
      "name": "_pPlugin._setParam",
      "params": [
        "propId",
        "val"
      ],
      "calls": [
        "obj_elem.setElementParam",
        "this._params.add_item"
      ]
    },
    {
      "name": "_pPlugin._callMethod",
      "params": [],
      "calls": [
        "_obj_elem.callMethod.apply"
      ]
    }
  ],
  "PopupDateRangePicker.js": [
    {
      "name": "nexacro.PopupDateRangePicker",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.DateRangePicker.call"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_create_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setElementZIndex",
        "this.on_create_popup_control_element",
        "this.on_create_popupscrollable_control_element"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_created",
      "params": [
        "window"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "nexacro.DateRangePicker.prototype.on_created.call"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.destroyComponent",
      "params": [],
      "calls": [
        "nexacro.DateRangePicker.prototype.destroyComponent.call",
        "nexacro.PopupControl.prototype.destroyComponent.call"
      ]
    },
    {
      "name": "_pPopupDateRangePicker._isUseCloseButton",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupDateRangePicker.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "control_elem.setElementColor",
        "control_elem.setElementFont",
        "control_elem.setElementLetterSpacing",
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "control_elem.setElementWordSpacing",
        "nexacro.DateRangePicker.prototype.on_created_contents.call",
        "this._getCurrentStyleInheritValue"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupDateRangePicker.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "nexacro.DateRangePicker.prototype.on_created.call"
      ]
    },
    {
      "name": "_pPopupDateRangePicker._applyElementVisible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype._applyElementVisible.call"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "nexacro.DateRangePicker.prototype.on_update_position.call",
        "this.on_fire_onmove",
        "this.on_fire_onsize"
      ]
    },
    {
      "name": "_pPopupDateRangePicker._clearEventListener",
      "params": [
        "evt_id"
      ],
      "calls": [
        "application.getActiveForm",
        "nexacro._EventSinkObject.prototype._clearEventListener.apply",
        "nexacro.getApplication"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Form.prototype.on_fire_user_onkeydown.call"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.PopupControl.prototype.set_visible.apply",
        "this._closePopup"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.set_useclosebutton",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_useclosebutton"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_apply_useclosebutton",
      "params": [],
      "calls": [
        "this._recalcLayout",
        "this._updateButtons"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.DateRangePicker.prototype.on_apply_prop_stringresource.call"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.trackPopup",
      "params": [
        "rangeposition",
        "left",
        "top",
        "width",
        "height",
        "callbackfn",
        "bcapture"
      ],
      "calls": [
        "this._trackPopup"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.trackPopupCenter",
      "params": [
        "rangeposition",
        "width",
        "height",
        "callbackfn",
        "bcapture"
      ],
      "calls": [
        "this._trackPopup"
      ]
    },
    {
      "name": "_pPopupDateRangePicker._trackPopup",
      "params": [
        "rangeposition",
        "align",
        "left",
        "top",
        "width",
        "height",
        "callbackfn",
        "bcapture"
      ],
      "calls": [
        "Math.max",
        "Math.min",
        "Math.round",
        "layoutmanager.isFluidLayoutType",
        "nexacro._getDevicePixelRatio",
        "nexacro._getLayoutManager",
        "this._changeTab",
        "this._convToPixel",
        "this._datepicker_group._animateScroll",
        "this._datepicker_group._animateScrollEnd",
        "this._getWindow",
        "this._popup",
        "this.getElement",
        "this.on_fire_onpopup",
        "this.setFocus"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.trackPopupByComponent",
      "params": [
        "rangeposition",
        "obj",
        "left",
        "top",
        "width",
        "height",
        "callbackfn",
        "bcapture"
      ],
      "calls": [
        "Math.max",
        "Math.min",
        "nexacro._getElementPositionInFrame",
        "obj.getElement",
        "this._changeTab",
        "this._datepicker_group._animateScroll",
        "this._datepicker_group._animateScrollEnd",
        "this._getWindow",
        "this._popupBy",
        "this.form.on_fire_onsize",
        "this.on_fire_onpopup",
        "this.setFocus"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.closePopup",
      "params": [],
      "calls": [
        "this._closePopup"
      ]
    },
    {
      "name": "_pPopupDateRangePicker._on_init",
      "params": [],
      "calls": [
        "nexacro.FormBase.prototype._on_init.apply"
      ]
    },
    {
      "name": "_pPopupDateRangePicker._on_load",
      "params": [],
      "calls": [
        "nexacro.Form.prototype._on_load.apply",
        "this._popup",
        "this._popupBy"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_notify_onstartdateclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.DateRangePicker.prototype.on_notify_onstartdateclick.call",
        "this._isUseCloseButton",
        "this.closePopup"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_notify_onenddateclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "nexacro.DateRangePicker.prototype.on_notify_onenddateclick.call",
        "this._isUseCloseButton",
        "this.closePopup"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_notify_close",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.closePopup"
      ]
    },
    {
      "name": "_pPopupDateRangePicker._on_bubble_mousewheel",
      "params": [
        "elem",
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bScroll",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getFromComponent",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this._isWheelScrollable",
        "this._p_parent._on_bubble_mousewheel",
        "this._setHScrollDefaultAction",
        "this._setVScrollDefaultAction",
        "this._setVScrollbarDefaultAction",
        "this.on_fire_sys_onmousewheel",
        "this.on_fire_user_onmousewheel"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_fire_onpopup",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.EventInfo",
        "this.onpopup._fireEvent"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_fire_onmove",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "nexacro.MoveEventInfo",
        "this.onmove._fireEvent"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_fire_oncloseup",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.EventInfo",
        "this._callbackfunction.call",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pPopupDateRangePicker.on_fire_sys_onslidestart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDateRangePicker.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDateRangePicker.on_fire_sys_onslideend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDateRangePicker.on_fire_sys_onflingstart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDateRangePicker.on_fire_sys_onfling",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDateRangePicker.on_fire_sys_onflingend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDateRangePicker._detach",
      "params": [
        "comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDateRangePicker._closePopup",
      "params": [
        "only_logic"
      ],
      "calls": [
        "nexacro.PopupControl.prototype._closePopup.apply",
        "this._datepicker_group._modalYearMonthPicker",
        "this._datepicker_group._modal_picker._closeUp"
      ]
    },
    {
      "name": "_pPopupDateRangePicker._isPopupVisible",
      "params": [],
      "calls": []
    }
  ],
  "PopupDiv.js": [
    {
      "name": "nexacro.PopupDiv",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Div.call"
      ]
    },
    {
      "name": "_pPopupDiv.on_create_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setElementZIndex",
        "this.on_create_popup_control_element",
        "this.on_create_popupscrollable_control_element"
      ]
    },
    {
      "name": "_pPopupDiv.on_created",
      "params": [
        "window"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "nexacro.Div.prototype.on_created.call"
      ]
    },
    {
      "name": "_pPopupDiv.destroyComponent",
      "params": [],
      "calls": [
        "nexacro.Div.prototype.destroyComponent.call",
        "nexacro.PopupControl.prototype.destroyComponent.call"
      ]
    },
    {
      "name": "_pPopupDiv.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "control_elem.setElementColor",
        "control_elem.setElementFont",
        "control_elem.setElementLetterSpacing",
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "control_elem.setElementWordSpacing",
        "nexacro.Div.prototype.on_created_contents.call",
        "this._getCurrentStyleInheritValue"
      ]
    },
    {
      "name": "_pPopupDiv.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupDiv.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "nexacro.Div.prototype.on_created.call"
      ]
    },
    {
      "name": "_pPopupDiv._applyElementVisible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype._applyElementVisible.call"
      ]
    },
    {
      "name": "_pPopupDiv.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "control_elem.setElementZoom",
        "nexacro._getDevicePixelRatio",
        "this._getWindow",
        "this.on_fire_onmove",
        "this.on_fire_onsize"
      ]
    },
    {
      "name": "_pPopupDiv._clearEventListener",
      "params": [
        "evt_id"
      ],
      "calls": [
        "application.getActiveForm",
        "nexacro._EventSinkObject.prototype._clearEventListener.apply",
        "nexacro.getApplication"
      ]
    },
    {
      "name": "_pPopupDiv.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Form.prototype.on_fire_user_onkeydown.call"
      ]
    },
    {
      "name": "_pPopupDiv._on_getFluidHorizontalContainerSize",
      "params": [
        "contents_max_rect"
      ],
      "calls": [
        "border._getBorderHeight",
        "this._getCurrentStyleBorder"
      ]
    },
    {
      "name": "_pPopupDiv._on_getFluidVerticalContainerSize",
      "params": [
        "contents_max_rect"
      ],
      "calls": [
        "border._getBorderWidth",
        "this._getCurrentStyleBorder"
      ]
    },
    {
      "name": "_pPopupDiv.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.PopupControl.prototype.set_visible.apply"
      ]
    },
    {
      "name": "_pPopupDiv.trackPopup",
      "params": [
        "left",
        "top",
        "width",
        "height",
        "callbackfn",
        "bcapture"
      ],
      "calls": [
        "layoutmanager.isFluidLayoutType",
        "nexacro._getLayoutManager",
        "this._convToPixel",
        "this._getWindow",
        "this._p_form.on_fire_onsize",
        "this._popup",
        "this.on_fire_onpopup",
        "this.setFocus"
      ]
    },
    {
      "name": "_pPopupDiv.trackPopupByComponent",
      "params": [
        "obj",
        "left",
        "top",
        "width",
        "height",
        "callbackfn",
        "bcapture"
      ],
      "calls": [
        "nexacro._getDevicePixelRatio",
        "nexacro._getElementPositionInFrame",
        "obj.getElement",
        "this._getWindow",
        "this._p_form.on_fire_onsize",
        "this._popupBy",
        "this.on_fire_onpopup",
        "this.setFocus"
      ]
    },
    {
      "name": "_pPopupDiv.closePopup",
      "params": [
        "retvalue"
      ],
      "calls": [
        "this._closePopup"
      ]
    },
    {
      "name": "_pPopupDiv._on_init",
      "params": [],
      "calls": [
        "nexacro.FormBase.prototype._on_init.apply"
      ]
    },
    {
      "name": "_pPopupDiv._on_load",
      "params": [],
      "calls": [
        "nexacro.Form.prototype._on_load.apply",
        "this._popup",
        "this._popupBy"
      ]
    },
    {
      "name": "_pPopupDiv._on_bubble_mousewheel",
      "params": [
        "elem",
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "bScroll",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._getFromComponent",
        "this._getRecalcCanvasXY",
        "this._isEnable",
        "this._isWheelScrollable",
        "this._p_parent._on_bubble_mousewheel",
        "this._setHScrollDefaultAction",
        "this._setVScrollDefaultAction",
        "this._setVScrollbarDefaultAction",
        "this.on_fire_sys_onmousewheel",
        "this.on_fire_user_onmousewheel"
      ]
    },
    {
      "name": "_pPopupDiv.on_fire_onpopup",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.EventInfo",
        "this.onpopup._fireEvent"
      ]
    },
    {
      "name": "_pPopupDiv.on_fire_onmove",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "nexacro.MoveEventInfo",
        "this.onmove._fireEvent"
      ]
    },
    {
      "name": "_pPopupDiv.on_fire_oncloseup",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.EventInfo",
        "this._callbackfunction.call",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pPopupDiv.on_fire_sys_onslidestart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDiv.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDiv.on_fire_sys_onslideend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDiv.on_fire_sys_onflingstart",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDiv.on_fire_sys_onfling",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDiv.on_fire_sys_onflingend",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDiv._detach",
      "params": [
        "comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupDiv._closePopup",
      "params": [],
      "calls": [
        "nexacro.PopupControl.prototype._closePopup.apply"
      ]
    },
    {
      "name": "_pPopupDiv._isPopupVisible",
      "params": [],
      "calls": []
    }
  ],
  "PopupMenu.js": [
    {
      "name": "nexacro._PopupMenuItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._MenuItemControl.call"
      ]
    },
    {
      "name": "_pPopupMenuItemControl.on_create_contents",
      "params": [],
      "calls": [
        "hotkeytextcontrol._setControl",
        "hotkeytextcontrol._setEventHandler",
        "hotkeytextcontrol.createComponent",
        "hotkeytextcontrol.set_text",
        "nexacro.Static",
        "textcontrol._setControl",
        "textcontrol._setEventHandler",
        "textcontrol.createComponent",
        "this.getElement"
      ]
    },
    {
      "name": "_pPopupMenuItemControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._expiconcontrol.on_created",
        "this._hotkeytextcontrol.on_created",
        "this._iconcontrol.on_created",
        "this._on_apply_hotkeytext",
        "this._textcontrol.on_created",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pPopupMenuItemControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this._expiconcontrol.createCommand",
        "this._hotkeytextcontrol.createCommand",
        "this._iconcontrol.createCommand",
        "this._textcontrol.createCommand"
      ]
    },
    {
      "name": "_pPopupMenuItemControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._expiconcontrol.attachHandle",
        "this._hotkeytextcontrol.attachHandle",
        "this._iconcontrol.attachHandle",
        "this._textcontrol.attachHandle"
      ]
    },
    {
      "name": "_pPopupMenuItemControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._expiconcontrol.destroy",
        "this._hotkeytextcontrol.destroy",
        "this._iconcontrol.destroy",
        "this._textcontrol.destroy"
      ]
    },
    {
      "name": "_pPopupMenuItemControl.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._updateControlPosition"
      ]
    },
    {
      "name": "_pPopupMenuItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupMenuItemControl.on_apply_prop_enable",
      "params": [
        "enable"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_enable.call",
        "this._expiconcontrol._setEnable",
        "this._hotkeytextcontrol._setEnable",
        "this._iconcontrol._setEnable",
        "this._textcontrol._setEnable"
      ]
    },
    {
      "name": "_pPopupMenuItemControl.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "this._textcontrol.set_text"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._on_apply_hotkeytext",
      "params": [],
      "calls": [
        "this._hotkeytextcontrol.set_text"
      ]
    },
    {
      "name": "_pPopupMenuItemControl.on_notify_itemclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "popupmenu.on_notify_menuitem_onclick"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._on_apply_mouseover",
      "params": [
        "isovered"
      ],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupMenuItemControl._load_image",
      "params": [
        "val"
      ],
      "calls": [
        "expiconcontrol._setControl",
        "expiconcontrol._setEventHandler",
        "expiconcontrol.createComponent",
        "expiconcontrol.set_icon",
        "expiconcontrol.set_text",
        "nexacro._IconText"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._updateControlPosition",
      "params": [],
      "calls": [
        "expiconcontrol.move",
        "hotkeytextcontrol.move",
        "hotkeytextcontrol.set_visible",
        "iconcontrol.move",
        "textcontrol.move",
        "this._getClientHeight",
        "this._getItemControlPosition"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._getWindowPosition",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._getWindowPosition.call"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._isChecked",
      "params": [],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._getItemControlPosition",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupMenuItemControl._getWidth",
      "params": [],
      "calls": [
        "Math.max"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._setId",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenuItemControl._setCheck",
      "params": [
        "v"
      ],
      "calls": [
        "iconcontrol._setControl",
        "iconcontrol._setEventHandler",
        "iconcontrol.createComponent",
        "iconcontrol.on_created",
        "nexacro._Icon"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._setIcon",
      "params": [
        "v"
      ],
      "calls": [
        "iconcontrol._setControl",
        "iconcontrol._setEventHandler",
        "iconcontrol.createComponent",
        "iconcontrol.set_icon",
        "nexacro._Icon"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._setHotkeyText",
      "params": [
        "v"
      ],
      "calls": [
        "this._on_apply_hotkeytext"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._setExpandimage",
      "params": [],
      "calls": [
        "expiconcontrol._getCSSStyleValue",
        "expiconcontrol._setControl",
        "expiconcontrol._setEventHandler",
        "expiconcontrol.createComponent",
        "expiconcontrol.set_text",
        "nexacro._IconText"
      ]
    },
    {
      "name": "_pPopupMenuItemControl._setUserdata",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "nexacro.MenuCloseUpEventInfo",
      "params": [
        "obj",
        "id",
        "isselect",
        "refobj"
      ],
      "calls": []
    },
    {
      "name": "nexacro.MenuClickEventInfo",
      "params": [
        "obj",
        "id",
        "itemid",
        "itemuserdata",
        "index",
        "level",
        "refobj"
      ],
      "calls": []
    },
    {
      "name": "nexacro.PopupMenu",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.PopupControl.call"
      ]
    },
    {
      "name": "_pPopupMenu.on_create_contents",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupMenu.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.PopupControl.prototype.on_created_contents.call",
        "this._createPopupMenu",
        "this._findDataset",
        "this.getElement",
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pPopupMenu.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupMenu.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.PopupControl.prototype.on_created.call"
      ]
    },
    {
      "name": "_pPopupMenu.on_destroy_contents",
      "params": [],
      "calls": [
        "this._deletePopupMenu",
        "this._popupmenu.destroyComponent",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pPopupMenu.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._reCalcSize"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_prop_enable",
      "params": [
        "enable"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_enable.call",
        "popupemenu._setEnable"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "popupemenu.on_apply_cssclass"
      ]
    },
    {
      "name": "_pPopupMenu._getCSSMapParent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupMenu._getDlgCode",
      "params": [
        "/*keycode",
        "altKey",
        "ctrlKey",
        "shiftKey*/"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenu._isPopupContains",
      "params": [],
      "calls": [
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pPopupMenu.set_autohotkey",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autohotkey"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_autohotkey",
      "params": [
        "autohotkey"
      ],
      "calls": [
        "this._unregisterItemHotkey"
      ]
    },
    {
      "name": "_pPopupMenu.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.PopupControl.prototype.set_visible.apply"
      ]
    },
    {
      "name": "_pPopupMenu.set_itemheight",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenu.set_navigationbuttonsize",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenu.set_popuptype",
      "params": [
        "v"
      ],
      "calls": [
        "popuptype_enum.indexOf"
      ]
    },
    {
      "name": "_pPopupMenu.set_captioncolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_captioncolumn"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_captioncolumn",
      "params": [],
      "calls": [
        "ds.getColumn",
        "popupmenu.set_captioncolumn",
        "this._createPopupMenu"
      ]
    },
    {
      "name": "_pPopupMenu.set_checkboxcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_checkboxcolumn"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_checkboxcolumn",
      "params": [],
      "calls": [
        "ds.getColumn",
        "nexacro._toBoolean",
        "nexacro._toString",
        "popupmenu.set_checkboxcolumn",
        "this._createPopupMenu",
        "this._reCalcSize"
      ]
    },
    {
      "name": "_pPopupMenu.set_enablecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_enablecolumn"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_enablecolumn",
      "params": [],
      "calls": [
        "popupmenu.set_enablecolumn",
        "this._createPopupMenu"
      ]
    },
    {
      "name": "_pPopupMenu.set_hotkeycolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_hotkeycolumn"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_hotkeycolumn",
      "params": [],
      "calls": [
        "ds.getColumn",
        "popupmenu.set_hotkeycolumn",
        "this._createPopupMenu"
      ]
    },
    {
      "name": "_pPopupMenu.set_iconcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_iconcolumn"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_iconcolumn",
      "params": [],
      "calls": [
        "ds.getColumn",
        "item._changeUserStatus",
        "item._setIcon",
        "popupmenu._reCalcPopupPosition",
        "popupmenu.set_iconcolumn",
        "this._createPopupMenu",
        "this._reCalcSize"
      ]
    },
    {
      "name": "_pPopupMenu.set_idcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_idcolumn"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_idcolumn",
      "params": [],
      "calls": [
        "ds.getColumn",
        "popupmenu.set_idcolumn",
        "this._createPopupMenu"
      ]
    },
    {
      "name": "_pPopupMenu.set_levelcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_levelcolumn"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_levelcolumn",
      "params": [],
      "calls": [
        "ds.getColumn",
        "popupmenu.set_levelcolumn",
        "this._createPopupMenu"
      ]
    },
    {
      "name": "_pPopupMenu.set_userdatacolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_userdatacolumn"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_userdatacolumn",
      "params": [],
      "calls": [
        "ds.getColumn",
        "popupmenu.set_userdatacolumn",
        "this._createPopupMenu"
      ]
    },
    {
      "name": "_pPopupMenu.set_innerdataset",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset",
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset"
      ]
    },
    {
      "name": "_pPopupMenu.on_apply_innerdataset",
      "params": [],
      "calls": [
        "ds._setEventHandler",
        "this._createPopupMenu",
        "this._popupmenu.set_innerdataset"
      ]
    },
    {
      "name": "_pPopupMenu.set_icontextpadding",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenu._on_hotkey",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "this.on_fire_onitemclick"
      ]
    },
    {
      "name": "_pPopupMenu._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call",
        "this._isAccessibilityEnable",
        "this._select_menuitem"
      ]
    },
    {
      "name": "_pPopupMenu._do_defocus",
      "params": [
        "target",
        "bParent"
      ],
      "calls": [
        "_window._removeFromCurrentFocusPath",
        "this._getWindow"
      ]
    },
    {
      "name": "_pPopupMenu._item_focus",
      "params": [
        "obj",
        "bflag",
        "evt_name"
      ],
      "calls": [
        "obj._on_focus"
      ]
    },
    {
      "name": "_pPopupMenu._item_killfocus",
      "params": [
        "obj"
      ],
      "calls": [
        "_window._removeFromCurrentFocusPath",
        "obj._on_apply_mouseover",
        "this._getWindow"
      ]
    },
    {
      "name": "_pPopupMenu._fire_on_Popupmenu",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "popupmenu.on_fire_sys_onkeydown"
      ]
    },
    {
      "name": "_pPopupMenu._callbackFromDataset",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "this._closeAllPopup",
        "this._createPopupMenu"
      ]
    },
    {
      "name": "_pPopupMenu._callback_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oninnerdatachanged"
      ]
    },
    {
      "name": "_pPopupMenu.on_notify_menuitem_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "obj._changeUserStatus",
        "parentcomp.on_notify_menuitem_onclick",
        "popupmenu._closePopup",
        "previtem._changeUserStatus",
        "this._closeAllPopup",
        "this._getPopupType",
        "this._getRootComponent",
        "this._p_parent.on_notify_menuitem_onclick",
        "this._showPopup",
        "this.on_fire_onitemclick"
      ]
    },
    {
      "name": "_pPopupMenu.on_notify_onmouseenter",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": [
        "previousitem._changeUserStatus",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pPopupMenu.on_notify_menuitem_onmouseenter",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": [
        "before_item._changeUserStatus",
        "popupmenu._is_popup",
        "popupmenu.cancelPopup",
        "previousitem._changeUserStatus",
        "previtem._changeUserStatus",
        "this._getPopupType",
        "this._showPopup"
      ]
    },
    {
      "name": "_pPopupMenu.on_notify_menuitem_onmouseleave",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": [
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pPopupMenu.on_notify_menuitem_onlbuttondown",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": [
        "popupmenu._is_popup",
        "popupmenu.cancelPopup",
        "this._getRootComponent",
        "this._showPopup"
      ]
    },
    {
      "name": "_pPopupMenu.on_notify_navigationprev_onclick",
      "params": [],
      "calls": [
        "popupmenu._closePopup",
        "this._navigationPrev"
      ]
    },
    {
      "name": "_pPopupMenu.on_notify_navigationnext_onclick",
      "params": [],
      "calls": [
        "popupmenu._closePopup",
        "this._navigationNext"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onlbuttondown._fireUserEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onlbuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_onrbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onrbuttondown._fireUserEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onrbuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_oncontextmenu",
      "params": [
        "from_comp",
        "from_refer_comp",
        "button",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuContextMenuEventInfo",
        "this._getEventInfoComponent",
        "this.oncontextmenu._fireEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_onmousedown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onmousedown._fireUserEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_onmouseup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onmouseup._fireUserEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_onmouseenter",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onmouseenter._fireUserEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_onmouseleave",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onmouseleave._fireUserEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_onmousemove",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuMouseEventInfo",
        "this._getEventInfoComponent",
        "this.onmousemove._fireUserEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_ondrag",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "refer_comp",
        "self_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MenuDragEventInfo",
        "this._getDragData",
        "this._getEventInfoComponent",
        "this.ondrag._fireUserEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onkeydown.call",
        "pThis._closePopup",
        "pThis._item_focus",
        "pThis._item_killfocus",
        "this._closePopup",
        "this._do_defocus",
        "this._getRootComponent",
        "this._isPopupmenuVisible",
        "this._item_find",
        "this._item_focus",
        "this._on_focus",
        "this._p_parent._getWindow",
        "this._popupmenu_find"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_sys_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "item._on_focus",
        "nexacro.Component.prototype.on_fire_sys_onkeydown.call",
        "pThis._popupmenuitem_extend",
        "pThis._select_menuitem",
        "pThis._showPopup",
        "pThis.on_fire_sys_onkeydown",
        "pThis.on_notify_menuitem_onclick",
        "pThis.on_notify_menuitem_onlbuttondown",
        "parent._getItemIndex",
        "parent._select_menuitem",
        "popupmenu._closeAllPopup",
        "popupmenu._select_menuitem",
        "popupmenu.on_fire_sys_onkeydown",
        "rootComp._closePopup",
        "rootComp._getItemIndex",
        "rootComp._isPopupVisible",
        "rootComp._select_menuitem",
        "rootComp._showPopup",
        "this._closePopup",
        "this._fire_on_Popupmenu",
        "this._getItemIndex",
        "this._getPopupType",
        "this._getRootComponent",
        "this._isPopupmenuVisible",
        "this._item_find",
        "this._popupmenu_find",
        "this._select_menuitem"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_onitemclick",
      "params": [
        "obj",
        "itemid",
        "itemuserdata",
        "index",
        "level",
        "refobj"
      ],
      "calls": [
        "nexacro.MenuClickEventInfo",
        "rootComp.onmenuclick._fireEvent",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_onpopup",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.EventInfo",
        "this.onpopup._fireEvent"
      ]
    },
    {
      "name": "_pPopupMenu.on_fire_oncloseup",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.MenuCloseUpEventInfo",
        "this.on_fire_onpopup",
        "this.oncloseup._fireEvent"
      ]
    },
    {
      "name": "_pPopupMenu.cancelPopup",
      "params": [],
      "calls": [
        "this._closePopup"
      ]
    },
    {
      "name": "_pPopupMenu.closePopup",
      "params": [],
      "calls": [
        "this._closePopup"
      ]
    },
    {
      "name": "_pPopupMenu.isPopup",
      "params": [],
      "calls": [
        "this._is_popup"
      ]
    },
    {
      "name": "_pPopupMenu.trackPopup",
      "params": [
        "x",
        "y",
        "align",
        "bcapture"
      ],
      "calls": [
        "ds.getColumn",
        "nexacro._toBoolean",
        "this._adjustPopupPosition",
        "this._calcNavigationbutton",
        "this._reCalcSize",
        "this._registerItemHotkey",
        "this._setInheritStyleValues",
        "this.on_created",
        "this.on_fire_onpopup",
        "this.setFocus"
      ]
    },
    {
      "name": "_pPopupMenu.trackPopupByComponent",
      "params": [
        "obj",
        "x",
        "y",
        "align",
        "bcapture"
      ],
      "calls": [
        "form._getWindowPosition",
        "nexacro._getElementPositionInFrame",
        "nexacro._toBoolean",
        "obj.getElement",
        "this._adjustPopupPosition",
        "this._calcNavigationbutton",
        "this._getForm",
        "this._getWindow",
        "this._reCalcSize",
        "this._registerItemHotkey",
        "this.on_created",
        "this.on_fire_onpopup",
        "this.setFocus"
      ]
    },
    {
      "name": "_pPopupMenu.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this._removeEventHandlerToInnerDataset",
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pPopupMenu.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupMenu._createPopupMenu",
      "params": [],
      "calls": [
        "ds.getColumn",
        "ds.getRowCount",
        "lineItem._setControl",
        "lineItem.createComponent",
        "lineItem.set_background",
        "nexacro.Static",
        "nexacro._PopupMenuItemControl",
        "nexacro._toBoolean",
        "popupmenuitem._setCheck",
        "popupmenuitem._setEnable",
        "popupmenuitem._setEventHandler",
        "popupmenuitem._setExpandimage",
        "popupmenuitem._setHotkeyText",
        "popupmenuitem._setIcon",
        "popupmenuitem._setId",
        "popupmenuitem._setUserdata",
        "popupmenuitem.createComponent",
        "popupmenuitem.on_apply_accessibility",
        "popupmenuitem.set_text",
        "this._deletePopupMenu",
        "this._getRootComponent",
        "this._items.push",
        "this._lineItems.push",
        "this._setEventHandler",
        "this._setHotkey",
        "this.getElement"
      ]
    },
    {
      "name": "_pPopupMenu._deletePopupMenu",
      "params": [],
      "calls": [
        "this._unregisterItemHotkey",
        "this.nextbutton.destroyComponent",
        "this.prevbutton.destroyComponent"
      ]
    },
    {
      "name": "_pPopupMenu._showPopup",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.PopupMenu",
        "popupmenu._setControl",
        "popupmenu._trackPopup",
        "popupmenu.createComponent",
        "popupmenu.setInnerDataset",
        "popupmenu.set_captioncolumn",
        "popupmenu.set_checkboxcolumn",
        "popupmenu.set_color",
        "popupmenu.set_cssclass",
        "popupmenu.set_enablecolumn",
        "popupmenu.set_font",
        "popupmenu.set_hotkeycolumn",
        "popupmenu.set_iconcolumn",
        "popupmenu.set_idcolumn",
        "popupmenu.set_itemheight",
        "popupmenu.set_levelcolumn",
        "popupmenu.set_popuptype",
        "popupmenu.set_userdatacolumn",
        "this._getCurrentStyleInheritValue",
        "this._getPopupType",
        "this._setPopupContains"
      ]
    },
    {
      "name": "_pPopupMenu._trackPopup",
      "params": [
        "obj",
        "direction",
        "x",
        "y"
      ],
      "calls": [
        "Math.round",
        "nexacro._getDevicePixelRatio",
        "nexacro._getElementPositionInFrame",
        "obj.getElement",
        "parent._getCSSStyleValue",
        "parent._getClientHeight",
        "parent._getClientWidth",
        "parent.getElement",
        "rootframe.getElement",
        "this._adjustPopupPosition",
        "this._createPopupMenu",
        "this._getCSSStyleValue",
        "this._getPopupType",
        "this._getRootFrame",
        "this._popupBy",
        "this._reCalcSize",
        "this._registerItemHotkey",
        "this._showNavigationButton",
        "this.getElement",
        "this.on_created"
      ]
    },
    {
      "name": "_pPopupMenu._adjustPopupPosition",
      "params": [
        "x",
        "y",
        "align",
        "win_position"
      ],
      "calls": [
        "this._getAlignPosition",
        "this._getWindow",
        "this._popup"
      ]
    },
    {
      "name": "_pPopupMenu._reCalcPopupPosition",
      "params": [
        "obj"
      ],
      "calls": [
        "Math.round",
        "nexacro._getDevicePixelRatio",
        "nexacro._getElementPositionInFrame",
        "parent._getClientWidth",
        "parent.getElement",
        "rootframe.getElement",
        "this._adjustPopupPosition",
        "this._getCSSStyleValue",
        "this._getPopupType",
        "this._getRootFrame",
        "this._popupBy",
        "this._showNavigationButton",
        "this.getElement"
      ]
    },
    {
      "name": "_pPopupMenu._closePopup",
      "params": [],
      "calls": [
        "_window._releaseCaptureLock",
        "item._on_apply_mouseover",
        "item._on_apply_selected",
        "popupmenu._closePopup",
        "this._getWindow",
        "this._item_find",
        "this._item_killfocus",
        "this._unregisterItemHotkey",
        "this.set_visible"
      ]
    },
    {
      "name": "_pPopupMenu._closeAllPopup",
      "params": [],
      "calls": [
        "this._closePopup"
      ]
    },
    {
      "name": "_pPopupMenu._reCalcSize",
      "params": [
        "/*w",
        "h*/"
      ],
      "calls": [
        "item._updateAccessibilityLabel",
        "item.move",
        "nexacro._getTextSize",
        "this._getCSSStyleValue",
        "this._getControlInfo",
        "this._isNavigationbuttonVisible",
        "this._rearrangePopupMenuItems",
        "this._setItemControlPosition",
        "this._showNavigationButton",
        "this.resize"
      ]
    },
    {
      "name": "_pPopupMenu._rearrangePopupMenuItems",
      "params": [],
      "calls": [
        "item.move",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._isNavigationbuttonVisible",
        "this._showNavigationButton"
      ]
    },
    {
      "name": "_pPopupMenu._select_menuitem",
      "params": [
        "nextitemindex",
        "previtemindex/*",
        "popupvisible*/"
      ],
      "calls": [
        "next_item._changeUserStatus",
        "prev_item._changeUserStatus",
        "this._do_defocus",
        "this._item_focus"
      ]
    },
    {
      "name": "_pPopupMenu._createNavigationButton",
      "params": [],
      "calls": [
        "nexacro.Button",
        "nexacro._getImageSize",
        "nextbutton._getCSSStyleValue",
        "nextbutton._setControl",
        "nextbutton._setEventHandler",
        "nextbutton.createComponent",
        "nextbutton.on_created",
        "nextbutton.set_visible",
        "prevbutton._changeStatus",
        "prevbutton._getCSSStyleValue",
        "prevbutton._setControl",
        "prevbutton._setEventHandler",
        "prevbutton.createComponent",
        "prevbutton.on_created",
        "prevbutton.set_visible",
        "this._rearrangePopupMenuItems"
      ]
    },
    {
      "name": "_pPopupMenu._showNavigationButton",
      "params": [
        "navigation_visible"
      ],
      "calls": [
        "nextbutton.move",
        "nextbutton.set_visible",
        "prevbutton.move",
        "prevbutton.set_visible",
        "this._createNavigationButton",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getNavigationbuttonHeight"
      ]
    },
    {
      "name": "_pPopupMenu._calcNavigationbutton",
      "params": [
        "/*obj*/y"
      ],
      "calls": [
        "nexacro._getElementPositionInFrame",
        "rootframe.getElement",
        "this._getRootFrame",
        "this.resize"
      ]
    },
    {
      "name": "_pPopupMenu._navigationPrev",
      "params": [],
      "calls": [
        "this._rearrangePopupMenuItems",
        "this.nextbutton._changeStatus",
        "this.prevbutton._changeStatus"
      ]
    },
    {
      "name": "_pPopupMenu._navigationNext",
      "params": [],
      "calls": [
        "this._rearrangePopupMenuItems",
        "this.nextbutton._changeStatus",
        "this.prevbutton._changeStatus"
      ]
    },
    {
      "name": "_pPopupMenu._setHotkey",
      "params": [
        "id",
        "v",
        "popupmenuitem"
      ],
      "calls": [
        "hotkey._isEmpty",
        "nexacro._HotKey",
        "this._hot_key_list.push"
      ]
    },
    {
      "name": "_pPopupMenu._registerItemHotkey",
      "params": [
        "hotkey"
      ],
      "calls": [
        "nexacro._registerHotkeyComp",
        "this._getMainForm",
        "this._setAccessibilityHotKey"
      ]
    },
    {
      "name": "_pPopupMenu._unregisterItemHotkey",
      "params": [
        "hotkey"
      ],
      "calls": [
        "nexacro._unregisterHotkeyComp",
        "this._getMainForm"
      ]
    },
    {
      "name": "_pPopupMenu._loaded_expImage",
      "params": [
        "imgurl",
        "w",
        "h"
      ],
      "calls": [
        "this._reCalcSize"
      ]
    },
    {
      "name": "_pPopupMenu._loaded_chkImage",
      "params": [
        "imgurl",
        "w",
        "h"
      ],
      "calls": [
        "this._reCalcSize"
      ]
    },
    {
      "name": "_pPopupMenu._loaded_iconImage",
      "params": [
        "imgurl",
        "w",
        "h"
      ],
      "calls": [
        "this._reCalcSize"
      ]
    },
    {
      "name": "_pPopupMenu._load_image",
      "params": [
        "strImageUrl",
        "strflag"
      ],
      "calls": [
        "nexacro._getImageLocation",
        "nexacro._getImageSize",
        "nexacro._getURIValue",
        "this._getRefFormBaseUrl"
      ]
    },
    {
      "name": "_pPopupMenu._getPopupControl",
      "params": [],
      "calls": [
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pPopupMenu._getPopupType",
      "params": [],
      "calls": [
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pPopupMenu._isPopupmenuVisible",
      "params": [
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenu._isNavigationbuttonVisible",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupMenu._getNavigationbuttonHeight",
      "params": [
        "nextbutton",
        "prevbutton"
      ],
      "calls": [
        "nexacro._getImageSize",
        "nextbutton._getCSSStyleValue",
        "prevbutton._getCSSStyleValue"
      ]
    },
    {
      "name": "_pPopupMenu._getMaxTextSize",
      "params": [
        "column"
      ],
      "calls": [
        "ds.getColumn",
        "nexacro._getTextSize"
      ]
    },
    {
      "name": "_pPopupMenu._getMenuObj",
      "params": [],
      "calls": []
    },
    {
      "name": "_pPopupMenu._getControlInfo",
      "params": [],
      "calls": [
        "Math.ceil",
        "expiconcontrol._getCSSStyleValue",
        "hotkey_control._getCSSStyleValue",
        "hotkey_control._getCurrentStyleInheritValue",
        "hotkey_control._getReferenceAbsoluteFont",
        "icon_control._getCSSStyleValue",
        "item._getCSSStyleValue",
        "nexacro._getImageSize",
        "nexacro._getTextSize",
        "text_control._getCSSStyleValue",
        "text_control._getCurrentStyleInheritValue",
        "text_control._getReferenceAbsoluteFont"
      ]
    },
    {
      "name": "_pPopupMenu._getAlignPosition",
      "params": [
        "x",
        "y",
        "align"
      ],
      "calls": [
        "align.split"
      ]
    },
    {
      "name": "_pPopupMenu._getItemIndex",
      "params": [
        "dir"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenu._getEventInfoComponent",
      "params": [
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenu._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._convertObjectContents",
        "this.set_innerdataset"
      ]
    },
    {
      "name": "_pPopupMenu._setItemControlPosition",
      "params": [
        "icon_x",
        "iconimgwidth",
        "iconheight",
        "text_x",
        "textwidth",
        "textheight",
        "hotkey_x",
        "hotkeywidth",
        "hotkeyheight",
        "gap",
        "chkimgwidth",
        "expimgwidth",
        "expimgheight",
        "itemheight"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenu._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pPopupMenu._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pPopupMenu._item_find",
      "params": [
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenu._popupmenu_find",
      "params": [
        "obj"
      ],
      "calls": []
    },
    {
      "name": "_pPopupMenu._popupmenuitem_extend",
      "params": [
        "obj"
      ],
      "calls": []
    }
  ],
  "ProgressBar.js": [
    {
      "name": "nexacro.ProgressBar",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pProgressBar.on_apply_text",
      "params": [
        "v"
      ],
      "calls": [
        "exprfn.call",
        "nexacro.Static",
        "nexacro._toString",
        "progressbartext._setControl",
        "progressbartext._setEventHandler",
        "progressbartext.createComponent",
        "progressbartext.move",
        "progressbartext.on_created",
        "progressbartext.set_text",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getStringResourceProperty",
        "this._progressbartext.destroy",
        "this.getElement"
      ]
    },
    {
      "name": "_pProgressBar.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_progressendcap._setEnable",
        "this._p_progressstartcap._setEnable"
      ]
    },
    {
      "name": "_pProgressBar.on_create_contents",
      "params": [],
      "calls": [
        "this._createProgressBarItems",
        "this.getElement"
      ]
    },
    {
      "name": "_pProgressBar.on_created_contents",
      "params": [
        "_window"
      ],
      "calls": [
        "this._isAccessibilityEnable",
        "this._p_progressendcap.on_created",
        "this._p_progressstartcap.on_created",
        "this._progressbartext.on_created",
        "this._setAccessibilityInfoValueCur",
        "this._setAccessibilityInfoValueMax",
        "this._setAccessibilityInfoValueMin"
      ]
    },
    {
      "name": "_pProgressBar.on_destroy_contents",
      "params": [],
      "calls": [
        "this._clearProgressBarItems",
        "this._p_progressendcap.destroy",
        "this._p_progressstartcap.destroy",
        "this._progressbartext.destroy"
      ]
    },
    {
      "name": "_pProgressBar.on_create_contents_command",
      "params": [],
      "calls": [
        "this._p_progressendcap.createCommand",
        "this._p_progressstartcap.createCommand",
        "this._progressbartext.createCommand"
      ]
    },
    {
      "name": "_pProgressBar.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._on_attach_accessibility_contents_handle",
        "this._p_progressendcap.attachHandle",
        "this._p_progressstartcap.attachHandle",
        "this._progressbartext.attachHandle"
      ]
    },
    {
      "name": "_pProgressBar.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._update"
      ]
    },
    {
      "name": "_pProgressBar.set_blockgap",
      "params": [
        "v"
      ],
      "calls": [
        "this._update"
      ]
    },
    {
      "name": "_pProgressBar.set_blocksize",
      "params": [
        "v"
      ],
      "calls": [
        "this._update"
      ]
    },
    {
      "name": "_pProgressBar.set_min",
      "params": [
        "v"
      ],
      "calls": [
        "this._update",
        "this.on_apply_min"
      ]
    },
    {
      "name": "_pProgressBar.on_apply_min",
      "params": [
        "min"
      ],
      "calls": [
        "this._isAccessibilityEnable",
        "this._setAccessibilityInfoValueMin"
      ]
    },
    {
      "name": "_pProgressBar.set_max",
      "params": [
        "v"
      ],
      "calls": [
        "this._update",
        "this.on_apply_max"
      ]
    },
    {
      "name": "_pProgressBar.on_apply_max",
      "params": [
        "max"
      ],
      "calls": [
        "this._isAccessibilityEnable",
        "this._setAccessibilityInfoValueMax"
      ]
    },
    {
      "name": "_pProgressBar.set_pos",
      "params": [
        "v"
      ],
      "calls": [
        "this._isAccessibilityEnable",
        "this._setAccessibilityInfoValueCur",
        "this._update"
      ]
    },
    {
      "name": "_pProgressBar.set_step",
      "params": [
        "v"
      ],
      "calls": [
        "this._update"
      ]
    },
    {
      "name": "_pProgressBar.set_smooth",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._update"
      ]
    },
    {
      "name": "_pProgressBar.set_direction",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._update"
      ]
    },
    {
      "name": "_pProgressBar.stepIt",
      "params": [],
      "calls": [
        "this.set_pos"
      ]
    },
    {
      "name": "_pProgressBar._on_loadimage_start_icon",
      "params": [
        "imgurl",
        "width/*",
        "height*/"
      ],
      "calls": [
        "this._update"
      ]
    },
    {
      "name": "_pProgressBar._on_loadimage_end_icon",
      "params": [
        "imgurl",
        "width/*",
        "height*/"
      ],
      "calls": [
        "this._update"
      ]
    },
    {
      "name": "_pProgressBar._on_loadimage_item_icon",
      "params": [
        "imgurl",
        "width/*",
        "height*/"
      ],
      "calls": [
        "this._update"
      ]
    },
    {
      "name": "_pProgressBar.on_notify_progressbar_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pProgressBar._createProgressStartCap",
      "params": [
        "iscreateonly"
      ],
      "calls": [
        "nexacro._Icon",
        "nexacro._getImageSize",
        "progressstartcap._getCSSStyleValue",
        "progressstartcap._getCurrentStyleBorder",
        "progressstartcap._getCurrentStylePadding",
        "progressstartcap._setControl",
        "progressstartcap.createComponent",
        "this._getClientHeight",
        "this.getElement"
      ]
    },
    {
      "name": "_pProgressBar._createProgressEndCap",
      "params": [
        "iscreateonly"
      ],
      "calls": [
        "nexacro._Icon",
        "nexacro._getImageSize",
        "progressendcap._getCSSStyleValue",
        "progressendcap._getCurrentStyleBorder",
        "progressendcap._getCurrentStylePadding",
        "progressendcap._setControl",
        "progressendcap.createComponent",
        "this._getClientHeight",
        "this.getElement"
      ]
    },
    {
      "name": "_pProgressBar._createProgressBarItemTemp",
      "params": [
        "/*iscreateonly*/"
      ],
      "calls": [
        "nexacro._ProgressBarItemControl",
        "nexacro._getImageSize",
        "progressbaritem._getCSSStyleValue",
        "progressbaritem._getCurrentStyleBorder",
        "progressbaritem._getCurrentStylePadding",
        "progressbaritem._initControlElementCssInfo",
        "progressbaritem.destroy",
        "this._getClientHeight",
        "this.getElement"
      ]
    },
    {
      "name": "_pProgressBar._createProgressBarItems",
      "params": [
        "iscreateonly"
      ],
      "calls": [
        "baritem._setEventHandler",
        "baritem.createComponent",
        "baritem.move",
        "control_elem.moveToPrevElement",
        "nexacro._ProgressBarItemControl",
        "nexacro._isDesktop",
        "this._clearProgressBarItems",
        "this._createProgressBarItemTemp",
        "this._createProgressEndCap",
        "this._createProgressStartCap",
        "this._getBarInfo",
        "this._getClientHeight",
        "this._getClientTop",
        "this._getClientWidth",
        "this._getWindow",
        "this._p_progressendcap.destroy",
        "this._p_progressendcap.move",
        "this._p_progressstartcap.destroy",
        "this._p_progressstartcap.move",
        "this._progressbartext.getElement",
        "this._setSizeInfo",
        "this.getElement",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pProgressBar._clearProgressBarItems",
      "params": [
        "allclear",
        "info"
      ],
      "calls": [
        "item.destroy",
        "this._progressbaritems.pop"
      ]
    },
    {
      "name": "_pProgressBar._update",
      "params": [],
      "calls": [
        "this._createProgressBarItems"
      ]
    },
    {
      "name": "_pProgressBar._setSizeInfo",
      "params": [],
      "calls": []
    },
    {
      "name": "_pProgressBar._getBarInfo",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.floor",
        "this._getClientWidth"
      ]
    },
    {
      "name": "nexacro._ProgressBarItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._Icon.call"
      ]
    },
    {
      "name": "_pProgressBarItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    }
  ],
  "Radio.js": [
    {
      "name": "nexacro.RadioClickEventInfo",
      "params": [
        "obj",
        "id",
        "index",
        "itemText",
        "itemValue",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ClickEventInfo.call"
      ]
    },
    {
      "name": "nexacro.Radio",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pRadio.on_create_contents",
      "params": [],
      "calls": [
        "this._createRadioTextElement",
        "this._on_apply_fittocontents",
        "this._redrawRadioItem",
        "this.getElement"
      ]
    },
    {
      "name": "_pRadio.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "text_elem.create",
        "this._on_apply_fittocontents",
        "this._on_created_accessibility_contents",
        "this._setEventHandler",
        "this._setInnerDatasetStr",
        "this._update_position"
      ]
    },
    {
      "name": "_pRadio.on_destroy_contents",
      "params": [],
      "calls": [
        "this._destroyRadioItemControl",
        "this._destroyRadioTextElement",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pRadio._removeEventHandlerToInnerDataset",
      "params": [],
      "calls": [
        "this._innerdataset._removeEventHandler"
      ]
    },
    {
      "name": "_pRadio.on_create_contents_command",
      "params": [],
      "calls": [
        "text_elem.createCommand",
        "this._setInnerDatasetStr"
      ]
    },
    {
      "name": "_pRadio.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "text_elem.attachHandle",
        "this._on_apply_fittocontents",
        "this._on_attach_accessibility_contents_handle",
        "this._setEventHandler",
        "this._update_position"
      ]
    },
    {
      "name": "_pRadio.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "textElem.setElementSize",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pRadio.on_change_containerPos",
      "params": [
        "/*left",
        "top*/"
      ],
      "calls": []
    },
    {
      "name": "_pRadio.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pRadio.on_apply_prop_cssclass",
      "params": [],
      "calls": []
    },
    {
      "name": "_pRadio.on_apply_prop_enable",
      "params": [
        "enable"
      ],
      "calls": []
    },
    {
      "name": "_pRadio.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._doDeselect"
      ]
    },
    {
      "name": "_pRadio.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "inner_ds.findRow",
        "this._convertValueType",
        "this._doDeselect",
        "this._doSelect",
        "this._setIndex",
        "this._setValue"
      ]
    },
    {
      "name": "_pRadio._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "this._isItemAccessibilityEnable"
      ]
    },
    {
      "name": "_pRadio._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "item._changeUserStatus",
        "item._on_focus",
        "nexacro.Component.prototype._on_focus.call",
        "this._getItem",
        "this._isComponentKeydownAction",
        "this._isItemAccessibilityEnable"
      ]
    },
    {
      "name": "_pRadio._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.max",
        "Math.round",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "ds.getRowCount",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this.getElement"
      ]
    },
    {
      "name": "_pRadio.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._redrawRadioItem"
      ]
    },
    {
      "name": "_pRadio._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro.Component.prototype._convertValueType.call",
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pRadio.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "ds.findRow",
        "nexacro._isNull",
        "nexacro._toString",
        "this._convertValueType",
        "this.applyto_bindSource",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pRadio.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pRadio.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "ds.findRow",
        "this._doDeselect",
        "this._doSelect",
        "this._setIndex"
      ]
    },
    {
      "name": "_pRadio.set_index",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_index"
      ]
    },
    {
      "name": "_pRadio.on_apply_index",
      "params": [
        "index"
      ],
      "calls": [
        "ds.getColumn",
        "ds.getRowCount",
        "nexacro._isNull",
        "this._convertValueType",
        "this._doDeselect",
        "this._doSelect",
        "this._isAccessibilityEnable",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_apply_accessibility"
      ]
    },
    {
      "name": "_pRadio.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pRadio.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "this._changeStatus"
      ]
    },
    {
      "name": "_pRadio.set_datacolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_datacolumn"
      ]
    },
    {
      "name": "_pRadio.on_apply_datacolumn",
      "params": [
        "datacolumn"
      ],
      "calls": [
        "ds.getColumn",
        "this._setText",
        "this._updateItemInfo",
        "this.getElement"
      ]
    },
    {
      "name": "_pRadio.set_codecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_codecolumn"
      ]
    },
    {
      "name": "_pRadio.on_apply_codecolumn",
      "params": [
        "codecolumn"
      ],
      "calls": [
        "this._updateItemInfo",
        "this.getElement",
        "this.on_apply_datacolumn",
        "this.on_apply_index"
      ]
    },
    {
      "name": "_pRadio.set_innerdataset",
      "params": [
        "v"
      ],
      "calls": [
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset"
      ]
    },
    {
      "name": "_pRadio.on_apply_innerdataset",
      "params": [
        "ds"
      ],
      "calls": [
        "ds._setEventHandler",
        "this._createRadioTextElement",
        "this._destroyRadioItemControl",
        "this._redrawRadioItem",
        "this.getElement"
      ]
    },
    {
      "name": "_pRadio.set_columncount",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_columncount"
      ]
    },
    {
      "name": "_pRadio.on_apply_columncount",
      "params": [
        "/*columncnt*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pRadio.set_rowcount",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_rowcount"
      ]
    },
    {
      "name": "_pRadio.on_apply_rowcount",
      "params": [
        "/*rowcnt*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pRadio.set_direction",
      "params": [
        "v"
      ],
      "calls": [
        "direction_enum.indexOf",
        "this.on_apply_direction"
      ]
    },
    {
      "name": "_pRadio.on_apply_direction",
      "params": [
        "/*dir*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pRadio.set_itemaccessibilityrole",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilityrole"
      ]
    },
    {
      "name": "_pRadio.on_apply_itemaccessibilityrole",
      "params": [
        "val"
      ],
      "calls": []
    },
    {
      "name": "_pRadio.set_itemaccessibilitylabel",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilitylabel"
      ]
    },
    {
      "name": "_pRadio.on_apply_itemaccessibilitylabel",
      "params": [
        "val"
      ],
      "calls": []
    },
    {
      "name": "_pRadio.set_itemaccessibilityenable",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilityenable"
      ]
    },
    {
      "name": "_pRadio.on_apply_itemaccessibilityenable",
      "params": [
        "val"
      ],
      "calls": []
    },
    {
      "name": "_pRadio.set_itemaccessibilitydescription",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilitydescription"
      ]
    },
    {
      "name": "_pRadio.on_apply_itemaccessibilitydescription",
      "params": [
        "val"
      ],
      "calls": []
    },
    {
      "name": "_pRadio.set_itemaccessibilityaction",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilityaction"
      ]
    },
    {
      "name": "_pRadio.on_apply_itemaccessibilityaction",
      "params": [
        "val"
      ],
      "calls": []
    },
    {
      "name": "_pRadio.set_itemaccessibilitydesclevel",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemaccessibilitydesclevel"
      ]
    },
    {
      "name": "_pRadio.on_apply_itemaccessibilitydesclevel",
      "params": [
        "val"
      ],
      "calls": []
    },
    {
      "name": "_pRadio.set_acceptvaluetype",
      "params": [
        "v"
      ],
      "calls": [
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pRadio.getCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pRadio.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pRadio.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this._removeEventHandlerToInnerDataset",
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pRadio._on_radioitem_onclick",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": [
        "obj._on_focus",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged",
        "this.on_fire_onitemclick",
        "this.set_index"
      ]
    },
    {
      "name": "_pRadio._on_icon_onload",
      "params": [
        "url",
        "w",
        "h"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pRadio._on_dataset_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._redrawRadioItem",
        "this.on_fire_oninnerdatachanged"
      ]
    },
    {
      "name": "_pRadio._on_dataset_onrowsetchanged",
      "params": [
        "/*obj",
        "e*/"
      ],
      "calls": [
        "this._redrawRadioItem"
      ]
    },
    {
      "name": "_pRadio.on_fire_canitemchange",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "this.canitemchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pRadio.on_fire_onitemchanged",
      "params": [
        "obj",
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "this.onitemchanged._fireEvent"
      ]
    },
    {
      "name": "_pRadio.on_fire_onitemclick",
      "params": [
        "obj",
        "index",
        "text",
        "value"
      ],
      "calls": [
        "nexacro.ItemClickEventInfo",
        "this.onitemclick._fireEvent"
      ]
    },
    {
      "name": "_pRadio.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pRadio.on_keydown_basic_action",
      "params": [
        "/*keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp*/"
      ],
      "calls": []
    },
    {
      "name": "_pRadio.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp"
      ],
      "calls": [
        "ds.getRowCount",
        "radioitem._changeStatus",
        "radioitem._changeUserStatus",
        "radioitem._on_focus",
        "this._getItem",
        "this._isComponentKeydownAction",
        "this._isItemAccessibilityEnable",
        "this.on_fire_canitemchange",
        "this.on_fire_onitemchanged",
        "this.set_index"
      ]
    },
    {
      "name": "_pRadio._createRadioItemControl",
      "params": [],
      "calls": [
        "ds.getColumn",
        "ds.getRowCount",
        "item._setAccessibilityInfoCount",
        "item._setAccessibilityInfoIndex",
        "item._setEventHandler",
        "item._setItemInfo",
        "item.createComponent",
        "item.set_text",
        "nexacro._RadioItemControl",
        "this._convertValueType"
      ]
    },
    {
      "name": "_pRadio._on_radioitem_onkeydown",
      "params": [
        "obj",
        "evt"
      ],
      "calls": [
        "this.on_keydown_default_action"
      ]
    },
    {
      "name": "_pRadio._updateItemInfo",
      "params": [],
      "calls": [
        "ds.getColumn",
        "ds.getRowCount",
        "item._setAccessibilityInfoCount",
        "item._setAccessibilityInfoIndex",
        "item._setItemInfo",
        "this._convertValueType",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pRadio._createRadioTextElement",
      "params": [],
      "calls": [
        "nexacro.TextBoxElement",
        "text_elem.create",
        "text_elem.setElementSize",
        "text_elem.setElementText",
        "text_elem.setElementTextAlign",
        "text_elem.setElementVerticalAlign",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getWindow",
        "this.getElement"
      ]
    },
    {
      "name": "_pRadio._destroyRadioItemControl",
      "params": [],
      "calls": []
    },
    {
      "name": "_pRadio._destroyRadioTextElement",
      "params": [],
      "calls": [
        "text_elem.destroy"
      ]
    },
    {
      "name": "_pRadio._recalcLayout",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.max",
        "Math.round",
        "ds.getRowCount",
        "item._on_getFitSize",
        "item.move",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.getElement"
      ]
    },
    {
      "name": "_pRadio._redrawRadioItem",
      "params": [],
      "calls": [
        "this._createRadioItemControl",
        "this._destroyRadioItemControl",
        "this._destroyRadioTextElement",
        "this._recalcLayout",
        "this.on_apply_index",
        "this.on_apply_readonly",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pRadio._doSelect",
      "params": [
        "index"
      ],
      "calls": [
        "item._changeUserStatus",
        "item._setAccessibilityStatChecked",
        "this._getItem",
        "this._setText"
      ]
    },
    {
      "name": "_pRadio._doDeselect",
      "params": [
        "index"
      ],
      "calls": [
        "item._changeUserStatus",
        "item._setAccessibilityStatChecked",
        "this._getItem"
      ]
    },
    {
      "name": "_pRadio._doDefocus",
      "params": [
        "target",
        "bParent"
      ],
      "calls": [
        "_window._removeFromCurrentFocusPath",
        "this._getWindow"
      ]
    },
    {
      "name": "_pRadio._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._convertObjectContents",
        "this.set_innerdataset"
      ]
    },
    {
      "name": "_pRadio._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "v.toString"
      ]
    },
    {
      "name": "_pRadio._setIndex",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pRadio._setText",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pRadio._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findDataset",
        "this._removeEventHandlerToInnerDataset"
      ]
    },
    {
      "name": "_pRadio._getItem",
      "params": [
        "index"
      ],
      "calls": []
    },
    {
      "name": "nexacro._RadioItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._IconText.call"
      ]
    },
    {
      "name": "_pRadioItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pRadioItemControl._getStringResourceProperty",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pRadioItemControl._setItemInfo",
      "params": [
        "index",
        "value"
      ],
      "calls": []
    },
    {
      "name": "_pRadioItemControl._on_icon_onload",
      "params": [
        "url",
        "w",
        "h"
      ],
      "calls": [
        "radio._on_icon_onload"
      ]
    },
    {
      "name": "_pRadioItemControl._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getImageSize",
        "nexacro._getTextSize",
        "text.search",
        "this._getCSSStyleValue",
        "this._getCurrentStyleBorder",
        "this._getCurrentStyleInheritValue",
        "this._getCurrentStylePadding",
        "this.getElement"
      ]
    }
  ],
  "Resizer.js": [
    {
      "name": "nexacro._ResizerGhostControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "nexacro._ResizerGripperControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pResizerGripperControl.set_direction",
      "params": [
        "v"
      ],
      "calls": [
        "direction_enum.indexOf",
        "this.on_apply_direction"
      ]
    },
    {
      "name": "_pResizerGripperControl.on_apply_direction",
      "params": [],
      "calls": [
        "this._isRtl",
        "this.set_cursor"
      ]
    },
    {
      "name": "_pResizerGripperControl._endTrack",
      "params": [
        "target",
        "x",
        "y"
      ],
      "calls": [
        "parent._endTrack"
      ]
    },
    {
      "name": "_pResizerGripperControl._setTrackInfo",
      "params": [
        "target",
        "x",
        "y"
      ],
      "calls": [
        "parent._setTrackInfo"
      ]
    },
    {
      "name": "_pResizerGripperControl._getTrackInfo",
      "params": [],
      "calls": [
        "parent._getTrackInfo"
      ]
    },
    {
      "name": "_pResizerGripperControl._clearTrackInfo",
      "params": [],
      "calls": [
        "parent._clearTrackInfo"
      ]
    },
    {
      "name": "nexacro.ResizerControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pResizerControl.on_destroy_contents",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "nexacro.Component.prototype.on_destroy_contents.call",
        "this._cancelEvent",
        "this._destroyGhostControl",
        "this._destroyGripper",
        "this._movetrack_animationframe.destroy",
        "this._movetrack_animationframe.stop"
      ]
    },
    {
      "name": "_pResizerControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "control_elem.setElementOverflow",
        "nexacro.Component.prototype.on_created_contents.call",
        "this.getElement",
        "this.on_apply_direction"
      ]
    },
    {
      "name": "_pResizerControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pResizerControl.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "nexacro.Component.prototype.on_update_position.call",
        "this._repositionGripper"
      ]
    },
    {
      "name": "_pResizerControl.set_type",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_type",
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pResizerControl.on_apply_type",
      "params": [],
      "calls": []
    },
    {
      "name": "_pResizerControl.set_direction",
      "params": [
        "v"
      ],
      "calls": [
        "direction_enum.indexOf",
        "this.on_apply_direction"
      ]
    },
    {
      "name": "_pResizerControl.on_apply_direction",
      "params": [],
      "calls": [
        "this._createGripper",
        "this._destroyGripper",
        "this._isRtl",
        "this.getElement",
        "this.set_cursor"
      ]
    },
    {
      "name": "_pResizerControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._setEnableGripper"
      ]
    },
    {
      "name": "_pResizerControl._cancelEvent",
      "params": [],
      "calls": [
        "this._getTrackInfo",
        "trackinfo.target._endTrack"
      ]
    },
    {
      "name": "_pResizerControl._on_starttrack",
      "params": [],
      "calls": [
        "rootcomp._on_resizer_starttrack",
        "this._changeUserStatus",
        "this._getRootComponent",
        "this._setTrackInfo"
      ]
    },
    {
      "name": "_pResizerControl._on_endtrack",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "this._endTrack"
      ]
    },
    {
      "name": "_pResizerControl._on_movetrack",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.AnimationFrame",
        "rootcomp._on_resizer_movetrack",
        "this._getRootComponent",
        "this._movetrack_animationframe._setCallback",
        "this._movetrack_animationframe.start",
        "this._movetrack_animationframe.stop",
        "this._setTrackInfo"
      ]
    },
    {
      "name": "_pResizerControl._createGhostControl",
      "params": [
        "target"
      ],
      "calls": [
        "ghostcontrol.createComponent",
        "ghostcontrol.set_visible",
        "nexacro._ResizerGhostControl",
        "this._calcPositionGhostControl"
      ]
    },
    {
      "name": "_pResizerControl._calcPositionGhostControl",
      "params": [
        "target"
      ],
      "calls": [
        "nexacro._getElementXYInWindow",
        "parent.getElement",
        "target.getElement",
        "this._isRtl"
      ]
    },
    {
      "name": "_pResizerControl._destroyGhostControl",
      "params": [],
      "calls": [
        "this._ghostcontrol.destroy"
      ]
    },
    {
      "name": "_pResizerControl._calcGripperPosition",
      "params": [
        "type"
      ],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "parent._getCurrentStyleBorder"
      ]
    },
    {
      "name": "_pResizerControl._createGripper",
      "params": [],
      "calls": [
        "gripper.createComponent",
        "gripper.set_direction",
        "grippermap.forEach",
        "grippermap.set",
        "nexacro._ResizerGripperControl",
        "this._repositionGripper"
      ]
    },
    {
      "name": "_pResizerControl._destroyGripper",
      "params": [],
      "calls": [
        "gripper.destroy",
        "grippermap.clear",
        "grippermap.forEach"
      ]
    },
    {
      "name": "_pResizerControl._repositionGripper",
      "params": [],
      "calls": [
        "gripper.move",
        "grippermap.forEach",
        "this._calcGripperPosition"
      ]
    },
    {
      "name": "_pResizerControl._setEnableGripper",
      "params": [
        "v"
      ],
      "calls": [
        "gripper._setEnable",
        "grippermap.forEach"
      ]
    },
    {
      "name": "_pResizerControl._resize",
      "params": [
        "target",
        "width",
        "height",
        "endtrack"
      ],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "target._getCurrentStyleBorder",
        "target.resize",
        "this._ghostcontrol.resize"
      ]
    },
    {
      "name": "_pResizerControl._applyCursor",
      "params": [
        "cursor"
      ],
      "calls": [
        "ghost.on_apply_cursor",
        "gripper.on_apply_cursor",
        "grippermap.forEach",
        "parent.on_apply_cursor"
      ]
    },
    {
      "name": "_pResizerControl._restoreCursor",
      "params": [],
      "calls": [
        "ghost.on_apply_cursor",
        "gripper.on_apply_cursor",
        "grippermap.forEach",
        "parent.on_apply_cursor"
      ]
    },
    {
      "name": "_pResizerControl._endTrack",
      "params": [
        "target",
        "x",
        "y"
      ],
      "calls": [
        "rootcomp._isRtl",
        "rootcomp._on_resizer_endtrack",
        "target._changeUserStatus",
        "target._clearTrackInfo",
        "target._getRootComponent",
        "target._movetrack_animationframe.stop"
      ]
    },
    {
      "name": "_pResizerControl._setTrackInfo",
      "params": [
        "target",
        "x",
        "y"
      ],
      "calls": []
    },
    {
      "name": "_pResizerControl._getTrackInfo",
      "params": [],
      "calls": []
    },
    {
      "name": "_pResizerControl._clearTrackInfo",
      "params": [],
      "calls": []
    }
  ],
  "ScrollBar.js": [
    {
      "name": "nexacro.ScrollBarControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "nexacro.Rect"
      ]
    },
    {
      "name": "_pScrollBar.on_get_css_assumedtypename",
      "params": [],
      "calls": []
    },
    {
      "name": "_pScrollBar.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.Button",
        "this._p_decbutton._setControl",
        "this._p_decbutton.createComponent",
        "this._p_incbutton._setControl",
        "this._p_incbutton.createComponent",
        "this._p_trackbar._setControl",
        "this._p_trackbar.createComponent"
      ]
    },
    {
      "name": "_pScrollBar.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "decbutton.on_created",
        "incbutton.on_created",
        "this._recalcLayout",
        "trackbar.on_created"
      ]
    },
    {
      "name": "_pScrollBar.on_destroy_contents",
      "params": [],
      "calls": [
        "this._p_decbutton.destroy",
        "this._p_incbutton.destroy",
        "this._p_trackbar.destroy"
      ]
    },
    {
      "name": "_pScrollBar.on_create_contents_command",
      "params": [],
      "calls": [
        "this._p_decbutton.createCommand",
        "this._p_incbutton.createCommand",
        "this._p_trackbar.createCommand",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollBar.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._p_decbutton.attachHandle",
        "this._p_incbutton.attachHandle",
        "this._p_trackbar.attachHandle"
      ]
    },
    {
      "name": "_pScrollBar.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollBar._on_repeat",
      "params": [
        "fromComp",
        "x",
        "y"
      ],
      "calls": [
        "this._getCumulativeZoomFactor",
        "this.on_decbutton_lbuttondown",
        "this.on_incbutton_lbuttondown",
        "this.on_page_click"
      ]
    },
    {
      "name": "_pScrollBar._on_startrepeat",
      "params": [
        "fromComp",
        "x",
        "y"
      ],
      "calls": [
        "this._getCumulativeZoomFactor",
        "this.on_decbutton_lbuttondown",
        "this.on_incbutton_lbuttondown",
        "this.on_page_click"
      ]
    },
    {
      "name": "_pScrollBar.set_barminsize",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollBar.set_baroutsize",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollBar.set_decbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollBar.set_imgoutsize",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollBar.set_incbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollBar.set_trackbarsize",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollBar.set_pos",
      "params": [
        "v"
      ],
      "calls": [
        "this._setPos"
      ]
    },
    {
      "name": "_pScrollBar.on_apply_resize",
      "params": [],
      "calls": [
        "this._recalcLayout",
        "this.on_fire_onsize"
      ]
    },
    {
      "name": "_pScrollBar.on_apply_move",
      "params": [],
      "calls": [
        "this._recalcLayout",
        "this.on_fire_onmove"
      ]
    },
    {
      "name": "_pScrollBar.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_decbutton._setEnable",
        "this._p_incbutton._setEnable",
        "this._p_trackbar._setEnable"
      ]
    },
    {
      "name": "_pScrollBar.on_fire_onscroll",
      "params": [
        "pos",
        "strType",
        "isscrolling",
        "sdir",
        "evtkind"
      ],
      "calls": [
        "nexacro.ScrollEventInfo",
        "this.onscroll._fireEvent"
      ]
    },
    {
      "name": "_pScrollBar.on_incbutton_lbuttondown",
      "params": [
        "obj"
      ],
      "calls": [
        "this._getIncNewPosPixel",
        "this._isRtl",
        "this._resetTrackBar",
        "this._scroll_reverse_convert",
        "this.on_fire_onscroll"
      ]
    },
    {
      "name": "_pScrollBar.on_decbutton_lbuttondown",
      "params": [
        "obj"
      ],
      "calls": [
        "this._getDecNewPosPixel",
        "this._isRtl",
        "this._resetTrackBar",
        "this._scroll_reverse_convert",
        "this.on_fire_onscroll"
      ]
    },
    {
      "name": "_pScrollBar._on_starttrack",
      "params": [],
      "calls": [
        "nexacro.ScrollBarControl.prototype._starttrack.call"
      ]
    },
    {
      "name": "_pScrollBar._on_endtrack",
      "params": [
        "/*x",
        "y",
        "dragdata*/"
      ],
      "calls": [
        "nexacro.ScrollBarControl.prototype._endtrack.call"
      ]
    },
    {
      "name": "_pScrollBar._on_movetrack",
      "params": [
        "x",
        "y/*",
        "dragdata*/"
      ],
      "calls": [
        "nexacro.ScrollBarControl.prototype._movetrack.call"
      ]
    },
    {
      "name": "_pScrollBar.on_page_click",
      "params": [
        "obj",
        "nX",
        "nY"
      ],
      "calls": [
        "this._isRtl",
        "this._resetTrackBar",
        "this._scroll_reverse_convert",
        "this.on_fire_onscroll"
      ]
    },
    {
      "name": "_pScrollBar.set_direction",
      "params": [
        "v"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollBar._scroll_convert_pixel",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pScrollBar._scroll_reverse_convert",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pScrollBar._setPos",
      "params": [
        "v",
        "evtkind",
        "bfireevent"
      ],
      "calls": [
        "this._isEnable",
        "this._resetTrackBar",
        "this._scroll_convert_pixel",
        "this.on_fire_onscroll"
      ]
    },
    {
      "name": "_pScrollBar._setScrollPos",
      "params": [
        "si_pos"
      ],
      "calls": [
        "this._recalcLayout",
        "this._scroll_reverse_convert"
      ]
    },
    {
      "name": "_pScrollBar.set_min",
      "params": [
        "min"
      ],
      "calls": [
        "this._recalcLayout",
        "this._scroll_reverse_convert"
      ]
    },
    {
      "name": "_pScrollBar.set_max",
      "params": [
        "max"
      ],
      "calls": [
        "this._recalcLayout",
        "this._scroll_reverse_convert"
      ]
    },
    {
      "name": "_pScrollBar._setScrollInfo",
      "params": [
        "left",
        "top",
        "width",
        "height",
        "si_min",
        "si_max",
        "si_line",
        "si_page",
        "si_view",
        "si_enable",
        "si_pos"
      ],
      "calls": [
        "control_elem.setElementPosition",
        "control_elem.setElementSize",
        "this._recalcLayout",
        "this._scroll_reverse_convert",
        "this._setEnable",
        "this._updateClientSize",
        "this.move",
        "this.on_fire_onmove",
        "this.on_fire_onsize"
      ]
    },
    {
      "name": "_pScrollBar._set_touch_pos",
      "params": [
        "v",
        "isScrolling",
        "dir"
      ],
      "calls": [
        "this._resetTrackBar",
        "this._scroll_reverse_convert",
        "this.on_fire_onscroll"
      ]
    },
    {
      "name": "_pScrollBar._recalcLayout",
      "params": [],
      "calls": [
        "this._getClientLeft",
        "this._getClientTop",
        "this._p_decbutton.move",
        "this._p_incbutton.move",
        "this._rectshaft.set",
        "this._resetTrackBar"
      ]
    },
    {
      "name": "_pScrollBar._resetTrackBar",
      "params": [
        "l",
        "t",
        "r",
        "b"
      ],
      "calls": [
        "this._getWindow",
        "this._p_trackbar.move",
        "this._p_trackbar.on_created",
        "this._p_trackbar.set_visible",
        "this._setRealEnable"
      ]
    },
    {
      "name": "_pScrollBar._setRealEnable",
      "params": [
        "enable"
      ],
      "calls": [
        "this._changeStatus",
        "this._p_decbutton._setEnable",
        "this._p_incbutton._setEnable",
        "this._p_trackbar._setEnable"
      ]
    },
    {
      "name": "_pScrollBar._moveTrackBar",
      "params": [
        "rctrack",
        "rcbound"
      ],
      "calls": [
        "this._p_trackbar.move"
      ]
    },
    {
      "name": "_pScrollBar._starttrack",
      "params": [],
      "calls": [
        "this.on_fire_onscroll"
      ]
    },
    {
      "name": "_pScrollBar._endtrack",
      "params": [],
      "calls": [
        "this._resetTrackBar",
        "this.on_fire_onscroll"
      ]
    },
    {
      "name": "_pScrollBar._movetrack",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "this._moveTrackBar",
        "this._scroll_reverse_convert",
        "this.on_fire_onscroll"
      ]
    },
    {
      "name": "_pScrollBar._getIncNewPosPixel",
      "params": [],
      "calls": []
    },
    {
      "name": "_pScrollBar._getDecNewPosPixel",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.ScrollIndicatorControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.ScrollBarControl.call"
      ]
    },
    {
      "name": "_pScrollIndicatorControl.on_get_css_assumedtypename",
      "params": [],
      "calls": []
    },
    {
      "name": "_pScrollIndicatorControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.Button",
        "this._p_trackbar._setControl",
        "this._p_trackbar.createComponent"
      ]
    },
    {
      "name": "_pScrollIndicatorControl.on_created_contents",
      "params": [
        "/*win*/"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollIndicatorControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._p_trackbar.destroy"
      ]
    },
    {
      "name": "_pScrollIndicatorControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this._p_trackbar.createCommand",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pScrollIndicatorControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._p_trackbar.attachHandle"
      ]
    },
    {
      "name": "_pScrollIndicatorControl.set_pos",
      "params": [
        "v"
      ],
      "calls": [
        "this._setPos"
      ]
    },
    {
      "name": "_pScrollIndicatorControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_trackbar._setEnable"
      ]
    },
    {
      "name": "_pScrollIndicatorControl._setRealEnable",
      "params": [
        "enable"
      ],
      "calls": [
        "this._p_trackbar._setEnable"
      ]
    },
    {
      "name": "_pScrollIndicatorControl._recalcLayout",
      "params": [],
      "calls": [
        "this._getClientLeft",
        "this._getClientTop",
        "this._rectshaft.set",
        "this._resetTrackBar"
      ]
    },
    {
      "name": "_pScrollIndicatorControl._on_repeat",
      "params": [
        "fromComp",
        "x",
        "y"
      ],
      "calls": [
        "this._getCumulativeZoomFactor",
        "this.on_page_click"
      ]
    },
    {
      "name": "_pScrollIndicatorControl._on_startrepeat",
      "params": [
        "fromComp",
        "x",
        "y"
      ],
      "calls": [
        "this._getCumulativeZoomFactor",
        "this.on_page_click"
      ]
    },
    {
      "name": "_pScrollIndicatorControl._getIncNewPosPixel",
      "params": [],
      "calls": []
    },
    {
      "name": "_pScrollIndicatorControl._getDecNewPosPixel",
      "params": [],
      "calls": []
    }
  ],
  "Sketch.js": [
    {
      "name": "nexacro.SketchLoadEventInfo",
      "params": [
        "obj",
        "id",
        "url"
      ],
      "calls": []
    },
    {
      "name": "nexacro.SketchErrorEventInfo",
      "params": [
        "obj",
        "id",
        "fireerrorcode",
        "errormsg",
        "errortype",
        "errstatus",
        "imageurl",
        "locationuri"
      ],
      "calls": []
    },
    {
      "name": "nexacro.SketchEventInfo",
      "params": [
        "obj",
        "id",
        "handle"
      ],
      "calls": []
    },
    {
      "name": "nexacro.Sketch",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.ColorObject",
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pSketch.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.CanvasElement",
        "nexacro.SketchEditControl",
        "nexacro.TextBoxElement",
        "nexacro._getLanguage",
        "nexacro.addErrorMessage",
        "sketchtextarea._getCurrentStyleInheritValue",
        "sketchtextarea._setControl",
        "sketchtextarea._setEventHandler",
        "sketchtextarea.createComponent",
        "text_elem.setElementColor",
        "text_elem.setElementFont",
        "text_elem.setElementSize",
        "text_elem.setElementText",
        "text_elem.setElementTextAlign",
        "text_elem.setElementVerticalAlign",
        "this._canvas_elem.setElementSize",
        "this._canvas_elem_bg.setElementSize",
        "this._canvas_elem_tmp.setElementSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getCurrentStyleInheritValue",
        "this.getElement"
      ]
    },
    {
      "name": "_pSketch.on_created_contents",
      "params": [
        "_window"
      ],
      "calls": [
        "canvas_elem.create",
        "canvas_elem.setElementLineCap",
        "canvas_elem.setElementLineJoin",
        "canvas_elem.setElementSize",
        "canvas_elem_bg.create",
        "canvas_elem_bg.setElementLineCap",
        "canvas_elem_bg.setElementLineJoin",
        "canvas_elem_bg.setElementSize",
        "canvas_elem_tmp.create",
        "canvas_elem_tmp.setElementLineCap",
        "canvas_elem_tmp.setElementLineJoin",
        "canvas_elem_tmp.setElementSize",
        "control_elem.bringToFrontElement",
        "sketchtextarea.on_created",
        "sketchtextarea.set_height",
        "sketchtextarea.set_imemode",
        "sketchtextarea.set_readonly",
        "sketchtextarea.set_usecontextmenu",
        "sketchtextarea.set_visible",
        "sketchtextarea.set_width",
        "text_elem.create",
        "this._canvas_elem._getElementScreenXY",
        "this._canvas_elem.setElementTextBaseline",
        "this._canvas_elem_bg.setElementTextBaseline",
        "this._canvas_elem_tmp.setElementTextBaseline",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getWindow",
        "this.getElement",
        "this.on_apply_applystyletype",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pSketch.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "canvas_elem.create",
        "canvas_elem.setElementLineCap",
        "canvas_elem.setElementLineJoin",
        "canvas_elem.setElementSize",
        "canvas_elem.setElementTextBaseline",
        "canvas_elem_bg.create",
        "canvas_elem_bg.setElementLineCap",
        "canvas_elem_bg.setElementLineJoin",
        "canvas_elem_bg.setElementSize",
        "canvas_elem_bg.setElementTextBaseline",
        "canvas_elem_tmp.create",
        "canvas_elem_tmp.setElementLineCap",
        "canvas_elem_tmp.setElementLineJoin",
        "canvas_elem_tmp.setElementSize",
        "canvas_elem_tmp.setElementTextBaseline",
        "control_elem.bringToFrontElement",
        "sketchtextarea.on_created",
        "sketchtextarea.set_height",
        "sketchtextarea.set_imemode",
        "sketchtextarea.set_readonly",
        "sketchtextarea.set_usecontextmenu",
        "sketchtextarea.set_visible",
        "sketchtextarea.set_width",
        "text_elem.create",
        "this._canvas_elem._getElementScreenXY",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getWindow",
        "this.getElement",
        "this.on_apply_applystyletype",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pSketch.on_destroy_contents",
      "params": [],
      "calls": [
        "canvas_elem.destroy",
        "canvas_elem_bg.destroy",
        "canvas_elem_tmp.destroy"
      ]
    },
    {
      "name": "_pSketch.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "text_elem.setElementSize",
        "this._canvas_elem.setElementSize",
        "this._canvas_elem_bg.setElementSize",
        "this._canvas_elem_tmp.setElementSize",
        "this._restoreSketch"
      ]
    },
    {
      "name": "_pSketch.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": []
    },
    {
      "name": "_pSketch.set_enableredraw",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._redrawPath"
      ]
    },
    {
      "name": "_pSketch.set_editmode",
      "params": [
        "editmode"
      ],
      "calls": [
        "this.set_cursor"
      ]
    },
    {
      "name": "_pSketch.set_imemode",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_imemode"
      ]
    },
    {
      "name": "_pSketch.on_apply_imemode",
      "params": [],
      "calls": [
        "this.sketchtextarea.set_imemode"
      ]
    },
    {
      "name": "_pSketch.set_usecontextmenu",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usecontextmenu"
      ]
    },
    {
      "name": "_pSketch.on_apply_usecontextmenu",
      "params": [],
      "calls": [
        "this.sketchtextarea.set_usecontextmenu"
      ]
    },
    {
      "name": "_pSketch.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pSketch.on_apply_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "sketchtextarea.set_readonly",
        "this._changeStatus"
      ]
    },
    {
      "name": "_pSketch._set_value",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pSketch.on_apply_color",
      "params": [
        "color"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_color.call",
        "sketchtextarea.set_color"
      ]
    },
    {
      "name": "_pSketch.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "control_elem.sendToBackElement",
        "nexacro.TextBoxElement",
        "text_elem.create",
        "text_elem.setElementSize",
        "text_elem.setElementText",
        "text_elem.setElementTextAlign",
        "text_elem.setElementVerticalAlign",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getRootWindow",
        "this.on_apply_wordWrap"
      ]
    },
    {
      "name": "_pSketch.on_apply_wordWrap",
      "params": [],
      "calls": [
        "this._text_elem.setElementWordWrap"
      ]
    },
    {
      "name": "_pSketch.on_apply_expr",
      "params": [],
      "calls": [
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pSketch.set_cssclass",
      "params": [
        "cssname"
      ],
      "calls": [
        "cssname.split",
        "this.on_apply_prop_class"
      ]
    },
    {
      "name": "_pSketch.loadSketch",
      "params": [
        "url"
      ],
      "calls": [
        "this._loadSketch"
      ]
    },
    {
      "name": "_pSketch.saveSketch",
      "params": [
        "format",
        "option"
      ],
      "calls": [
        "canvas_elem.toDataURL",
        "img.setBase64String",
        "nexacro._ImageType.calcImageQuality",
        "nexacro._ImageType.getImageType",
        "this._set_value",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pSketch._restoreSketch",
      "params": [],
      "calls": [
        "nexacro.ImageSketchBackground",
        "nexacro._getImageLocation",
        "nexacro._getURIValue",
        "this._currentStrokes",
        "this._getRefFormBaseUrl",
        "this._image.set_src",
        "this._regenStroke"
      ]
    },
    {
      "name": "_pSketch.saveSketchToFile",
      "params": [
        "fileName",
        "fileType",
        "option"
      ],
      "calls": [
        "canvas_elem.toDataURL",
        "fileName.lastIndexOf",
        "img.setBase64String",
        "imgObj.setBase64String",
        "imgObj.set_src",
        "nexacro.Image",
        "nexacro._GetSystemErrorMsg",
        "nexacro._ImageType.getImageType",
        "nexacro._saveCanvasToImageFile",
        "nexacro._saveToImageFile",
        "this._getRefFormBaseUrl",
        "this._set_value",
        "this.on_fire_onerror",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pSketch.undo",
      "params": [],
      "calls": [
        "this._checkEditmode",
        "this._undo"
      ]
    },
    {
      "name": "_pSketch.redo",
      "params": [],
      "calls": [
        "this._checkEditmode",
        "this._redo"
      ]
    },
    {
      "name": "_pSketch.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pSketch.setBrushType",
      "params": [
        "type"
      ],
      "calls": [
        "this._checkEditmode"
      ]
    },
    {
      "name": "_pSketch.setBrushSize",
      "params": [
        "size"
      ],
      "calls": [
        "this._checkEditmode"
      ]
    },
    {
      "name": "_pSketch.setBrushColor",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.ColorObject",
        "sketchtextarea.set_color",
        "this._checkEditmode",
        "this.on_apply_color"
      ]
    },
    {
      "name": "_pSketch.setTextFont",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro.FontObject",
        "sketchtextarea.set_font",
        "this._checkEditmode",
        "this._getCurrentStyleInheritValue"
      ]
    },
    {
      "name": "_pSketch.setTextColor",
      "params": [
        "strcolor"
      ],
      "calls": [
        "nexacro.ColorObject",
        "this._checkEditmode",
        "this.set_color",
        "this.textedit.set_color"
      ]
    },
    {
      "name": "_pSketch.setEraseSize",
      "params": [
        "size"
      ],
      "calls": [
        "this._checkEditmode"
      ]
    },
    {
      "name": "_pSketch.drawText",
      "params": [
        "x",
        "y",
        "text",
        "multiline"
      ],
      "calls": [
        "this._checkEditmode",
        "this._drawText",
        "this._initPath"
      ]
    },
    {
      "name": "_pSketch.drawStroke",
      "params": [
        "x",
        "y",
        "start"
      ],
      "calls": [
        "this._checkEditmode",
        "this._drawStroke"
      ]
    },
    {
      "name": "_pSketch.drawErase",
      "params": [
        "x",
        "y",
        "start"
      ],
      "calls": [
        "this._checkEditmode",
        "this._drawStroke"
      ]
    },
    {
      "name": "_pSketch.drawStamp",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch.drawTextBox",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch.setStampImage",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch.setTextBoxBkColor",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch.moveTextEditor",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch.resizeTextEditor",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch.clear",
      "params": [],
      "calls": [
        "this._checkEditmode",
        "this._clear",
        "this._isEnableRedraw",
        "this.getDisplayText",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pSketch.showTextEditor",
      "params": [
        "x",
        "y",
        "width",
        "height",
        "text"
      ],
      "calls": [
        "this._drawPath",
        "this._endPath",
        "this._initPath",
        "this._showTextEditor"
      ]
    },
    {
      "name": "_pSketch.hideTextEditor",
      "params": [
        "clear"
      ],
      "calls": [
        "this._hideTextEditor"
      ]
    },
    {
      "name": "_pSketch.redraw",
      "params": [],
      "calls": [
        "this._redrawPath"
      ]
    },
    {
      "name": "_pSketch.on_notify_edit_onkillfocus",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._drawText",
        "this._initPath",
        "this._resetTextEdit"
      ]
    },
    {
      "name": "_pSketch.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pSketch.on_fire_sys_onfling",
      "params": [
        "elem",
        "touch_manager",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onfling.call"
      ]
    },
    {
      "name": "_pSketch.on_fire_sys_onslide",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "from_comp",
        "from_refer_comp",
        "scroll_start"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_sys_onslide.call"
      ]
    },
    {
      "name": "_pSketch.on_fire_ontouchmove",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "this.on_fire_onmousemove"
      ]
    },
    {
      "name": "_pSketch.on_fire_onmousemove",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._getElementPositionInFrame",
        "nexacro._isMobile",
        "this._getWindow",
        "this._getWindowHandle",
        "this._moveAction",
        "this.getElement"
      ]
    },
    {
      "name": "_pSketch._moveAction",
      "params": [
        "button",
        "clientX",
        "clientY"
      ],
      "calls": [
        "nexacro._getCurrentBodyScrollTop",
        "nexacro._isMobile",
        "this._checkEditmode",
        "this._drawPath"
      ]
    },
    {
      "name": "_pSketch.on_fire_ontouchstart",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "this.on_fire_onlbuttondown"
      ]
    },
    {
      "name": "_pSketch._on_touch_lbuttondown",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_touch_lbuttondown",
        "this._on_onlbuttondown"
      ]
    },
    {
      "name": "_pSketch._on_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._getCurrentBodyScrollTop",
        "nexacro._isMobile",
        "this._checkEditmode",
        "this._delete_text",
        "this._drawPath",
        "this._endPath",
        "this._getForm",
        "this._getWindowHandle",
        "this._initPath",
        "this._on_focus",
        "this.sketchtextarea.set_visible"
      ]
    },
    {
      "name": "_pSketch.on_fire_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._on_onlbuttondown"
      ]
    },
    {
      "name": "_pSketch.on_fire_ontouchend",
      "params": [
        "touchinfos",
        "changedtouchinfos",
        "from_comp",
        "from_refer_comp"
      ],
      "calls": [
        "this.on_fire_onlbuttonup"
      ]
    },
    {
      "name": "_pSketch.on_fire_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro._isMobile",
        "this._checkEditmode",
        "this._delete_text",
        "this._endPath",
        "this._getForm"
      ]
    },
    {
      "name": "_pSketch._on_touch_lbuttonup",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "from_elem"
      ],
      "calls": [
        "this._getFromComponent",
        "this._on_bubble_touch_lbuttonup",
        "this.on_fire_onlbuttonup"
      ]
    },
    {
      "name": "_pSketch._endPath",
      "params": [],
      "calls": [
        "nexacro.ColorObject",
        "this._regenStroke"
      ]
    },
    {
      "name": "_pSketch.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.InputEventInfo",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pSketch.on_notify_oninput",
      "params": [],
      "calls": [
        "this.on_fire_oninput"
      ]
    },
    {
      "name": "_pSketch.on_fire_onload",
      "params": [
        "obj",
        "imageurl"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.SketchLoadEventInfo"
      ]
    },
    {
      "name": "_pSketch.on_fire_onerror",
      "params": [
        "obj",
        "fireerrorcode",
        "errormsg",
        "returncode",
        "errstatus",
        "imageurl",
        "locationuri"
      ],
      "calls": [
        "event._fireEvent",
        "nexacro.SketchErrorEventInfo"
      ]
    },
    {
      "name": "_pSketch.on_fire_onsuccess",
      "params": [
        "handle"
      ],
      "calls": [
        "nexacro.SketchEventInfo",
        "this.onsuccess._fireEvent"
      ]
    },
    {
      "name": "_pSketch._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": []
    },
    {
      "name": "_pSketch._refresh_contents",
      "params": [],
      "calls": [
        "this.on_update_accessibility",
        "this.on_update_style_align",
        "this.on_update_style_background",
        "this.on_update_style_border",
        "this.on_update_style_bordertype",
        "this.on_update_style_color",
        "this.on_update_style_cursor",
        "this.on_update_style_font",
        "this.on_update_style_gradation",
        "this.on_update_style_opacity",
        "this.on_update_style_padding",
        "this.on_update_style_shadow"
      ]
    },
    {
      "name": "_pSketch._setImageValue",
      "params": [
        "image"
      ],
      "calls": [
        "_image.setBase64String",
        "image.getBase64String",
        "this._canvas_elem.toDataURL"
      ]
    },
    {
      "name": "_pSketch._setImageType",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._transImageBase64StringFormat",
        "v.toString"
      ]
    },
    {
      "name": "_pSketch._loadSketch",
      "params": [
        "url"
      ],
      "calls": [
        "JSON.stringify",
        "nexacro.Device.exec",
        "nexacro.ImageSketchBackground",
        "nexacro._GetSystemErrorMsg",
        "nexacro._getImageLocation",
        "nexacro._getImageSize",
        "nexacro._getURIValue",
        "nexacro._isHybrid",
        "this._clearCanvas",
        "this._delete_text",
        "this._getRefFormBaseUrl",
        "this._image.set_src",
        "this._initHistory",
        "this._isEnableRedraw",
        "this._p_parent._getRefFormBaseUrl",
        "this._setImageType",
        "this._setImageValue",
        "this._setRedoUndo",
        "this._set_value",
        "this.on_fire_onerror",
        "url.lastIndexOf",
        "url.substring"
      ]
    },
    {
      "name": "_pSketch._imageload",
      "params": [
        "url",
        "imgsize",
        "size",
        "imgobj",
        "status"
      ],
      "calls": [
        "this._set_value"
      ]
    },
    {
      "name": "_pSketch._drawText",
      "params": [
        "_style",
        "x",
        "y",
        "text",
        "multiline"
      ],
      "calls": [
        "canvas_elem.drawFillText",
        "canvas_elem.setElementFillStyle",
        "canvas_elem.setElementFont",
        "canvas_elem.setElementGlobalCompositeOperation",
        "canvas_elem_tmp.drawFillText",
        "canvas_elem_tmp.setElementFillStyle",
        "canvas_elem_tmp.setElementFont",
        "canvas_elem_tmp.setElementGlobalCompositeOperation",
        "nexacro.ColorObject",
        "nexacro._toString",
        "text.indexOf",
        "text.replace",
        "this._delete_text",
        "this._isEnableRedraw",
        "this.sketchtextarea._getCurrentStyleInheritValue"
      ]
    },
    {
      "name": "_pSketch._drawStroke",
      "params": [
        "_style",
        "mode",
        "x",
        "y",
        "start"
      ],
      "calls": [
        "this._checkEditmode",
        "this._delete_text",
        "this._drawPath",
        "this._endPath",
        "this._initPath"
      ]
    },
    {
      "name": "_pSketch._showTextEditor",
      "params": [
        "x",
        "y",
        "width",
        "height",
        "text"
      ],
      "calls": [
        "sketchtextarea.setCaretPos",
        "sketchtextarea.setFocus",
        "sketchtextarea.setSelect",
        "sketchtextarea.set_height",
        "sketchtextarea.set_left",
        "sketchtextarea.set_top",
        "sketchtextarea.set_value",
        "sketchtextarea.set_visible",
        "sketchtextarea.set_width",
        "this._checkEditmode",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pSketch._hideTextEditor",
      "params": [
        "clear"
      ],
      "calls": [
        "_window._removeFromCurrentFocusPath",
        "sketchtextarea.set_value",
        "sketchtextarea.set_visible",
        "this._checkEditmode",
        "this._control_element.setElementFocus",
        "this._getWindow",
        "this._isEnableRedraw",
        "this.textedit.set_left",
        "this.textedit.set_top"
      ]
    },
    {
      "name": "_pSketch._redrawPathData",
      "params": [
        "path"
      ],
      "calls": [
        "this._clearCanvas",
        "this._isEnableRedraw",
        "this._loadSketch",
        "this._regenStroke"
      ]
    },
    {
      "name": "_pSketch._undoPathData",
      "params": [
        "path"
      ],
      "calls": [
        "this._clearPathCanvas",
        "this._isEnableRedraw",
        "this._loadSketch",
        "this._regenStroke"
      ]
    },
    {
      "name": "_pSketch._redoPathData",
      "params": [
        "path"
      ],
      "calls": [
        "this._clearCanvas",
        "this._isEnableRedraw",
        "this._loadSketch",
        "this._regenStroke"
      ]
    },
    {
      "name": "_pSketch._drawBcurve",
      "params": [
        "path",
        "canavs_elem"
      ],
      "calls": [
        "canavs_elem.lineTo",
        "canavs_elem.moveTo",
        "canavs_elem.stroke",
        "this._clone",
        "this._setupCanvasElem"
      ]
    },
    {
      "name": "_pSketch._drawUserStroke",
      "params": [
        "path",
        "canavs_elem"
      ],
      "calls": [
        "canavs_elem.lineTo",
        "canavs_elem.moveTo",
        "canavs_elem.stroke",
        "this._setupCanvasElem"
      ]
    },
    {
      "name": "_pSketch._setupCanvasElem",
      "params": [
        "canavs_elem",
        "p1"
      ],
      "calls": [
        "canavs_elem.beginPath",
        "canavs_elem.moveTo",
        "canavs_elem.setElementGlobalCompositeOperation",
        "canavs_elem.setElementLineCap",
        "canavs_elem.setElementLineWidth",
        "canavs_elem.setElementStrokeStyle"
      ]
    },
    {
      "name": "_pSketch._regenStroke",
      "params": [
        "path",
        "canavs_elem"
      ],
      "calls": [
        "this._clone",
        "this._drawBcurve",
        "this._drawText",
        "this._drawUserStroke",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pSketch._clone",
      "params": [
        "obj"
      ],
      "calls": [
        "obj.constructor",
        "this._clone"
      ]
    },
    {
      "name": "_pSketch._undo",
      "params": [],
      "calls": [
        "control_elem.bringToFrontElement",
        "this._currentStrokes",
        "this._isEnableRedraw",
        "this._setRedoUndo",
        "this._undoPathData",
        "this._undoable",
        "this.getDisplayText",
        "this.getElement",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pSketch._redo",
      "params": [],
      "calls": [
        "this._currentStrokes",
        "this._delete_text",
        "this._redoPathData",
        "this._redoable",
        "this._setRedoUndo",
        "this.getDisplayText",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pSketch._redrawPath",
      "params": [],
      "calls": [
        "this._currentStrokes",
        "this._delete_text",
        "this._redrawPathData",
        "this._setRedoUndo",
        "this.getDisplayText",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pSketch._checkEditmode",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch._clearCanvasElem",
      "params": [
        "elem"
      ],
      "calls": [
        "elem.clearRect"
      ]
    },
    {
      "name": "_pSketch._clearCanvas",
      "params": [
        "bEnableRedaw"
      ],
      "calls": [
        "this._clearCanvasElem"
      ]
    },
    {
      "name": "_pSketch._clearPathCanvas",
      "params": [
        "bEnableRedaw"
      ],
      "calls": [
        "this._clearCanvasElem"
      ]
    },
    {
      "name": "_pSketch._clear",
      "params": [
        "flag"
      ],
      "calls": [
        "this._clearCanvas",
        "this._hideTextEditor",
        "this._initHistory",
        "this._setRedoUndo",
        "this._set_value"
      ]
    },
    {
      "name": "_pSketch._setRedoUndo",
      "params": [],
      "calls": [
        "this._redoable",
        "this._undoable"
      ]
    },
    {
      "name": "_pSketch._drawPath",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "this._currentPath.push",
        "this._delete_text",
        "this._regenStroke"
      ]
    },
    {
      "name": "_pSketch._initPath",
      "params": [
        "_style",
        "_editmode",
        "clientX",
        "clientY",
        "opt",
        "clientwidth",
        "clientheight",
        "clienttext"
      ],
      "calls": [
        "this._add",
        "this._clone",
        "this._endPath",
        "this._resetTextEdit",
        "this._setRedoUndo",
        "this._showTextEditor"
      ]
    },
    {
      "name": "_pSketch._resetTextEdit",
      "params": [
        "arg"
      ],
      "calls": [
        "sketchtextarea.set_left",
        "sketchtextarea.set_top",
        "this._hideTextEditor",
        "this._setRedoUndo",
        "this._undo"
      ]
    },
    {
      "name": "_pSketch._initHistory",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch._add",
      "params": [
        "action"
      ],
      "calls": [
        "this._history.push",
        "this._history.splice"
      ]
    },
    {
      "name": "_pSketch._freeze",
      "params": [
        "index"
      ],
      "calls": []
    },
    {
      "name": "_pSketch._undoable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch._redoable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSketch._currentStrokes",
      "params": [],
      "calls": [
        "jQuery.merge",
        "strokes.push"
      ]
    },
    {
      "name": "_pSketch._delete_text",
      "params": [],
      "calls": [
        "this._getWindow",
        "this._isEnableRedraw",
        "this._text_elem.destroy"
      ]
    },
    {
      "name": "_pSketch._isParentdefaultprevented",
      "params": [
        "comp",
        "event_name"
      ],
      "calls": []
    },
    {
      "name": "_pSketch._getClientXY",
      "params": [
        "canvasX",
        "canvasY"
      ],
      "calls": [
        "border._getBorderLeftWidth",
        "border._getBorderTopWidth",
        "nexacro._getCurrentBodyScrollTop",
        "this._getCurrentStyleBorder"
      ]
    },
    {
      "name": "nexacro.SketchEditControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.TextArea.call"
      ]
    },
    {
      "name": "_pSketchEditControl.on_fire_sys_onlbuttondown",
      "params": [],
      "calls": [
        "nexacro.TextArea.prototype.on_fire_sys_onlbuttondown.call"
      ]
    },
    {
      "name": "_pSketchEditControl.on_fire_sys_ontouchstart",
      "params": [],
      "calls": [
        "nexacro.TextArea.prototype.on_fire_sys_ontouchstart.call"
      ]
    },
    {
      "name": "_pSketchEditControl.on_fire_onclick",
      "params": [],
      "calls": [
        "nexacro.TextArea.prototype.on_fire_onclick.call"
      ]
    },
    {
      "name": "_pSketchEditControl.on_fire_ontab",
      "params": [],
      "calls": [
        "nexacro.TextArea.prototype.on_fire_ontab.call"
      ]
    },
    {
      "name": "nexacro.ImageSketchBackground",
      "params": [
        "target"
      ],
      "calls": [
        "nexacro.Image.call"
      ]
    },
    {
      "name": "_pImageSketchBackground.on_load",
      "params": [
        "imageurl",
        "width",
        "height",
        "handle",
        "errstatus",
        "temp",
        "fireerrorcode",
        "returncode",
        "path",
        "locationuri"
      ],
      "calls": [
        "canvas_elem.drawImage",
        "nexacro._GetSystemErrorMsg",
        "sketch._canvas_elem_tmp.drawImage",
        "sketch._getRefFormBaseUrl",
        "sketch._isEnableRedraw",
        "sketch._setImageValue",
        "sketch.on_fire_onerror",
        "sketch.on_fire_onload"
      ]
    },
    {
      "name": "_pImageSketchBackground.set_src",
      "params": [
        "v"
      ],
      "calls": [
        "canvas_elem.drawImage",
        "nexacro._getImageObject",
        "sketch._canvas_elem_tmp.drawImage",
        "sketch._isEnableRedraw",
        "this._p_parent._getRefFormBaseUrl"
      ]
    }
  ],
  "Spin.js": [
    {
      "name": "nexacro.SpinEventInfo",
      "params": [
        "obj",
        "id",
        "beforeText",
        "beforeValue",
        "afterText",
        "afterValue",
        "isUp"
      ],
      "calls": []
    },
    {
      "name": "nexacro.Spin",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pSpin.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._SpinButtonControl",
        "nexacro._SpinEditControl",
        "spindownbutton.createComponent",
        "spinedit.createComponent",
        "spinedit.set_limitbymask",
        "spinupbutton.createComponent",
        "this.getElement"
      ]
    },
    {
      "name": "_pSpin.on_created_contents",
      "params": [],
      "calls": [
        "this._on_created_accessibility_contents",
        "this._p_spindownbutton.on_created",
        "this._p_spinedit.on_apply_usesoftkeyboard",
        "this._p_spinedit.on_created",
        "this._p_spinupbutton.on_created",
        "this._recalcLayout",
        "this._setDefaultProp",
        "this._setEventHandlerToCalendarEdit",
        "this._setEventHandlerToSpinButtons",
        "this._updateButton",
        "this.on_apply_displaycomma",
        "this.on_apply_displayinvalidtext",
        "this.on_apply_displaynulltext",
        "this.on_apply_readonly",
        "this.on_apply_type",
        "this.on_apply_usecontextmenu",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpin.on_destroy_contents",
      "params": [],
      "calls": [
        "this._p_spindownbutton.destroy",
        "this._p_spinedit.destroy",
        "this._p_spinupbutton.destroy"
      ]
    },
    {
      "name": "_pSpin.on_create_contents_command",
      "params": [],
      "calls": [
        "this._p_spindownbutton.createCommand",
        "this._p_spinedit.createCommand",
        "this._p_spinedit.on_apply_usesoftkeyboard",
        "this._p_spinupbutton.createCommand",
        "this._setEventHandlerToCalendarEdit",
        "this._setEventHandlerToSpinButtons",
        "this.on_apply_displaycomma",
        "this.on_apply_readonly",
        "this.on_apply_type",
        "this.on_apply_usecontextmenu",
        "this.on_apply_usesoftkeyboard",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpin.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._on_attach_accessibility_contents_handle",
        "this._p_spindownbutton.attachHandle",
        "this._p_spinedit.attachHandle",
        "this._p_spinupbutton.attachHandle",
        "this._recalcLayout",
        "this._setDefaultProp",
        "this._setEventHandlerToCalendarEdit",
        "this._setEventHandlerToSpinButtons",
        "this._updateButton",
        "this.on_apply_displayinvalidtext",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pSpin.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pSpin._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "spinedit._on_focus"
      ]
    },
    {
      "name": "_pSpin.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "spindownbutton.on_apply_cssclass",
        "spinedit.on_apply_cssclass",
        "spinupbutton.on_apply_cssclass"
      ]
    },
    {
      "name": "_pSpin.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_spindownbutton._setEnable",
        "this._p_spinedit._setEnable",
        "this._p_spinupbutton._setEnable"
      ]
    },
    {
      "name": "_pSpin.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._getStringResourceProperty",
        "this.on_apply_displayinvalidtext",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pSpin.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSpin.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._setValue"
      ]
    },
    {
      "name": "_pSpin.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "this._convertValueType",
        "this._setValue"
      ]
    },
    {
      "name": "_pSpin.on_apply_accessibility",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_accessibility.call",
        "this._p_spinedit.on_apply_accessibility"
      ]
    },
    {
      "name": "_pSpin._getAccessibilityReadLabel",
      "params": [
        "bwholeread"
      ],
      "calls": [
        "nexacro.Component.prototype._getAccessibilityReadLabel.call",
        "this._p_spinedit._input_element._wantAccessibilityAdditionalLabel"
      ]
    },
    {
      "name": "_pSpin._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": []
    },
    {
      "name": "_pSpin.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this._convertValueType",
        "this._setValue",
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pSpin.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro._isNull",
        "spinedit._updateAccessibilityLabel",
        "spinedit.set_format",
        "spinedit.set_value",
        "this._getSpinFormatType",
        "this._setAccessibilityInfoValueCur",
        "this._updateAccessibilityLabel"
      ]
    },
    {
      "name": "_pSpin.set_usesoftkeyboard",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pSpin.on_apply_usesoftkeyboard",
      "params": [],
      "calls": [
        "this._getUseSoftKeyboardValue",
        "this._p_spinedit.set_usesoftkeyboard"
      ]
    },
    {
      "name": "_pSpin.set_displaynulltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isNull",
        "nexacro._toString",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pSpin.on_apply_displaynulltext",
      "params": [
        "displaynulltext"
      ],
      "calls": [
        "spinedit.set_displaynulltext"
      ]
    },
    {
      "name": "_pSpin.set_displayinvalidtext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_displayinvalidtext"
      ]
    },
    {
      "name": "_pSpin.on_apply_displayinvalidtext",
      "params": [
        "v"
      ],
      "calls": [
        "spinedit.set_displayinvalidtext"
      ]
    },
    {
      "name": "_pSpin.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pSpin.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "spindownbutton._setEnable",
        "spinedit.set_readonly",
        "spinupbutton._setEnable",
        "this._changeStatus"
      ]
    },
    {
      "name": "_pSpin.set_type",
      "params": [
        "v"
      ],
      "calls": [
        "this._recalcLayout",
        "this.on_apply_readonly",
        "this.on_apply_type",
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pSpin.on_apply_type",
      "params": [
        "type"
      ],
      "calls": [
        "spinedit.set_visible"
      ]
    },
    {
      "name": "_pSpin.set_locale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale"
      ]
    },
    {
      "name": "_pSpin.on_apply_locale",
      "params": [
        "locale"
      ],
      "calls": [
        "spinedit._setLocale"
      ]
    },
    {
      "name": "_pSpin.set_usecontextmenu",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usecontextmenu"
      ]
    },
    {
      "name": "_pSpin.on_apply_usecontextmenu",
      "params": [
        "usecontextmenu"
      ],
      "calls": [
        "spinedit.set_usecontextmenu"
      ]
    },
    {
      "name": "_pSpin.set_buttonposition",
      "params": [
        "v"
      ],
      "calls": [
        "buttonposition_enum.indexOf",
        "this.on_apply_buttonposition"
      ]
    },
    {
      "name": "_pSpin.on_apply_buttonposition",
      "params": [
        "buttonposition"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pSpin.set_buttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_buttonsize"
      ]
    },
    {
      "name": "_pSpin.on_apply_buttonsize",
      "params": [
        "buttonsize"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pSpin.set_circulation",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._updateButton",
        "this.on_apply_circulation"
      ]
    },
    {
      "name": "_pSpin.on_apply_circulation",
      "params": [
        "circulation"
      ],
      "calls": [
        "this._updateButton"
      ]
    },
    {
      "name": "_pSpin.set_displaycomma",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._setDefaultText",
        "this.on_apply_displaycomma",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpin.on_apply_displaycomma",
      "params": [
        "displaycomma"
      ],
      "calls": [
        "spinedit.set_format",
        "this._getSpinFormatType"
      ]
    },
    {
      "name": "_pSpin.set_increment",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pSpin.set_max",
      "params": [
        "v"
      ],
      "calls": [
        "this._setAccessibilityInfoValueMax",
        "this._setDefaultProp",
        "this._updateButton",
        "this.on_apply_max",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpin.on_apply_max",
      "params": [
        "max"
      ],
      "calls": []
    },
    {
      "name": "_pSpin.set_min",
      "params": [
        "v"
      ],
      "calls": [
        "this._setAccessibilityInfoValueMin",
        "this._setDefaultProp",
        "this._updateButton",
        "this.on_apply_min",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpin.on_apply_min",
      "params": [
        "min"
      ],
      "calls": []
    },
    {
      "name": "_pSpin.setRange",
      "params": [
        "min",
        "max"
      ],
      "calls": [
        "this.set_max",
        "this.set_min"
      ]
    },
    {
      "name": "_pSpin.getCaretPos",
      "params": [],
      "calls": [
        "spinedit.getCaretPos"
      ]
    },
    {
      "name": "_pSpin.setCaretPos",
      "params": [
        "v"
      ],
      "calls": [
        "spinedit.setCaretPos"
      ]
    },
    {
      "name": "_pSpin.getSelect",
      "params": [],
      "calls": [
        "spinedit.getSelect"
      ]
    },
    {
      "name": "_pSpin.setSelect",
      "params": [
        "start",
        "end"
      ],
      "calls": [
        "spinedit.setSelect"
      ]
    },
    {
      "name": "_pSpin.getSelectedText",
      "params": [],
      "calls": [
        "spinedit.getSelectedText"
      ]
    },
    {
      "name": "_pSpin.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pSpin._on_value_change",
      "params": [],
      "calls": [
        "spinedit._p_text.replace",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pSpin._on_spin_up",
      "params": [],
      "calls": [
        "maskobj.applyMask",
        "nexacro._isNull",
        "this._calcValue",
        "this._getMaskObj",
        "this._updateButton",
        "this.on_apply_value",
        "this.on_fire_onspin"
      ]
    },
    {
      "name": "_pSpin._on_spin_down",
      "params": [],
      "calls": [
        "maskobj.applyMask",
        "nexacro._isNull",
        "this._calcValue",
        "this._getMaskObj",
        "this._updateButton",
        "this.on_apply_value",
        "this.on_fire_onspin"
      ]
    },
    {
      "name": "_pSpin._on_edit_oneditclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_oneditclick"
      ]
    },
    {
      "name": "_pSpin._on_edit_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_spin_down",
        "this._on_spin_up",
        "this._on_value_change"
      ]
    },
    {
      "name": "_pSpin._on_edit_oninput",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._isEnable",
        "this.on_fire_oninput"
      ]
    },
    {
      "name": "_pSpin._on_upbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_spin_up"
      ]
    },
    {
      "name": "_pSpin._on_downbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_spin_down"
      ]
    },
    {
      "name": "_pSpin.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "spinedit._on_focus",
        "this._changeStatus"
      ]
    },
    {
      "name": "_pSpin.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "_win._indexOfCurrentFocusPaths",
        "input_elem.setElementBlur",
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this._getRootWindow",
        "this._on_value_change"
      ]
    },
    {
      "name": "_pSpin.on_fire_oneditclick",
      "params": [
        "obj",
        "caretpos",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.EditClickEventInfo",
        "this.oneditclick._fireEvent"
      ]
    },
    {
      "name": "_pSpin.on_fire_canchange",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.canchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pSpin.on_fire_onchanged",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pSpin.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.InputEventInfo",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pSpin.on_fire_onspin",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue",
        "isUp"
      ],
      "calls": [
        "nexacro.SpinEventInfo",
        "this.onspin._fireCheckEvent"
      ]
    },
    {
      "name": "_pSpin._recalcLayout",
      "params": [],
      "calls": [
        "Math.floor",
        "spindownbutton.move",
        "spinedit.move",
        "spinupbutton.move",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pSpin._updateButton",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "spindownbutton._changeStatus",
        "spindownbutton._setEnable",
        "spinedit._setEnable",
        "spinupbutton._changeStatus",
        "spinupbutton._setEnable",
        "this._isEnable",
        "this._isInvalidValue",
        "this.getElement"
      ]
    },
    {
      "name": "_pSpin._calcValue",
      "params": [
        "val",
        "inc",
        "bAdd"
      ],
      "calls": [
        "Math.pow",
        "Math.round",
        "inc.toString",
        "strInc.indexOf",
        "strInc.substring",
        "strVal.indexOf",
        "strVal.substring",
        "val.toString"
      ]
    },
    {
      "name": "_pSpin._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro.Component.prototype._convertValueType.call",
        "nexacro._isNull"
      ]
    },
    {
      "name": "_pSpin._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "this._setDefaultProp",
        "this._updateButton",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpin._setDefaultProp",
      "params": [],
      "calls": [
        "this._setDefaultText",
        "this._setDefaultValue"
      ]
    },
    {
      "name": "_pSpin._setDefaultValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSpin._setDefaultText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSpin._setLocale",
      "params": [
        "v"
      ],
      "calls": [
        "this._setDefaultText",
        "this.on_apply_locale",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpin._setEnableView",
      "params": [
        "v"
      ],
      "calls": [
        "spinedit._setEnableView"
      ]
    },
    {
      "name": "_pSpin._setEventHandlerToCalendarEdit",
      "params": [],
      "calls": [
        "spinedit._setEventHandler"
      ]
    },
    {
      "name": "_pSpin._setEventHandlerToSpinButtons",
      "params": [],
      "calls": [
        "spindownbutton._setEventHandler",
        "spinupbutton._setEventHandler"
      ]
    },
    {
      "name": "_pSpin._getSpinFormatType",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSpin._getMaskObj",
      "params": [],
      "calls": [
        "spinedit._getMaskObj"
      ]
    },
    {
      "name": "_pSpin._isInvalidValue",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pSpin._on_getDisplayText",
      "params": [],
      "calls": [
        "spinedit._on_getDisplayText"
      ]
    },
    {
      "name": "nexacro._SpinEditControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.MaskEdit.call",
        "this._setControl"
      ]
    },
    {
      "name": "_pSpinEditControl._getFromComponent",
      "params": [
        "comp"
      ],
      "calls": [
        "nexacro.Component.prototype._getFromComponent.call",
        "parent._isPopupVisible"
      ]
    },
    {
      "name": "_pSpinEditControl._isInvalidValue",
      "params": [
        "v"
      ],
      "calls": [
        "this._p_parent._isInvalidValue"
      ]
    },
    {
      "name": "_pSpinEditControl._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.setElementDefaultValue",
        "input_elem.setElementFocus",
        "input_elem.setElementValue",
        "maskobj.applyMask",
        "maskobj.setEditStatus",
        "nexacro._isNull",
        "nexacro._notifyAccessibilityInputElement",
        "this._changeUserStatus",
        "this._getAccessibilityReadLabel",
        "this._getEmptyText",
        "this._getMaskObj",
        "this._isComponentKeydownAction",
        "this._isInvalidValue"
      ]
    },
    {
      "name": "nexacro._SpinButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pSpinButtonControl.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "spin._apply_setfocus"
      ]
    }
  ],
  "SpinField.js": [
    {
      "name": "nexacro.SpinField",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.TextField.call",
        "nexacro._EditMaskTypeNumber"
      ]
    },
    {
      "name": "_pSpinField.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.TextField.prototype.on_create_contents.call",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pSpinField.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.TextField.prototype.on_created_contents.call",
        "this.on_apply_displaycomma"
      ]
    },
    {
      "name": "_pSpinField.on_create_contents_command",
      "params": [],
      "calls": [
        "nexacro.TextField.prototype.on_create_contents_command.call",
        "this.on_apply_displaycomma"
      ]
    },
    {
      "name": "_pSpinField.on_after_created_ext",
      "params": [],
      "calls": [
        "nexacro.TextField.prototype.on_after_created_ext.call",
        "this._setEventHandlerToCalendarEdit",
        "this._setEventHandlerToSpinButtons"
      ]
    },
    {
      "name": "_pSpinField.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.TextField.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pSpinField.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "this._convertValueType",
        "this._setValue"
      ]
    },
    {
      "name": "_pSpinField.set_buttontype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_buttontype",
        "type_enum.indexOf"
      ]
    },
    {
      "name": "_pSpinField.on_apply_buttontype",
      "params": [
        "v"
      ],
      "calls": [
        "_box._buttonbox_elem.create",
        "_box._create_buttonbox",
        "_box._recalc_box",
        "_box._remove_buttonbox",
        "_box.on_change_containerRect",
        "nexacro._ButtonBoxElement",
        "this._getWindow"
      ]
    },
    {
      "name": "_pSpinField.set_displaycomma",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._setDefaultText",
        "this.on_apply_displaycomma",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpinField.on_apply_displaycomma",
      "params": [
        "displaycomma"
      ],
      "calls": [
        "this._getSpinFieldFormatType",
        "this._on_apply_format"
      ]
    },
    {
      "name": "_pSpinField.set_max",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_max",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpinField.on_apply_max",
      "params": [
        "max"
      ],
      "calls": []
    },
    {
      "name": "_pSpinField.set_min",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_min",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpinField.on_apply_min",
      "params": [
        "min"
      ],
      "calls": []
    },
    {
      "name": "_pSpinField._on_apply_format",
      "params": [
        "mask"
      ],
      "calls": [
        "mask.replace",
        "maskobj.setMask",
        "this._box._on_apply_inputtype"
      ]
    },
    {
      "name": "_pSpinField.on_apply_contentheight",
      "params": [],
      "calls": [
        "this._box._recalc_box",
        "this._box.on_change_containerRect",
        "this._recalc_contents"
      ]
    },
    {
      "name": "_pSpinField._getSpinFieldFormatType",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSpinField._calcValue",
      "params": [
        "val",
        "inc",
        "bAdd"
      ],
      "calls": [
        "Math.pow",
        "Math.round",
        "inc.toString",
        "strInc.indexOf",
        "strInc.substring",
        "strVal.indexOf",
        "strVal.substring",
        "val.toString"
      ]
    },
    {
      "name": "_pSpinField._on_spin_up",
      "params": [],
      "calls": [
        "maskobj.applyMask",
        "nexacro._isNull",
        "this._calcValue",
        "this._updateButton",
        "this.on_apply_value",
        "this.on_fire_onspin"
      ]
    },
    {
      "name": "_pSpinField._on_spin_down",
      "params": [],
      "calls": [
        "maskobj.applyMask",
        "nexacro._isNull",
        "this._calcValue",
        "this._updateButton",
        "this.on_apply_value",
        "this.on_fire_onspin"
      ]
    },
    {
      "name": "_pSpinField.on_fire_canchange",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.canchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pSpinField.on_fire_onchanged",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pSpinField.on_fire_onspin",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue",
        "isUp"
      ],
      "calls": [
        "nexacro.SpinEventInfo",
        "this.onspin._fireCheckEvent"
      ]
    },
    {
      "name": "_pSpinField.on_fire_oninput",
      "params": [],
      "calls": [
        "input_element.isComposing",
        "input_element.setElementValue",
        "nexacro.InputEventInfo",
        "this._checkInputValidate",
        "this._getInputElement",
        "this._invalidStatus",
        "this._needChangeInputValue",
        "this._setCharCount",
        "this._setFocusToNextComponent",
        "this._validStatus",
        "this.on_invalid",
        "this.on_valid",
        "this.oninput._fireEvent",
        "v.substr"
      ]
    },
    {
      "name": "_pSpinField._setEventHandlerToSpinButtons",
      "params": [
        "spinfieldbox"
      ],
      "calls": [
        "spindownbutton._setEventHandler",
        "spinupbutton._setEventHandler"
      ]
    },
    {
      "name": "_pSpinField._on_upbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_spin_up"
      ]
    },
    {
      "name": "_pSpinField._on_downbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_spin_down"
      ]
    },
    {
      "name": "_pSpinField.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this._checkApplyValidate",
        "this._convertValueType",
        "this._getInputElement",
        "this._invalidStatus",
        "this._needChangeInputValue",
        "this._setValue",
        "this._validStatus",
        "this.applyto_bindSource",
        "this.on_invalid",
        "this.on_valid"
      ]
    },
    {
      "name": "_pSpinField.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "_form.getFocus",
        "input_elem.getElementCaretPos",
        "input_elem.getElementText",
        "input_elem.input_elem.setElementText",
        "input_elem.setElementValue",
        "this._getForm",
        "this._getInputElement",
        "this._isContainsText",
        "this._isFocused",
        "this._refreshLabel",
        "this._setCharCount",
        "this._setLabelFloating",
        "this._undostack.push",
        "this._updateAccessibilityLabel",
        "value.toString"
      ]
    },
    {
      "name": "_pSpinField._checkApplyValidate",
      "params": [
        "value",
        "input_check"
      ],
      "calls": [
        "numberpattern.test",
        "pattern.test",
        "this._input_element._getValidity"
      ]
    },
    {
      "name": "_pSpinField.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": [
        "input_elem.setElementTextAlign",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pSpinField._on_edit_onkeydown",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._on_spin_down",
        "this._on_spin_up",
        "this._on_value_change"
      ]
    },
    {
      "name": "_pSpinField._setEventHandlerToCalendarEdit",
      "params": [
        "box"
      ],
      "calls": [
        "box._setEventHandler"
      ]
    },
    {
      "name": "_pSpinField.set_increment",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pSpinField.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "_win._indexOfCurrentFocusPaths",
        "nexacro.FieldBase.prototype.on_killfocus_basic_action.call",
        "this._confirmValue",
        "this._getInputElement",
        "this._getRootWindow"
      ]
    },
    {
      "name": "_pSpinField._on_value_change",
      "params": [],
      "calls": [
        "cur_text.replace",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pSpinField._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro.Component.prototype._convertValueType.call",
        "nexacro._isNull"
      ]
    },
    {
      "name": "nexacro.SpinFieldBox",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.TextFieldBox.call"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.TextFieldBox.prototype.on_create_contents.call",
        "nexacro._ButtonBoxElement",
        "nexacro._SpinFieldSpinButtonControl",
        "this._p_numberdownbutton.createComponent",
        "this._p_numberupbutton.createComponent"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.TextFieldBox.prototype.on_created_contents.call",
        "this._getLocale",
        "this.on_apply_locale"
      ]
    },
    {
      "name": "_pSpinFieldBox._updateLeadingButton",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.FieldBaseIconControl",
        "spinupbutton.createComponent",
        "spinupbutton.set_flexgrow",
        "this._isFlexible"
      ]
    },
    {
      "name": "_pSpinFieldBox._updateTrailingButton",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.FieldBaseIconControl",
        "spindownbutton.createComponent",
        "spindownbutton.set_flexgrow",
        "this._isFlexible"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_create_contents_command",
      "params": [],
      "calls": [
        "_buttonbox.createCommand",
        "this._getLocale",
        "this._input_element.createCommand",
        "this._leadbutton.createCommand",
        "this._postfixctrl.createCommand",
        "this._prefixctrl.createCommand",
        "this._trailbutton.createCommand",
        "this.on_apply_locale"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.TextFieldBox.prototype.on_attach_contents_handle.call",
        "this._p_numberdownbutton.attachHandle",
        "this._p_numberupbutton.attachHandle"
      ]
    },
    {
      "name": "_pSpinFieldBox._remove_buttonbox",
      "params": [],
      "calls": [
        "this._buttonbox_elem.destroy",
        "this._getWindow",
        "this._p_numberdownbutton._control_element.appendChildElement",
        "this._p_numberdownbutton.on_created",
        "this._p_numberupbutton._control_element.appendChildElement",
        "this._p_numberupbutton.on_created"
      ]
    },
    {
      "name": "_pSpinFieldBox._create_buttonbox",
      "params": [],
      "calls": [
        "this._getWindow",
        "this._p_numberdownbutton._control_element.appendChildElement",
        "this._p_numberdownbutton.on_created",
        "this._p_numberupbutton._control_element.appendChildElement",
        "this._p_numberupbutton.on_created"
      ]
    },
    {
      "name": "_pSpinFieldBox._move_button",
      "params": [
        "button",
        "left",
        "top",
        "width",
        "height"
      ],
      "calls": [
        "button.move"
      ]
    },
    {
      "name": "_pSpinFieldBox._recalc_box",
      "params": [],
      "calls": [
        "buttonbox_elem.setElementPosition",
        "buttonbox_elem.setElementSize",
        "postfixtext._on_getFitSize",
        "prefixtext._on_getFitSize",
        "spinbuttonsize.split",
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth",
        "this._getCurrentStyleBorder",
        "this._isFlexible",
        "this._p_parent.getFloatingLabelHeight",
        "this._recalc_box_inputelem",
        "this._recalc_box_postfixtext",
        "this._recalc_box_prefixtext",
        "this._recalc_spinbutton"
      ]
    },
    {
      "name": "_pSpinFieldBox._recalc_box_icon",
      "params": [],
      "calls": [
        "iconsize.split"
      ]
    },
    {
      "name": "_pSpinFieldBox._recalc_spinbutton",
      "params": [],
      "calls": [
        "spinbuttonsize.split",
        "spindownbutton._initControlElementLayoutProps",
        "spindownbutton.move",
        "spinupbutton._initControlElementLayoutProps",
        "spinupbutton.move",
        "this._getClientHeight",
        "this._isFlexible",
        "this._p_parent._getClientWidth"
      ]
    },
    {
      "name": "_pSpinFieldBox._recalc_box_prefixtext",
      "params": [
        "leadingspace"
      ],
      "calls": [
        "prefixtext._initControlElementLayoutProps",
        "prefixtext._on_getFitSize",
        "prefixtext.getElement",
        "prefixtext.move",
        "this._getClientHeight",
        "this._getClientTop",
        "this._isFlexible"
      ]
    },
    {
      "name": "_pSpinFieldBox._recalc_box_postfixtext",
      "params": [
        "leadingspace"
      ],
      "calls": [
        "postfixtext._initControlElementLayoutProps",
        "postfixtext._on_getFitSize",
        "postfixtext.getElement",
        "postfixtext.move",
        "this._getClientHeight",
        "this._getClientTop",
        "this._isFlexible"
      ]
    },
    {
      "name": "_pSpinFieldBox._recalc_box_inputelem",
      "params": [
        "input_elem",
        "input_width",
        "input_leadingspace"
      ],
      "calls": [
        "input_elem.setElementPosition",
        "input_elem.setElementSize",
        "this._getClientHeight",
        "this._getClientTop",
        "this._isFlexible"
      ]
    },
    {
      "name": "_pSpinFieldBox._getWantLabelLeft",
      "params": [],
      "calls": [
        "nexacro.TextFieldBox.prototype._getWantLabelLeft.call",
        "this._getClientHeight"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalc_box"
      ]
    },
    {
      "name": "_pSpinFieldBox._getMaskObj",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSpinFieldBox._on_apply_inputtype",
      "params": [],
      "calls": [
        "input_elem.setElementInputType",
        "maskobj.getInputMode",
        "this._getMaskObj"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_apply_locale",
      "params": [
        "locale"
      ],
      "calls": [
        "maskobj.setLocale",
        "this._getMaskObj"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_keypress_basic_action",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key"
      ],
      "calls": [
        "nexacro.MaskEdit.prototype.on_keypress_basic_action.call"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_lbuttondown_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_lbuttondown_default_action"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_lbuttonup_default_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_lbuttonup_default_action"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_beforekeyinput_basic_action",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "nexacro.MaskEdit.prototype.on_beforekeyinput_basic_action.call"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_fire_onclick"
      ]
    },
    {
      "name": "_pSpinFieldBox._beforeinput_process_with_HTMLEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "nexacro.MaskEdit.prototype._beforeinput_process_with_HTMLEvent.call"
      ]
    },
    {
      "name": "_pSpinFieldBox._beforeinput_process_with_NexacroInputEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end"
      ],
      "calls": [
        "nexacro.MaskEdit.prototype._beforeinput_process_with_NexacroInputEvent.call"
      ]
    },
    {
      "name": "_pSpinFieldBox.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this._p_parent._on_value_change"
      ]
    },
    {
      "name": "_pSpinFieldBox._update_down_button",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro._SpinFieldSpinButtonControl",
        "numberdownbutton.createComponent",
        "this.destroyNumberDownButton"
      ]
    },
    {
      "name": "_pSpinFieldBox.destroyNumberUpButton",
      "params": [],
      "calls": [
        "this._p_numberupbutton.destroy"
      ]
    },
    {
      "name": "_pSpinFieldBox.destroyNumberDownButton",
      "params": [],
      "calls": [
        "this._p_numberdownbutton.destroy"
      ]
    },
    {
      "name": "_pSpinFieldBox.recalcButton",
      "params": [],
      "calls": [
        "spindownbutton._initControlElementLayoutProps",
        "spindownbutton.move",
        "spinupbutton._initControlElementLayoutProps",
        "spinupbutton.move"
      ]
    },
    {
      "name": "nexacro._SpinFieldSpinButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    }
  ],
  "SpinnerControl.js": [
    {
      "name": "nexacro.SpinnerControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "this._setFlingScrollBezier",
        "this._setFlingScrollMaxDistance"
      ]
    },
    {
      "name": "_pSpinnerControl._vibrate",
      "params": [],
      "calls": [
        "navigator.vibrate"
      ]
    },
    {
      "name": "_pSpinnerControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_focus.call",
        "nexacro.FieldBaseTextControl"
      ]
    },
    {
      "name": "._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": ".on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call"
      ]
    },
    {
      "name": "_pSpinnerControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": []
    },
    {
      "name": "_pSpinnerControl.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSpinnerControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": []
    },
    {
      "name": "_pSpinnerControl.on_after_created",
      "params": [],
      "calls": [
        "nexacro.Component",
        "overlay._control_element.setElementPointerEvents",
        "overlay.createComponent",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._limitDecimal",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpinnerControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._aniframe_adjust.destroy",
        "this._scrolltask.destroy"
      ]
    },
    {
      "name": "_pSpinnerControl._getMaxItemWidth",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.max",
        "border._getBorderWidth",
        "nexacro._getTextSize",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this.getElement"
      ]
    },
    {
      "name": "_pSpinnerControl._correctScrollPos",
      "params": [
        "pos"
      ],
      "calls": []
    },
    {
      "name": "_pSpinnerControl._limitDecimal",
      "params": [
        "number"
      ],
      "calls": [
        "nexacro._limitDecimal"
      ]
    },
    {
      "name": "_pSpinnerControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._control_element.setElementScrollMaxSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._limitDecimal",
        "this._onResetScrollBar",
        "this._scrollCurrent"
      ]
    },
    {
      "name": "_pSpinnerControl._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call",
        "this._curritem._setFocus"
      ]
    },
    {
      "name": "_pSpinnerControl._getDataRow",
      "params": [
        "rowidx"
      ],
      "calls": []
    },
    {
      "name": "_pSpinnerControl._isLastDataRow",
      "params": [
        "datarow"
      ],
      "calls": []
    },
    {
      "name": "_pSpinnerControl._isFirstDataRow",
      "params": [
        "datarow"
      ],
      "calls": []
    },
    {
      "name": "_pSpinnerControl._setValues",
      "params": [
        "values"
      ],
      "calls": [
        "Math.floor",
        "this._getData",
        "this._getDataRow",
        "this._getScreenRowCount",
        "this._scrollCurrent"
      ]
    },
    {
      "name": "_pSpinnerControl.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSpinnerControl.on_apply_value",
      "params": [],
      "calls": [
        "this._curritem._setFocus",
        "this._getCurrentDataRow",
        "this._scrollCurrent"
      ]
    },
    {
      "name": "_pSpinnerControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._isEnable"
      ]
    },
    {
      "name": "_pSpinnerControl._getCurrentDataRow",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSpinnerControl._animateAdjustScroll",
      "params": [
        "kind",
        "no_ani",
        "no_fire"
      ],
      "calls": [
        "Math.min",
        "Math.pow",
        "aniframe.start",
        "nexacro.AnimationFrame",
        "performance.now",
        "pthis._animateAdjustScrollEnd",
        "pthis._scrollTo",
        "this._aniframe_adjust.destroy",
        "this._animateAdjustScrollEnd",
        "this._getCurrentItem",
        "this._getScreenTopItem",
        "this._isFirstDataRow",
        "this._isLastDataRow",
        "this._limitDecimal",
        "this._scrollTo",
        "this.getVScrollPos"
      ]
    },
    {
      "name": "_pSpinnerControl._animateAdjustScrollEnd",
      "params": [
        "kind",
        "no_fire"
      ],
      "calls": [
        "this._confirmValue",
        "this._curritem._setFocus",
        "this._startScrollCurrentTimer",
        "this._vibrate"
      ]
    },
    {
      "name": "_pSpinnerControl._confirmValue",
      "params": [
        "no_fire",
        "prev_next_pos"
      ],
      "calls": [
        "this._getCurrentItem",
        "this._getData",
        "this._getDataRow",
        "this.on_fire_onitemchanged"
      ]
    },
    {
      "name": "_pSpinnerControl._getCurrentItem",
      "params": [
        "postvpos",
        "prev_next_pos"
      ],
      "calls": [
        "this._getCurrentListItemIndex"
      ]
    },
    {
      "name": "_pSpinnerControl._getCurrentListItemIndex",
      "params": [
        "postvpos",
        "dir"
      ],
      "calls": [
        "this._getClientHeight",
        "this._limitDecimal",
        "this.getVScrollPos"
      ]
    },
    {
      "name": "_pSpinnerControl._getCurrentItemWithDir",
      "params": [
        "postvpos",
        "dir"
      ],
      "calls": [
        "this._getCurrentListItemIndex"
      ]
    },
    {
      "name": "_pSpinnerControl._getScreenTopItem",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._limitDecimal",
        "this.getVScrollPos"
      ]
    },
    {
      "name": "_pSpinnerControl._scrollCurrent",
      "params": [],
      "calls": [
        "Math.floor",
        "item._changeUserStatus",
        "this._getClientWidth",
        "this._getCurrentItem",
        "this._getData",
        "this._getDataRow",
        "this._getScreenRowCount",
        "this._scrollTo"
      ]
    },
    {
      "name": "_pSpinnerControl._getData",
      "params": [
        "rowidx"
      ],
      "calls": []
    },
    {
      "name": "_pSpinnerControl._getScreenRowCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSpinnerControl._startScrollCurrentTimer",
      "params": [
        "applytime"
      ],
      "calls": [
        "nexacro._CallbackTimer",
        "pthis._callbackScrollCurrentTimer",
        "this._scrolltask.start",
        "this._stopScrollCurrentTimer"
      ]
    },
    {
      "name": "_pSpinnerControl._stopScrollCurrentTimer",
      "params": [],
      "calls": [
        "this._scrolltask.destroy"
      ]
    },
    {
      "name": "_pSpinnerControl._callbackScrollCurrentTimer",
      "params": [],
      "calls": [
        "this._curritem._setFocus",
        "this._scrollCurrent",
        "this._stopScrollCurrentTimer"
      ]
    },
    {
      "name": "_pSpinnerControl.on_slidestart_default_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": [
        "this._aniframe_adjust.stop",
        "this._limitDecimal",
        "this._stopScrollCurrentTimer",
        "this.getVScrollPos"
      ]
    },
    {
      "name": "_pSpinnerControl.on_slideend_default_action",
      "params": [
        "elem",
        "touch_manager",
        "touchinfos",
        "xaccvalue",
        "yaccvalue",
        "xdeltavalue",
        "ydeltavalue",
        "refer_comp"
      ],
      "calls": [
        "Math.abs",
        "this._aniframe_adjust.stop",
        "this._animateAdjustScroll",
        "this._limitDecimal",
        "this.getVScrollPos"
      ]
    },
    {
      "name": "_pSpinnerControl.on_flingend_default_action",
      "params": [
        "elem",
        "fling_handler",
        "xstartvalue",
        "ystartvalue",
        "xdeltavalue",
        "ydeltavalue",
        "touchlen",
        "refer_comp"
      ],
      "calls": [
        "this._animateAdjustScroll",
        "this._limitDecimal",
        "this.getVScrollPos"
      ]
    },
    {
      "name": "_pSpinnerControl.on_touch_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_touch_lbuttondown_basic_action.call",
        "this._getWindow"
      ]
    },
    {
      "name": "_pSpinnerControl.on_touchstart_default_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "this._getWindow"
      ]
    },
    {
      "name": "_pSpinnerControl.on_fire_sys_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._animateAdjustScroll"
      ]
    },
    {
      "name": "_pSpinnerControl.on_fire_sys_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._animateAdjustScroll"
      ]
    },
    {
      "name": "_pSpinnerControl.on_touchend_default_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "this._animateAdjustScroll"
      ]
    },
    {
      "name": "_pSpinnerControl._keyAction",
      "params": [
        "keycode"
      ],
      "calls": [
        "this._confirmValue",
        "this._curritem._setFocus",
        "this._limitDecimal",
        "this._scrollTo",
        "this._startScrollCurrentTimer",
        "this.getVScrollPos",
        "this.set_value"
      ]
    },
    {
      "name": "_pSpinnerControl.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._keyAction"
      ]
    },
    {
      "name": "_pSpinnerControl._setVScrollDefaultAction",
      "params": [
        "wheelDelta"
      ],
      "calls": [
        "this._confirmValue",
        "this._curritem._setFocus",
        "this._limitDecimal",
        "this._scrollTo",
        "this._startScrollCurrentTimer",
        "this.getVScrollPos"
      ]
    },
    {
      "name": "_pSpinnerControl._on_beforescroll",
      "params": [
        "prehpos",
        "prevpos",
        "posthpos",
        "postvpos",
        "evttype",
        "evtkind"
      ],
      "calls": [
        "Math.abs",
        "this.on_vscroll"
      ]
    },
    {
      "name": "_pSpinnerControl.on_vscroll",
      "params": [
        "prevpos",
        "postvpos",
        "evttype",
        "evtkind"
      ],
      "calls": [
        "hide_bottom.move",
        "hide_top.move",
        "item.set_text",
        "list.pop",
        "list.push",
        "list.shift",
        "list.unshift",
        "this._confirmValue",
        "this._curritem._changeUserStatus",
        "this._getClientHeight",
        "this._getCurrentItemWithDir",
        "this._getData",
        "this._getDataRow",
        "this._getScreenRowCount",
        "this._getWindow",
        "this._vibrate",
        "this.on_fire_ononecyclechanged"
      ]
    },
    {
      "name": "_pSpinnerControl._moveScroll",
      "params": [
        "kind",
        "no_ani",
        "no_fire"
      ],
      "calls": [
        "this._animateAdjustScroll"
      ]
    },
    {
      "name": "_pSpinnerControl._on_item_click",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._confirmValue",
        "this._getClientHeight",
        "this._limitDecimal",
        "this._moveScroll",
        "this.getVScrollPos"
      ]
    },
    {
      "name": "_pSpinnerControl.on_fire_onitemchanged",
      "params": [
        "preindex",
        "pretext",
        "prevalue",
        "postindex",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ItemChangeEventInfo",
        "nexacro._toBoolean",
        "this.onitemchanged._fireEvent"
      ]
    },
    {
      "name": "_pSpinnerControl.on_fire_ononecyclechanged",
      "params": [
        "direction",
        "evtkind"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.ononecyclechanged._fireEvent"
      ]
    },
    {
      "name": "_pSpinnerControl._getCanHscroll",
      "params": [
        "hscrollbar",
        "dragscrolltype",
        "xdeltavalue"
      ],
      "calls": []
    },
    {
      "name": "_pSpinnerControl._getCanVscroll",
      "params": [
        "vscrollbar",
        "dragscrolltype",
        "ydeltavalue"
      ],
      "calls": [
        "this.getVScrollPos"
      ]
    }
  ],
  "Splitter.js": [
    {
      "name": "nexacro._SplitterGhostControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "nexacro.SplitterControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pSplitterControl.on_get_css_assumedtypename",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSplitterControl.on_create_contents",
      "params": [],
      "calls": [
        "this._createGripper",
        "this.getElement"
      ]
    },
    {
      "name": "_pSplitterControl.on_create_contents_command",
      "params": [],
      "calls": [
        "gripper.createCommand",
        "this._createGripper",
        "this.getElement"
      ]
    },
    {
      "name": "_pSplitterControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._gripper.attachHandle"
      ]
    },
    {
      "name": "_pSplitterControl.on_destroy_contents",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this._cancelEvent",
        "this._destroyGhostControl",
        "this._destroyGripper",
        "this._movetrack_animationframe.destroy",
        "this._movetrack_animationframe.stop"
      ]
    },
    {
      "name": "_pSplitterControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "control_elem.setElementOverflow",
        "gripper.create",
        "this.getElement",
        "this.on_apply_direction",
        "this.on_apply_gripmargin",
        "this.on_apply_movetype",
        "this.on_apply_zindex"
      ]
    },
    {
      "name": "_pSplitterControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "gripper.setElementPosition",
        "gripper.setElementSize"
      ]
    },
    {
      "name": "_pSplitterControl.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus/*",
        "currentstatus",
        "currentuserstatus*/"
      ],
      "calls": []
    },
    {
      "name": "_pSplitterControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSplitterControl._cancelEvent",
      "params": [],
      "calls": [
        "this._endTrack"
      ]
    },
    {
      "name": "_pSplitterControl.set_direction",
      "params": [
        "v"
      ],
      "calls": [
        "direction_enum.indexOf",
        "this.on_apply_direction"
      ]
    },
    {
      "name": "_pSplitterControl.on_apply_direction",
      "params": [],
      "calls": [
        "this.set_cursor"
      ]
    },
    {
      "name": "_pSplitterControl.set_movetype",
      "params": [
        "v"
      ],
      "calls": [
        "movetype_enum.indexOf",
        "this.on_apply_movetype"
      ]
    },
    {
      "name": "_pSplitterControl.on_apply_movetype",
      "params": [],
      "calls": [
        "this._createGhostControl",
        "this._destroyGhostControl",
        "this.getElement"
      ]
    },
    {
      "name": "_pSplitterControl.set_zindex",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_zindex"
      ]
    },
    {
      "name": "_pSplitterControl.on_apply_zindex",
      "params": [],
      "calls": [
        "this._control_element.setElementZIndex"
      ]
    },
    {
      "name": "_pSplitterControl.set_gripmargin",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toInt",
        "this.on_apply_gripmargin"
      ]
    },
    {
      "name": "_pSplitterControl.on_apply_gripmargin",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this.getElement",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pSplitterControl.move",
      "params": [
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom"
      ],
      "calls": [
        "nexacro.Component.prototype.move.call",
        "this._ghostcontrol.move",
        "this._ghostcontrol.set_visible"
      ]
    },
    {
      "name": "_pSplitterControl._on_starttrack",
      "params": [],
      "calls": [
        "ownerframe._on_splitter_starttrack",
        "this._changeUserStatus",
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pSplitterControl._on_endtrack",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "this._endTrack"
      ]
    },
    {
      "name": "_pSplitterControl._on_movetrack",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "nexacro.AnimationFrame",
        "ownerframe._on_splitter_movetrack",
        "ownerframe.set_cursor",
        "this._getOwnerFrame",
        "this._movetrack_animationframe._setCallback",
        "this._movetrack_animationframe.start",
        "this._movetrack_animationframe.stop"
      ]
    },
    {
      "name": "_pSplitterControl._createGhostControl",
      "params": [],
      "calls": [
        "ghostcontrol.createComponent",
        "ghostcontrol.set_visible",
        "nexacro._SplitterGhostControl"
      ]
    },
    {
      "name": "_pSplitterControl._destroyGhostControl",
      "params": [],
      "calls": [
        "this._ghostcontrol.destroy"
      ]
    },
    {
      "name": "_pSplitterControl._createGripper",
      "params": [
        "parent"
      ],
      "calls": [
        "gripper.setElementSize",
        "nexacro.Element",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pSplitterControl._destroyGripper",
      "params": [],
      "calls": [
        "this._gripper.destroy"
      ]
    },
    {
      "name": "_pSplitterControl._endTrack",
      "params": [
        "x",
        "y"
      ],
      "calls": [
        "ownerframe._isRtl",
        "ownerframe._on_splitter_endtrack",
        "ownerframe.set_cursor",
        "this._changeUserStatus",
        "this._getOwnerFrame",
        "this._movetrack_animationframe.stop"
      ]
    }
  ],
  "Static.js": [
    {
      "name": "nexacro._IconText",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pIconText.on_create_contents",
      "params": [],
      "calls": [
        "cellElem.setElementCSSMapInfo",
        "cellElem.setElementIcon",
        "cellElem.setElementIconPos",
        "cellElem.setElementPosition",
        "cellElem.setElementSize",
        "cellElem.setElementText",
        "cellElem.setElementTextAlign",
        "cellElem.setElementTextDecoration",
        "cellElem.setElementTextPadding",
        "cellElem.setElementTextWidth",
        "cellElem.setElementVerticalAlign",
        "cellElem.setElementWordWrap",
        "nexacro.IconTextElement",
        "this._getCSSStyleValue",
        "this._getClientLeft",
        "this._getClientTop",
        "this._on_apply_fittocontents",
        "this.getElement"
      ]
    },
    {
      "name": "_pIconText.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "cellElem.create",
        "this._on_apply_expr",
        "this._on_apply_fittocontents",
        "this._on_created_accessibility_contents",
        "this._update_position"
      ]
    },
    {
      "name": "_pIconText.on_destroy_contents",
      "params": [],
      "calls": [
        "cellElem.destroy"
      ]
    },
    {
      "name": "_pIconText.on_create_contents_command",
      "params": [],
      "calls": [
        "cellElem.createCommand",
        "this._on_apply_expr"
      ]
    },
    {
      "name": "_pIconText.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "cellElem.attachHandle",
        "this._update_position"
      ]
    },
    {
      "name": "_pIconText.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "cellElem.setElementSize"
      ]
    },
    {
      "name": "_pIconText.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "cellElem.setElementPosition"
      ]
    },
    {
      "name": "_pIconText.on_apply_status",
      "params": [
        "status",
        "userstatus"
      ],
      "calls": [
        "cellElem.setElementCSSMapInfo",
        "cellElem.setElementIcon",
        "cellElem.setElementIconPos",
        "cellElem.setElementTextPadding",
        "this._getCSSStyleValue"
      ]
    },
    {
      "name": "_pIconText._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getImageSize",
        "nexacro._getTextSize",
        "text.search",
        "this._getCSSStyleValue",
        "this._getCurrentStyleBorder",
        "this._getCurrentStyleInheritValue",
        "this._getCurrentStylePadding",
        "this._getReferenceAbsoluteFont",
        "this.getElement"
      ]
    },
    {
      "name": "_pIconText._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pIconText.set_icon",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.UrlObject",
        "this.on_apply_icon"
      ]
    },
    {
      "name": "_pIconText.on_apply_icon",
      "params": [
        "icon"
      ],
      "calls": [
        "cellElem.setElementIcon",
        "this._getCSSStyleValue"
      ]
    },
    {
      "name": "_pIconText.set_iconPosition",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_iconPosition"
      ]
    },
    {
      "name": "_pIconText.on_apply_iconPosition",
      "params": [
        "iconpos"
      ],
      "calls": [
        "cellElem.setElementIconPos",
        "this._getCSSStyleValue"
      ]
    },
    {
      "name": "_pIconText.set_textPadding",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.PaddingObject",
        "this.on_apply_textPadding"
      ]
    },
    {
      "name": "_pIconText.on_apply_textPadding",
      "params": [
        "textPadding"
      ],
      "calls": [
        "cellElem.setElementTextPadding",
        "this._getCSSStyleValue"
      ]
    },
    {
      "name": "_pIconText.set_textwidth",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_textwidth"
      ]
    },
    {
      "name": "_pIconText.on_apply_textwidth",
      "params": [
        "textwidth"
      ],
      "calls": [
        "cellElem.setElementTextWidth"
      ]
    },
    {
      "name": "_pIconText.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "cellElem.setElementText",
        "this._getAccessibilityLabel",
        "this._setAccessibilityLabel"
      ]
    },
    {
      "name": "_pIconText.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": [
        "cellElem.setElementTextAlign"
      ]
    },
    {
      "name": "_pIconText.on_apply_verticalAlign",
      "params": [
        "valign"
      ],
      "calls": [
        "cellElem.setElementVerticalAlign"
      ]
    },
    {
      "name": "_pIconText.on_apply_wordWrap",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "cellElem.setElementWordWrap",
        "this._isEnableRedraw",
        "this._update_position"
      ]
    },
    {
      "name": "_pIconText.on_apply_textDecoration",
      "params": [
        "textDecoration"
      ],
      "calls": [
        "cellElem.setElementTextDecoration",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "_pIconText._on_icon_onload",
      "params": [
        "url",
        "width",
        "height"
      ],
      "calls": [
        "this._update_position"
      ]
    },
    {
      "name": "_pIconText._getCurrentIcon",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._Icon",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pIcon.on_create_contents",
      "params": [],
      "calls": [
        "cellElem.setElementIcon",
        "cellElem.setElementPosition",
        "cellElem.setElementSize",
        "cellElem.setElementTextAlign",
        "cellElem.setElementVerticalAlign",
        "nexacro.IconElement",
        "this._getCSSStyleValue",
        "this._getClientLeft",
        "this._getClientTop",
        "this._on_apply_fittocontents",
        "this.getElement"
      ]
    },
    {
      "name": "_pIcon.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "cellElem.create",
        "this._update_position"
      ]
    },
    {
      "name": "_pIcon.on_destroy_contents",
      "params": [],
      "calls": [
        "cellElem.destroy"
      ]
    },
    {
      "name": "_pIcon.on_create_contents_command",
      "params": [],
      "calls": [
        "cellElem.createCommand"
      ]
    },
    {
      "name": "_pIcon.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "cellElem.attachHandle",
        "this._update_position"
      ]
    },
    {
      "name": "_pIcon.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "cellElem.setElementSize"
      ]
    },
    {
      "name": "_pIcon.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "cellElem.setElementPosition"
      ]
    },
    {
      "name": "_pIcon.on_apply_status",
      "params": [
        "status",
        "userstatus"
      ],
      "calls": [
        "cellElem.setElementIcon",
        "this._getCSSStyleValue"
      ]
    },
    {
      "name": "_pIcon._on_getFitSize",
      "params": [],
      "calls": [
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getImageSize",
        "this._getCSSStyleValue",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this.getElement"
      ]
    },
    {
      "name": "_pIcon._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pIcon.set_icon",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.UrlObject",
        "this.on_apply_icon"
      ]
    },
    {
      "name": "_pIcon.on_apply_icon",
      "params": [
        "icon"
      ],
      "calls": [
        "cellElem.setElementIcon",
        "this._getCSSStyleValue"
      ]
    },
    {
      "name": "_pIcon.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": [
        "cellElem.setElementTextAlign"
      ]
    },
    {
      "name": "_pIcon.on_apply_verticalAlign",
      "params": [
        "valign"
      ],
      "calls": [
        "cellElem.setElementVerticalAlign"
      ]
    },
    {
      "name": "_pIcon._on_icon_onload",
      "params": [
        "url",
        "width",
        "height"
      ],
      "calls": [
        "this._update_position"
      ]
    },
    {
      "name": "_pIcon._getCurrentIcon",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.Static",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pStatic.on_create_contents",
      "params": [],
      "calls": [
        "cellElem.setElementCSSMapInfo",
        "cellElem.setElementDecorateText",
        "cellElem.setElementPosition",
        "cellElem.setElementSize",
        "cellElem.setElementText",
        "cellElem.setElementTextAlign",
        "cellElem.setElementTextDecoration",
        "cellElem.setElementVerticalAlign",
        "cellElem.setElementWordWrap",
        "control_elem.setElementPointerEvents",
        "nexacro.TextBoxElement",
        "this._getCSSStyleValue",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getStringResourceProperty",
        "this._isEnable",
        "this._on_apply_fittocontents",
        "this.getElement"
      ]
    },
    {
      "name": "_pStatic.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "cellElem.create",
        "this._on_apply_expr",
        "this._on_created_accessibility_contents",
        "this._update_position"
      ]
    },
    {
      "name": "_pStatic.on_destroy_contents",
      "params": [],
      "calls": [
        "cellElem.destroy"
      ]
    },
    {
      "name": "_pStatic.on_create_contents_command",
      "params": [],
      "calls": [
        "cellElem.createCommand",
        "this._on_apply_expr"
      ]
    },
    {
      "name": "_pStatic.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "cellElem.attachHandle",
        "this._on_attach_accessibility_contents_handle",
        "this._update_position"
      ]
    },
    {
      "name": "_pStatic.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "cellElem.setElementSize"
      ]
    },
    {
      "name": "_pStatic.on_change_containerPos",
      "params": [
        "left",
        "top"
      ],
      "calls": [
        "cellElem.setElementPosition"
      ]
    },
    {
      "name": "_pStatic.on_apply_status",
      "params": [
        "status",
        "userstatus"
      ],
      "calls": [
        "cellElem.setElementCSSMapInfo",
        "this._getCSSStyleValue"
      ]
    },
    {
      "name": "_pStatic.on_get_prop_tabstop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pStatic._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pStatic._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getTextSize",
        "text.search",
        "this._getCSSStyleValue",
        "this._getCurrentStyleBorder",
        "this._getCurrentStyleInheritValue",
        "this._getCurrentStylePadding",
        "this._getReferenceAbsoluteFont",
        "this.getElement"
      ]
    },
    {
      "name": "_pStatic.set_usedecorate",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usedecorate"
      ]
    },
    {
      "name": "_pStatic.on_apply_usedecorate",
      "params": [],
      "calls": [
        "this._on_apply_text"
      ]
    },
    {
      "name": "_pStatic.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "cell_elem.setElementDecorateText",
        "cell_elem.setElementPointerEvents",
        "cell_elem.setElementText",
        "nexacro._getDisplayTextfromDecorateText",
        "this.on_apply_prop_accessibilitylabel"
      ]
    },
    {
      "name": "_pStatic.on_apply_prop_enable",
      "params": [],
      "calls": [
        "control_elem.setElementPointerEvents",
        "this._isEnable",
        "this.getElement"
      ]
    },
    {
      "name": "_pStatic.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": [
        "cellElem.setElementTextAlign"
      ]
    },
    {
      "name": "_pStatic.on_apply_verticalAlign",
      "params": [
        "valign"
      ],
      "calls": [
        "cellElem.setElementVerticalAlign"
      ]
    },
    {
      "name": "_pStatic.on_apply_wordWrap",
      "params": [
        "wordwrap"
      ],
      "calls": [
        "cellElem.setElementWordWrap",
        "this._isEnableRedraw",
        "this._update_position"
      ]
    },
    {
      "name": "_pStatic.on_apply_textDecoration",
      "params": [
        "textDecoration"
      ],
      "calls": [
        "cellElem.setElementTextDecoration",
        "this._isEnableRedraw"
      ]
    },
    {
      "name": "nexacro._TitleBarIconTextControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._IconText.call"
      ]
    }
  ],
  "StatusBar.js": [
    {
      "name": "nexacro.StatusBarControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Form.call"
      ]
    },
    {
      "name": "_pStatusBarControl.set_progressbarsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_progressbar"
      ]
    },
    {
      "name": "_pStatusBarControl.set_progressbargap",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_progressbar"
      ]
    },
    {
      "name": "_pStatusBarControl.on_apply_progressbar",
      "params": [
        "/*v*/"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pStatusBarControl.set_progressbardirection",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_progressbardirection"
      ]
    },
    {
      "name": "_pStatusBarControl.on_apply_progressbardirection",
      "params": [
        "v"
      ],
      "calls": [
        "progressbar.set_direction"
      ]
    },
    {
      "name": "_pStatusBarControl.set_progressbarsmooth",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_progressbarsmooth"
      ]
    },
    {
      "name": "_pStatusBarControl.on_apply_progressbarsmooth",
      "params": [
        "v"
      ],
      "calls": [
        "progressbar.set_smooth"
      ]
    },
    {
      "name": "_pStatusBarControl.set_resizable",
      "params": [
        "val"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_resizable"
      ]
    },
    {
      "name": "_pStatusBarControl._createResizeGrip",
      "params": [],
      "calls": [
        "nexacro._Icon",
        "resizegrip._setControl",
        "resizegrip.createComponent"
      ]
    },
    {
      "name": "_pStatusBarControl.on_apply_resizable",
      "params": [
        "resizable"
      ],
      "calls": [
        "resizegrip.getElement",
        "resizegrip.on_created",
        "resizegrip.set_cursor",
        "resizegrip_controlelem.setElementHittestType",
        "this._createResizeGrip",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getWindow",
        "this._recalcLayout",
        "this.getOwnerFrame",
        "this.resizegrip_elem.setElementCursor",
        "this.resizegrip_elem.setElementHittestType"
      ]
    },
    {
      "name": "_pStatusBarControl.onCreateComponent",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Component.prototype.onCreateComponent.call"
      ]
    },
    {
      "name": "_pStatusBarControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.ProgressBar",
        "nexacro.Static",
        "progressbar._setControl",
        "progressbar.createComponent",
        "statustext._setControl",
        "statustext.createComponent",
        "statustext.set_text",
        "this._createResizeGrip",
        "this.getElement"
      ]
    },
    {
      "name": "_pStatusBarControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this.on_apply_resizable",
        "this.progressbar.on_created",
        "this.resizegrip.on_created",
        "this.statustext.on_created"
      ]
    },
    {
      "name": "_pStatusBarControl.on_destroy_contents",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "progressbar.destroy",
        "resizegrip.destroy",
        "statustext.destroy"
      ]
    },
    {
      "name": "_pStatusBarControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.Form.prototype.on_change_containerRect.call",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pStatusBarControl.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "this.statustext.set_text"
      ]
    },
    {
      "name": "_pStatusBarControl._on_load_resizegripicon",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": []
    },
    {
      "name": "_pStatusBarControl._recalcLayout",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "border._getBorderWidth",
        "nexacro._getImageSize",
        "progressbar.move",
        "resizegrip._getCSSStyleValue",
        "resizegrip._getCurrentStyleBorder",
        "resizegrip._getCurrentStylePadding",
        "resizegrip.move",
        "statustext.move",
        "this._getClientLeft",
        "this._getClientTop"
      ]
    },
    {
      "name": "_pStatusBarControl._on_starttrack",
      "params": [],
      "calls": [
        "ownerframe._on_border_starttrack",
        "this._p_parent.getOwnerFrame"
      ]
    },
    {
      "name": "_pStatusBarControl._on_endtrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "ownerframe._on_border_endtrack",
        "this._p_parent.getOwnerFrame"
      ]
    },
    {
      "name": "_pStatusBarControl._on_movetrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "ownerframe._on_border_movetrack",
        "this._p_parent.getOwnerFrame"
      ]
    }
  ],
  "Step.js": [
    {
      "name": "nexacro.StepChangeEventInfo",
      "params": [
        "obj",
        "id",
        "preindex",
        "postindex"
      ],
      "calls": []
    },
    {
      "name": "nexacro.StepMouseEventInfo",
      "params": [
        "obj",
        "id",
        "index",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ClickEventInfo.call"
      ]
    },
    {
      "name": "nexacro.StepDragEventInfo",
      "params": [
        "obj",
        "id",
        "index",
        "dragdata",
        "userdata",
        "datatype",
        "filelist",
        "src_comp",
        "src_refer_comp",
        "from_comp",
        "from_refer_comp",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "meta_key"
      ],
      "calls": [
        "nexacro.DragEventInfo.call"
      ]
    },
    {
      "name": "nexacro.StepControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pStepControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.StepImageButtonControl",
        "stepButton._setEventHandler",
        "stepButton.createComponent",
        "this.getElement"
      ]
    },
    {
      "name": "_pStepControl.on_created_contents",
      "params": [
        "/*win*/"
      ],
      "calls": [
        "nexacro._getImageSize",
        "stepbutton._getCSSStyleValue",
        "this._redrawStepButton",
        "this._setStepIconSize",
        "this._updateStepLayout"
      ]
    },
    {
      "name": "_pStepControl.on_destroy_contents",
      "params": [],
      "calls": []
    },
    {
      "name": "_pStepControl.on_change_containerRect",
      "params": [
        "/*width",
        "height*/"
      ],
      "calls": [
        "this._redrawStepButton",
        "this._updateStepLayout"
      ]
    },
    {
      "name": "_pStepControl._on_getAccessibilityAdditionalLabel",
      "params": [],
      "calls": []
    },
    {
      "name": "_pStep._on_getAccessibilityAdditionalRole",
      "params": [],
      "calls": []
    },
    {
      "name": "_pStepControl.set_stepitemsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_stepitemsize"
      ]
    },
    {
      "name": "_pStepControl.on_apply_stepitemsize",
      "params": [
        "/*v*/"
      ],
      "calls": [
        "this._redrawStepButton",
        "this._updateStepLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pStepControl.set_stepitemgap",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_stepitemgap"
      ]
    },
    {
      "name": "_pStepControl.on_apply_stepitemgap",
      "params": [
        "/*v*/"
      ],
      "calls": [
        "this._redrawStepButton",
        "this._updateStepLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pStepControl.set_stepcount",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_stepcount"
      ]
    },
    {
      "name": "_pStepControl.on_apply_stepcount",
      "params": [
        "/*stepcount*/"
      ],
      "calls": [
        "this._redrawStepButton",
        "this._updateStepLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pStepControl.set_stepindex",
      "params": [
        "v"
      ],
      "calls": [
        "_form._createStepChangeAnimation",
        "cur_button._changeStatus",
        "form.on_fire_canstepchange",
        "form.on_fire_onstepchanged",
        "this.on_apply_stepindex",
        "this.on_fire_canstepchange",
        "this.on_fire_onstepchanged"
      ]
    },
    {
      "name": "_pStepControl.on_apply_stepindex",
      "params": [
        "stepindex"
      ],
      "calls": [
        "before_comp.moveToNext",
        "comp._update_position",
        "comp.on_apply_positionstep",
        "cur_button._changeUserStatus",
        "form._setHscrollPos",
        "form.getElement",
        "form_control_elem.getContainerElement",
        "form_control_elem.setElementStepIndex",
        "manager.setLayoutProperty",
        "nexacro._getLayoutManager",
        "pre_button._changeUserStatus",
        "this.getElement"
      ]
    },
    {
      "name": "_pStepControl.getStepCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pStepControl.stepIt",
      "params": [
        "forward",
        "rotate"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.set_stepindex"
      ]
    },
    {
      "name": "_pStepControl._on_icon_onload",
      "params": [
        "url",
        "width",
        "height"
      ],
      "calls": [
        "this._redrawStepButton",
        "this._setStepIconSize",
        "this._updateStepLayout"
      ]
    },
    {
      "name": "_pStepControl._on_button_onclick",
      "params": [
        "obj/*",
        "e*/"
      ],
      "calls": [
        "itemid.slice",
        "nexacro._toString",
        "this.set_stepindex"
      ]
    },
    {
      "name": "_pStepControl.on_fire_canstepchange",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.StepChangeEventInfo",
        "this.canstepchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pStepControl.on_fire_onstepchanged",
      "params": [
        "obj"
      ],
      "calls": [
        "nexacro.StepChangeEventInfo",
        "this.onstepchanged._fireEvent"
      ]
    },
    {
      "name": "_pStepControl._redrawStepButton",
      "params": [],
      "calls": [
        "items.pop",
        "nexacro.StepImageButtonControl",
        "removed_item.destroy",
        "stepbutton._changeUserStatus",
        "stepbutton._setEventHandler",
        "stepbutton.createComponent",
        "stepbutton.move",
        "stepbutton.on_apply_icon",
        "stepbutton.on_apply_iconPosition",
        "stepbutton.on_created",
        "this._getStepItemGap",
        "this._getStepItemSize"
      ]
    },
    {
      "name": "_pStepControl._updateStepLayout",
      "params": [],
      "calls": [
        "form._recalcStepLayout"
      ]
    },
    {
      "name": "_pStepControl._setStepIconSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "item._getCurrentStyleBorder",
        "item._getCurrentStylePadding"
      ]
    },
    {
      "name": "_pStepControl._getStepItemSize",
      "params": [],
      "calls": [
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "item._getCurrentStyleBorder",
        "item._getCurrentStylePadding",
        "nexacro._isNull"
      ]
    },
    {
      "name": "_pStepControl._getStepItemGap",
      "params": [],
      "calls": []
    },
    {
      "name": "_pStepControl._getItemAreaSize",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._getStepItemGap",
        "this._getStepItemSize"
      ]
    }
  ],
  "Switch.js": [
    {
      "name": "nexacro.SwitchChangedEventInfo",
      "params": [
        "obj",
        "id",
        "prevalue",
        "postvalue"
      ],
      "calls": []
    },
    {
      "name": "nexacro.SwitchClickEventInfo",
      "params": [
        "obj",
        "id",
        "prevalue",
        "postvalue"
      ],
      "calls": []
    },
    {
      "name": "nexacro.Switch",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pSwitch.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.SwitchButtonControl",
        "nexacro._IconText",
        "this._p_switchbutton.createComponent",
        "this._p_switchtext._setControl",
        "this._p_switchtext.createComponent",
        "this.getElement"
      ]
    },
    {
      "name": "_pSwitch.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._on_created_accessibility_contents",
        "this._p_switchbutton._setAccessibilityStatHidden",
        "this._p_switchbutton.on_created",
        "this._p_switchtext.on_created",
        "this._update_position",
        "this.on_apply_bartype",
        "this.on_apply_switchbuttonwidth",
        "this.on_apply_text",
        "this.on_apply_textAlign",
        "this.on_apply_textDecoration",
        "this.on_apply_textposition",
        "this.on_apply_value",
        "this.on_apply_verticalAlign",
        "this.on_apply_wordWrap"
      ]
    },
    {
      "name": "_pSwitch.on_after_created",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pSwitch.on_destroy_contents",
      "params": [],
      "calls": [
        "this._p_switchbutton.destroy",
        "this._p_switchtext.destroy"
      ]
    },
    {
      "name": "_pSwitch.on_create_contents_command",
      "params": [],
      "calls": [
        "this._p_switchbutton.createCommand",
        "this._p_switchtext.createCommand",
        "this._update_position",
        "this.on_apply_bartype",
        "this.on_apply_switchbuttonwidth",
        "this.on_apply_text",
        "this.on_apply_textAlign",
        "this.on_apply_textDecoration",
        "this.on_apply_textposition",
        "this.on_apply_value",
        "this.on_apply_verticalAlign",
        "this.on_apply_wordWrap"
      ]
    },
    {
      "name": "_pSwitch.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._isChecked",
        "this._on_attach_accessibility_contents_handle",
        "this._p_switchbutton._setAccessibilityStatHidden",
        "this._p_switchbutton.attachHandle",
        "this._p_switchtext.attachHandle",
        "this._setAccessibilityStatChecked"
      ]
    },
    {
      "name": "_pSwitch.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pSwitch.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._setValue",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSwitch.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "this._changeValue",
        "this._setValue",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSwitch.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSwitch.on_get_accessibility_label",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSwitch._on_hotkey",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key"
      ],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pSwitch._isFocusAcceptable",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSwitch.on_apply_text",
      "params": [],
      "calls": [
        "this._p_switchtext.set_text",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pSwitch.on_apply_textAlign",
      "params": [],
      "calls": [
        "this._p_switchtext.set_textAlign"
      ]
    },
    {
      "name": "_pSwitch.on_apply_verticalAlign",
      "params": [],
      "calls": [
        "this._p_switchtext.set_verticalAlign"
      ]
    },
    {
      "name": "_pSwitch.on_apply_textDecoration",
      "params": [],
      "calls": [
        "this._p_switchtext.set_textDecoration"
      ]
    },
    {
      "name": "_pSwitch.on_apply_edge",
      "params": [],
      "calls": [
        "control_elem.setElementEdge"
      ]
    },
    {
      "name": "_pSwitch.on_apply_wordWrap",
      "params": [],
      "calls": [
        "this._p_switchtext.set_wordWrap"
      ]
    },
    {
      "name": "_pSwitch.set_switchbuttonwidth",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isNull",
        "this.on_apply_switchbuttonwidth"
      ]
    },
    {
      "name": "_pSwitch.on_apply_switchbuttonwidth",
      "params": [],
      "calls": [
        "this._recalcLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pSwitch.set_textposition",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_textposition"
      ]
    },
    {
      "name": "_pSwitch.on_apply_textposition",
      "params": [],
      "calls": [
        "this._recalcLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pSwitch.set_bartype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_bartype"
      ]
    },
    {
      "name": "_pSwitch.on_apply_bartype",
      "params": [],
      "calls": [
        "this._p_switchbutton._recalcLayout",
        "this.getElement"
      ]
    },
    {
      "name": "_pSwitch.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this._changeValue",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pSwitch.on_apply_value",
      "params": [],
      "calls": [
        "this._changeUserStatus",
        "this._p_switchbutton._updateControlStatus",
        "this.getElement"
      ]
    },
    {
      "name": "_pSwitch.set_truevalue",
      "params": [
        "v"
      ],
      "calls": [
        "this._isChecked",
        "this._setValue",
        "this.applyto_bindSource",
        "v.toString"
      ]
    },
    {
      "name": "_pSwitch.set_falsevalue",
      "params": [
        "v"
      ],
      "calls": [
        "this._isChecked",
        "this._setValue",
        "this.applyto_bindSource",
        "v.toString"
      ]
    },
    {
      "name": "_pSwitch.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pSwitch.on_apply_readonly",
      "params": [],
      "calls": [
        "this._changeUserStatus",
        "this.getElement"
      ]
    },
    {
      "name": "_pSwitch.getSelectStatus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSwitch.setSelectStatus",
      "params": [
        "v"
      ],
      "calls": [
        "this._changeUserStatus"
      ]
    },
    {
      "name": "_pSwitch.toggleSelectStatus",
      "params": [],
      "calls": [
        "this.setSelectStatus"
      ]
    },
    {
      "name": "_pSwitch.isChecked",
      "params": [],
      "calls": [
        "this._isChecked"
      ]
    },
    {
      "name": "_pSwitch.on_keyup_basic_action",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pSwitch.on_rbuttonup_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pSwitch.on_lbuttonup_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pSwitch.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_onclick.call",
        "nexacro._isNull",
        "this._isChecked",
        "this._isEnable",
        "this.on_fire_canchange",
        "this.on_fire_onchanged",
        "this.set_value"
      ]
    },
    {
      "name": "_pSwitch.on_fire_canchange",
      "params": [
        "obj",
        "prevalue",
        "postvalue"
      ],
      "calls": [
        "nexacro.SwitchChangedEventInfo",
        "this.canchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pSwitch.on_fire_onchanged",
      "params": [
        "obj",
        "prevalue",
        "postvalue"
      ],
      "calls": [
        "nexacro.SwitchChangedEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pSwitch._on_click",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._getClientXY",
        "this._isEnable",
        "this.on_click_basic_action",
        "this.on_fire_onclick"
      ]
    },
    {
      "name": "_pSwitch._recalcLayout",
      "params": [],
      "calls": [
        "switchbutton.move",
        "switchtext._on_getFitSize",
        "switchtext.move",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pSwitch._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "this._isChecked",
        "this._setAccessibilityStatChecked"
      ]
    },
    {
      "name": "_pSwitch._changeValue",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._isNull",
        "nexacro._toBoolean",
        "v.toString"
      ]
    },
    {
      "name": "_pSwitch._isChecked",
      "params": [
        "value"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pSwitch._applyStatus",
      "params": [],
      "calls": [
        "nexacro._isNull",
        "this._isChecked",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_apply_value",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "nexacro.SwitchButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._IconText.call"
      ]
    },
    {
      "name": "_pSwitchButtonControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.SwitchButtonItemControl",
        "nexacro.SwitchTrackControl",
        "this._switchbuttonitem._setControl",
        "this._switchbuttonitem.createComponent",
        "this._switchbuttontrack._setControl",
        "this._switchbuttontrack.createComponent",
        "this.getElement"
      ]
    },
    {
      "name": "_pSwitchButtonControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._switchbuttonitem.on_created",
        "this._switchbuttontrack.on_created"
      ]
    },
    {
      "name": "_pSwitchButtonControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._switchbuttonitem.destroy",
        "this._switchbuttontrack.destroy"
      ]
    },
    {
      "name": "_pSwitchButtonControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this._switchbuttonitem.createCommand",
        "this._switchbuttontrack.createCommand",
        "this.redraw"
      ]
    },
    {
      "name": "_pSwitchButtonControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._switchbuttonitem.attachHandle",
        "this._switchbuttontrack.attachHandle"
      ]
    },
    {
      "name": "_pSwitchButtonControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pSwitchButtonControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSwitchButtonControl._setEventHandler",
      "params": [],
      "calls": [
        "switchbuttontrack._setEventHandler"
      ]
    },
    {
      "name": "_pSwitchButtonControl._recalcLayout",
      "params": [],
      "calls": [
        "switchbuttontrack.move",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.getElement",
        "togglebutton._setLeft",
        "togglebutton._setRight",
        "togglebutton.resize",
        "togglebutton.set_top"
      ]
    },
    {
      "name": "_pSwitchButtonControl._moveToggleButton",
      "params": [
        "v"
      ],
      "calls": [
        "this.getElement",
        "togglbutton._setLeft",
        "togglbutton._setRight",
        "togglbutton._update_position",
        "togglbutton.set_left",
        "togglbutton.set_right"
      ]
    },
    {
      "name": "_pSwitchButtonControl._updateControlStatus",
      "params": [
        "userstatus",
        "value"
      ],
      "calls": [
        "this._changeUserStatus",
        "this._moveToggleButton",
        "this._switchbuttonitem._changeUserStatus",
        "this._switchbuttontrack._changeUserStatus"
      ]
    },
    {
      "name": "nexacro.SwitchButtonItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pSwitchButtonItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pSwitchButtonItemControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.SwitchThumbButtonControl",
        "this._thumbbutton._setControl",
        "this._thumbbutton.createComponent",
        "this.getElement"
      ]
    },
    {
      "name": "_pSwitchButtonItemControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._thumbbutton.on_created"
      ]
    },
    {
      "name": "_pSwitchButtonItemControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._thumbbutton.destroy"
      ]
    },
    {
      "name": "_pSwitchButtonItemControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this._thumbbutton.createCommand",
        "this.redraw"
      ]
    },
    {
      "name": "_pSwitchButtonItemControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pSwitchButtonItemControl._recalcLayout",
      "params": [],
      "calls": [
        "button.resize",
        "this._getClientHeight",
        "this.getElement"
      ]
    },
    {
      "name": "_pSwitchButtonItemControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._thumbbutton.attachHandle"
      ]
    },
    {
      "name": "nexacro.SwitchThumbButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pSwitchThumbButtonControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.SwitchTrackControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pSwitchTrackControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    }
  ],
  "Tab.js": [
    {
      "name": "nexacro.TabIndexChangeEventInfo",
      "params": [
        "obj",
        "id",
        "postindex",
        "preindex"
      ],
      "calls": []
    },
    {
      "name": "nexacro.TabMouseEventInfo",
      "params": [
        "obj",
        "id",
        "index",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo.call"
      ]
    },
    {
      "name": "nexacro.Tab",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Collection",
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pTab.on_create_contents",
      "params": [],
      "calls": [
        "this._createSpinButton",
        "this._createTabpages",
        "this.getElement"
      ]
    },
    {
      "name": "_pTab.on_created_contents",
      "params": [
        "_window"
      ],
      "calls": [
        "this._on_created_accessibility_contents",
        "this._p_nextbutton.on_created",
        "this._p_prevbutton.on_created",
        "this._rearrangeContents",
        "this.on_apply_tabindex"
      ]
    },
    {
      "name": "_pTab.on_destroy_contents",
      "params": [],
      "calls": [
        "tabbuttonitems.splice",
        "this._p_nextbutton.destroy",
        "this._p_prevbutton.destroy",
        "this._p_tabpages.clear"
      ]
    },
    {
      "name": "_pTab.on_create_contents_command",
      "params": [],
      "calls": [
        "nextbutton.createCommand",
        "prevbutton.createCommand"
      ]
    },
    {
      "name": "_pTab.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._on_attach_accessibility_contents_handle",
        "this._p_nextbutton.attachHandle",
        "this._p_prevbutton.attachHandle",
        "this._rearrangeContents",
        "this.on_apply_tabindex"
      ]
    },
    {
      "name": "_pTab.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab._on_beforeclose",
      "params": [
        "root_closing_comp"
      ],
      "calls": [
        "tabpage._on_beforeclose"
      ]
    },
    {
      "name": "_pTab._on_bubble_beforeclose",
      "params": [
        "root_closing_comp",
        "event_bubbles",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "p_form._on_bubble_beforeclose",
        "this._getParentForm"
      ]
    },
    {
      "name": "_pTab._on_close",
      "params": [],
      "calls": [
        "tabpage._on_close"
      ]
    },
    {
      "name": "_pTab._on_bubble_close",
      "params": [
        "event_bubbles",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "p_form._on_bubble_close",
        "this._getParentForm"
      ]
    },
    {
      "name": "_pTab._on_activate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_activate.call",
        "tabpage._p_form._on_activate"
      ]
    },
    {
      "name": "_pTab._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_deactivate.call",
        "tabpage._p_form._on_deactivate"
      ]
    },
    {
      "name": "_pTab.getOwnerFrame",
      "params": [],
      "calls": [
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pTab.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "nextbutton._setEnable",
        "prevbutton._setEnable",
        "tabpage._setEnable"
      ]
    },
    {
      "name": "_pTab.on_fire_sys_onaccessibilitygesture",
      "params": [
        "direction",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "next_obj._setAccessibilityNotifyEvent",
        "this._getTabIndex",
        "this.parent._searchNextTabFocus"
      ]
    },
    {
      "name": "_pTab._resetScrollPos",
      "params": [
        "target_comp",
        "left",
        "top",
        "right",
        "bottom",
        "focus_direction"
      ],
      "calls": [
        "parent._resetScrollPos"
      ]
    },
    {
      "name": "_pTab.set_multiline",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_multiline"
      ]
    },
    {
      "name": "_pTab.on_apply_multiline",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_tabindex",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents",
        "this.on_apply_tabindex"
      ]
    },
    {
      "name": "_pTab.on_apply_tabindex",
      "params": [
        "v"
      ],
      "calls": [
        "form._getTabOrderFirst",
        "this._changeTabIndex",
        "this._getForm",
        "this._rearrangeContents",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTab.set_focusacceptable",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pTab.set_usecontrolkey",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pTab.set_rotatetext",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTab.on_apply_rotatetext",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTab.set_tabjustify",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_tabjustify"
      ]
    },
    {
      "name": "_pTab.on_apply_tabjustify",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_selectchangetype",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTab.set_tabposition",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_tabposition"
      ]
    },
    {
      "name": "_pTab.on_apply_tabposition",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_showextrabutton",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showextrabutton"
      ]
    },
    {
      "name": "_pTab.on_apply_showextrabutton",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_showtabbuttonicon",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showtabbuttonicon"
      ]
    },
    {
      "name": "_pTab.on_apply_showtabbuttonicon",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_preload",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_preload"
      ]
    },
    {
      "name": "_pTab.on_apply_preload",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTab.set_tabbuttongap",
      "params": [
        "tabbuttongap"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_tabbuttonstartgap",
      "params": [
        "tabbuttonstartgap"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_usetabbutton",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_tabbuttonwidth",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_tabbuttonheight",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_selectedtabbuttonwidth",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_selectedtabbuttonheight",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_extrabuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_tabbuttoniconsize",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.set_tabstyle",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_tabstyle"
      ]
    },
    {
      "name": "_pTab.on_apply_tabstyle",
      "params": [
        "v"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.getParentContext",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTab.addChild",
      "params": [
        "id",
        "obj"
      ],
      "calls": [
        "this._addChild"
      ]
    },
    {
      "name": "_pTab.insertTabpage",
      "params": [
        "strId",
        "nIndex",
        "strUrl",
        "strText",
        "tabbuttonwidth",
        "tabbuttonheight"
      ],
      "calls": [
        "nexacro.Tabpage",
        "oldtabpage.set_visible",
        "oldtabtn._changeStatus",
        "tabpage.createComponent",
        "tabpage.destroy",
        "tabpage.set_tabbuttonheight",
        "tabpage.set_tabbuttonwidth",
        "tabpage.set_text",
        "tabpage.set_url",
        "tabpage.set_visible",
        "this._addChild",
        "this._changeUserStatusAll",
        "this._createTabbutton",
        "this._rearrangeContents",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTab.destroy",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "nexacro.Component.prototype.destroy.call",
        "this._on_beforeclose",
        "this._on_close"
      ]
    },
    {
      "name": "_pTab.removeTabpage",
      "params": [
        "nIndex"
      ],
      "calls": [
        "newtabpage._on_apply_url",
        "newtabpage.set_visible",
        "tabbuttonitem.destroy",
        "tabbuttonitems.splice",
        "tabpage._checkAndConfirmClose",
        "tabpage._on_beforeclose",
        "tabpage._on_close",
        "tabpage.destroy",
        "tabpages.delete_item",
        "this._changeUserStatusAll",
        "this._getFirstTabbuttonIndex",
        "this._rearrangeContents",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTab.moveTabpage",
      "params": [
        "nFromIndex",
        "nToIndex"
      ],
      "calls": [
        "tabpages.delete_item",
        "tabpages.insert_item",
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab.getTabpageCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTab.getIndex",
      "params": [
        "nXPos",
        "nYPos"
      ],
      "calls": [
        "this._getTabIndex"
      ]
    },
    {
      "name": "_pTab.setContents",
      "params": [
        "str"
      ],
      "calls": [
        "this._setContents"
      ]
    },
    {
      "name": "_pTab.on_fire_user_onmousedown",
      "params": [
        "button",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "metaKey"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this._getRootComponent",
        "this.onmousedown._fireUserEvent"
      ]
    },
    {
      "name": "_pTab.on_fire_sys_onmousedown",
      "params": [
        "button",
        "altKey",
        "ctrlKey",
        "shiftKey",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "metaKey"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this._getRootComponent",
        "this.onmousedown._fireSysEvent"
      ]
    },
    {
      "name": "_pTab.on_fire_user_onmouseup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this._getRootComponent",
        "this.onmouseup._fireUserEvent"
      ]
    },
    {
      "name": "_pTab.on_fire_sys_onmouseup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this._getRootComponent",
        "this.onmouseup._fireSysEvent"
      ]
    },
    {
      "name": "_pTab._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call",
        "this._setTabFocusObj"
      ]
    },
    {
      "name": "_pTab.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_ref_focus"
      ],
      "calls": [
        "nexacro.Component.prototype.on_killfocus_basic_action.call"
      ]
    },
    {
      "name": "_pTab.on_fire_user_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_fire_user_onkeydown.call",
        "this._getWindow",
        "this._keydown_filter"
      ]
    },
    {
      "name": "_pTab.on_fire_sys_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onkeydown._fireSysEvent"
      ]
    },
    {
      "name": "_pTab.on_fire_user_onkeyup",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onkeyup._fireUserEvent"
      ]
    },
    {
      "name": "_pTab.on_fire_sys_onkeyup",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.KeyEventInfo",
        "this.onkeyup._fireSysEvent"
      ]
    },
    {
      "name": "_pTab.on_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_lbuttondown_basic_action.call",
        "this._changeTabIndex",
        "this._isEnable",
        "this._rearrangeContents",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTab.on_fire_user_onlbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.TabMouseEventInfo",
        "this.on_fire_onextrabuttonclick",
        "this.onlbuttondown._fireUserEvent"
      ]
    },
    {
      "name": "_pTab.on_lbuttonup_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_lbuttonup_basic_action.call",
        "this._changeTabIndex",
        "this._isEnable",
        "this._rearrangeContents",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTab.on_touchend_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos/*",
        "refer_comp*/"
      ],
      "calls": [
        "nexacro.Component.prototype.on_touchend_basic_action.call",
        "this._changeTabIndex",
        "this._getControlFromElement",
        "this._rearrangeContents",
        "this.on_fire_onchanged",
        "this.on_fire_onextrabuttonclick"
      ]
    },
    {
      "name": "_pTab.on_fire_user_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.TabMouseEventInfo",
        "this.onlbuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pTab.on_fire_user_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "from_elem",
        "meta_key"
      ],
      "calls": [
        "nexacro.TabMouseEventInfo",
        "this.onrbuttonup._fireUserEvent"
      ]
    },
    {
      "name": "_pTab.on_fire_user_onrbuttondown",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.TabMouseEventInfo",
        "this.onrbuttondown._fireUserEvent"
      ]
    },
    {
      "name": "_pTab.on_fire_onextrabuttonclick",
      "params": [
        "obj",
        "index",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.TabMouseEventInfo",
        "this.onextrabuttonclick._fireEvent"
      ]
    },
    {
      "name": "_pTab.on_notify_prevbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._adjustSpinPosition"
      ]
    },
    {
      "name": "_pTab.on_notify_nextbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._adjustSpinPosition"
      ]
    },
    {
      "name": "_pTab.on_fire_canchange",
      "params": [
        "obj",
        "postindex",
        "preindex"
      ],
      "calls": [
        "nexacro.TabIndexChangeEventInfo",
        "this.canchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pTab.on_fire_onchanged",
      "params": [
        "obj",
        "postindex",
        "preindex"
      ],
      "calls": [
        "nexacro.TabIndexChangeEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pTab.on_apply_prop_cssclass",
      "params": [],
      "calls": [
        "nextbutton.on_apply_cssclass",
        "prevbutton.on_apply_cssclass",
        "tabbuttonitem.on_apply_cssclass",
        "tabpage.on_apply_cssclass"
      ]
    },
    {
      "name": "_pTab.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "tabbuttonitem.on_apply_prop_stringresource",
        "tabpage.on_apply_prop_stringresource"
      ]
    },
    {
      "name": "_pTab._destroy",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this.destroyComponent"
      ]
    },
    {
      "name": "_pTab._createSpinButton",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "nexacro.Button",
        "this._createTabButtons",
        "this._p_nextbutton._setControl",
        "this._p_nextbutton._setEventHandler",
        "this._p_nextbutton.createComponent",
        "this._p_nextbutton.set_accessibilityenable",
        "this._p_nextbutton.set_visible",
        "this._p_prevbutton._setControl",
        "this._p_prevbutton._setEventHandler",
        "this._p_prevbutton.createComponent",
        "this._p_prevbutton.set_accessibilityenable",
        "this._p_prevbutton.set_visible"
      ]
    },
    {
      "name": "_pTab._createTabpages",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "tabpage.createComponent",
        "tabpage.set_visible"
      ]
    },
    {
      "name": "_pTab._createTabButtons",
      "params": [
        "bCreateOnly"
      ],
      "calls": [
        "this._createTabbutton",
        "this._tabbuttonitems.push"
      ]
    },
    {
      "name": "_pTab._createTabbutton",
      "params": [
        "idx",
        "tabpage",
        "bCreateOnly"
      ],
      "calls": [
        "btn.createComponent",
        "btn.set_text",
        "nexacro._TabButtonItemControl"
      ]
    },
    {
      "name": "_pTab._getTabIndex",
      "params": [
        "nX",
        "nY"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pTab._isSpinButtonVisible",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTab._getPrevButtonSize",
      "params": [],
      "calls": [
        "nexacro._getImageSize",
        "this._p_prevbutton._getCSSStyleValue",
        "this.prevbutton._getCSSStyleValue"
      ]
    },
    {
      "name": "_pTab._getNextButtonSize",
      "params": [],
      "calls": [
        "nexacro._getImageSize",
        "this._p_nextbutton._getCSSStyleValue"
      ]
    },
    {
      "name": "_pTab._getTabpageBorder",
      "params": [],
      "calls": [
        "tabpage._getCSSStyleValue"
      ]
    },
    {
      "name": "_pTab._addChild",
      "params": [
        "id",
        "obj",
        "bInsert",
        "nIndex"
      ],
      "calls": [
        "obj._on_apply_url",
        "this._p_tabpages.add_item",
        "this._p_tabpages.insert_item"
      ]
    },
    {
      "name": "_pTab._getFirstTabbuttonIndex",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTab._adjustSpinPosition",
      "params": [
        "v"
      ],
      "calls": [
        "this._getFirstTabbuttonIndex",
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab._changeTabIndex",
      "params": [
        "index",
        "is_apply_focus",
        "is_mouse_action"
      ],
      "calls": [
        "newtabbtn._on_focus",
        "newtabbtn.set_visible",
        "newtabpage._changeStatus",
        "newtabpage._on_apply_url",
        "newtabpage._on_focus",
        "newtabpage.set_visible",
        "oldtabpage.set_visible",
        "oldtabtn._changeStatus",
        "this._changeUserStatusAll",
        "this.on_fire_canchange"
      ]
    },
    {
      "name": "_pTab._rearrangeContents",
      "params": [
        "beginTabindex"
      ],
      "calls": [
        "Math.ceil",
        "nextbutton._changeStatus",
        "nextbutton._setEnable",
        "nextbutton.move",
        "nextbutton.set_visible",
        "prevbutton._changeStatus",
        "prevbutton._setEnable",
        "prevbutton.move",
        "prevbutton.set_visible",
        "tabbuttonitem._changeUserStatus",
        "tabbuttonitem._setBorderNone",
        "tabbuttonitem._showExtraButton",
        "tabbuttonitem._showTabButtonIcon",
        "tabbuttonitem.move",
        "tabbuttonitem.set_cssclass",
        "tabbuttonitem.set_visible",
        "tabpage._p_form.resetScroll",
        "tabpage.move",
        "this._adjustTabButtonPosition",
        "this._changeUserStatusAll",
        "this._getCSSStyleValue",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getExtraButtonSize",
        "this._getFirstTabbuttonIndex",
        "this._getNextButtonSize",
        "this._getPrevButtonSize",
        "this._getTabButtonIconSize",
        "this._getTabbuttonItemsMaxSize",
        "this._getTabpageBorder",
        "this._rearrangeContentsForAccrdion",
        "this._setTabButtonItemsSizeInfo"
      ]
    },
    {
      "name": "_pTab._rearrangeContentsForAccrdion",
      "params": [
        "beginTabindex",
        "getvalue"
      ],
      "calls": [
        "tabbuttonitem._showExtraButton",
        "tabbuttonitem._showTabButtonIcon",
        "tabbuttonitem.move",
        "tabbuttonitem.set_cssclass",
        "tabbuttonitem.set_visible",
        "tabpage._on_getFitSize",
        "tabpage._p_form.resetScroll",
        "tabpage.move",
        "tabpage.set_height",
        "tabpage.set_width",
        "this._changeUserStatusAll",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getExtraButtonSize",
        "this._getFirstTabbuttonIndex",
        "this._getTabButtonIconSize",
        "this._setTabButtonItemsSizeInfo",
        "this.set_height",
        "this.set_width"
      ]
    },
    {
      "name": "_pTab._on_getFitSize",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._rearrangeContentsForAccrdion"
      ]
    },
    {
      "name": "_pTab._getExtraButtonSize",
      "params": [],
      "calls": [
        "tabbuttonitem._getExtraButtonSize",
        "this._p_extrabuttonsize.split"
      ]
    },
    {
      "name": "_pTab._getTabButtonIconSize",
      "params": [],
      "calls": [
        "tabbuttonitem._getTabButtonIconElementSize",
        "this._p_tabbuttoniconsize.split"
      ]
    },
    {
      "name": "_pTab._getTabbuttonItemsMaxSize",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTab._setTabButtonItemsSizeInfo",
      "params": [],
      "calls": [
        "tabbuttonitem._getItemSize"
      ]
    },
    {
      "name": "_pTab._on_get_extrabutton_iconsize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab._on_get_tabbutton_iconsize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab._onload_prevbutton_iconimage",
      "params": [
        "url",
        "width",
        "height"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab._onload_nextbutton_iconimage",
      "params": [
        "url",
        "width",
        "height"
      ],
      "calls": [
        "this._rearrangeContents"
      ]
    },
    {
      "name": "_pTab._keydown_filter",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "event_bubbles",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "control_elem.notifyAccessibility",
        "newcomp._isAccessibilityEnable",
        "newcomp._setFocus",
        "newcomp.push",
        "nexacro.__notifyAccessibility",
        "nexacro.getEnvironment",
        "page_first_comp._setFocus",
        "tabpage._isAccessibilityEnable",
        "tabpage_form._getLastFocused",
        "tabpage_form._getTabOrderFirst",
        "tabpage_form._searchNextTabFocus",
        "tabpage_form._searchPrevTabFocus",
        "this._changeTabIndex",
        "this._focusobj._p_form._searchNextTabFocus",
        "this._focusobj.form._searchPrevTabFocus",
        "this._getWindow",
        "this._isAccessibilityEnable",
        "this._isComponentKeydownAction",
        "this._p_parent._searchNextTabFocus",
        "this._p_parent._searchPrevTabFocus",
        "this._rearrangeContents",
        "this._searchNextTabFocus",
        "this._searchPrevTabFocus",
        "this._setTabFocusObj",
        "this.on_fire_onchanged",
        "this.on_fire_onextrabuttonclick",
        "this.parent._searchPrevTabFocus",
        "win._removeFromCurrentFocusPath"
      ]
    },
    {
      "name": "_pTab._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "focusobj._getDlgCode",
        "this._isEnable"
      ]
    },
    {
      "name": "_pTab._setTabFocusObj",
      "params": [
        "focusobj"
      ],
      "calls": []
    },
    {
      "name": "_pTab._getTabFocusObj",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTab._getComponentsByTaborder",
      "params": [
        "p",
        "filter_type"
      ],
      "calls": [
        "comp._isEnable",
        "comp.on_get_prop_tabstop",
        "comps.push",
        "nexacro.FormBase._getComponentsByTaborder.call",
        "this._isComponentKeydownAction",
        "this._isEnable"
      ]
    },
    {
      "name": "_pTab._searchNextTabFocus",
      "params": [
        "current",
        "bSearchFromFirst",
        "opt_force_cycle",
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._searchNextTabFocus.call"
      ]
    },
    {
      "name": "_pTab._searchPrevTabFocus",
      "params": [
        "current",
        "bSearchFromLast",
        "opt_force_cycle",
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._searchPrevTabFocus.call"
      ]
    },
    {
      "name": "_pTab._getTabOrderNext",
      "params": [
        "current",
        "direction",
        "filter_type"
      ],
      "calls": [
        "nexacro._isNull",
        "tabpage._p_form._getTabOrderFirst"
      ]
    },
    {
      "name": "_pTab._getTabOrderFirst",
      "params": [
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._getTabOrderFirst.call"
      ]
    },
    {
      "name": "_pTab._getTabOrderLast",
      "params": [
        "filter_type"
      ],
      "calls": [
        "nexacro.FormBase.prototype._getTabOrderLast.call"
      ]
    },
    {
      "name": "_pTab._getControlFromElement",
      "params": [
        "elem"
      ],
      "calls": []
    },
    {
      "name": "_pTab._on_orientationchange",
      "params": [
        "orientation"
      ],
      "calls": [
        "tabpage._on_orientationchange"
      ]
    },
    {
      "name": "_pTab._setContents",
      "params": [
        "str"
      ],
      "calls": [
        "contents_obj._setContents",
        "contents_obj.show",
        "doc.getElementsByTagName",
        "nexacro.Tabpage",
        "nexacro._documentToXml",
        "nexacro._executeGlobalEvalStr",
        "nexacro._getRegisterClass",
        "nexacro._parseXMLDocument",
        "tabpage_node.getElementsByTagName",
        "tabpage_obj.createComponent",
        "tabpage_obj.form.addChild",
        "tabpage_obj.set_text",
        "tabpages.getElementsByTagName",
        "this._addChild",
        "this._createSpinButton",
        "this._rearrangeContents",
        "this.on_apply_tabindex",
        "this.removeTabpage"
      ]
    },
    {
      "name": "_pTab._applyMultiContainerScrollPos",
      "params": [],
      "calls": [
        "tabpage._p_form._applyScrollPos"
      ]
    },
    {
      "name": "_pTab._changeUserStatusAll",
      "params": [
        "tabbuttonitem",
        "bool"
      ],
      "calls": [
        "control_elem.setElementZIndex",
        "tabbuttonitem._changeUserStatus",
        "tabbuttonitem._extrabutton._changeUserStatus",
        "tabbuttonitem._setAccessibilityStatSelected",
        "tabbuttonitem._tabbuttonitemicon._changeUserStatus",
        "tabbuttonitem.getElement"
      ]
    },
    {
      "name": "nexacro.Tabpage",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro.Div.call"
      ]
    },
    {
      "name": "_pTabpage.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": []
    },
    {
      "name": "_pTabpage.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._createForm",
        "this._on_created_accessibility_contents"
      ]
    },
    {
      "name": "_pTabpage._createForm",
      "params": [
        "win"
      ],
      "calls": [
        "first_comp._setAccessibilityDescriptionBy",
        "form.createComponent",
        "form.getFirstAccessibilityComponent",
        "form.loadForm",
        "form.on_created",
        "this._isAccessibilityCotainerComponent",
        "this._recalcLayout",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pTabpage._attachForm",
      "params": [
        "win"
      ],
      "calls": [
        "first_comp._setAccessibilityDescriptionBy",
        "form.createComponent",
        "form.getFirstAccessibilityComponent",
        "form.on_created",
        "this._isAccessibilityCotainerComponent",
        "this._recalcLayout",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pTabpage.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "btn.set_text",
        "nexacro.Div.prototype.on_apply_text.call",
        "tab._rearrangeContents"
      ]
    },
    {
      "name": "_pTabpage._getForm",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTabpage.on_apply_prop_tooltip",
      "params": [],
      "calls": [
        "control_elem.setElementToolTip",
        "this._getStringResourceProperty",
        "this._updateAccessibilityLabel",
        "this.getElement",
        "this.on_apply_prop_accessibilitydescription"
      ]
    },
    {
      "name": "_pTabpage.set_tabbuttonwidth",
      "params": [
        "v"
      ],
      "calls": [
        "tab._rearrangeContents"
      ]
    },
    {
      "name": "_pTabpage.set_tabbuttonheight",
      "params": [
        "v"
      ],
      "calls": [
        "tab._rearrangeContents"
      ]
    },
    {
      "name": "_pTabpage.set_tabbuttoncssclass",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "tabbuttonitem.set_cssclass"
      ]
    },
    {
      "name": "_pTabpage._initControlElementNormalProps",
      "params": [],
      "calls": [
        "this._applyElementVisible",
        "this._registerHotkey",
        "this.on_apply_prop_rtl"
      ]
    },
    {
      "name": "_pTabpage.set_url",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_url",
        "v.substring"
      ]
    },
    {
      "name": "_pTabpage._on_apply_url",
      "params": [],
      "calls": [
        "this.on_apply_url"
      ]
    },
    {
      "name": "_pTabpage.set_semantictag",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTabpage.getParentContext",
      "params": [],
      "calls": [
        "this._p_parent.getParentContext"
      ]
    },
    {
      "name": "_pTabpage.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTabpage.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "tabbuttonitem._setEnable",
        "this._p_form._setEnable"
      ]
    },
    {
      "name": "_pTabpage._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call",
        "this._contains",
        "this._setTabFocusObj"
      ]
    },
    {
      "name": "_pTabpage.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_ref_focus"
      ],
      "calls": [
        "nexacro.Component.prototype.on_killfocus_basic_action.call"
      ]
    },
    {
      "name": "_pTabpage.on_fire_user_onkeydown",
      "params": [
        "key_code",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Div.prototype.on_fire_user_onkeydown.call"
      ]
    },
    {
      "name": "_pTabpage.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.Div.prototype.on_destroy_contents.call"
      ]
    },
    {
      "name": "_pTabpage.on_fire_sys_onaccessibilitygesture",
      "params": [
        "direction",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "next_obj._setAccessibilityNotifyEvent",
        "tab_comp._getTabIndex",
        "this._getWindow",
        "this._searchNextTabFocus",
        "this._searchPrevTabFocus"
      ]
    },
    {
      "name": "_pTabpage._setAccessibilityNotifyEvent",
      "params": [
        "direction"
      ],
      "calls": [
        "next_obj._setAccessibilityNotifyEvent",
        "tab_comp._getTabIndex",
        "this._getTabOrderFirst",
        "this._getTabOrderLast"
      ]
    },
    {
      "name": "_pTabpage._setTabFocusObj",
      "params": [
        "focusobj"
      ],
      "calls": []
    },
    {
      "name": "_pTabpage._getTabFocusObj",
      "params": [],
      "calls": [
        "this._p_parent._getTabFocusObj"
      ]
    },
    {
      "name": "_pTabpage._checkAndConfirmClose",
      "params": [
        "confirm_message"
      ],
      "calls": [
        "this._p_form._checkAndConfirmClose"
      ]
    },
    {
      "name": "nexacro._TabButtonItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pTabButtonItemControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._extrabutton.on_created",
        "this._on_created_accessibility_contents",
        "this._tabbuttonitemicon.on_created",
        "this._tabbuttonitemtext.on_created"
      ]
    },
    {
      "name": "_pTabButtonItemControl.on_create_contents_command",
      "params": [
        "win"
      ],
      "calls": [
        "this._extrabutton.createCommand",
        "this._tabbuttonitemicon.createCommand",
        "this._tabbuttonitemtext.createCommand"
      ]
    },
    {
      "name": "_pTabButtonItemControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._extrabutton.attachHandle",
        "this._on_attach_accessibility_contents_handle",
        "this._tabbuttonitemicon.attachHandle",
        "this._tabbuttonitemtext.attachHandle"
      ]
    },
    {
      "name": "_pTabButtonItemControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._extrabutton.destroy",
        "this._tabbuttonitemicon.destroy",
        "this._tabbuttonitemtext.destroy"
      ]
    },
    {
      "name": "_pTabButtonItemControl.on_apply_text",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Static",
        "tabbuttonitemtext._setControl",
        "tabbuttonitemtext.createComponent",
        "tabbuttonitemtext.move",
        "tabbuttonitemtext.on_created",
        "tabbuttonitemtext.set_text",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabButtonItemControl.on_changeStatus",
      "params": [
        "changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pTabButtonItemControl.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pTabButtonItemControl.on_apply_status",
      "params": [
        "status",
        "userstatus"
      ],
      "calls": [
        "this.parent._rearrangeContents"
      ]
    },
    {
      "name": "_pTabButtonItemControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "tabbuttonitemtext.move",
        "this._extrabutton._getClientWidth",
        "this._getClientHeight",
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pTabButtonItemControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "extrabutton._setEnable",
        "tabbuttonitemicon._setEnable",
        "tabbuttonitemtext._setEnable"
      ]
    },
    {
      "name": "_pTabButtonItemControl.on_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_lbuttondown_basic_action.call"
      ]
    },
    {
      "name": "_pTabButtonItemControl._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "form._setLastFocus",
        "last_modalframe._contains",
        "nexacro.Component.prototype._on_focus.call",
        "this._getParentForm",
        "this._getWindow",
        "this._isComponentKeydownAction",
        "this._setTabFocusObj",
        "win._getLastModalFrame"
      ]
    },
    {
      "name": "_pTabButtonItemControl._setTabFocusObj",
      "params": [
        "focusobj"
      ],
      "calls": [
        "this._p_parent._setTabFocusObj"
      ]
    },
    {
      "name": "_pTabButtonItemControl._getTabFocusObj",
      "params": [],
      "calls": [
        "this._p_parent._getTabFocusObj"
      ]
    },
    {
      "name": "_pTabButtonItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTabButtonItemControl._onload_extra_iconimage",
      "params": [
        "imgurl",
        "width",
        "height"
      ],
      "calls": [
        "this._p_parent._on_get_extrabutton_iconsize"
      ]
    },
    {
      "name": "_pTabButtonItemControl._onload_tabbutton_iconimage",
      "params": [
        "imgurl",
        "width",
        "height"
      ],
      "calls": [
        "this._p_parent._on_get_tabbutton_iconsize"
      ]
    },
    {
      "name": "_pTabButtonItemControl._showExtraButton",
      "params": [
        "v",
        "button_width",
        "button_height"
      ],
      "calls": [
        "extrabutton._setEventHandler",
        "nexacro._TabExtraButtonControl",
        "nexacro._toBoolean",
        "this._extrabutton.createComponent",
        "this._extrabutton.destroy",
        "this._extrabutton.move",
        "this._extrabutton.on_created",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getWindow",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pTabButtonItemControl._showTabButtonIcon",
      "params": [
        "v",
        "button_width",
        "button_height"
      ],
      "calls": [
        "nexacro._TabButtonIconControl",
        "nexacro._toBoolean",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getWindow",
        "this._tabbuttonitemicon.createComponent",
        "this._tabbuttonitemicon.destroy",
        "this._tabbuttonitemicon.move",
        "this._tabbuttonitemicon.on_created"
      ]
    },
    {
      "name": "_pTabButtonItemControl._getItemSize",
      "params": [],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "this._getCSSStyleValue",
        "this._getItemTextSize"
      ]
    },
    {
      "name": "_pTabButtonItemControl._getItemTextSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getTextSize",
        "strText.search",
        "tabbuttonitemtext._getCSSStyleValue",
        "tabbuttonitemtext._getCurrentStyleInheritValue",
        "this._getReferenceAbsoluteFont"
      ]
    },
    {
      "name": "_pTabButtonItemControl._getExtraButtonSize",
      "params": [
        "bshowextrabutton"
      ],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._TabExtraButtonControl",
        "this._extrabutton._getCSSStyleValue",
        "this._extrabutton.createComponent",
        "this._extrabutton.destroy",
        "this._getExtraButtonIconSize"
      ]
    },
    {
      "name": "_pTabButtonItemControl._getExtraButtonIconSize",
      "params": [],
      "calls": [
        "iconurl.substring",
        "nexacro._getImageLocation",
        "nexacro._getImageSize",
        "this._extrabutton._getCSSStyleValue",
        "this._getRefFormBaseUrl"
      ]
    },
    {
      "name": "_pTabButtonItemControl._getTabButtonIconElementSize",
      "params": [
        "bshowtabbuttonicon"
      ],
      "calls": [
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._TabButtonIconControl",
        "this._getTabButtonIconSize",
        "this._tabbuttonitemicon._getCSSStyleValue",
        "this._tabbuttonitemicon.createComponent",
        "this._tabbuttonitemicon.destroy"
      ]
    },
    {
      "name": "_pTabButtonItemControl._getTabButtonIconSize",
      "params": [],
      "calls": [
        "iconurl.substring",
        "nexacro._getImageLocation",
        "nexacro._getImageSize",
        "this._getRefFormBaseUrl",
        "this._tabbuttonitemicon._getCSSStyleValue"
      ]
    },
    {
      "name": "nexacro._TabExtraButtonControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pTabExtraButtonControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro._TabButtonIconControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button.call"
      ]
    },
    {
      "name": "_pTabButtonIconControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    }
  ],
  "TabBar.js": [
    {
      "name": "nexacro._TabBarItemControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Button",
        "nexacro.Component.call",
        "nexacro._IconText"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_create_contents",
      "params": [],
      "calls": [
        "this._createControl",
        "this._registerTooltipTextMessage"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._bindEvent",
        "this._createdControl"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_destroy_contents",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this._destroyControls",
        "this._unBindEvent"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.Component.prototype.on_change_containerRect.call",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemControl.set_pinbuttonposition",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_pinbuttonposition"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_apply_pinbuttonposition",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemControl.set_usepinbutton",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_usepinbutton"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_apply_usepinbutton",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemControl.set_pinbuttonsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_pinbuttonsize",
        "val.split"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_apply_pinbuttonsize",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemControl.set_closebuttonsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_closebuttonsize",
        "val.split"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_apply_closebuttonsize",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemControl._createControl",
      "params": [],
      "calls": [
        "closebutton._setControl",
        "closebutton.createComponent",
        "closebutton.set_tooltiptext",
        "icontext._setControl",
        "icontext.createComponent",
        "nexacro._GetSystemErrorMsg",
        "pinbutton._setControl",
        "pinbutton.createComponent",
        "pinbutton.set_tooltiptext",
        "this.isPinned"
      ]
    },
    {
      "name": "_pTabBarItemControl._createdControl",
      "params": [
        "win"
      ],
      "calls": [
        "closebutton.on_created",
        "icontext.on_created",
        "pinbutton.on_created"
      ]
    },
    {
      "name": "_pTabBarItemControl._destroyControls",
      "params": [],
      "calls": [
        "this._p_closebutton.destroy",
        "this._p_icontext.destroy",
        "this._p_pinbutton.destroy"
      ]
    },
    {
      "name": "_pTabBarItemControl._registerTooltipTextMessage",
      "params": [],
      "calls": [
        "nexacro.addErrorMessage"
      ]
    },
    {
      "name": "_pTabBarItemControl._setTemporaryText",
      "params": [
        "text"
      ],
      "calls": [
        "icontext.set_text"
      ]
    },
    {
      "name": "_pTabBarItemControl._setTemporaryIcon",
      "params": [
        "icon"
      ],
      "calls": [
        "icontext.set_icon"
      ]
    },
    {
      "name": "_pTabBarItemControl._setTemporaryIconTextVisible",
      "params": [
        "visible"
      ],
      "calls": [
        "icontext.set_visible"
      ]
    },
    {
      "name": "_pTabBarItemControl._restoreIconText",
      "params": [],
      "calls": [
        "icontext.set_icon",
        "icontext.set_text"
      ]
    },
    {
      "name": "_pTabBarItemControl._restoreText",
      "params": [],
      "calls": [
        "icontext.set_text"
      ]
    },
    {
      "name": "_pTabBarItemControl._restoreIcon",
      "params": [],
      "calls": [
        "icontext.set_icon"
      ]
    },
    {
      "name": "_pTabBarItemControl._restoreIconTextVisible",
      "params": [],
      "calls": [
        "icontext.set_visible"
      ]
    },
    {
      "name": "_pTabBarItemControl._setTemporaryCloseButtonVisible",
      "params": [
        "visible"
      ],
      "calls": [
        "closebutton.set_visible"
      ]
    },
    {
      "name": "_pTabBarItemControl._restoreCloseButtonVisible",
      "params": [],
      "calls": [
        "closebutton.set_visible"
      ]
    },
    {
      "name": "_pTabBarItemControl._setTemoraryPinButtonVisible",
      "params": [
        "visible"
      ],
      "calls": [
        "pinbutton.set_visible"
      ]
    },
    {
      "name": "_pTabBarItemControl._restorePinButtonVisible",
      "params": [],
      "calls": [
        "pinbutton.set_visible"
      ]
    },
    {
      "name": "_pTabBarItemControl._restoreAll",
      "params": [],
      "calls": [
        "this._restoreCloseButtonVisible",
        "this._restoreIconText",
        "this._restoreIconTextVisible",
        "this._restorePinButtonVisible"
      ]
    },
    {
      "name": "_pTabBarItemControl._calcFirstCharWidth",
      "params": [],
      "calls": [
        "icontext._getCurrentStyleInheritValue",
        "icontext._getReferenceAbsoluteFont",
        "nexacro._getTextSize",
        "this._getCSSStyleValue",
        "this._getCurrentStyleInheritValue"
      ]
    },
    {
      "name": "_pTabBarItemControl._canDisplayText",
      "params": [
        "display_text_width"
      ],
      "calls": [
        "this._calcFirstCharWidth"
      ]
    },
    {
      "name": "_pTabBarItemControl._getAvailableTextDisplayWidth",
      "params": [
        "width"
      ],
      "calls": [
        "icontext._on_getFitSize",
        "this._getCloseButtonSize",
        "this._getPinButtonSize",
        "this._restoreText",
        "this._setTemporaryText"
      ]
    },
    {
      "name": "_pTabBarItemControl._applyLayoutPriority",
      "params": [
        "width"
      ],
      "calls": [
        "this._canDisplayText",
        "this._getAvailableTextDisplayWidth",
        "this._on_getFitSize",
        "this._restoreAll",
        "this._setTemoraryPinButtonVisible",
        "this._setTemporaryCloseButtonVisible",
        "this._setTemporaryIcon",
        "this._setTemporaryIconTextVisible",
        "this._setTemporaryText",
        "this.isPinned",
        "this.isSelected"
      ]
    },
    {
      "name": "_pTabBarItemControl._getCloseButtonSize",
      "params": [],
      "calls": [
        "closebutton._on_getFitSize"
      ]
    },
    {
      "name": "_pTabBarItemControl._getPinButtonSize",
      "params": [],
      "calls": [
        "pinbutton._on_getFitSize"
      ]
    },
    {
      "name": "_pTabBarItemControl._recalcLayout",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._applyLayoutPriority",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getCloseButtonSize",
        "this._getPinButtonSize",
        "this._p_closebutton.move",
        "this._p_icontext.move",
        "this._p_pinbutton.move",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarItemControl._bindEvent",
      "params": [],
      "calls": [
        "this._p_closebutton.addEventHandler",
        "this._p_icontext.addEventHandler",
        "this._p_pinbutton.addEventHandler"
      ]
    },
    {
      "name": "_pTabBarItemControl._unBindEvent",
      "params": [],
      "calls": [
        "this._p_closebutton.removeEventHandler",
        "this._p_icontext.removeEventHandler",
        "this._p_pinbutton.removeEventHandler"
      ]
    },
    {
      "name": "_pTabBarItemControl._on_pinbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "linked_frame.set_pinned"
      ]
    },
    {
      "name": "_pTabBarItemControl._on_closebutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "linked_frame._on_closebutton_click"
      ]
    },
    {
      "name": "_pTabBarItemControl._on_icontext_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "parent._on_item_onclick"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTabBarItemControl.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": [
        "nexacro._GetSystemErrorMsg",
        "this._p_closebutton.set_visible",
        "this._p_pinbutton._changeUserStatus",
        "this._p_pinbutton.set_tooltiptext"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_apply_status",
      "params": [
        "status",
        "userstatus"
      ],
      "calls": [
        "parent._recalcLayout",
        "this._recalcLayout",
        "this.set_positionstep"
      ]
    },
    {
      "name": "_pTabBarItemControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "closebutton._setEnable",
        "icontext._setEnable",
        "pinbutton._setEnable"
      ]
    },
    {
      "name": "_pTabBarItemControl._on_getFitSize",
      "params": [],
      "calls": [
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "icontext._on_getFitSize",
        "this._getCloseButtonSize",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._getPinButtonSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarItemControl.pin",
      "params": [],
      "calls": [
        "this._state_machine.transition"
      ]
    },
    {
      "name": "_pTabBarItemControl.unpin",
      "params": [],
      "calls": [
        "this._state_machine.transition"
      ]
    },
    {
      "name": "_pTabBarItemControl.isPinned",
      "params": [],
      "calls": [
        "this._state_machine.currentStates.has"
      ]
    },
    {
      "name": "_pTabBarItemControl.select",
      "params": [],
      "calls": [
        "this._state_machine.transition"
      ]
    },
    {
      "name": "_pTabBarItemControl.unselect",
      "params": [],
      "calls": [
        "this._state_machine.transition"
      ]
    },
    {
      "name": "_pTabBarItemControl.isSelected",
      "params": [],
      "calls": [
        "this._state_machine.currentStates.has"
      ]
    },
    {
      "name": "_pTabBarItemControl.normal",
      "params": [],
      "calls": [
        "this._state_machine.transition"
      ]
    },
    {
      "name": "_pTabBarItemControl.disable",
      "params": [],
      "calls": [
        "this._state_machine.transition"
      ]
    },
    {
      "name": "_pTabBarItemControl.isDisabled",
      "params": [],
      "calls": [
        "this._state_machine.currentStates.has"
      ]
    },
    {
      "name": "_pTabBarItemControl.show",
      "params": [],
      "calls": [
        "this._state_machine.transition"
      ]
    },
    {
      "name": "_pTabBarItemControl.hide",
      "params": [],
      "calls": [
        "this._state_machine.transition"
      ]
    },
    {
      "name": "_pTabBarItemControl.isHidden",
      "params": [],
      "calls": [
        "this._state_machine.currentStates.has"
      ]
    },
    {
      "name": "_pTabBarItemControl.setLinkedFrame",
      "params": [
        "frame"
      ],
      "calls": []
    },
    {
      "name": "nexacro._TabBarItemSetControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Collection",
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.on_create_contents",
      "params": [],
      "calls": [
        "this._createItemControls"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._applyItemControlsProperties",
        "this._bindEvent",
        "this._createdItemControls"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.onCreatedAfter",
      "params": [
        "resultCreated"
      ],
      "calls": [
        "this._scrollToSelectedItem"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.on_destroy_contents",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this._destroyItems",
        "this._unbindEvent"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.set_itemusepinbutton",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemusepinbutton"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.on_apply_itemusepinbutton",
      "params": [],
      "calls": [
        "this._applyItemControlsProperties",
        "this._recalcLayout",
        "this._updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.set_itempinbuttonposition",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itempinbuttonposition"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.on_apply_itempinbuttonposition",
      "params": [],
      "calls": [
        "this._applyItemControlsProperties",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.set_itempinbuttonsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itempinbuttonsize"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.on_apply_itempinbuttonsize",
      "params": [],
      "calls": [
        "this._applyItemControlsProperties",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.set_itemclosebuttonsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemclosebuttonsize"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.on_apply_itemclosebuttonsize",
      "params": [],
      "calls": [
        "this._applyItemControlsProperties",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._createItem",
      "params": [
        "frame",
        "is_dynamic_create"
      ],
      "calls": [
        "frame._isEnable",
        "item.createComponent",
        "item.setLinkedFrame",
        "nexacro._TabBarItemControl",
        "this._applyItemControlProperties"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._updateItem",
      "params": [
        "frame"
      ],
      "calls": [
        "item._recalcLayout",
        "items.get_item",
        "this._applyItemControlProperties"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._createItemControls",
      "params": [],
      "calls": [
        "item.createComponent",
        "items.get_item",
        "this._applyItemControlProperties"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._createdItemControls",
      "params": [
        "win"
      ],
      "calls": [
        "item.on_created",
        "items.get_item"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._applyItemControlsProperties",
      "params": [],
      "calls": [
        "items.get_item",
        "this._applyItemControlProperties"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._applyItemControlProperties",
      "params": [
        "item"
      ],
      "calls": [
        "frame.titlebar.titleicon._getCSSStyleValue",
        "item.icontext.set_icon",
        "item.icontext.set_iconPosition",
        "item.icontext.set_text",
        "item.set_closebuttonsize",
        "item.set_pinbuttonposition",
        "item.set_pinbuttonsize",
        "item.set_positionstep",
        "item.set_tooltiptext",
        "item.set_usepinbutton"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._destroyItems",
      "params": [],
      "calls": [
        "item.destroy",
        "items.clear",
        "items.get_item",
        "this._items.destroy"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._getSelectedItemIndicator",
      "params": [
        "frameset"
      ],
      "calls": [
        "indicator._setControl",
        "indicator.createComponent",
        "nexacro.Static"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._updateSelectedItemIndicator",
      "params": [],
      "calls": [
        "frameset._getCurrentStyleBorder",
        "indicator.move",
        "indicator.set_visible",
        "item._getCurrentStyleBorder",
        "item.getOffsetHeight",
        "item.getOffsetWidth",
        "item.isDisabled",
        "item.isHidden",
        "item.isPinned",
        "item_border._getBorderHeight",
        "item_border._getBorderWidth",
        "nexacro.System.clientToScreenX",
        "nexacro.System.clientToScreenY",
        "nexacro.System.screenToClientX",
        "nexacro.System.screenToClientY",
        "parent._getCurrentStyleBorder",
        "parent._getCurrentStylePadding",
        "parent._getOwnerFrame",
        "this._control_element.getContainerElement",
        "this._getCurrentStylePadding",
        "this._getSelectedItem",
        "this._getSelectedItemIndicator",
        "this._getSelectedItemIndicatorSize",
        "this._isAttachPositionBottom",
        "this._isAttachPositionHorizontal",
        "this._isAttachPositionLeft",
        "this._isAttachPositionRight",
        "this._isAttachPositionTop"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._getSelectedItemIndicatorSize",
      "params": [],
      "calls": [
        "item._getCurrentStyleBorder",
        "parent._getCurrentStyleBorder",
        "parent._getCurrentStylePadding",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._getSelectedItem",
        "this._isAttachPositionBottom",
        "this._isAttachPositionLeft",
        "this._isAttachPositionRight",
        "this._isAttachPositionTop"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._bindEvent",
      "params": [],
      "calls": [
        "item.addEventHandler",
        "items.get_item"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._unbindEvent",
      "params": [],
      "calls": [
        "item.removeEventHandler",
        "items.get_item"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._getSelectedItem",
      "params": [],
      "calls": [
        "item.isSelected",
        "items.get_item"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._scrollToSelectedItem",
      "params": [],
      "calls": [
        "this._getSelectedItem",
        "this._resetScrollButtonState",
        "this._updateSelectedItemIndicator",
        "this.scrollToItem"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._recalcLayout",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "control_elem.setFixedArea",
        "item.isHidden",
        "item.isPinned",
        "item.move",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getCurrentStylePadding",
        "this._getItemGap",
        "this._getItemHeight",
        "this._getItemWidth",
        "this._isAttachPositionBottom",
        "this._isAttachPositionHorizontal",
        "this._isAttachPositionLeft",
        "this._isAttachPositionRight",
        "this._isAttachPositionTop",
        "this._items.get_item",
        "this._resetScrollButtonState",
        "this._resetScrollMaxSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._adjustMinMaxItemWidth",
      "params": [
        "width"
      ],
      "calls": []
    },
    {
      "name": "_pTabBarItemSetControl._adjustMinMaxItemHeight",
      "params": [
        "height"
      ],
      "calls": []
    },
    {
      "name": "_pTabBarItemSetControl._getJusityfiedItemWidth",
      "params": [
        "containerWidth"
      ],
      "calls": [
        "this._adjustMinMaxItemWidth",
        "this._getItemGap",
        "this._isAttachPositionVertical"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._getJusityfiedItemHeight",
      "params": [
        "containerHeight"
      ],
      "calls": [
        "this._adjustMinMaxItemHeight",
        "this._getItemGap",
        "this._isAttachPositionHorizontal"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._getItemWidth",
      "params": [
        "item",
        "containerWidth"
      ],
      "calls": [
        "item._on_getFitSize",
        "this._adjustMinMaxItemWidth",
        "this._getJusityfiedItemWidth"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._getItemHeight",
      "params": [
        "item",
        "containerHeight"
      ],
      "calls": [
        "item._on_getFitSize",
        "this._adjustMinMaxItemHeight",
        "this._getJusityfiedItemHeight"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._getItemGap",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTabBarItemSetControl._resetScrollMaxSize",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "control_elem.setElementScrollMaxSize",
        "item.isHidden",
        "item.isPinned",
        "items.get_item",
        "this._getItemGap",
        "this._getItemHeight",
        "this._getItemWidth",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._resetScrollButtonState",
      "params": [],
      "calls": [
        "parent.updateScrollButtonState"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._isAttachPositionLeft",
      "params": [],
      "calls": [
        "parent._isAttachPositionLeft"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._isAttachPositionTop",
      "params": [],
      "calls": [
        "parent._isAttachPositionTop"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._isAttachPositionRight",
      "params": [],
      "calls": [
        "parent._isAttachPositionRight"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._isAttachPositionBottom",
      "params": [],
      "calls": [
        "parent._isAttachPositionBottom"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._isAttachPositionVertical",
      "params": [],
      "calls": [
        "parent._isAttachPositionVertical"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._isAttachPositionHorizontal",
      "params": [],
      "calls": [
        "this._isAttachPositionVertical"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._on_item_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "owner._on_item_onclick"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.on_create_control_element",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "control_elem.setLinkedControl",
        "nexacro.TabBarItemSetControlElement"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.Component.prototype.on_change_containerRect.call",
        "this._recalcLayout",
        "this._scrollToSelectedItem"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._on_getFitSize",
      "params": [],
      "calls": [
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "items.get_item",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._getItemGap",
        "this._getItemHeight",
        "this._getItemWidth",
        "this._isAttachPositionHorizontal",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarItemSetControl._onResetScrollBar",
      "params": [],
      "calls": [
        "this._setHscrollPos",
        "this._setVscrollPos",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.addItem",
      "params": [
        "frame"
      ],
      "calls": [
        "items.add_item",
        "this._createItem",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.insertItem",
      "params": [
        "idx",
        "frame"
      ],
      "calls": [
        "items.insert_item",
        "this._createItem",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.removeItem",
      "params": [
        "frame"
      ],
      "calls": [
        "item.destroy",
        "items.delete_item",
        "items.get_item",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.pinItem",
      "params": [
        "frame"
      ],
      "calls": [
        "item.pin",
        "this._recalcLayout",
        "this._updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.unpinItem",
      "params": [
        "frame"
      ],
      "calls": [
        "item.unpin",
        "this._recalcLayout",
        "this._updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.selectItem",
      "params": [
        "frame"
      ],
      "calls": [
        "item.select",
        "selectedItem.unselect",
        "this._getSelectedItem",
        "this._recalcLayout",
        "this._updateSelectedItemIndicator",
        "this.scrollToItem"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.enableItem",
      "params": [
        "frame"
      ],
      "calls": [
        "item.normal",
        "this._recalcLayout",
        "this._updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.disableItem",
      "params": [
        "frame"
      ],
      "calls": [
        "item.disable",
        "this._recalcLayout",
        "this._updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.updateItem",
      "params": [
        "frame"
      ],
      "calls": [
        "this._recalcLayout",
        "this._updateItem",
        "this._updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.showItem",
      "params": [
        "frame"
      ],
      "calls": [
        "item.show",
        "this._recalcLayout",
        "this._updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.hideItem",
      "params": [
        "frame"
      ],
      "calls": [
        "item.hide",
        "this._recalcLayout",
        "this._updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.scrollBackward",
      "params": [],
      "calls": [
        "this._isAttachPositionHorizontal",
        "this.scrollBy"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.scrollForward",
      "params": [],
      "calls": [
        "this._isAttachPositionHorizontal",
        "this.scrollBy"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.scrollToItem",
      "params": [
        "item"
      ],
      "calls": [
        "item.getOffsetLeft",
        "item.getOffsetTop",
        "item.isPinned",
        "this._isAttachPositionHorizontal",
        "this.scrollTo"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.canForwardScroll",
      "params": [],
      "calls": [
        "this._isAttachPositionHorizontal",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.canBackwardScroll",
      "params": [],
      "calls": [
        "this._isAttachPositionHorizontal",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarItemSetControl.update",
      "params": [],
      "calls": [
        "this._recalcLayout",
        "this._updateSelectedItemIndicator"
      ]
    },
    {
      "name": "nexacro._TabBarButtonSetControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.on_create_contents",
      "params": [],
      "calls": [
        "this._createButtons",
        "this._registerTooltipTextMessage",
        "this.setMaximizeState"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._bindEvent",
        "this._createdButtons",
        "this.on_apply_buttonshow"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.on_destroy_contents",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this._destroyButtons",
        "this._unBindEvent"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.Component.prototype.on_change_containerRect.call",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.set_buttongap",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_buttongap"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.on_apply_buttongap",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.set_buttonsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_buttonsize",
        "val.split"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.on_apply_buttonsize",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.set_buttonshow",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_buttonshow"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.on_apply_buttonshow",
      "params": [],
      "calls": [
        "this._applyButtonShowOptions",
        "this._hideButtonAll",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.set_separatorsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_separatorsize"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.on_apply_separatorsize",
      "params": [],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._createButtons",
      "params": [],
      "calls": [
        "button._setControl",
        "button.createComponent",
        "button.set_tooltiptext",
        "buttons.has",
        "buttons.set",
        "nexacro.Button",
        "nexacro.Static",
        "nexacro._GetSystemErrorMsg",
        "separator._setControl",
        "separator.createComponent",
        "this._buttonInfos.forEach",
        "this._extraButtonInfos.forEach"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._createdButtons",
      "params": [
        "win"
      ],
      "calls": [
        "button.comp.on_created",
        "buttons.forEach"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._destroyButtons",
      "params": [],
      "calls": [
        "button.comp.destroy",
        "buttons.delete",
        "buttons.forEach"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._recreateContents",
      "params": [],
      "calls": [
        "this._bindEvent",
        "this._createButtons",
        "this._createdButtons",
        "this._destroyButtons",
        "this._getWindowHandle",
        "this._recalcLayout",
        "this._registerTooltipTextMessage",
        "this._unBindEvent",
        "this.on_apply_buttonshow",
        "this.setMaximizeState"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._registerTooltipTextMessage",
      "params": [],
      "calls": [
        "Object.entries",
        "infos.forEach",
        "nexacro.addErrorMessage"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._recalcLayout",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "button.comp._on_getFitSize",
        "button.comp.move",
        "buttons.forEach",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._isAttachPositionHorizontal"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._bindEvent",
      "params": [],
      "calls": [
        "button.comp.addEventHandler",
        "buttons.forEach"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._unBindEvent",
      "params": [],
      "calls": [
        "button.comp.removeEventHandler",
        "buttons.forEach"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._showButtonAll",
      "params": [],
      "calls": [
        "buttons.forEach",
        "this._showButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._hideButtonAll",
      "params": [],
      "calls": [
        "buttons.forEach",
        "this._hideButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._showButton",
      "params": [
        "id"
      ],
      "calls": [
        "button.comp.set_visible",
        "this._buttons.get",
        "this._updateSeparatorVisible"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._hideButton",
      "params": [
        "id"
      ],
      "calls": [
        "button.comp.set_visible",
        "this._buttons.get",
        "this._updateSeparatorVisible"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._isAnyButtonVisible",
      "params": [
        "idarray"
      ],
      "calls": [
        "buttons.get"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._isAnyExtraButtonVisible",
      "params": [],
      "calls": [
        "buttons.get"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._updateSeparatorVisible",
      "params": [],
      "calls": [
        "arrangeSeparator.comp.set_visible",
        "buttons.get",
        "extraSeparator.comp.set_visible",
        "this._isAnyButtonVisible",
        "this._isAnyExtraButtonVisible"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._applyButtonShowOptions",
      "params": [],
      "calls": [
        "buttonshow.split",
        "options.includes",
        "this._showButtonAll",
        "this.showArrangeButton",
        "this.showCloseAllButton",
        "this.showExtraButton",
        "this.showFrameListPopupMenuButton",
        "this.showMaxRestoreButton",
        "this.showScrollButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._isAttachPositionLeft",
      "params": [],
      "calls": [
        "parent._isAttachPositionLeft"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._isAttachPositionTop",
      "params": [],
      "calls": [
        "parent._isAttachPositionTop"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._isAttachPositionRight",
      "params": [],
      "calls": [
        "parent._isAttachPositionRight"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._isAttachPositionBottom",
      "params": [],
      "calls": [
        "parent._isAttachPositionBottom"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._isAttachPositionVertical",
      "params": [],
      "calls": [
        "this._isAttachPositionLeft",
        "this._isAttachPositionRight"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._isAttachPositionHorizontal",
      "params": [],
      "calls": [
        "this._isAttachPositionVertical"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._on_button_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "id.startsWith",
        "owner._on_backwardscrollbutton_onclick",
        "owner._on_cascadebutton_onclick",
        "owner._on_closeallbutton_onclick",
        "owner._on_extrabutton_onclick",
        "owner._on_forwardscrollbutton_onclick",
        "owner._on_framelistpopupmenubutton_onclick",
        "owner._on_horizontalbutton_onclick",
        "owner._on_maxrestorebutton_onclick",
        "owner._on_verticalbutton_onclick"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl._on_getFitSize",
      "params": [],
      "calls": [
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "button.comp._on_getFitSize",
        "buttons.forEach",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._isAttachPositionHorizontal",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.showScrollButton",
      "params": [],
      "calls": [
        "this._showButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.hideScrollButton",
      "params": [],
      "calls": [
        "this._hideButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.showArrangeButton",
      "params": [],
      "calls": [
        "this._showButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.hideArrangeButton",
      "params": [],
      "calls": [
        "this._hideButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.showCloseAllButton",
      "params": [],
      "calls": [
        "this._showButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.hideCloseAllButton",
      "params": [],
      "calls": [
        "this._hideButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.showMaxRestoreButton",
      "params": [],
      "calls": [
        "this._showButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.hideMaxRestoreButton",
      "params": [],
      "calls": [
        "this._hideButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.showFrameListPopupMenuButton",
      "params": [],
      "calls": [
        "this._showButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.hideFrameListPopupMenuButton",
      "params": [],
      "calls": [
        "this._hideButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.showExtraButton",
      "params": [],
      "calls": [
        "this._extraButtonInfos.forEach",
        "this._showButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.hideExtraButton",
      "params": [],
      "calls": [
        "this._extraButtonInfos.forEach",
        "this._hideButton"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.applyShowPriority",
      "params": [
        "size"
      ],
      "calls": [
        "button_priority.shift",
        "this._applyButtonShowOptions",
        "this._isAttachPositionHorizontal",
        "this._on_getFitSize",
        "this.hideArrangeButton.bind",
        "this.hideCloseAllButton.bind",
        "this.hideExtraButton.bind",
        "this.hideMaxRestoreButton.bind",
        "this.hideScrollButton.bind"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.setMaximizeState",
      "params": [
        "isMaximized"
      ],
      "calls": [
        "button.comp._changeUserStatus",
        "button.comp.set_tooltiptext",
        "nexacro._GetSystemErrorMsg",
        "this._buttons.get"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.setEnableItemScrollButton",
      "params": [
        "enableForwardScroll",
        "enableBackwardScroll"
      ],
      "calls": [
        "backwardscrollbutton.comp.set_enable",
        "forwardscrollbutton.comp.set_enable",
        "this._buttons.get",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.setExtraButtonInfo",
      "params": [
        "count",
        "tooltiptext"
      ],
      "calls": [
        "this._recreateContents",
        "tooltiptext.split"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.setExtraButtonVisible",
      "params": [
        "from",
        "to",
        "visible"
      ],
      "calls": [
        "button.comp.set_visible",
        "buttons.get"
      ]
    },
    {
      "name": "_pTabBarButtonSetControl.getExtraButtonVisible",
      "params": [
        "idx"
      ],
      "calls": [
        "buttons.get"
      ]
    },
    {
      "name": "nexacro._TabBarHeadButtonSetControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro._TabBarButtonSetControl.call"
      ]
    },
    {
      "name": "_pTabBarHeadButtonSetControl._on_button_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "id.startsWith",
        "owner._on_headbutton_onclick"
      ]
    },
    {
      "name": "_pTabBarHeadButtonSetControl._applyButtonShowOptions",
      "params": [],
      "calls": [
        "buttonshow.split",
        "options.includes",
        "this._showButtonAll",
        "this.showExtraButton"
      ]
    },
    {
      "name": "nexacro.TabBarControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "nexacro._TabBarButtonSetControl",
        "nexacro._TabBarHeadButtonSetControl",
        "nexacro._TabBarItemSetControl",
        "this._initFrameListPopupMenu"
      ]
    },
    {
      "name": "_pTabBarControl.on_create_contents",
      "params": [],
      "calls": [
        "buttonset.createComponent",
        "framelistpopupmenu._setControl",
        "framelistpopupmenu.createComponent",
        "headbuttonset.createComponent",
        "itemset.createComponent",
        "itemset.set_scrollbartype",
        "itemset.set_scrolltype",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._bindEvent",
        "this._buttonset.on_created",
        "this._framelistpopupmenu.on_created",
        "this._headbuttonset.on_created",
        "this._itemset.on_created",
        "this.on_apply_buttonshow"
      ]
    },
    {
      "name": "_pTabBarControl.on_destroy_contents",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "this._buttonset.destroy",
        "this._destroyFrameListPopupMenu",
        "this._headbuttonset.destroy",
        "this._itemset.destroy",
        "this._unBindEvent"
      ]
    },
    {
      "name": "_pTabBarControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.Component.prototype.on_change_containerRect.call",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarControl.set_attachposition",
      "params": [
        "val"
      ],
      "calls": []
    },
    {
      "name": "_pTabBarControl.set_extrabuttoncount",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_extrabuttoncount"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_extrabuttoncount",
      "params": [],
      "calls": [
        "buttonset.setExtraButtonInfo",
        "this._recalcLayout",
        "this.updateScrollButtonState"
      ]
    },
    {
      "name": "_pTabBarControl.set_headbuttoncount",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_headbuttoncount"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_headbuttoncount",
      "params": [],
      "calls": [
        "headbuttonset.setExtraButtonInfo",
        "this._recalcLayout",
        "this.updateScrollButtonState"
      ]
    },
    {
      "name": "_pTabBarControl.set_extrabuttontooltiptext",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_extrabuttontooltiptext"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_extrabuttontooltiptext",
      "params": [],
      "calls": [
        "buttonset.setExtraButtonInfo",
        "this._recalcLayout",
        "this.updateScrollButtonState"
      ]
    },
    {
      "name": "_pTabBarControl.set_headbuttontooltiptext",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_headbuttontooltiptext"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_headbuttontooltiptext",
      "params": [],
      "calls": [
        "headbuttonset.setExtraButtonInfo",
        "this._recalcLayout",
        "this.updateScrollButtonState"
      ]
    },
    {
      "name": "_pTabBarControl.set_itemheight",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemheight"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itemheight",
      "params": [],
      "calls": [
        "itemset.update"
      ]
    },
    {
      "name": "_pTabBarControl.set_itemminheight",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemminheight"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itemminheight",
      "params": [],
      "calls": [
        "itemset.update"
      ]
    },
    {
      "name": "_pTabBarControl.set_itemmaxheight",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemmaxheight"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itemmaxheight",
      "params": [],
      "calls": [
        "itemset.update"
      ]
    },
    {
      "name": "_pTabBarControl.set_itemwidth",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemwidth"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itemwidth",
      "params": [],
      "calls": [
        "itemset.update"
      ]
    },
    {
      "name": "_pTabBarControl.set_itemminwidth",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemminwidth"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itemminwidth",
      "params": [],
      "calls": [
        "itemset.update"
      ]
    },
    {
      "name": "_pTabBarControl.set_itemmaxwidth",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemmaxwidth"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itemmaxwidth",
      "params": [],
      "calls": [
        "itemset.update"
      ]
    },
    {
      "name": "_pTabBarControl.set_itemgap",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemgap"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itemgap",
      "params": [],
      "calls": [
        "itemset.update"
      ]
    },
    {
      "name": "_pTabBarControl.set_itemjustify",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemjustify"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itemjustify",
      "params": [],
      "calls": [
        "itemset.update"
      ]
    },
    {
      "name": "_pTabBarControl.set_itemusepinbutton",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemusepinbutton"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itemusepinbutton",
      "params": [],
      "calls": [
        "itemset.set_itemusepinbutton"
      ]
    },
    {
      "name": "_pTabBarControl.set_itempinbuttonposition",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itempinbuttonposition"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itempinbuttonposition",
      "params": [],
      "calls": [
        "itemset.set_itempinbuttonposition"
      ]
    },
    {
      "name": "_pTabBarControl.set_itempinbuttonsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itempinbuttonsize"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itempinbuttonsize",
      "params": [],
      "calls": [
        "itemset.set_itempinbuttonsize"
      ]
    },
    {
      "name": "_pTabBarControl.set_itemclosebuttonsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_itemclosebuttonsize"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_itemclosebuttonsize",
      "params": [],
      "calls": [
        "itemset.set_itemclosebuttonsize"
      ]
    },
    {
      "name": "_pTabBarControl.set_buttonshow",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_buttonshow"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_buttonshow",
      "params": [],
      "calls": [
        "buttonset.set_buttonshow",
        "headbuttonset.set_buttonshow",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarControl.set_buttongap",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_buttongap"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_buttongap",
      "params": [],
      "calls": [
        "buttonset.set_buttongap",
        "headbuttonset.set_buttongap",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarControl.set_buttonsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_buttonsize"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_buttonsize",
      "params": [],
      "calls": [
        "buttonset.set_buttonsize",
        "headbuttonset.set_buttonsize",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarControl.set_buttonseparatorsize",
      "params": [
        "val"
      ],
      "calls": [
        "this.on_apply_buttonseparatorsize"
      ]
    },
    {
      "name": "_pTabBarControl.on_apply_buttonseparatorsize",
      "params": [],
      "calls": [
        "buttonset.set_separatorsize",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarControl._on_item_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "frame._changeStateActivate"
      ]
    },
    {
      "name": "_pTabBarControl._on_forwardscrollbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "itemset.scrollForward"
      ]
    },
    {
      "name": "_pTabBarControl._on_backwardscrollbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "itemset.scrollBackward"
      ]
    },
    {
      "name": "_pTabBarControl._on_framelistpopupmenubutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._showFrameListPopupMenu"
      ]
    },
    {
      "name": "_pTabBarControl._on_closeallbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "Object.values",
        "frame._on_closebutton_click",
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pTabBarControl._on_maxrestorebutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "active_frame._on_maxbutton_click",
        "active_frame._on_normalbutton_click",
        "obj._isSelected",
        "ownerframe.getActiveFrame",
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pTabBarControl._on_cascadebutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ownerframe.arrange",
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pTabBarControl._on_horizontalbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ownerframe.arrange",
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pTabBarControl._on_verticalbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ownerframe.arrange",
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pTabBarControl._on_framelistpopupmenu_onmenuclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "frame._changeStateActivate",
        "ownerframe._p_frames.get_item",
        "this._getOwnerFrame",
        "this.pinItem",
        "this.unpinItem"
      ]
    },
    {
      "name": "_pTabBarControl._on_extrabutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ownerframe.on_fire_ontabbarextrabuttonclick",
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pTabBarControl._on_headbutton_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ownerframe.on_fire_ontabbarheadbuttonclick",
        "this._getOwnerFrame"
      ]
    },
    {
      "name": "_pTabBarControl._on_itemset_onhscroll",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._isAttachPositionVertical",
        "this.updateScrollButtonState",
        "this.updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarControl._on_itemset_onvscroll",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._isAttachPositionHorizontal",
        "this.updateScrollButtonState",
        "this.updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarControl._on_getFitSize",
      "params": [],
      "calls": [
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "buttonset._on_getFitSize",
        "headbuttonset._on_getFitSize",
        "itemset._on_getFitSize",
        "this._getCurrentStyleBorder",
        "this._getCurrentStylePadding",
        "this._isAttachPositionHorizontal",
        "this.getElement"
      ]
    },
    {
      "name": "_pTabBarControl._recalcLayout",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._buttonset._on_getFitSize",
        "this._buttonset.applyShowPriority",
        "this._buttonset.move",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._headbuttonset._on_getFitSize",
        "this._headbuttonset.move",
        "this._isAttachPositionHorizontal",
        "this._itemset.move",
        "this._itemset.set_visible"
      ]
    },
    {
      "name": "_pTabBarControl._isAttachPositionLeft",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTabBarControl._isAttachPositionTop",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTabBarControl._isAttachPositionRight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTabBarControl._isAttachPositionBottom",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTabBarControl._isAttachPositionVertical",
      "params": [],
      "calls": [
        "this._isAttachPositionLeft",
        "this._isAttachPositionRight"
      ]
    },
    {
      "name": "_pTabBarControl._isAttachPositionHorizontal",
      "params": [],
      "calls": [
        "this._isAttachPositionVertical"
      ]
    },
    {
      "name": "_pTabBarControl._initFrameListPopupMenu",
      "params": [],
      "calls": [
        "framelistpopupmenu.set_captioncolumn",
        "framelistpopupmenu.set_enablecolumn",
        "framelistpopupmenu.set_iconcolumn",
        "framelistpopupmenu.set_idcolumn",
        "framelistpopupmenu.set_innerdataset",
        "framelistpopupmenu.set_levelcolumn",
        "innerdataset.addColumn",
        "innerdataset.set_enableevent",
        "nexacro.NormalDataset",
        "nexacro.PopupMenu"
      ]
    },
    {
      "name": "framelistpopupmenu._getRootComponent",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTabBarControl._showFrameListPopupMenu",
      "params": [
        "obj"
      ],
      "calls": [
        "frame._isEnable",
        "frame.titlebar.titleicon._getCSSStyleValue",
        "framelistpopupmenu._trackPopup",
        "framelistpopupmenu.set_color",
        "framelistpopupmenu.set_cssclass",
        "framelistpopupmenu.set_font",
        "innerdataset.addRow",
        "innerdataset.deleteAll",
        "innerdataset.setColumn",
        "innerdataset.set_enableevent",
        "item.isHidden",
        "item.isPinned",
        "itemset._items.get_item",
        "this._getCurrentStyleInheritValue"
      ]
    },
    {
      "name": "_pTabBarControl._destroyFrameListPopupMenu",
      "params": [],
      "calls": [
        "framelistpopupmenu.destroy",
        "innerdataset.destroy"
      ]
    },
    {
      "name": "_pTabBarControl._bindEvent",
      "params": [],
      "calls": [
        "framelistpopupmenu.addEventHandler",
        "itemset.addEventHandler"
      ]
    },
    {
      "name": "_pTabBarControl._unBindEvent",
      "params": [],
      "calls": [
        "framelistpopupmenu.removeEventHandler",
        "itemset.removeEventHandler"
      ]
    },
    {
      "name": "_pTabBarControl.addItem",
      "params": [
        "frame"
      ],
      "calls": [
        "itemset.addItem"
      ]
    },
    {
      "name": "_pTabBarControl.insertItem",
      "params": [
        "idx",
        "frame"
      ],
      "calls": [
        "itemset.insertItem"
      ]
    },
    {
      "name": "_pTabBarControl.removeItem",
      "params": [
        "frame"
      ],
      "calls": [
        "itemset.removeItem",
        "this.setMaximizeState"
      ]
    },
    {
      "name": "_pTabBarControl.pinItem",
      "params": [
        "frame"
      ],
      "calls": [
        "itemset.pinItem"
      ]
    },
    {
      "name": "_pTabBarControl.unpinItem",
      "params": [
        "frame"
      ],
      "calls": [
        "itemset.unpinItem"
      ]
    },
    {
      "name": "_pTabBarControl.selectItem",
      "params": [
        "frame"
      ],
      "calls": [
        "itemset.selectItem"
      ]
    },
    {
      "name": "_pTabBarControl.enableItem",
      "params": [
        "frame"
      ],
      "calls": [
        "itemset.enableItem"
      ]
    },
    {
      "name": "_pTabBarControl.disableItem",
      "params": [
        "frame"
      ],
      "calls": [
        "itemset.disableItem"
      ]
    },
    {
      "name": "_pTabBarControl.updateItem",
      "params": [
        "frame"
      ],
      "calls": [
        "itemset.updateItem"
      ]
    },
    {
      "name": "_pTabBarControl.showItem",
      "params": [
        "frame"
      ],
      "calls": [
        "itemset.showItem"
      ]
    },
    {
      "name": "_pTabBarControl.hideItem",
      "params": [
        "frame"
      ],
      "calls": [
        "itemset.hideItem"
      ]
    },
    {
      "name": "_pTabBarControl.setMaximizeState",
      "params": [
        "isMaximized"
      ],
      "calls": [
        "buttonset.setMaximizeState"
      ]
    },
    {
      "name": "_pTabBarControl.updateSelectedItemIndicator",
      "params": [],
      "calls": [
        "itemset._updateSelectedItemIndicator"
      ]
    },
    {
      "name": "_pTabBarControl.updateScrollButtonState",
      "params": [
        "forward",
        "backward"
      ],
      "calls": [
        "buttonset.setEnableItemScrollButton",
        "itemset.canBackwardScroll",
        "itemset.canForwardScroll"
      ]
    },
    {
      "name": "_pTabBarControl.setExtraButtonVisible",
      "params": [
        "from",
        "to",
        "visible"
      ],
      "calls": [
        "buttonset.setExtraButtonVisible",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarControl.getExtraButtonVisible",
      "params": [
        "idx"
      ],
      "calls": [
        "buttonset.getExtraButtonVisible"
      ]
    },
    {
      "name": "_pTabBarControl.setHeadButtonVisible",
      "params": [
        "from",
        "to",
        "visible"
      ],
      "calls": [
        "headbuttonset.setExtraButtonVisible",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTabBarControl.getHeadButtonVisible",
      "params": [
        "idx"
      ],
      "calls": [
        "headbuttonset.getExtraButtonVisible"
      ]
    }
  ],
  "TextArea.js": [
    {
      "name": "nexacro.TextArea",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pTextArea.on_create_contents",
      "params": [],
      "calls": [
        "input_elem.setElementAutoSelect",
        "input_elem.setElementAutoSkip",
        "input_elem.setElementCSSMapInfo",
        "input_elem.setElementDisplayNullText",
        "input_elem.setElementImeMode",
        "input_elem.setElementMaxLength",
        "input_elem.setElementPadding",
        "input_elem.setElementPosition",
        "input_elem.setElementReadonly",
        "input_elem.setElementSize",
        "input_elem.setElementTextAlign",
        "input_elem.setElementTextDecoration",
        "input_elem.setElementUseIme",
        "input_elem.setElementVerticalAlign",
        "input_elem.setElementWordWrap",
        "nexacro.TextAreaElement",
        "nexacro.TextBoxElement",
        "nexacro._EditUndoStack",
        "this._getCSSStyleValue",
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth",
        "this._getStringResourceProperty",
        "this.getElement"
      ]
    },
    {
      "name": "_pTextArea.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "input_elem._setElementScrollSize",
        "input_elem.create",
        "input_elem.getElementScrollHeight",
        "input_elem.getElementScrollWidth",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._getCSSStyleValue",
        "this._hscrollbartype.indexOf",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._on_created_accessibility_contents",
        "this.on_apply_inputtype",
        "this.on_apply_padding",
        "this.on_apply_scrollbartype",
        "this.on_apply_usesoftkeyboard",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pTextArea.on_destroy_contents",
      "params": [],
      "calls": [
        "hscroll_animationframe.destroy",
        "input_elem.destroy",
        "undostack.destroy",
        "vscroll_animationframe.destroy"
      ]
    },
    {
      "name": "_pTextArea.on_create_contents_command",
      "params": [],
      "calls": [
        "input_elem.createCommand",
        "this._getCSSStyleValue",
        "this._hscrollbartype.indexOf",
        "this.on_apply_padding",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pTextArea.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "input_elem.attachHandle",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._on_attach_accessibility_contents_handle",
        "this.on_apply_scrollbartype",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pTextArea.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "input_elem.setElementSize",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar"
      ]
    },
    {
      "name": "_pTextArea._getInputElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextArea._apply_setfocus",
      "params": [
        "evt_name",
        "self_flag"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.on_apply_force_imeSet",
        "input_elem.on_apply_imeSet",
        "input_elem.setElementFocus",
        "input_elem.setElementSetSelect",
        "nexacro._needAdjustScrollPosition",
        "this._adjust_scrollPosition",
        "this._changeUserStatus",
        "this._getWindow"
      ]
    },
    {
      "name": "_pTextArea.on_apply_status",
      "params": [
        "status",
        "userstatus"
      ],
      "calls": [
        "input_elem.setElementCSSMapInfo",
        "this._getCSSStyleValue"
      ]
    },
    {
      "name": "_pTextArea.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextArea.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementEnable",
        "this._getCSSStyleValue",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._on_accessibility_apply_prop_enable"
      ]
    },
    {
      "name": "_pTextArea.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_stringresource.call",
        "this._getStringResourceProperty",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pTextArea.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._setValue",
        "this._undostack.clear"
      ]
    },
    {
      "name": "_pTextArea.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "input_elem.getElementCaretPos",
        "input_elem.setElementSetSelect",
        "this._convertValueType",
        "this._setValue",
        "this._undostack.clear"
      ]
    },
    {
      "name": "_pTextArea.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus",
        "currentstatus",
        "currentuserstatus"
      ],
      "calls": []
    },
    {
      "name": "_pTextArea._onRecalcScrollSize",
      "params": [],
      "calls": [
        "control_elem.getClientHeight",
        "control_elem.getClientWidth",
        "control_elem.setElementScrollMaxSize",
        "hscroll_animationframe._setCallback",
        "hscroll_animationframe.start",
        "hscrollbar.set_pos",
        "input_elem.getElementContentSize",
        "input_elem.getElementHScrollPos",
        "input_elem.getElementScrollSize",
        "input_elem.getElementVScrollPos",
        "nexacro.AnimationFrame",
        "nexacro._getTextSize",
        "nexacro._get_invisible_obj",
        "nexacro._reset_invisible_obj",
        "this._getCSSStyleValue",
        "this._getCaretLine",
        "this._getCurrentStyleInheritValue",
        "this._getReferenceAbsoluteFont",
        "this.getElement",
        "vscrollbar.set_pos"
      ]
    },
    {
      "name": "_pTextArea._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": [
        "elem.isFirstCaretLine",
        "elem.isLastCaretLine"
      ]
    },
    {
      "name": "_pTextArea._getDragData",
      "params": [],
      "calls": [
        "this.getSelectedText"
      ]
    },
    {
      "name": "_pTextArea.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._convertValueType",
        "this._setValue",
        "this.applyto_bindSource",
        "v.indexOf",
        "v.replace"
      ]
    },
    {
      "name": "_pTextArea.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.getElementText",
        "input_elem.setElementText",
        "input_elem.setElementValue",
        "nexacro._isNull",
        "this._changeUserStatus",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._undostack.push",
        "this._updateAccessibilityLabel"
      ]
    },
    {
      "name": "_pTextArea.set_displaynulltext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_displaynulltext"
      ]
    },
    {
      "name": "_pTextArea.on_apply_displaynulltext",
      "params": [
        "displaynulltext"
      ],
      "calls": [
        "input_elem.setElementDisplayNullText",
        "this._getStringResourceProperty",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pTextArea.set_usesoftkeyboard",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usesoftkeyboard"
      ]
    },
    {
      "name": "_pTextArea.on_apply_usesoftkeyboard",
      "params": [],
      "calls": [
        "input_elem.setElementUseSoftKeyboard",
        "this._getUseSoftKeyboardValue"
      ]
    },
    {
      "name": "_pTextArea.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pTextArea.on_apply_readonly",
      "params": [
        "readonly"
      ],
      "calls": [
        "input_elem.setElementReadonly",
        "this._changeStatus"
      ]
    },
    {
      "name": "_pTextArea.set_autoselect",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoselect"
      ]
    },
    {
      "name": "_pTextArea.on_apply_autoselect",
      "params": [
        "autoselect"
      ],
      "calls": [
        "input_elem.setElementAutoSelect"
      ]
    },
    {
      "name": "_pTextArea.set_autoskip",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoskip"
      ]
    },
    {
      "name": "_pTextArea.on_apply_autoskip",
      "params": [
        "autoskip"
      ],
      "calls": [
        "input_elem.setElementAutoSkip"
      ]
    },
    {
      "name": "_pTextArea.set_inputmode",
      "params": [
        "v"
      ],
      "calls": [
        "inputmode_enum.indexOf"
      ]
    },
    {
      "name": "_pTextArea.set_inputfilter",
      "params": [
        "v"
      ],
      "calls": [
        "inputfilter_enum.indexOf",
        "this.on_apply_inputfilter",
        "v.split"
      ]
    },
    {
      "name": "_pTextArea.on_apply_inputfilter",
      "params": [
        "inputfilter"
      ],
      "calls": [
        "nexacro._EditInputFilter"
      ]
    },
    {
      "name": "_pTextArea.set_inputtype",
      "params": [
        "v"
      ],
      "calls": [
        "inputtype_enum.indexOf",
        "this.on_apply_inputtype",
        "v.split"
      ]
    },
    {
      "name": "_pTextArea.on_apply_inputtype",
      "params": [],
      "calls": [
        "input_elem.setElementInputType",
        "input_type.indexOf",
        "nexacro._EditInputType"
      ]
    },
    {
      "name": "_pTextArea.set_maxlength",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_maxlength"
      ]
    },
    {
      "name": "_pTextArea.on_apply_maxlength",
      "params": [
        "maxlength"
      ],
      "calls": [
        "input_elem.setElementMaxLength"
      ]
    },
    {
      "name": "_pTextArea.set_useime",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_useime"
      ]
    },
    {
      "name": "_pTextArea.on_apply_useime",
      "params": [
        "useime"
      ],
      "calls": [
        "input_elem.setElementUseIme"
      ]
    },
    {
      "name": "_pTextArea.set_imemode",
      "params": [
        "v"
      ],
      "calls": [
        "imemode_enum.indexOf",
        "this.on_apply_imemode"
      ]
    },
    {
      "name": "_pTextArea.on_apply_imemode",
      "params": [
        "imemode"
      ],
      "calls": [
        "input_elem.setElementImeMode"
      ]
    },
    {
      "name": "_pTextArea.on_apply_wordWrap",
      "params": [
        "wordWrap"
      ],
      "calls": [
        "input_elem.setElementWordWrap",
        "this._hscrollbartype.indexOf",
        "this._onRecalcScrollSize"
      ]
    },
    {
      "name": "_pTextArea.set_scrollbartype",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._getCSSStyleValue",
        "this.on_apply_scrollbartype",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pTextArea.set_acceptstab",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pTextArea.set_dragscrolltype",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Form.prototype.set_dragscrolltype.call"
      ]
    },
    {
      "name": "_pTextArea.set_usecontextmenu",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pTextArea.set_cursor",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.CursorObject",
        "this.on_apply_cursor"
      ]
    },
    {
      "name": "_pTextArea.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": [
        "input_elem.setElementTextAlign"
      ]
    },
    {
      "name": "_pTextArea.on_apply_padding",
      "params": [
        "padding"
      ],
      "calls": [
        "input_elem.setElementPadding",
        "this._onRecalcScrollSize"
      ]
    },
    {
      "name": "_pTextArea.on_apply_textDecoration",
      "params": [
        "textDecoration"
      ],
      "calls": [
        "input_elem.setElementTextDecoration"
      ]
    },
    {
      "name": "_pTextArea.getLength",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTextArea.getCaretPos",
      "params": [],
      "calls": [
        "input_elem.getElementCaretPos",
        "this._isEnable"
      ]
    },
    {
      "name": "_pTextArea.setCaretPos",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "nexacro._toInt",
        "this._isEnable",
        "this._setHscrollPos",
        "this._setVscrollPos"
      ]
    },
    {
      "name": "_pTextArea.getSelect",
      "params": [],
      "calls": [
        "input_elem.getElementSelectionRange"
      ]
    },
    {
      "name": "_pTextArea.setSelect",
      "params": [
        "start",
        "end"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "nexacro._isNull",
        "nexacro._isNumber",
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pTextArea.getSelectedText",
      "params": [],
      "calls": [
        "input_elem.getElementSelectionRange",
        "text.substring"
      ]
    },
    {
      "name": "_pTextArea.setSelectedText",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.getElementSelectionRange",
        "input_elem.setElementSetSelect",
        "newtext.substring",
        "nexacro._toString",
        "this._inputtype_obj.test",
        "this.set_value",
        "this.text.substring",
        "v.replace",
        "v.substring"
      ]
    },
    {
      "name": "_pTextArea.insertText",
      "params": [
        "insert_text",
        "position"
      ],
      "calls": [
        "input_elem.updateElementText",
        "insert_text.replace",
        "nexacro._isNull",
        "nexacro._toInt",
        "nexacro._toString",
        "text.substring",
        "this.set_value"
      ]
    },
    {
      "name": "_pTextArea.deleteText",
      "params": [
        "start",
        "count"
      ],
      "calls": [
        "input_elem.replaceElementText",
        "input_value.substring",
        "nexacro._isNull",
        "nexacro._toInt",
        "this.set_value"
      ]
    },
    {
      "name": "_pTextArea.find",
      "params": [
        "text",
        "start"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "nexacro._toInt",
        "nexacro._toString",
        "this._p_text.indexOf"
      ]
    },
    {
      "name": "_pTextArea.replace",
      "params": [
        "oldText",
        "newText"
      ],
      "calls": [
        "cur_text.replace",
        "cur_text.split",
        "input_elem.updateElementText",
        "nexacro._toString",
        "split_buf.join",
        "split_buf.pop",
        "this.setCaretPos",
        "this.set_value"
      ]
    },
    {
      "name": "_pTextArea.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pTextArea.on_deactivate_process",
      "params": [],
      "calls": [
        "input_elem._setElementLastSelectionRange",
        "input_elem.getElementCaretPos",
        "input_elem.setCompositionComplete"
      ]
    },
    {
      "name": "_pTextArea._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_deactivate.call",
        "this.on_deactivate_process.call"
      ]
    },
    {
      "name": "_pTextArea._on_value_change",
      "params": [
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "this.applyto_bindSource",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTextArea._on_input_undo",
      "params": [
        "item"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "input_elem.updateElementText",
        "this._isEnable"
      ]
    },
    {
      "name": "_pTextArea._on_input_redo",
      "params": [
        "item"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "input_elem.updateElementText",
        "this._isEnable"
      ]
    },
    {
      "name": "_pTextArea.on_notify_vscroll_onscroll",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._input_element.setElementVScrollPos",
        "this._scrollTo"
      ]
    },
    {
      "name": "_pTextArea.on_keydown_basic_before_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pTextArea.on_keydown_basic_specialkey_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "input_elem._applyMaxlength",
        "input_elem.getElementCaretPos",
        "input_elem.getElementText",
        "input_elem.isComposing",
        "input_elem.setCompositionComplete",
        "input_elem.stopSysEvent",
        "input_elem.updateElementText",
        "nexacro._OnceCallbackTimer.callonce",
        "text.substring",
        "this._undostack.redo",
        "this._undostack.undo"
      ]
    },
    {
      "name": "_pTextArea.on_keydown_basic_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "input_elem.isComposing",
        "this._undostack.update"
      ]
    },
    {
      "name": "_pTextArea.on_keydown_basic_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._isEnable",
        "this.on_keydown_basic_before_process.call",
        "this.on_keydown_basic_process.call",
        "this.on_keydown_basic_specialkey_process.call"
      ]
    },
    {
      "name": "_pTextArea.on_keydown_default_before_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pTextArea.on_keydown_default_specialkey_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._onRecalcScrollSize"
      ]
    },
    {
      "name": "_pTextArea.on_keydown_default_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pTextArea.on_keydown_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._isEnable",
        "this.on_keydown_default_before_process.call",
        "this.on_keydown_default_process.call",
        "this.on_keydown_default_specialkey_process.call"
      ]
    },
    {
      "name": "_pTextArea.on_keypress_basic_before_process",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key/*",
        "shift_key*/"
      ],
      "calls": []
    },
    {
      "name": "_pTextArea.on_keypress_basic_specialkey_process",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key/*",
        "shift_key*/"
      ],
      "calls": []
    },
    {
      "name": "_pTextArea.on_keypress_basic_process",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key/*",
        "shift_key*/"
      ],
      "calls": [
        "String.fromCharCode",
        "input_elem.stopSysEvent",
        "this._isFilterChar"
      ]
    },
    {
      "name": "_pTextArea.on_keypress_basic_action",
      "params": [
        "keycode",
        "charcode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "meta_key"
      ],
      "calls": [
        "this.on_keypress_basic_before_process.call",
        "this.on_keypress_basic_process.call",
        "this.on_keypress_basic_specialkey_process.call"
      ]
    },
    {
      "name": "_pTextArea.on_keyup_basic_before_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pTextArea.on_keyup_basic_specialkey_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": []
    },
    {
      "name": "_pTextArea.on_keyup_default_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._onRecalcScrollSize"
      ]
    },
    {
      "name": "_pTextArea.on_keyup_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this.on_keyup_basic_before_process.call",
        "this.on_keyup_basic_specialkey_process.call",
        "this.on_keyup_default_process.call"
      ]
    },
    {
      "name": "_pTextArea.on_beforekeyinput_basic_action",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "this._beforeinput_process_with_HTMLEvent",
        "this._beforeinput_process_with_NexacroInputEvent",
        "this._isEnable"
      ]
    },
    {
      "name": "_pTextArea.on_keyinput_basic_before_process",
      "params": [
        "input_text"
      ],
      "calls": []
    },
    {
      "name": "_pTextArea.on_keyinput_basic_process",
      "params": [
        "input_text"
      ],
      "calls": [
        "input_elem._getInputValue",
        "input_elem.getElementCaretPos",
        "input_elem.isComposing",
        "this._undostack.push"
      ]
    },
    {
      "name": "_pTextArea.on_keyinput_basic_action",
      "params": [
        "input_text"
      ],
      "calls": [
        "nexacro._OnceCallbackTimer.callonce",
        "this._isEnable",
        "this._onRecalcScrollSize",
        "this._onResetScrollBar",
        "this._updateAccessibilityLabel",
        "this.on_keyinput_basic_before_process.call",
        "this.on_keyinput_basic_process.call"
      ]
    },
    {
      "name": "_pTextArea.on_killfocus_basic_process",
      "params": [],
      "calls": [
        "_win._indexOfCurrentFocusPaths",
        "input_elem.getElementCaretPos",
        "input_elem.isComposing",
        "input_elem.setCompositionCancel",
        "input_elem.setCompositionComplete",
        "input_elem.setElementBlur",
        "input_elem.setElementSetSelect",
        "input_elem.setElementText",
        "input_elem.setElementValue",
        "nexacro._isNull",
        "this._adjust_scrollPosition",
        "this._changeUserStatus",
        "this._getRootWindow",
        "this._inputfilter_obj.apply",
        "this._inputtype_obj.apply",
        "this._on_value_change"
      ]
    },
    {
      "name": "_pTextArea.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "input_elem._setElementLastSelectionRange",
        "input_elem.getElementSelectionRange",
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this.on_killfocus_basic_process.call"
      ]
    },
    {
      "name": "_pTextArea.on_fire_onkillfocus",
      "params": [
        "obj",
        "fromObj"
      ],
      "calls": [
        "input_elem._updateElementValue",
        "nexacro.Component.prototype.on_fire_onkillfocus.call",
        "this._setValue"
      ]
    },
    {
      "name": "_pTextArea.on_click_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "_window._getCaptureComp",
        "input_elem.setElementFocus",
        "this._getWindow"
      ]
    },
    {
      "name": "_pTextArea.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.EditClickEventInfo",
        "this.getCaretPos",
        "this.oneditclick._fireEvent"
      ]
    },
    {
      "name": "_pTextArea.on_fire_canchange",
      "params": [
        "obj",
        "bText",
        "bValue",
        "aText",
        "aValue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.canchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pTextArea.on_fire_onchanged",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pTextArea.on_fire_oninput",
      "params": [],
      "calls": [
        "nexacro.InputEventInfo",
        "this.oninput._fireEvent"
      ]
    },
    {
      "name": "_pTextArea._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro.Component.prototype._convertValueType.call",
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pTextArea._setValue",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pTextArea._setFocusToNextComponent",
      "params": [],
      "calls": [
        "next_comp._setDefaultCaret",
        "next_comp.setFocus",
        "this._getForm",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pTextArea._setHscrollPos",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementHScrollPos",
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pTextArea._setVscrollPos",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementVScrollPos",
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pTextArea._setVScrollDefaultAction",
      "params": [
        "wheelDelta"
      ],
      "calls": [
        "this._scrollTo",
        "this.getElement"
      ]
    },
    {
      "name": "_pTextArea._getLineCount",
      "params": [],
      "calls": [
        "input_elem.getElementTextLineCount"
      ]
    },
    {
      "name": "_pTextArea._getCaretLine",
      "params": [],
      "calls": [
        "input_elem.getElementCaretLine"
      ]
    },
    {
      "name": "_pTextArea._isFilterChar",
      "params": [
        "ch"
      ],
      "calls": [
        "this._inputfilter_obj.test",
        "this._inputtype_obj.test"
      ]
    },
    {
      "name": "_pTextArea._isWheelScrollable",
      "params": [
        "delta"
      ],
      "calls": [
        "input_elem.getElementScrollHeight",
        "input_elem.getElementVScrollPos",
        "this._getClientHeight"
      ]
    },
    {
      "name": "_pTextArea.on_beforeinput_process_with_HTMLEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "input_elem._checkMaxLength",
        "input_elem._getInputValue",
        "input_value.substring",
        "ret.push",
        "this._inputfilter_obj.apply",
        "this._inputtype_obj.apply",
        "update_value.indexOf",
        "update_value.replace",
        "update_value.substring"
      ]
    },
    {
      "name": "_pTextArea._beforeinput_process_with_HTMLEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end",
        "inputType"
      ],
      "calls": [
        "this.on_beforeinput_process_with_HTMLEvent.call"
      ]
    },
    {
      "name": "_pTextArea.on_beforeinput_process_with_NexacroInputEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end"
      ],
      "calls": [
        "input_elem.replaceElementText",
        "input_elem.updateElementText",
        "nexacro._is_hangul",
        "this._inputfilter_obj.apply",
        "this._inputtype_obj.apply",
        "update_value.toLowerCase",
        "update_value.toUpperCase",
        "value.substring"
      ]
    },
    {
      "name": "_pTextArea._beforeinput_process_with_NexacroInputEvent",
      "params": [
        "value",
        "status",
        "begin",
        "end"
      ],
      "calls": [
        "this.on_beforeinput_process_with_NexacroInputEvent.call"
      ]
    },
    {
      "name": "_pTextArea._adjust_scrollPosition",
      "params": [
        "input_elem",
        "evt_name"
      ],
      "calls": [
        "nexacro._OnceCallbackTimer.callonce",
        "nexacro._getTextAreaElementHscrollPos",
        "nexacro._getTextAreaElementVscrollPos",
        "pThis._p_hscrollbar.set_pos",
        "pThis._p_vscrollbar.set_pos"
      ]
    },
    {
      "name": "_pTextArea._on_input_compositionend",
      "params": [
        "value",
        "_pos"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "this._undostack.push"
      ]
    },
    {
      "name": "_pTextArea.on_apply_imeSet",
      "params": [],
      "calls": [
        "input_elem._imelocale.getLocale"
      ]
    },
    {
      "name": "_pTextArea._on_mousewheel",
      "params": [
        "elem",
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._on_bubble_mousewheel"
      ]
    }
  ],
  "TextField.js": [
    {
      "name": "nexacro.TextField",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent",
        "onlydisplay"
      ],
      "calls": [
        "nexacro.FieldBase.call"
      ]
    },
    {
      "name": "_pTextField.on_create_contents",
      "params": [],
      "calls": [
        "input_elem.setElementAutoSelect",
        "input_elem.setElementAutoSkip",
        "input_elem.setElementInputMode",
        "input_elem.setElementInputType",
        "input_elem.setElementMaxLength",
        "input_elem.setElementPadding",
        "input_elem.setElementReadonly",
        "input_elem.setElementTextAlign",
        "input_elem.setElementTextDecoration",
        "nexacro.FieldBase.prototype.on_create_contents.call",
        "nexacro._EditUndoStack",
        "this._getInputElement",
        "this.on_apply_iconbuttonsize",
        "this.on_apply_leadingbuttonsize",
        "this.on_apply_trailingbuttonsize",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pTextField.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro.FieldBase.prototype.on_created_contents.call",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pTextField.on_destroy_contents",
      "params": [],
      "calls": [
        "nexacro.FieldBase.prototype.on_destroy_contents.call",
        "undostack.destroy"
      ]
    },
    {
      "name": "_pTextField.on_create_contents_command",
      "params": [],
      "calls": [
        "nexacro.FieldBase.prototype.on_create_contents_command.call",
        "this.on_apply_prop_enable"
      ]
    },
    {
      "name": "_pTextField.on_after_created_ext",
      "params": [],
      "calls": [
        "this.LabelFor",
        "this._box._recalc_box",
        "this._getInputElement",
        "this._setEventHandlerToBox",
        "this._setEventHandlerToLeadingButton",
        "this._setEventHandlerToTrailingButton",
        "this.on_apply_inputtype",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pTextField._setEventHandlerToLeadingButton",
      "params": [],
      "calls": [
        "leadbutton._setEventHandler"
      ]
    },
    {
      "name": "_pTextField._setEventHandlerToTrailingButton",
      "params": [],
      "calls": [
        "trailbutton._setEventHandler"
      ]
    },
    {
      "name": "_pTextField._setEventHandlerToBox",
      "params": [],
      "calls": [
        "box._setEventHandler"
      ]
    },
    {
      "name": "_pTextField._getInputElement",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextField._apply_setfocus",
      "params": [
        "evt_name",
        "self_flag"
      ],
      "calls": [
        "input_elem.getElementText",
        "input_elem.on_apply_force_imeSet",
        "input_elem.on_apply_imeSet",
        "input_elem.setElementFocus",
        "nexacro._notifyAccessibilityInputElement",
        "this._getAccessibilityReadLabel",
        "this._getInputElement",
        "this._isComponentKeydownAction"
      ]
    },
    {
      "name": "_pTextField._changeValidStatusChild",
      "params": [
        "status",
        "show"
      ],
      "calls": [
        "box._leadbutton._changeUserStatus",
        "box._trailbutton._changeUserStatus"
      ]
    },
    {
      "name": "_pTextField.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "box._setEnable",
        "input_elem.setElementEnable",
        "this._getCSSStyleValue",
        "this._isEnable"
      ]
    },
    {
      "name": "_pTextField.on_apply_prop_stringresource",
      "params": [],
      "calls": [
        "nexacro.FieldBase.prototype.on_apply_prop_stringresource.call",
        "this._getStringResourceProperty",
        "this.on_apply_postfixtext",
        "this.on_apply_prefixtext"
      ]
    },
    {
      "name": "_pTextField.on_getBindableProperties",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextField.on_init_bindSource",
      "params": [
        "columnid",
        "propid",
        "ds"
      ],
      "calls": [
        "this._setValue",
        "this._undostack.clear"
      ]
    },
    {
      "name": "_pTextField.applyto_bindSource",
      "params": [
        "propid",
        "Val"
      ],
      "calls": [
        "this._bind_event._fireEvent"
      ]
    },
    {
      "name": "_pTextField.on_change_bindSource",
      "params": [
        "propid",
        "ds",
        "row",
        "col"
      ],
      "calls": [
        "ds.getColumn",
        "input_elem.getElementCaretPos",
        "input_elem.setElementSetSelect",
        "this._convertValueType",
        "this._getInputElement",
        "this._invalidStatus",
        "this._setValue",
        "this._undostack.clear",
        "this._validStatus"
      ]
    },
    {
      "name": "_pTextField.on_changeUserStatus",
      "params": [
        "changestatus",
        "value",
        "applyuserstatus/*",
        "currentstatus",
        "currentuserstatus*/"
      ],
      "calls": []
    },
    {
      "name": "_pTextField._getDlgCode",
      "params": [
        "keycode",
        "altKey",
        "ctrlKey",
        "shiftKey"
      ],
      "calls": []
    },
    {
      "name": "_pTextField._getDragData",
      "params": [],
      "calls": [
        "this.getSelectedText"
      ]
    },
    {
      "name": "_pTextField._on_getFitSize",
      "params": [],
      "calls": [
        "Math.ceil",
        "Math.max",
        "border._getBorderHeight",
        "border._getBorderWidth",
        "nexacro._getTextSize",
        "this._box._leadbutton._on_getFitSize",
        "this._box._postfixctrl._on_getFitSize",
        "this._box._prefixctrl._on_getFitSize",
        "this._box._trailbutton._on_getFitSize",
        "this._charcnt_control._on_getFitSize",
        "this._getCurrentStyleBorder",
        "this._getCurrentStyleInheritValue",
        "this._getReferenceAbsoluteFont",
        "this._helptxt_control._on_getFitSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pTextField.set_iconbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_iconbuttonsize"
      ]
    },
    {
      "name": "_pTextField.on_apply_iconbuttonsize",
      "params": [],
      "calls": [
        "this._box.set_iconbuttonsize",
        "this._recalcLabel"
      ]
    },
    {
      "name": "_pTextField.set_leadingbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_leadingbuttonsize"
      ]
    },
    {
      "name": "_pTextField.on_apply_leadingbuttonsize",
      "params": [],
      "calls": [
        "this._box.set_leadingbuttonsize",
        "this._recalcLabel"
      ]
    },
    {
      "name": "_pTextField.set_trailingbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_trailingbuttonsize"
      ]
    },
    {
      "name": "_pTextField.on_apply_trailingbuttonsize",
      "params": [],
      "calls": [
        "this._box.set_trailingbuttonsize",
        "this._recalcLabel"
      ]
    },
    {
      "name": "_pTextField._checkApplyValidate",
      "params": [
        "value",
        "input_check"
      ],
      "calls": [
        "pattern.test",
        "this._input_element._getValidity"
      ]
    },
    {
      "name": "_pTextField._checkInputValidate",
      "params": [
        "value"
      ],
      "calls": [
        "this._checkApplyValidate"
      ]
    },
    {
      "name": "_pTextField.set_inputtype",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_inputtype",
        "v.toLowerCase"
      ]
    },
    {
      "name": "_pTextField.on_apply_inputtype",
      "params": [],
      "calls": [
        "input_elem.setElementInputMode",
        "input_elem.setElementInputType",
        "nexacro._EditInputType",
        "this._checkApplyValidate",
        "this._getInputElement",
        "this._invalidStatus",
        "this._validStatus",
        "this.on_apply_maxlength",
        "this.on_invalid",
        "this.on_valid"
      ]
    },
    {
      "name": "_pTextField.set_pattern",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTextField._needChangeInputValue",
      "params": [
        "v"
      ],
      "calls": [
        "v.charAt",
        "v.replace"
      ]
    },
    {
      "name": "_pTextField._needChangeInputValue",
      "params": [
        "v"
      ],
      "calls": [
        "v.replace"
      ]
    },
    {
      "name": "_pTextField.set_value",
      "params": [
        "v",
        "internal"
      ],
      "calls": [
        "this._checkApplyValidate",
        "this._convertValueType",
        "this._getInputElement",
        "this._invalidStatus",
        "this._needChangeInputValue",
        "this._setValue",
        "this._validStatus",
        "this.applyto_bindSource",
        "this.on_invalid",
        "this.on_valid"
      ]
    },
    {
      "name": "_pTextField._setValue",
      "params": [
        "v",
        "no_chk_valid"
      ],
      "calls": [
        "nexacro._toString",
        "this._checkApplyValidate",
        "this._invalidStatus",
        "this._validStatus",
        "this.on_apply_value",
        "this.on_invalid",
        "this.on_valid"
      ]
    },
    {
      "name": "_pTextField.on_apply_value",
      "params": [
        "value"
      ],
      "calls": [
        "_form.getFocus",
        "input_elem.getElementCaretPos",
        "input_elem.getElementText",
        "input_elem.setElementText",
        "input_elem.setElementValue",
        "this._getForm",
        "this._getInputElement",
        "this._isContainsText",
        "this._isFocused",
        "this._refreshLabel",
        "this._setCharCount",
        "this._setLabelFloating",
        "this._undostack.push",
        "this._updateAccessibilityLabel"
      ]
    },
    {
      "name": "_pTextField.set_useleadingbutton",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_useleadingbutton"
      ]
    },
    {
      "name": "_pTextField.on_apply_useleadingbutton",
      "params": [],
      "calls": [
        "this._box._recalc_box",
        "this._box._updateLeadingButton",
        "this._recalcLabel",
        "this._setEventHandlerToLeadingButton"
      ]
    },
    {
      "name": "_pTextField.set_usetrailingbutton",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usetrailingbutton"
      ]
    },
    {
      "name": "_pTextField.on_apply_usetrailingbutton",
      "params": [],
      "calls": [
        "this._box._recalc_box",
        "this._box._updateTrailingButton",
        "this._recalcLabel",
        "this._setEventHandlerToTrailingButton"
      ]
    },
    {
      "name": "_pTextField.set_prefixtext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_prefixtext"
      ]
    },
    {
      "name": "_pTextField.on_apply_prefixtext",
      "params": [],
      "calls": [
        "this._box._recalc_box",
        "this._box._updatePrefixControl",
        "this._isContainsText",
        "this._recalcLabel",
        "this._setLabelFloating"
      ]
    },
    {
      "name": "_pTextField.set_postfixtext",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_postfixtext"
      ]
    },
    {
      "name": "_pTextField.on_apply_postfixtext",
      "params": [],
      "calls": [
        "this._box._recalc_box",
        "this._box._updatepostfixControl",
        "this._isContainsText",
        "this._recalcLabel",
        "this._setLabelFloating"
      ]
    },
    {
      "name": "_pTextField.set_readonly",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_readonly"
      ]
    },
    {
      "name": "_pTextField.on_apply_readonly",
      "params": [],
      "calls": [
        "input_elem.setElementReadonly",
        "this._box._changeStatus",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField.set_autoselect",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoselect"
      ]
    },
    {
      "name": "_pTextField.on_apply_autoselect",
      "params": [
        "autoselect"
      ],
      "calls": [
        "input_elem.setElementAutoSelect",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField.set_maxlength",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_maxlength"
      ]
    },
    {
      "name": "_pTextField.on_apply_maxlength",
      "params": [],
      "calls": [
        "input_elem.setElementMaxLength",
        "this._getInputElement",
        "this._setCharCount"
      ]
    },
    {
      "name": "_pTextField.set_usecontextmenu",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pTextField.set_cursor",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.CursorObject",
        "this.on_apply_cursor"
      ]
    },
    {
      "name": "_pTextField.on_apply_textAlign",
      "params": [
        "halign"
      ],
      "calls": [
        "input_elem.setElementTextAlign",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField.on_apply_padding",
      "params": [
        "padding"
      ],
      "calls": [
        "input_elem.setElementPadding",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField.on_apply_textDecoration",
      "params": [
        "textDecoration"
      ],
      "calls": [
        "input_elem.setElementTextDecoration",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField._on_getDisplayText",
      "params": [],
      "calls": [
        "this._getStringResourceProperty"
      ]
    },
    {
      "name": "_pTextField.getLength",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextField.getCaretPos",
      "params": [],
      "calls": [
        "input_elem.getElementCaretPos",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField.setCaretPos",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "nexacro._toInt",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField.getSelect",
      "params": [],
      "calls": [
        "input_elem.getElementSelectionRange",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField.setSelect",
      "params": [
        "start",
        "end"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "nexacro._isNull",
        "nexacro._isNumber",
        "nexacro._toInt",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField.getSelectedText",
      "params": [],
      "calls": [
        "input_elem.getElementSelectionRange",
        "text.substring",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField.setSelectedText",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.getElementSelectionRange",
        "input_elem.setElementSetSelect",
        "newtext.substring",
        "nexacro._toString",
        "this._getInputElement",
        "this._inputtype_obj.test",
        "this._p_text.substring",
        "this.set_value",
        "v.substring"
      ]
    },
    {
      "name": "_pTextField.updateToDataset",
      "params": [],
      "calls": [
        "this.applyto_bindSource"
      ]
    },
    {
      "name": "_pTextField._convertValueType",
      "params": [
        "v",
        "bapplyrule"
      ],
      "calls": [
        "nexacro.Component.prototype._convertValueType.call",
        "nexacro._isNull",
        "nexacro._toString"
      ]
    },
    {
      "name": "_pTextField._setReadonlyView",
      "params": [
        "v"
      ],
      "calls": [
        "input_elem.setElementReadonly",
        "this._getInputElement"
      ]
    },
    {
      "name": "_pTextField._setFocusToNextComponent",
      "params": [],
      "calls": [
        "next_comp._setDefaultCaret",
        "next_comp.setFocus",
        "this._getForm",
        "this._getRootComponent"
      ]
    },
    {
      "name": "_pTextField._isContainsText",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextField.on_fire_leading_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_onleadingbuttonclick"
      ]
    },
    {
      "name": "_pTextField.on_fire_trailing_onclick",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this.on_fire_ontrailingbuttonclick"
      ]
    },
    {
      "name": "_pTextField._on_value_change",
      "params": [
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "input_elem.getElementCaretPos",
        "this._getInputElement",
        "this._setValue",
        "this.applyto_bindSource",
        "this.on_fire_canchange",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTextField.on_fire_onclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.EditClickEventInfo",
        "this._getClientXY",
        "this.getCaretPos",
        "this.oneditclick._fireEvent"
      ]
    },
    {
      "name": "_pTextField.on_fire_onleadingbuttonclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "evt.destroy",
        "nexacro.ClickEventInfo",
        "this._input_element.setElementFocus",
        "this.onleadingbuttonclick._fireEvent"
      ]
    },
    {
      "name": "_pTextField.on_fire_ontrailingbuttonclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "canvasX",
        "canvasY",
        "clientX",
        "clientY",
        "from_comp",
        "from_refer_comp",
        "meta_key"
      ],
      "calls": [
        "evt.destroy",
        "nexacro.ClickEventInfo",
        "this._input_element.setElementFocus",
        "this.ontrailingbuttonclick._fireEvent"
      ]
    },
    {
      "name": "_pTextField.on_fire_canchange",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.canchange._fireCheckEvent"
      ]
    },
    {
      "name": "_pTextField.on_fire_onchanged",
      "params": [
        "obj",
        "pretext",
        "prevalue",
        "posttext",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangeEventInfo",
        "this.onchanged._fireEvent"
      ]
    },
    {
      "name": "_pTextField.on_fire_oninput",
      "params": [],
      "calls": [
        "input_element.isComposing",
        "input_element.setElementValue",
        "nexacro.InputEventInfo",
        "this._checkInputValidate",
        "this._getInputElement",
        "this._invalidStatus",
        "this._needChangeInputValue",
        "this._setCharCount",
        "this._setFocusToNextComponent",
        "this._validStatus",
        "this.on_invalid",
        "this.on_valid",
        "this.oninput._fireEvent",
        "v.substr"
      ]
    },
    {
      "name": "_pTextField.on_input_focus",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextField.on_input_invalid",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextField.on_input_compositionend",
      "params": [],
      "calls": [
        "nexacro._OnceCallbackTimer.callonce",
        "this._getInputElement",
        "this._setFocusToNextComponent"
      ]
    },
    {
      "name": "_pTextField.on_fire_onsetfocus",
      "params": [
        "oldobj",
        "oldreferobj",
        "from_comp",
        "from_refer_comp",
        "from_input"
      ],
      "calls": [
        "input_elem.setElementSetSelect",
        "nexacro.SetFocusEventInfo",
        "nexacro._isDesktop",
        "this.onsetfocus._fireEvent"
      ]
    },
    {
      "name": "_pTextField._on_deactivate",
      "params": [],
      "calls": [
        "nexacro.Component.prototype._on_deactivate.call",
        "this.on_deactivate_process.call"
      ]
    },
    {
      "name": "_pTextField._cancelValue",
      "params": [],
      "calls": [
        "this._setValue"
      ]
    },
    {
      "name": "_pTextField.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "_win._indexOfCurrentFocusPaths",
        "nexacro.FieldBase.prototype.on_killfocus_basic_action.call",
        "this._confirmValue",
        "this._getInputElement",
        "this._getRootWindow",
        "this._setAccessibilityStatKillFocus"
      ]
    },
    {
      "name": "_pTextField._confirmValue",
      "params": [],
      "calls": [
        "cur_value.substr",
        "input_elem._clearNumberGabageValue",
        "input_elem._updateElementValue",
        "input_elem.getElementCaretPos",
        "input_elem.setElementSetSelect",
        "input_elem.setElementValue",
        "this._checkApplyValidate",
        "this._getInputElement",
        "this._on_value_change",
        "this._setValue",
        "this.on_invalid",
        "this.on_valid"
      ]
    },
    {
      "name": "_pTextField.on_apply_imeSet",
      "params": [],
      "calls": [
        "input_elem._imelocale.getLocale"
      ]
    },
    {
      "name": "_pTextField.on_keydown_default_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._cancelValue",
        "this._confirmValue",
        "this._isEnable",
        "this.getSelect"
      ]
    },
    {
      "name": "_pTextField.on_keydown_default_process",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._cancelValue",
        "this._isEnable"
      ]
    },
    {
      "name": "nexacro.TextFieldBox",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.FieldBaseBox.call"
      ]
    },
    {
      "name": "_pTextFieldBox.on_create_contents",
      "params": [],
      "calls": [
        "input_elem.setElementPadding",
        "input_elem.setElementVerticalAlign",
        "nexacro.SimpleInputElement",
        "nexacro.TextBoxElement",
        "this._getCurrentStylePadding",
        "this._recalc_box",
        "this._updateLeadingButton",
        "this._updatePrefixControl",
        "this._updateTrailingButton",
        "this._updatepostfixControl",
        "this.getElement"
      ]
    },
    {
      "name": "input_elem._getInputValue",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTextFieldBox._updateLeadingButton",
      "params": [
        "create_only"
      ],
      "calls": [
        "leadbutton.createComponent",
        "leadbutton.set_flexgrow",
        "nexacro.FieldBaseIconControl",
        "this._destroyLeadingButton",
        "this._isFlexible"
      ]
    },
    {
      "name": "_pTextFieldBox._updatePrefixControl",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.FieldBaseTextControl",
        "prefixctrl._update_layoutbasis",
        "prefixctrl.createComponent",
        "prefixctrl.getElement",
        "prefixctrl.set_flexgrow",
        "prefixctrl.set_text",
        "this._destroyLeadingButton",
        "this._destroyPrefixControl",
        "this._getStringResourceProperty",
        "this._isFlexible",
        "this._prefixctrl.set_text",
        "this._updateLeadingButton"
      ]
    },
    {
      "name": "_pTextFieldBox._updatepostfixControl",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.FieldBaseTextControl",
        "postfixctrl._update_layoutbasis",
        "postfixctrl.createComponent",
        "postfixctrl.getElement",
        "postfixctrl.set_flexgrow",
        "postfixctrl.set_text",
        "this._destroyTrailingButton",
        "this._destroypostfixControl",
        "this._getStringResourceProperty",
        "this._isFlexible",
        "this._postfixctrl.set_text",
        "this._updateTrailingButton"
      ]
    },
    {
      "name": "_pTextFieldBox._updateTrailingButton",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.FieldBaseIconControl",
        "this._destroyTrailingButton",
        "this._isFlexible",
        "trailbutton.createComponent",
        "trailbutton.set_flexgrow"
      ]
    },
    {
      "name": "_pTextFieldBox._destroyLeadingButton",
      "params": [],
      "calls": [
        "this._leadbutton.destroy"
      ]
    },
    {
      "name": "_pTextFieldBox._destroyPrefixControl",
      "params": [],
      "calls": [
        "this._prefixctrl.destroy"
      ]
    },
    {
      "name": "_pTextFieldBox._destroypostfixControl",
      "params": [],
      "calls": [
        "this._postfixctrl.destroy"
      ]
    },
    {
      "name": "_pTextFieldBox._destroyTrailingButton",
      "params": [],
      "calls": [
        "this._trailbutton.destroy"
      ]
    },
    {
      "name": "_pTextFieldBox.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._applyInputElementFluidPos",
        "this._input_element.create",
        "this._leadbutton.on_created",
        "this._postfixctrl.on_created",
        "this._prefixctrl.on_created",
        "this._trailbutton.on_created"
      ]
    },
    {
      "name": "_pTextFieldBox.on_create_contents_command",
      "params": [],
      "calls": [
        "this._input_element.createCommand",
        "this._leadbutton.createCommand",
        "this._postfixctrl.createCommand",
        "this._prefixctrl.createCommand",
        "this._trailbutton.createCommand"
      ]
    },
    {
      "name": "_pTextFieldBox.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "nexacro._createNotifyAccessibilityInputElement",
        "this._input_element.attachHandle",
        "this._leadbutton._setAccessibilityStatHidden",
        "this._leadbutton.attachHandle",
        "this._postfixctrl._setAccessibilityStatHidden",
        "this._postfixctrl.attachHandle",
        "this._prefixctrl._setAccessibilityStatHidden",
        "this._prefixctrl.attachHandle",
        "this._trailbutton._setAccessibilityStatHidden",
        "this._trailbutton.attachHandle"
      ]
    },
    {
      "name": "_pTextFieldBox.on_destroy_contents",
      "params": [],
      "calls": [
        "input_elem.destroy",
        "this._destroyLeadingButton",
        "this._destroyPrefixControl",
        "this._destroyTrailingButton",
        "this._destroypostfixControl"
      ]
    },
    {
      "name": "_pTextFieldBox.set_iconbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this._recalc_box"
      ]
    },
    {
      "name": "_pTextFieldBox.set_leadingbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this._recalc_box"
      ]
    },
    {
      "name": "_pTextFieldBox.set_trailingbuttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "this._recalc_box"
      ]
    },
    {
      "name": "_pTextFieldBox._recalc_box",
      "params": [],
      "calls": [
        "buttonsize.split",
        "input_elem.setElementPosition",
        "input_elem.setElementSize",
        "leadbutton._initControlElementLayoutProps",
        "leadbutton.getElement",
        "leadbutton.move",
        "leadingbuttonsize.split",
        "postfixctrl._initControlElementLayoutProps",
        "postfixctrl._on_getFitSize",
        "postfixctrl.getElement",
        "postfixctrl.move",
        "prefixctrl._initControlElementLayoutProps",
        "prefixctrl._on_getFitSize",
        "prefixctrl.getElement",
        "prefixctrl.move",
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth",
        "this._getCurrentStyleBorder",
        "this._isFlexible",
        "this._p_parent.getFloatingLabelHeight",
        "trailbutton._initControlElementLayoutProps",
        "trailbutton.getElement",
        "trailbutton.move",
        "trailingbuttonsize.split"
      ]
    },
    {
      "name": "_pTextFieldBox._getWantLabelLeft",
      "params": [],
      "calls": [
        "this._getClientLeft"
      ]
    },
    {
      "name": "_pTextFieldBox._setTextFielBoxLabelposition",
      "params": [
        "labelposition"
      ],
      "calls": []
    },
    {
      "name": "_pTextFieldBox._applyInputElementFluidPos",
      "params": [],
      "calls": [
        "input_elem.setElementLayoutFluidPos"
      ]
    },
    {
      "name": "_pTextFieldBox._getWantLabelWidth",
      "params": [],
      "calls": [
        "this._getClientWidth"
      ]
    },
    {
      "name": "_pTextFieldBox.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._isEnable",
        "this._leadbutton._setEnable",
        "this._trailbutton._setEnable"
      ]
    },
    {
      "name": "_pTextFieldBox.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "this._recalc_box"
      ]
    },
    {
      "name": "_pTextFieldBox.on_input_focus",
      "params": [],
      "calls": [
        "this._p_parent.on_fire_onsetfocus",
        "this._p_parent.on_input_focus"
      ]
    },
    {
      "name": "_pTextFieldBox.on_input_compositionend",
      "params": [],
      "calls": [
        "this._p_parent.on_input_compositionend"
      ]
    },
    {
      "name": "_pTextFieldBox._on_input_compositionend",
      "params": [
        "value",
        "_pos"
      ],
      "calls": [
        "this._p_parent._on_input_compositionend"
      ]
    },
    {
      "name": "_pTextFieldBox.on_keyup_default_action",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_keyup_default_action"
      ]
    },
    {
      "name": "_pTextFieldBox.on_keyinput_basic_action",
      "params": [
        "input_text"
      ],
      "calls": [
        "this._p_parent.on_keyinput_basic_action"
      ]
    },
    {
      "name": "_pTextFieldBox.on_click_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._p_parent.on_click_basic_action"
      ]
    },
    {
      "name": "_pTextFieldBox._on_contextmenu_default_action",
      "params": [],
      "calls": [
        "nexacro._checkShowContextMenu"
      ]
    },
    {
      "name": "_pTextFieldBox.on_apply_imeSet",
      "params": [],
      "calls": [
        "textField.on_apply_imeSet"
      ]
    }
  ],
  "TimePickerControl.js": [
    {
      "name": "nexacro.TimePickerControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "hour.toString",
        "nexacro.Component.call",
        "this.min.toString",
        "this.msec.toString",
        "this.sec.toString"
      ]
    },
    {
      "name": "_pTimePickerControl._updateAmPm",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.Locale._getAmPm",
        "nexacro.SpinnerControl",
        "this._ampm_control._setEventHandler",
        "this._ampm_control._setValues",
        "this._ampm_control.createComponent",
        "this._ampm_control.destroy"
      ]
    },
    {
      "name": "_pTimePickerControl._updateSecond",
      "params": [
        "create_only"
      ],
      "calls": [
        "nexacro.FieldBaseTextControl",
        "nexacro.SpinnerControl",
        "this._delimiter2.createComponent",
        "this._delimiter2.set_text",
        "this._makeTimeValue",
        "this._sec_control._setEventHandler",
        "this._sec_control._setValues",
        "this._sec_control.createComponent",
        "this._sec_control.destroy"
      ]
    },
    {
      "name": "this._delimiter2.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTimePickerControl._makeTimeValue",
      "params": [
        "min",
        "max"
      ],
      "calls": [
        "i.toString"
      ]
    },
    {
      "name": "_pTimePickerControl.on_create_contents",
      "params": [],
      "calls": [
        "nexacro.FieldBaseTextControl",
        "nexacro.SpinnerControl",
        "this._delimiter1.createComponent",
        "this._delimiter1.set_text",
        "this._focus_order_list.push",
        "this._hour_control._setEventHandler",
        "this._hour_control._setValues",
        "this._hour_control.createComponent",
        "this._makeTimePickerCreateInfo",
        "this._makeTimeValue",
        "this._min_control._setEventHandler",
        "this._min_control._setValues",
        "this._min_control.createComponent",
        "this._updateAmPm",
        "this._updateSecond",
        "this.on_apply_value"
      ]
    },
    {
      "name": "this._delimiter1.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTimePickerControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "this._ampm_control.on_created",
        "this._delimiter1.on_created",
        "this._delimiter2.on_created",
        "this._hour_control.on_created",
        "this._min_control.on_created",
        "this._sec_control.on_created"
      ]
    },
    {
      "name": "_pTimePickerControl.on_create_contents_command",
      "params": [],
      "calls": [
        "this._ampm_control.createCommand",
        "this._delimiter1.createCommand",
        "this._delimiter2.createCommand",
        "this._hour_control.createCommand",
        "this._min_control.createCommand",
        "this._sec_control.createCommand"
      ]
    },
    {
      "name": "_pTimePickerControl.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._ampm_control.attachHandle",
        "this._delimiter1.attachHandle",
        "this._delimiter2.attachHandle",
        "this._hour_control.attachHandle",
        "this._min_control.attachHandle",
        "this._sec_control.attachHandle"
      ]
    },
    {
      "name": "_pTimePickerControl.on_destroy_contents",
      "params": [],
      "calls": [
        "this._destroyControls"
      ]
    },
    {
      "name": "_pTimePickerControl._recreate",
      "params": [],
      "calls": [
        "this._destroyControls",
        "this._getWindow",
        "this._recalcLayout",
        "this.on_create_contents",
        "this.on_created_contents"
      ]
    },
    {
      "name": "_pTimePickerControl._destroyControls",
      "params": [],
      "calls": [
        "this._ampm_control.destroy",
        "this._delimiter1.destroy",
        "this._delimiter2.destroy",
        "this._hour_control.destroy",
        "this._min_control.destroy",
        "this._sec_control.destroy"
      ]
    },
    {
      "name": "_pTimePickerControl._makeTimePickerCreateInfo",
      "params": [
        "format"
      ],
      "calls": [
        "format.indexOf",
        "nexacro.Locale._makeTimeMaskStringFromIntl"
      ]
    },
    {
      "name": "_pTimePickerControl._recalcLayout",
      "params": [],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this.on_change_containerRect"
      ]
    },
    {
      "name": "_pTimePickerControl._keyAction",
      "params": [
        "e"
      ],
      "calls": [
        "this._getCurrSpinner",
        "this._moveFocus"
      ]
    },
    {
      "name": "_pTimePickerControl._getCurrSpinner",
      "params": [
        "spinner_id"
      ],
      "calls": []
    },
    {
      "name": "_pTimePickerControl._moveFocus",
      "params": [
        "e"
      ],
      "calls": [
        "spinner._setFocus"
      ]
    },
    {
      "name": "_pTimePickerControl._on_focus",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "nexacro.Component.prototype._on_focus.call",
        "this._ampm_control._setFocus",
        "this._hour_control._setFocus",
        "this._min_control._setFocus",
        "this._sec_control._setFocus"
      ]
    },
    {
      "name": "_pTimePickerControl.on_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_lbuttondown_basic_action.call",
        "this._common_down_action"
      ]
    },
    {
      "name": "_pTimePickerControl.on_touch_lbuttondown_basic_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "nexacro.Component.prototype.on_touch_lbuttondown_basic_action.call",
        "this._common_down_action"
      ]
    },
    {
      "name": "_pTimePickerControl.on_touchstart_basic_action",
      "params": [
        "touch_manager",
        "touchinfos",
        "changedtouchinfos",
        "refer_comp"
      ],
      "calls": [
        "nexacro.Component.prototype.on_touchstart_basic_action.call",
        "nexacro._getFirstTouchInfo",
        "this._common_down_action"
      ]
    },
    {
      "name": "_pTimePickerControl._common_down_action",
      "params": [
        "elem",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "this._setCurrentSpinner"
      ]
    },
    {
      "name": "_pTimePickerControl._setCurrentSpinner",
      "params": [
        "refer_comp"
      ],
      "calls": []
    },
    {
      "name": "_pTimePickerControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "Math.max",
        "this._ampm_control._getMaxItemWidth",
        "this._ampm_control.move",
        "this._delimiter1.move",
        "this._delimiter2.move",
        "this._getCenterItemPos",
        "this._getItemHeight",
        "this._hour_control.move",
        "this._min_control.move",
        "this._sec_control.move"
      ]
    },
    {
      "name": "_pTimePickerControl.on_getIDCSSSelector",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTimePickerControl.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "this._ampm_control._setEnable",
        "this._delimiter1._setEnable",
        "this._delimiter2._setEnable",
        "this._hour_control._setEnable",
        "this._isEnable",
        "this._min_control._setEnable",
        "this._sec_control._setEnable"
      ]
    },
    {
      "name": "_pTimePickerControl.set_locale",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_locale"
      ]
    },
    {
      "name": "_pTimePickerControl.on_apply_locale",
      "params": [],
      "calls": [
        "this._getLocale",
        "this._recreate"
      ]
    },
    {
      "name": "_pTimePickerControl.set_value",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pTimePickerControl.on_apply_value",
      "params": [],
      "calls": [
        "nexacro.Locale._getAmPm",
        "this._ampm_control.set_value",
        "this._hour_control.set_value",
        "this._min_control.set_value",
        "this._p_value.substr",
        "this._sec_control.set_value"
      ]
    },
    {
      "name": "_pTimePickerControl.set_useampm",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_useampm"
      ]
    },
    {
      "name": "_pTimePickerControl.on_apply_useampm",
      "params": [],
      "calls": [
        "this._hour_control._setValues",
        "this._makeTimeValue",
        "this._updateAmPm",
        "this.on_apply_value"
      ]
    },
    {
      "name": "_pTimePickerControl.set_usesecond",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_usesecond"
      ]
    },
    {
      "name": "_pTimePickerControl.on_apply_usesecond",
      "params": [],
      "calls": [
        "this._updateSecond"
      ]
    },
    {
      "name": "_pTimePickerControl._on_hour_changed",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._value.getText",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTimePickerControl._on_min_changed",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._value.getText",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTimePickerControl._on_sec_changed",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._value.getText",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTimePickerControl._on_ampm_changed",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._value.getText",
        "this.on_fire_onchanged"
      ]
    },
    {
      "name": "_pTimePickerControl._on_hour_onecycle_changed",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._ampm_control._moveScroll"
      ]
    },
    {
      "name": "_pTimePickerControl._getItemHeight",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTimePickerControl._getCenterItemPos",
      "params": [
        "itemheight"
      ],
      "calls": []
    },
    {
      "name": "_pTimePickerControl.on_fire_onchanged",
      "params": [
        "prevalue",
        "postvalue"
      ],
      "calls": [
        "nexacro.ChangedEventInfo",
        "this.onchanged._fireEvent"
      ]
    }
  ],
  "TitleBar.js": [
    {
      "name": "nexacro.TitleBarControl",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Form.call",
        "nexacro._TitleBarButtonControl",
        "nexacro._TitleBarIconTextControl"
      ]
    },
    {
      "name": "_pTitleBarControl._setNotifyHandler",
      "params": [
        "obj",
        "fnclickminbutton",
        "fnclickmaxbutton",
        "fnclicknormalbutton",
        "fnclickclosebutton",
        "fndblclick"
      ],
      "calls": []
    },
    {
      "name": "_pTitleBarControl._unBindEvent",
      "params": [],
      "calls": [
        "this._p_closebutton._removeEventHandler",
        "this._p_maxbutton._removeEventHandler",
        "this._p_minbutton._removeEventHandler",
        "this._p_normalbutton._removeEventHandler",
        "this._p_titleicon._removeEventHandler",
        "this._removeEventHandler"
      ]
    },
    {
      "name": "_pTitleBarControl._bindEvent",
      "params": [],
      "calls": [
        "this._p_closebutton._setEventHandler",
        "this._p_maxbutton._setEventHandler",
        "this._p_minbutton._setEventHandler",
        "this._p_normalbutton._setEventHandler",
        "this._p_titleicon._setEventHandler",
        "this._setEventHandler"
      ]
    },
    {
      "name": "_pTitleBarControl._on_notify_minbutton",
      "params": [
        "obj",
        "fn"
      ],
      "calls": []
    },
    {
      "name": "_pTitleBarControl._on_notify_maxbutton",
      "params": [
        "obj",
        "fn"
      ],
      "calls": []
    },
    {
      "name": "_pTitleBarControl._on_notify_normalbutton",
      "params": [
        "obj",
        "fn"
      ],
      "calls": []
    },
    {
      "name": "_pTitleBarControl._on_notify_closebutton",
      "params": [
        "obj",
        "fn"
      ],
      "calls": []
    },
    {
      "name": "_pTitleBarControl.onCreateComponent",
      "params": [
        "parent_elem"
      ],
      "calls": [
        "nexacro.Component.prototype.onCreateComponent.call"
      ]
    },
    {
      "name": "_pTitleBarControl.on_create_contents",
      "params": [],
      "calls": [
        "closebutton.createComponent",
        "maxbutton.createComponent",
        "minbutton.createComponent",
        "normalbutton.createComponent",
        "normalbutton.set_visible",
        "this.getElement",
        "titleicon.createComponent",
        "titleicon.on_apply_text",
        "titleicon.set_hittesttype"
      ]
    },
    {
      "name": "_pTitleBarControl.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "frame._getWindow",
        "nexacro._setWindowHandleIconObject",
        "this._bindEvent",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._p_closebutton.on_created",
        "this._p_maxbutton.on_created",
        "this._p_minbutton.on_created",
        "this._p_normalbutton.on_created",
        "this._p_titleicon._getCurrentIcon",
        "this._p_titleicon.on_created",
        "this._recalcLayout",
        "this._setAccessibilityStatHidden",
        "this.on_apply_showtitleicon"
      ]
    },
    {
      "name": "_pTitleBarControl.on_destroy_contents",
      "params": [
        "callremovechild"
      ],
      "calls": [
        "closebutton.destroy",
        "maxbutton.destroy",
        "minbutton.destroy",
        "normalbutton.destroy",
        "this._movetrack_animationframe.destroy",
        "this._movetrack_animationframe.stop",
        "this._unBindEvent",
        "titleicon.destroy"
      ]
    },
    {
      "name": "_pTitleBarControl.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "nexacro.Form.prototype.on_change_containerRect.call",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTitleBarControl.on_changeStatus",
      "params": [
        "/*changestatus",
        "value",
        "applystatus",
        "currentstatus",
        "currentuserstatus*/"
      ],
      "calls": []
    },
    {
      "name": "_pTitleBarControl.on_apply_status",
      "params": [
        "status"
      ],
      "calls": [
        "this._p_closebutton._changeStatus",
        "this._p_maxbutton._changeStatus",
        "this._p_minbutton._changeStatus",
        "this._p_normalbutton._changeStatus",
        "this._p_titleicon._changeStatus"
      ]
    },
    {
      "name": "_pTitleBarControl.set_showtitleicon",
      "params": [
        "showtitleicon"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showtitleicon"
      ]
    },
    {
      "name": "_pTitleBarControl.on_apply_showtitleicon",
      "params": [
        "showtitleicon"
      ],
      "calls": [
        "titleicon.set_icon"
      ]
    },
    {
      "name": "_pTitleBarControl.on_apply_text",
      "params": [
        "text"
      ],
      "calls": [
        "this._p_titleicon.set_text"
      ]
    },
    {
      "name": "_pTitleBarControl.set_buttongap",
      "params": [
        "buttongap"
      ],
      "calls": [
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTitleBarControl.set_buttonsize",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this._recalcLayout",
        "v.trim"
      ]
    },
    {
      "name": "_pTitleBarControl._on_minbutton_click",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ownerframe._on_minbutton_click",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pTitleBarControl._on_maxbutton_click",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ownerframe._on_maxbutton_click",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pTitleBarControl._on_normalbutton_click",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ownerframe._on_normalbutton_click",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pTitleBarControl._on_closebutton_click",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "ownerframe._on_closebutton_click",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pTitleBarControl._on_starttrack",
      "params": [],
      "calls": [
        "ownerframe._on_titlebar_starttrack",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pTitleBarControl._on_endtrack",
      "params": [
        "x",
        "y",
        "dragdata"
      ],
      "calls": [
        "ownerframe._on_titlebar_endtrack",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "_pTitleBarControl._on_movetrack",
      "params": [
        "x",
        "y",
        "dragdata",
        "windowX",
        "windowY"
      ],
      "calls": [
        "nexacro.AnimationFrame",
        "ownerframe._on_titlebar_movetrack",
        "this._movetrack_animationframe._setCallback",
        "this._movetrack_animationframe.start",
        "this.getOwnerFrame"
      ]
    },
    {
      "name": "callbackfunc",
      "params": [],
      "calls": [
        "ownerframe._on_titlebar_movetrack"
      ]
    },
    {
      "name": "_pTitleBarControl._on_loadicon",
      "params": [
        "url",
        "w",
        "h"
      ],
      "calls": [
        "frame._getWindow",
        "nexacro._setWindowHandleIcon"
      ]
    },
    {
      "name": "_pTitleBarControl._recalcLayout",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "DXImageTransform.Microsoft.BasicImage",
        "nexacro._toInt",
        "this._getClientHeight",
        "this._getClientLeft",
        "this._getClientTop",
        "this._getClientWidth",
        "this._p_closebutton.move",
        "this._p_maxbutton.move",
        "this._p_minbutton.move",
        "this._p_normalbutton.move",
        "this._p_titleicon.move"
      ]
    },
    {
      "name": "_pTitleBarControl._changeOpenStatus",
      "params": [
        "cur"
      ],
      "calls": [
        "this._getClientHeight",
        "this._getClientWidth",
        "this._p_closebutton.set_visible",
        "this._p_maxbutton.set_visible",
        "this._p_minbutton.set_visible",
        "this._p_normalbutton.set_visible",
        "this._recalcLayout"
      ]
    },
    {
      "name": "_pTitleBarControl._setVerticalMin",
      "params": [
        "v"
      ],
      "calls": [
        "this._changeOpenStatus"
      ]
    },
    {
      "name": "_pTitleBarControl._setDragMove",
      "params": [
        "v",
        "is_windowframe"
      ],
      "calls": [
        "this.on_apply_hittesttype",
        "titleicon.set_hittesttype"
      ]
    },
    {
      "name": "_pTitleBarControl._setAbsoluteStyle",
      "params": [
        "_add",
        "_remove",
        "_apply"
      ],
      "calls": [
        "this._applyAbsoluteStyle"
      ]
    },
    {
      "name": "_pTitleBarControl._applyAbsoluteStyle",
      "params": [],
      "calls": [
        "closebutton.set_enable",
        "closebutton.set_visible",
        "maxbutton.set_enable",
        "maxbutton.set_visible",
        "minbutton.set_enable",
        "minbutton.set_visible",
        "normalbutton.set_enable",
        "normalbutton.set_visible"
      ]
    }
  ],
  "Tray.js": [
    {
      "name": "nexacro.TrayBalloonTipHideEventInfo",
      "params": [
        "obj",
        "id",
        "reason"
      ],
      "calls": []
    },
    {
      "name": "nexacro.Tray",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro.Collection"
      ]
    },
    {
      "name": "_pTray.on_created",
      "params": [],
      "calls": [
        "nexacro._createTrayHandle"
      ]
    },
    {
      "name": "_pTray._destroy",
      "params": [],
      "calls": [
        "application._p_all.delete_item",
        "application._p_trays.delete_item",
        "nexacro._removeTrayHandle",
        "nexacro.getApplication",
        "this._p_items.delete_item"
      ]
    },
    {
      "name": "_pTray.set_id",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTray.set_name",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pTray.set_icon",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._setTrayIconHandle"
      ]
    },
    {
      "name": "_pTray.set_tooltip",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._setTrayTooltipHandle"
      ]
    },
    {
      "name": "_pTray.show",
      "params": [],
      "calls": [
        "this.on_created"
      ]
    },
    {
      "name": "_pTray.destroy",
      "params": [],
      "calls": [
        "this._destroy"
      ]
    },
    {
      "name": "_pTray.init",
      "params": [
        "id",
        "icon",
        "tooltip"
      ],
      "calls": [
        "this.set_icon",
        "this.set_id",
        "this.set_tooltip"
      ]
    },
    {
      "name": "_pTray.showBalloonTip",
      "params": [
        "titleicon",
        "title",
        "text",
        "nosound"
      ],
      "calls": [
        "nexacro._showTrayBalloonTipHandle"
      ]
    },
    {
      "name": "_pTray.hideBalloonTip",
      "params": [],
      "calls": [
        "nexacro._hideTrayBalloonTipHandle"
      ]
    },
    {
      "name": "_pTray.addItem",
      "params": [
        "id",
        "obj"
      ],
      "calls": [
        "this._p_items.add_item",
        "this._p_items.indexOf"
      ]
    },
    {
      "name": "_pTray.insertItem",
      "params": [
        "index",
        "id",
        "obj"
      ],
      "calls": [
        "this._p_items.indexOf",
        "this._p_items.insert_item"
      ]
    },
    {
      "name": "_pTray.deleteItem",
      "params": [
        "id"
      ],
      "calls": [
        "this._p_items.delete_item"
      ]
    },
    {
      "name": "_pTray.findItem",
      "params": [
        "id"
      ],
      "calls": [
        "this._p_items.indexOf"
      ]
    },
    {
      "name": "_pTray.getItemCount",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTray.on_fire_ondblclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ClickEventInfo",
        "this.ondblclick._fireEvent"
      ]
    },
    {
      "name": "_pTray.on_fire_onlbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onlbuttonup._fireEvent"
      ]
    },
    {
      "name": "_pTray.on_fire_onrbuttonup",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro.MouseEventInfo",
        "this.onrbuttonup._fireEvent"
      ]
    },
    {
      "name": "_pTray.on_fire_onballoontipshow",
      "params": [],
      "calls": [
        "nexacro.EventInfo",
        "this.onballoontipshow._fireEvent"
      ]
    },
    {
      "name": "_pTray.on_fire_onballoontiphide",
      "params": [
        "reason"
      ],
      "calls": [
        "nexacro.TrayBalloonTipHideEventInfo",
        "this.onballoontiphide._fireEvent"
      ]
    },
    {
      "name": "_pTray.on_fire_onballoontipclick",
      "params": [
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "nexacro.ClickEventInfo",
        "this.onballoontipclick._fireEvent"
      ]
    },
    {
      "name": "nexacro.TrayPopupMenu",
      "params": [
        "id",
        "parent"
      ],
      "calls": []
    },
    {
      "name": "_pTrayPopupMenu.on_created",
      "params": [],
      "calls": [
        "application._getDatasetObject",
        "nexacro._createTrayPopupMenuHandle",
        "nexacro.getApplication",
        "this._createPopupMenu",
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pTrayPopupMenu._createPopupMenu",
      "params": [
        "handle"
      ],
      "calls": [
        "ds.getColumn",
        "ds.getRowCount",
        "nexacro._createTrayPopupMenuHandle",
        "nexacro._setTrayPopupMenuItemHandle",
        "nexacro._toBoolean",
        "this._createPopupMenu",
        "this._getSysURL"
      ]
    },
    {
      "name": "_pTrayPopupMenu._updatePopupMenu",
      "params": [
        "handle"
      ],
      "calls": [
        "nexacro._createTrayPopupMenuHandle",
        "nexacro._destroyTrayPopupMenuHandle",
        "this._createPopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu.trackPopup",
      "params": [],
      "calls": [
        "nexacro._displayTrayPopupMenuHandle"
      ]
    },
    {
      "name": "_pTrayPopupMenu.set_innerdataset",
      "params": [
        "str"
      ],
      "calls": [
        "application._getDatasetObject",
        "nexacro.getApplication",
        "str.replace",
        "this._setInnerDatasetStr",
        "this.on_apply_innerdataset",
        "this.setInnerDataset"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_apply_innerdataset",
      "params": [],
      "calls": [
        "ds._setEventHandler",
        "this._updatePopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu._callbackFromDataset",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._updatePopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu._setInnerDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "application._getDatasetObject",
        "nexacro.getApplication",
        "str.replace"
      ]
    },
    {
      "name": "_pTrayPopupMenu.getInnerDataset",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTrayPopupMenu.setInnerDataset",
      "params": [
        "obj"
      ],
      "calls": [
        "this.on_apply_innerdataset"
      ]
    },
    {
      "name": "_pTrayPopupMenu.set_captioncolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_captioncolumn"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_apply_captioncolumn",
      "params": [],
      "calls": [
        "this._updatePopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu.set_checkboxcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_checkboxcolumn"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_apply_checkboxcolumn",
      "params": [],
      "calls": [
        "this._updatePopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu.set_enablecolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_enablecolumn"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_apply_enablecolumn",
      "params": [],
      "calls": [
        "this._updatePopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu.set_hotkeycolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_hotkeycolumn"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_apply_hotkeycolumn",
      "params": [],
      "calls": [
        "this._updatePopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu.set_iconcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_iconcolumn"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_apply_iconcolumn",
      "params": [],
      "calls": [
        "this._updatePopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu.set_idcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_idcolumn"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_apply_idcolumn",
      "params": [],
      "calls": [
        "this._updatePopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu.set_levelcolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_levelcolumn"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_apply_levelcolumn",
      "params": [],
      "calls": [
        "this._updatePopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu.set_userdatacolumn",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_userdatacolumn"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_apply_userdatacolumn",
      "params": [],
      "calls": [
        "this._updatePopupMenu"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_fire_onmenuclick",
      "params": [
        "id"
      ],
      "calls": [
        "ds.getColumn",
        "nexacro.MenuClickEventInfo",
        "this.onmenuclick._fireEvent"
      ]
    },
    {
      "name": "_pTrayPopupMenu.on_fire_oninnerdatachanged",
      "params": [
        "obj",
        "oldvalue",
        "newvalue",
        "columnid",
        "col",
        "row"
      ],
      "calls": [
        "nexacro.InnerdataChangedEventInfo",
        "this.oninnerdatachanged._fireEvent"
      ]
    },
    {
      "name": "_pTrayPopupMenu._callback_onvaluechanged",
      "params": [
        "obj",
        "e"
      ],
      "calls": [
        "this._updatePopupMenu",
        "this.on_fire_oninnerdatachanged"
      ]
    },
    {
      "name": "_pTrayPopupMenu._getSysURL",
      "params": [
        "v",
        "target"
      ],
      "calls": [
        "nexacro._getSupportedImageUrl",
        "target._getRefFormBaseUrl",
        "v.trim",
        "val.charAt",
        "val.lastIndexOf",
        "val.substring"
      ]
    }
  ],
  "VideoPlayer.js": [
    {
      "name": "nexacro.VideoPlayStateChangedEventInfo",
      "params": [
        "obj",
        "id",
        "newstate"
      ],
      "calls": []
    },
    {
      "name": "nexacro.VideoCurrentTimeChangedEventInfo",
      "params": [
        "obj",
        "id",
        "currenttime"
      ],
      "calls": []
    },
    {
      "name": "nexacro.VideoErrorEventInfo",
      "params": [
        "obj",
        "id",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode"
      ],
      "calls": [
        "nexacro.ErrorEventInfo.call"
      ]
    },
    {
      "name": "nexacro.VideoPlayer",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pVideo.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._VideoPlayerPluginElement",
        "obj_elem.setElementSize",
        "this._getClientHeight",
        "this._getClientWidth",
        "this.getElement"
      ]
    },
    {
      "name": "_pVideo.on_create_contents_command",
      "params": [],
      "calls": [
        "this._obj_elem.createCommand",
        "this.on_apply_autoplay",
        "this.on_apply_mute",
        "this.on_apply_repeat",
        "this.on_apply_showcontrolbar",
        "this.on_apply_url",
        "this.on_apply_volume",
        "this.on_apply_vr360mode"
      ]
    },
    {
      "name": "_pVideo.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._obj_elem.attachHandle"
      ]
    },
    {
      "name": "_pVideo.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "obj_elem.create",
        "obj_elem.initEvent",
        "this.on_apply_adjustalpha",
        "this.on_apply_autoplay",
        "this.on_apply_mute",
        "this.on_apply_repeat",
        "this.on_apply_showcontrolbar",
        "this.on_apply_url",
        "this.on_apply_volume",
        "this.on_apply_vr360mode"
      ]
    },
    {
      "name": "_pVideo.on_destroy_contents",
      "params": [],
      "calls": [
        "obj_elem.destroy"
      ]
    },
    {
      "name": "_pVideo.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "nexacro.Component.prototype.on_update_position.call",
        "obj_elem.on_update_position"
      ]
    },
    {
      "name": "_pVideo.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "obj_elem.setElementSize"
      ]
    },
    {
      "name": "_pVideo.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.set_visible.call",
        "nexacro._toBoolean",
        "obj_elem.setElementVisible"
      ]
    },
    {
      "name": "_pVideo.set_codebase",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_codebase"
      ]
    },
    {
      "name": "_pVideo.on_apply_codebase",
      "params": [],
      "calls": [
        "obj_elem.setElementCodebase"
      ]
    },
    {
      "name": "_pVideo.set_url",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._getServiceLocation",
        "nexacro._getURIValue",
        "system.convertRealPath",
        "this._getRefFormBaseUrl",
        "this.on_apply_url"
      ]
    },
    {
      "name": "_pVideo.on_apply_url",
      "params": [],
      "calls": [
        "obj_elem._setVideoUrl"
      ]
    },
    {
      "name": "_pVideo.set_adjustalpha",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_adjustalpha"
      ]
    },
    {
      "name": "_pVideo.on_apply_adjustalpha",
      "params": [],
      "calls": [
        "obj_elem.setElementAdjustAlpha"
      ]
    },
    {
      "name": "_pVideo.set_currenttime",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_currenttime"
      ]
    },
    {
      "name": "_pVideo.on_apply_currenttime",
      "params": [],
      "calls": [
        "obj_elem._setVideoCurrentTime"
      ]
    },
    {
      "name": "_pVideo.set_mute",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_mute"
      ]
    },
    {
      "name": "_pVideo.on_apply_mute",
      "params": [],
      "calls": [
        "obj_elem._setVideoMute"
      ]
    },
    {
      "name": "_pVideo.set_repeat",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_repeat"
      ]
    },
    {
      "name": "_pVideo.on_apply_repeat",
      "params": [],
      "calls": [
        "obj_elem._setVideoLoop"
      ]
    },
    {
      "name": "_pVideo.set_showcontrolbar",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_showcontrolbar"
      ]
    },
    {
      "name": "_pVideo.on_apply_showcontrolbar",
      "params": [],
      "calls": [
        "obj_elem._setVideoShowControlBar"
      ]
    },
    {
      "name": "_pVideo.set_autoplay",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_autoplay"
      ]
    },
    {
      "name": "_pVideo.on_apply_autoplay",
      "params": [],
      "calls": [
        "obj_elem._setVideoAutoPlay"
      ]
    },
    {
      "name": "_pVideo.set_volume",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_volume"
      ]
    },
    {
      "name": "_pVideo.on_apply_volume",
      "params": [],
      "calls": [
        "obj_elem._setVideoVolume"
      ]
    },
    {
      "name": "_pVideo.on_apply_prop_enable",
      "params": [],
      "calls": [
        "obj_elem._setVideoEnable"
      ]
    },
    {
      "name": "_pVideo.set_vr360mode",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_vr360mode"
      ]
    },
    {
      "name": "_pVideo.on_apply_vr360mode",
      "params": [],
      "calls": [
        "obj_elem._setVideo360VRMode"
      ]
    },
    {
      "name": "_pVideo.play",
      "params": [],
      "calls": [
        "obj_elem._play"
      ]
    },
    {
      "name": "_pVideo.pause",
      "params": [],
      "calls": [
        "obj_elem._pause"
      ]
    },
    {
      "name": "_pVideo.rewind",
      "params": [],
      "calls": [
        "obj_elem._rewind"
      ]
    },
    {
      "name": "_pVideo.stop",
      "params": [],
      "calls": [
        "obj_elem._stop"
      ]
    },
    {
      "name": "_pVideo.on_fire_onerror",
      "params": [
        "obj",
        "errortype",
        "errormsg",
        "errorobj",
        "statuscode"
      ],
      "calls": [
        "nexacro.VideoErrorEventInfo",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "_pVideo.on_fire_oncurrenttimechanged",
      "params": [
        "obj",
        "new_currenttime"
      ],
      "calls": [
        "nexacro.VideoCurrentTimeChangedEventInfo",
        "this.oncurrenttimechanged._fireEvent"
      ]
    },
    {
      "name": "_pVideo.on_fire_onplaystatuschanged",
      "params": [
        "obj",
        "new_state"
      ],
      "calls": [
        "nexacro.VideoPlayStateChangedEventInfo",
        "this.onplaystatuschanged._fireEvent"
      ]
    },
    {
      "name": "_pVideo._on_currenttimechanged",
      "params": [
        "new_currenttime"
      ],
      "calls": [
        "this.on_fire_oncurrenttimechanged"
      ]
    },
    {
      "name": "_pVideo._on_volumechangechanged",
      "params": [
        "new_volume",
        "new_muted"
      ],
      "calls": []
    },
    {
      "name": "_pVideo._on_statuschanged",
      "params": [
        "new_state"
      ],
      "calls": [
        "this.on_fire_onplaystatuschanged"
      ]
    },
    {
      "name": "_pVideo._on_error",
      "params": [
        "errortype",
        "errormsg",
        "statuscode"
      ],
      "calls": [
        "this.on_fire_onerror"
      ]
    }
  ],
  "View.js": [
    {
      "name": "nexacro.View",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call",
        "nexacro._InnerForm",
        "this._p_form._initLayoutManager"
      ]
    },
    {
      "name": "_pView.on_create_contents",
      "params": [],
      "calls": [
        "this._p_form.createComponent",
        "this.on_apply_sourceview",
        "this.on_apply_viewdataset"
      ]
    },
    {
      "name": "_pView.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "form.on_created",
        "this._recalcLayout",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pView.on_destroy_contents",
      "params": [],
      "calls": [
        "this._destroyFormControl",
        "this._destroyTextElement"
      ]
    },
    {
      "name": "_pView.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "form.on_created",
        "this._recalcLayout",
        "this.on_apply_text"
      ]
    },
    {
      "name": "_pView.set_viewtype",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pView.set_viewdataset",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pView.on_apply_viewdataset",
      "params": [
        "v"
      ],
      "calls": [
        "this._findViewDataset",
        "this._setViewDatasetStr",
        "v.replace"
      ]
    },
    {
      "name": "_pView.on_apply_text",
      "params": [
        "v"
      ],
      "calls": [
        "cell_elem.create",
        "cell_elem.setElementSize",
        "cell_elem.setElementText",
        "cell_elem.setElementTextAlign",
        "cell_elem.setElementVerticalAlign",
        "form.getElement",
        "nexacro.TextBoxElement",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._getWindow"
      ]
    },
    {
      "name": "_pView.set_sourceview",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pView.on_apply_sourceview",
      "params": [],
      "calls": [
        "this.getSourceView"
      ]
    },
    {
      "name": "_pView.set_semantictag",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pView.getViewDataset",
      "params": [],
      "calls": [
        "sourceviewobj._findViewDataset",
        "this._findViewDataset",
        "this.getSourceView"
      ]
    },
    {
      "name": "_pView.getSourceView",
      "params": [],
      "calls": [
        "this._getSourceView"
      ]
    },
    {
      "name": "_pView._getSourceView",
      "params": [
        "sourceview"
      ],
      "calls": []
    },
    {
      "name": "_pView.on_notifytrigger",
      "params": [
        "obj",
        "info"
      ],
      "calls": [
        "manager._notifyTrigger"
      ]
    },
    {
      "name": "_pView._loadedForm",
      "params": [],
      "calls": [
        "this._on_apply_formscroll"
      ]
    },
    {
      "name": "_pView._setScript",
      "params": [
        "script"
      ],
      "calls": []
    },
    {
      "name": "_pView._setViewDatasetStr",
      "params": [
        "str"
      ],
      "calls": [
        "str.replace",
        "this._findViewDataset"
      ]
    },
    {
      "name": "_pView._findViewDataset",
      "params": [
        "id"
      ],
      "calls": [
        "this._p_form.lookup"
      ]
    },
    {
      "name": "_pView._setViewDataset",
      "params": [
        "dsid"
      ],
      "calls": []
    }
  ],
  "ViewTransition.js": [
    {
      "name": "nexacro._TransformEasing",
      "params": [
        "name",
        "easing"
      ],
      "calls": [
        "this.calcBezier"
      ]
    },
    {
      "name": "_pTransformEasing.isCustomEasing",
      "params": [],
      "calls": []
    },
    {
      "name": "_pTransformEasing.getSlope",
      "params": [
        "aT",
        "aA1",
        "aA2"
      ],
      "calls": []
    },
    {
      "name": "_pTransformEasing.binarySubdivide",
      "params": [
        "aX",
        "aA",
        "aB",
        "mX1",
        "mX2"
      ],
      "calls": [
        "Math.abs",
        "this.calcBezier"
      ]
    },
    {
      "name": "_pTransformEasing.newtonRaphsonIterate",
      "params": [
        "aX",
        "aGuessT",
        "mX1",
        "mX2"
      ],
      "calls": [
        "this.calcBezier",
        "this.getSlope"
      ]
    },
    {
      "name": "_pTransformEasing.getTForX",
      "params": [
        "aX"
      ],
      "calls": [
        "this.binarySubdivide",
        "this.getSlope",
        "this.newtonRaphsonIterate"
      ]
    },
    {
      "name": "_pTransformEasing.getValue",
      "params": [
        "x"
      ],
      "calls": [
        "this._getValue.call",
        "this.calcBezier",
        "this.getTForX"
      ]
    },
    {
      "name": "nexacro._TransformMatrix",
      "params": [
        "src"
      ],
      "calls": []
    },
    {
      "name": "_pTransformMatrix.rectToQuad",
      "params": [
        "x1",
        "y1",
        "x2",
        "y2",
        "quad"
      ],
      "calls": [
        "destMatrix.squareToQuad",
        "nexacro._TransformMatrix",
        "this.invert",
        "this.multiply",
        "this.squareToQuad"
      ]
    },
    {
      "name": "_pTransformMatrix.squareToQuad",
      "params": [
        "quad"
      ],
      "calls": []
    },
    {
      "name": "_pTransformMatrix.invert",
      "params": [],
      "calls": [
        "nexacro._TransformMatrix"
      ]
    },
    {
      "name": "_pTransformMatrix.multiply",
      "params": [
        "m"
      ],
      "calls": [
        "nexacro._TransformMatrix"
      ]
    },
    {
      "name": "_pTransformMatrix.preMultiply",
      "params": [
        "m"
      ],
      "calls": [
        "nexacro._TransformMatrix"
      ]
    },
    {
      "name": "nexacro._ViewTransitionEffect",
      "params": [
        "node",
        "effect"
      ],
      "calls": []
    },
    {
      "name": "_pViewTransitionEffect.destroy",
      "params": [],
      "calls": [
        "effector.destroy",
        "nexacro.Object.prototype.destroy.call",
        "this._effectors.forEach"
      ]
    },
    {
      "name": "_pViewTransitionEffect.begin",
      "params": [
        "callback"
      ],
      "calls": [
        "document.documentElement.style.setProperty",
        "document.startViewTransition",
        "effector.end",
        "effector.run",
        "effectors.forEach",
        "node.getBoundingClientRect",
        "this._appendBuiltinStyles",
        "this._createEffectors",
        "this._effectors.forEach",
        "this._properties.forEach",
        "transition.finished.finally",
        "transition.ready.then"
      ]
    },
    {
      "name": "_pViewTransitionEffect.apply",
      "params": [],
      "calls": [
        "this.on_apply"
      ]
    },
    {
      "name": "_pViewTransitionEffect.cancel",
      "params": [],
      "calls": [
        "this.on_cancel"
      ]
    },
    {
      "name": "_pViewTransitionEffect._appendBuiltinStyles",
      "params": [],
      "calls": [
        "document.createElement",
        "document.createTextNode",
        "document.getElementById",
        "document.getElementsByTagName",
        "head.appendChild",
        "sheet.appendChild"
      ]
    },
    {
      "name": "_pViewTransitionEffect._createEffectors",
      "params": [],
      "calls": [
        "effectFrames.forEach",
        "effectors.push",
        "nexacro._TransformEasing",
        "nexacro._ViewTransitionEffect.DIRECTIONS.includes",
        "nexacro._ViewTransitionEffect.TRANSITION_EASINGS.get",
        "nexacro._ViewTransitionEffect.TRANSITION_EFFECT_TYPES.get",
        "nexacro._ViewTransitionEffector"
      ]
    },
    {
      "name": "nexacro._ViewTransitionEffector",
      "params": [
        "id",
        "frames",
        "properties",
        "options"
      ],
      "calls": [
        "nexacro.Object.call"
      ]
    },
    {
      "name": "_pViewTransitionEffector.destroy",
      "params": [],
      "calls": [
        "nexacro.Object.prototype.destroy.call",
        "this.end"
      ]
    },
    {
      "name": "_pViewTransitionEffector.run",
      "params": [
        "direction",
        "duration",
        "boundingRect",
        "easingFunction"
      ],
      "calls": [
        "Math.max",
        "Math.min",
        "document.documentElement.animate",
        "document.documentElement.style.setProperty",
        "easingFunction.isCustomEasing",
        "properties.forEach",
        "this._animation.pause",
        "this.animationFrame",
        "this.convToCustomKeyFrames",
        "this.convToKeyFrames",
        "this.properties.slice",
        "value.forEach",
        "window.cancelAnimationFrame",
        "window.requestAnimationFrame"
      ]
    },
    {
      "name": "_pViewTransitionEffector.end",
      "params": [],
      "calls": [
        "this._animation.finish",
        "window.cancelAnimationFrame"
      ]
    },
    {
      "name": "_pViewTransitionEffector.normalizeValue",
      "params": [
        "prop",
        "value"
      ],
      "calls": []
    },
    {
      "name": "_pViewTransitionEffector.convToKeyFrames",
      "params": [
        "effectFrames"
      ],
      "calls": [
        "Object.entries",
        "clipPaths.map",
        "this.normalizeValue",
        "transform.join",
        "transforms.map",
        "values.forEach"
      ]
    },
    {
      "name": "_pViewTransitionEffector.convToCustomKeyFrames",
      "params": [
        "effectFrames"
      ],
      "calls": [
        "Object.entries",
        "clipPaths.map",
        "opacity.push",
        "this.normalizeValue",
        "transform.join",
        "transforms.map",
        "values.forEach"
      ]
    },
    {
      "name": "_pViewTransitionEffector.setCustomEasingValues",
      "params": [
        "frames",
        "vpos",
        "easingValue"
      ],
      "calls": [
        "Math.abs",
        "document.documentElement.style.setProperty",
        "this.normalizeValue"
      ]
    },
    {
      "name": "_pViewTransitionEffector.animationFrame",
      "params": [
        "timestamp",
        "animation",
        "frames",
        "easingFunction"
      ],
      "calls": [
        "Math.max",
        "animationEffect.getTiming",
        "easingFunction.getValue",
        "this.animationFrame",
        "this.setCustomEasingValues",
        "window.requestAnimationFrame"
      ]
    }
  ],
  "VirtualFile.js": [
    {
      "name": "nexacro.VirtualFileEventInfo",
      "params": [
        "strEventId",
        "nReason",
        "strTextdata",
        "strBinarydata",
        "strFilelist",
        "strFilesize",
        "strExist"
      ],
      "calls": [
        "nexacro._getFileAttributeList"
      ]
    },
    {
      "name": "nexacro.VirtualFileErrorEventInfo",
      "params": [
        "strEventId",
        "intErrorCode",
        "strErrorMsg"
      ],
      "calls": []
    },
    {
      "name": "nexacro._FileAttribute",
      "params": [
        "jsonObj"
      ],
      "calls": []
    },
    {
      "name": "_pFileAttribute.isDirectory",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFileAttribute.isHidden",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFileAttribute.isLink",
      "params": [],
      "calls": []
    },
    {
      "name": "_pFileAttribute.isReadOnly",
      "params": [],
      "calls": []
    },
    {
      "name": "nexacro.VirtualFile",
      "params": [
        "id",
        "parent"
      ],
      "calls": [
        "nexacro._EventSinkObject.call",
        "nexacro._createVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.destroy",
      "params": [],
      "calls": [
        "nexacro._destroyVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.set_async",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this.on_apply_async"
      ]
    },
    {
      "name": "_pVirtualFile.on_apply_async",
      "params": [],
      "calls": [
        "nexacro._setVirtualFileHandleAsync"
      ]
    },
    {
      "name": "_pVirtualFile.open",
      "params": [
        "strFileName",
        "nConstOptions"
      ],
      "calls": [
        "nexacro._openVirtualFileHandle",
        "strFileName.split",
        "this._IsValidConstOptions",
        "this._getFileName",
        "this._getPath",
        "this._setFileName",
        "this._setFullPath",
        "this._setPath"
      ]
    },
    {
      "name": "_pVirtualFile.close",
      "params": [],
      "calls": [
        "nexacro._closeVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.read",
      "params": [
        "nLength",
        "strCharset"
      ],
      "calls": [
        "nexacro._readVirtualFileHandle",
        "nexacro._toInt"
      ]
    },
    {
      "name": "_pVirtualFile.readLine",
      "params": [
        "strDelimeter",
        "strCharset"
      ],
      "calls": [
        "nexacro._readlineVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.seek",
      "params": [
        "nOffset",
        "nConstOptions"
      ],
      "calls": [
        "nexacro._seekVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.write",
      "params": [
        "varData",
        "strCharset"
      ],
      "calls": [
        "nexacro._writeVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.remove",
      "params": [
        "strFilePath"
      ],
      "calls": [
        "nexacro._removeVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.copy",
      "params": [
        "strSrc",
        "strDest"
      ],
      "calls": [
        "nexacro._copyVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.rename",
      "params": [
        "strOldname",
        "strNewname"
      ],
      "calls": [
        "nexacro._renameVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.getFileList",
      "params": [
        "strPath",
        "strSearchExpr",
        "nConstOptions"
      ],
      "calls": [
        "nexacro._getFileListVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.getFileSize",
      "params": [],
      "calls": [
        "nexacro._getFileSizeVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.isExist",
      "params": [
        "strPath"
      ],
      "calls": [
        "nexacro._isExistVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.createDirectory",
      "params": [
        "strPath",
        "bAllCreate"
      ],
      "calls": [
        "nexacro._createDirectoryVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.deleteDirectory",
      "params": [
        "strPath",
        "bAllChild"
      ],
      "calls": [
        "nexacro._deleteDirectoryVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile.renameDirectory",
      "params": [
        "strPath",
        "strNewName"
      ],
      "calls": [
        "nexacro._renameDirectoryVirtualFileHandle",
        "strNewName.match"
      ]
    },
    {
      "name": "_pVirtualFile.on_success",
      "params": [
        "reason",
        "textdata",
        "bindata",
        "fileattributelist",
        "filesize",
        "fileisexist"
      ],
      "calls": [
        "this._replaceEntity",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pVirtualFile._onsuccess",
      "params": [
        "objData"
      ],
      "calls": [
        "nexacro.base64Decode",
        "this._replaceEntity",
        "this.on_fire_onsuccess"
      ]
    },
    {
      "name": "_pVirtualFile.on_fire_onsuccess",
      "params": [
        "reason",
        "textdata",
        "bindata",
        "fileattributelist",
        "filesize",
        "fileisexist"
      ],
      "calls": [
        "nexacro.VirtualFileEventInfo",
        "this.onsuccess._fireEvent"
      ]
    },
    {
      "name": "_pVirtualFile.on_error",
      "params": [
        "errorcode",
        "errormsg"
      ],
      "calls": [
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pVirtualFile._onerror",
      "params": [
        "objData"
      ],
      "calls": [
        "this.on_fire_onerror"
      ]
    },
    {
      "name": "_pVirtualFile.on_fire_onerror",
      "params": [
        "errorcode",
        "errormsg"
      ],
      "calls": [
        "nexacro.VirtualFileErrorEventInfo",
        "this.onerror._fireEvent"
      ]
    },
    {
      "name": "_pVirtualFile._createVirtualFileHandle",
      "params": [
        "target"
      ],
      "calls": [
        "nexacro._createVirtualFileHandle"
      ]
    },
    {
      "name": "_pVirtualFile._setPath",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pVirtualFile._setFullPath",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pVirtualFile._setFileName",
      "params": [
        "v"
      ],
      "calls": []
    },
    {
      "name": "_pVirtualFile._getPath",
      "params": [
        "strFullpath"
      ],
      "calls": [
        "strFullpath.lastIndexOf",
        "strFullpath.split",
        "strFullpath.substring"
      ]
    },
    {
      "name": "_pVirtualFile._getFileName",
      "params": [
        "strFullpath"
      ],
      "calls": [
        "strFullpath.lastIndexOf",
        "strFullpath.split",
        "strFullpath.substring"
      ]
    },
    {
      "name": "_pVirtualFile._replaceEntity",
      "params": [
        "strText",
        "entitylist"
      ],
      "calls": [
        "entitylist.pop",
        "strText.replace",
        "this._replaceEntity"
      ]
    },
    {
      "name": "_pVirtualFile._IsValidConstOptions",
      "params": [
        "nConstOptions"
      ],
      "calls": []
    }
  ],
  "WebBrowser.js": [
    {
      "name": "nexacro.WebLoadCompEventInfo",
      "params": [
        "obj",
        "url",
        "id"
      ],
      "calls": []
    },
    {
      "name": "nexacro.WebUserNotifyEventInfo",
      "params": [
        "obj",
        "userdata",
        "id"
      ],
      "calls": []
    },
    {
      "name": "nexacro.WebBrowser",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pWebBrowser._on_getAccessibilityAdditionalRole",
      "params": [],
      "calls": [
        "this._getAccessibilityRole",
        "this.on_find_CurrentStyle_accessibility"
      ]
    },
    {
      "name": "_pWebBrowser.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._WebBrowserPluginElement",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._ifrm_elem.setElementSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pWebBrowser.on_create_contents_command",
      "params": [],
      "calls": [
        "nexacro._WebBrowserPluginElement",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._ifrm_elem.createCommand",
        "this._ifrm_elem.setElementSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pWebBrowser.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this._ifrm_elem.attachHandle",
        "this.on_apply_url",
        "this.on_created_contents"
      ]
    },
    {
      "name": "_pWebBrowser.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "ifrm_elem.create",
        "ifrm_elem.initEvent",
        "nexacro._observeSysEvent",
        "this._on_apply_accessibilityleavemessage",
        "this.on_apply_url"
      ]
    },
    {
      "name": "_pWebBrowser.on_destroy_contents",
      "params": [],
      "calls": [
        "ifrm_elem.destroy",
        "nexacro._stopSysObserving"
      ]
    },
    {
      "name": "_pWebBrowser.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "ifrm_elem.on_update_position",
        "nexacro.Component.prototype.on_update_position.call"
      ]
    },
    {
      "name": "_pWebBrowser.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "ifrm_elem.setElementSize"
      ]
    },
    {
      "name": "_pWebBrowser.on_fire_onloadcompleted",
      "params": [
        "obj",
        "url"
      ],
      "calls": [
        "nexacro.WebLoadCompEventInfo",
        "this.onloadcompleted._fireEvent"
      ]
    },
    {
      "name": "_pWebBrowser.on_fire_onusernotify",
      "params": [
        "obj",
        "userdata"
      ],
      "calls": [
        "nexacro.WebUserNotifyEventInfo",
        "this.onusernotify._fireEvent"
      ]
    },
    {
      "name": "_pWebBrowser.on_ondevicebuttonup_default_action",
      "params": [
        "button"
      ],
      "calls": [
        "this.goback"
      ]
    },
    {
      "name": "_pWebBrowser._getDlgCode",
      "params": [
        "keycode/*",
        "altKey",
        "ctrlKey",
        "shiftKey*/"
      ],
      "calls": []
    },
    {
      "name": "_pWebBrowser.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp",
        "meta_key"
      ],
      "calls": [
        "ifrm_elem._setElementInternalFocus",
        "nexacro.Component.prototype.on_fire_user_onkeydown.call",
        "this._getWindow"
      ]
    },
    {
      "name": "_pWebBrowser.on_killfocus_basic_action",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "ifrm_elem._setElementBackwardFocus",
        "nexacro.Component.prototype.on_killfocus_basic_action.call",
        "this._getAccessibilityReadLabel"
      ]
    },
    {
      "name": "_pWebBrowser.on_focus_basic_action",
      "params": [
        "self_flag",
        "evt_name",
        "lose_focus",
        "refer_lose_focus",
        "new_focus",
        "refer_new_focus"
      ],
      "calls": [
        "this._apply_setfocus",
        "this._isEnable",
        "this._setAccessibilityStatFocus"
      ]
    },
    {
      "name": "_pWebBrowser._apply_setfocus",
      "params": [
        "evt_name",
        "self_flag",
        "refer_lose_focus",
        "refer_new_focus"
      ],
      "calls": [
        "ifrm_elem._setElementFocus"
      ]
    },
    {
      "name": "_pWebBrowser._webbrowser_mouseover",
      "params": [
        "/*evt*/"
      ],
      "calls": [
        "nexacro._initDragInfo"
      ]
    },
    {
      "name": "_pWebBrowser.set_text",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_text",
        "v.replace"
      ]
    },
    {
      "name": "_pWebBrowser.set_enable",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._changeStatus",
        "this.on_apply_prop_enable"
      ]
    },
    {
      "name": "_pWebBrowser.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "ifrm_elem.setElementVisible",
        "nexacro.Component.prototype.set_visible.call",
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pWebBrowser.set_cookiesynctype",
      "params": [
        "/*v*/"
      ],
      "calls": []
    },
    {
      "name": "_pWebBrowser.set_url",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_url",
        "v.toString",
        "val.match"
      ]
    },
    {
      "name": "_pWebBrowser.set_useurlhistory",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pWebBrowser.set_accessibilityleavemessage",
      "params": [
        "v"
      ],
      "calls": [
        "this._on_apply_accessibilityleavemessage"
      ]
    },
    {
      "name": "_pWebBrowser.on_apply_url",
      "params": [],
      "calls": [
        "ifrm_elem._setUrl"
      ]
    },
    {
      "name": "_pWebBrowser.on_apply_accessibility",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_accessibility.call",
        "this._on_apply_accessibilityleavemessage"
      ]
    },
    {
      "name": "_pWebBrowser.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_enable.call",
        "this._ifrm_elem.setElementEnable"
      ]
    },
    {
      "name": "_pWebBrowser.stoploading",
      "params": [],
      "calls": []
    },
    {
      "name": "_pWebBrowser.reload",
      "params": [],
      "calls": [
        "ifrm_elem._setGo",
        "ifrm_elem._setUrl",
        "this._isCrossDomain"
      ]
    },
    {
      "name": "_pWebBrowser.goback",
      "params": [],
      "calls": [
        "ifrm_elem._setBack",
        "this._isCrossDomain"
      ]
    },
    {
      "name": "_pWebBrowser.goforward",
      "params": [],
      "calls": [
        "ifrm_elem._setForward",
        "this._isCrossDomain"
      ]
    },
    {
      "name": "_pWebBrowser.on_load_handler",
      "params": [
        "docurl"
      ],
      "calls": [
        "this._ifrm_elem._getDoc",
        "this.on_fire_onloadcompleted"
      ]
    },
    {
      "name": "_pWebBrowser.getProperty",
      "params": [
        "prop"
      ],
      "calls": [
        "ifrm_elem.getProperty"
      ]
    },
    {
      "name": "_pWebBrowser.setProperty",
      "params": [
        "prop",
        "value"
      ],
      "calls": [
        "ifrm_elem.setProperty"
      ]
    },
    {
      "name": "_pWebBrowser.callMethod",
      "params": [
        "/*func*/"
      ],
      "calls": [
        "nexacro._WebBrowserPluginElement.prototype.callMethod.apply"
      ]
    },
    {
      "name": "_pWebBrowser.addEventHandler",
      "params": [
        "evt_id",
        "func",
        "target"
      ],
      "calls": [
        "nexacro.Component.prototype.addEventHandler.call"
      ]
    },
    {
      "name": "_pWebBrowser.removeEventHandler",
      "params": [
        "evt_id",
        "func",
        "target"
      ],
      "calls": [
        "nexacro.Component.prototype.removeEventHandler.call"
      ]
    },
    {
      "name": "_pWebBrowser._isCrossDomain",
      "params": [
        "target"
      ],
      "calls": [
        "base.match",
        "nexacro._isSameOrigin",
        "rootForm._getRefFormBaseUrl",
        "this._getRootForm"
      ]
    },
    {
      "name": "_pWebBrowser._on_apply_accessibilityleavemessage",
      "params": [],
      "calls": [
        "ifrm_elem._setElementLeaveMessage"
      ]
    },
    {
      "name": "_pWebBrowser.updateWindow",
      "params": [],
      "calls": [
        "ifrm_elem.updateWindow"
      ]
    },
    {
      "name": "_pWebBrowser._on_mousewheel",
      "params": [
        "elem",
        "wheelDeltaX",
        "wheelDeltaY",
        "button",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "canvasX",
        "canvasY",
        "screenX",
        "screenY",
        "meta_key"
      ],
      "calls": [
        "this._on_bubble_mousewheel"
      ]
    }
  ],
  "WebView.js": [
    {
      "name": "nexacro.WebLoadCompEventInfo",
      "params": [
        "obj",
        "url",
        "id"
      ],
      "calls": []
    },
    {
      "name": "nexacro.WebUserNotifyEventInfo",
      "params": [
        "obj",
        "userdata",
        "id"
      ],
      "calls": []
    },
    {
      "name": "nexacro.WebView",
      "params": [
        "id",
        "left",
        "top",
        "width",
        "height",
        "right",
        "bottom",
        "minwidth",
        "maxwidth",
        "minheight",
        "maxheight",
        "parent"
      ],
      "calls": [
        "nexacro.Component.call"
      ]
    },
    {
      "name": "_pWebView.on_create_contents",
      "params": [],
      "calls": [
        "nexacro._WebViewPluginElement",
        "this._getClientHeight",
        "this._getClientWidth",
        "this._ifrm_elem.setElementSize",
        "this.getElement"
      ]
    },
    {
      "name": "_pWebView.on_create_contents_command",
      "params": [],
      "calls": []
    },
    {
      "name": "_pWebView.on_attach_contents_handle",
      "params": [
        "win"
      ],
      "calls": [
        "this.on_created_contents"
      ]
    },
    {
      "name": "_pWebView.on_created_contents",
      "params": [
        "win"
      ],
      "calls": [
        "ifrm_elem.create",
        "ifrm_elem.initEvent",
        "nexacro._observeSysEvent",
        "this._on_apply_accessibilityleavemessage",
        "this.on_apply_setupurl",
        "this.on_apply_url"
      ]
    },
    {
      "name": "_pWebView.on_destroy_contents",
      "params": [],
      "calls": [
        "ifrm_elem.destroy",
        "nexacro._stopSysObserving"
      ]
    },
    {
      "name": "_pWebView.on_update_position",
      "params": [
        "resize_flag",
        "move_flag",
        "update"
      ],
      "calls": [
        "ifrm_elem.on_update_position",
        "nexacro.Component.prototype.on_update_position.call"
      ]
    },
    {
      "name": "_pWebView.on_change_containerRect",
      "params": [
        "width",
        "height"
      ],
      "calls": [
        "ifrm_elem.setElementSize"
      ]
    },
    {
      "name": "_pWebView.on_fire_onloadcompleted",
      "params": [
        "obj",
        "url"
      ],
      "calls": [
        "nexacro.WebLoadCompEventInfo",
        "this.onloadcompleted._fireEvent"
      ]
    },
    {
      "name": "_pWebView.fireUserNotify",
      "params": [
        "msg"
      ],
      "calls": [
        "msg.target.on_fire_onusernotify"
      ]
    },
    {
      "name": "_pWebView.on_fire_onusernotify",
      "params": [
        "obj",
        "userdata"
      ],
      "calls": [
        "nexacro.WebUserNotifyEventInfo",
        "this.onusernotify._fireEvent"
      ]
    },
    {
      "name": "_pWebView.on_ondevicebuttonup_default_action",
      "params": [
        "button"
      ],
      "calls": [
        "this.goBack"
      ]
    },
    {
      "name": "_pWebView._getDlgCode",
      "params": [
        "keycode/*",
        "altKey",
        "ctrlKey",
        "shiftKey*/"
      ],
      "calls": []
    },
    {
      "name": "_pWebView.on_fire_user_onkeydown",
      "params": [
        "keycode",
        "alt_key",
        "ctrl_key",
        "shift_key",
        "fire_comp",
        "refer_comp"
      ],
      "calls": [
        "ifrm_elem._setElementInternalFocus",
        "nexacro.Component.prototype.on_fire_user_onkeydown.call",
        "next_comp.setFocus",
        "this._getForm",
        "this._getRootComponent",
        "this._getWindow"
      ]
    },
    {
      "name": "_pWebView._apply_setfocus",
      "params": [
        "evt_name"
      ],
      "calls": [
        "ifrm_elem._setElementFocus"
      ]
    },
    {
      "name": "_pWebView._on_killfocus",
      "params": [
        "new_focus",
        "new_refer_focus"
      ],
      "calls": [
        "ifrm_elem._closeDefaultDownloadDialog",
        "nexacro.Component.prototype._on_killfocus.call"
      ]
    },
    {
      "name": "_pWebView._webview_mouseover",
      "params": [
        "/*evt*/"
      ],
      "calls": [
        "nexacro._initDragInfo"
      ]
    },
    {
      "name": "_pWebView.set_text",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toString",
        "this.on_apply_text",
        "v.replace"
      ]
    },
    {
      "name": "_pWebView.set_enable",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean",
        "this._changeStatus",
        "this.on_apply_prop_enable"
      ]
    },
    {
      "name": "_pWebView.callMethod",
      "params": [
        "/*func*/"
      ],
      "calls": [
        "nexacro._WebViewPluginElement.prototype.callMethod.apply"
      ]
    },
    {
      "name": "_pWebView.set_visible",
      "params": [
        "v"
      ],
      "calls": [
        "ifrm_elem.setElementVisible",
        "nexacro.Component.prototype.set_visible.call",
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pWebView.set_cookiesynctype",
      "params": [
        "/*v*/"
      ],
      "calls": []
    },
    {
      "name": "_pWebView.set_url",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_url",
        "v.toString",
        "val.match"
      ]
    },
    {
      "name": "_pWebView.set_setupurl",
      "params": [
        "v"
      ],
      "calls": [
        "this.on_apply_setupurl",
        "v.toString",
        "val.match"
      ]
    },
    {
      "name": "_pWebView.set_useurlhistory",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro._toBoolean"
      ]
    },
    {
      "name": "_pWebView.set_accessibilityleavemessage",
      "params": [
        "v"
      ],
      "calls": [
        "this._on_apply_accessibilityleavemessage"
      ]
    },
    {
      "name": "_pWebView.on_apply_url",
      "params": [],
      "calls": [
        "ifrm_elem._setUrl"
      ]
    },
    {
      "name": "_pWebView.on_apply_setupurl",
      "params": [],
      "calls": [
        "ifrm_elem._setInstallUrl"
      ]
    },
    {
      "name": "_pWebView.on_apply_accessibility",
      "params": [],
      "calls": [
        "nexacro.Component.prototype.on_apply_accessibility.call",
        "this._on_apply_accessibilityleavemessage"
      ]
    },
    {
      "name": "_pWebView.on_apply_prop_enable",
      "params": [
        "v"
      ],
      "calls": [
        "nexacro.Component.prototype.on_apply_prop_enable.call",
        "this._ifrm_elem.setElementEnable"
      ]
    },
    {
      "name": "_pWebView.reload",
      "params": [],
      "calls": [
        "ifrm_elem._setGo",
        "ifrm_elem._setUrl",
        "this._isCrossDomain"
      ]
    },
    {
      "name": "_pWebView.goBack",
      "params": [],
      "calls": [
        "ifrm_elem._setBack",
        "this._isCrossDomain"
      ]
    },
    {
      "name": "_pWebView.goForward",
      "params": [],
      "calls": [
        "ifrm_elem._setForward",
        "this._isCrossDomain"
      ]
    },
    {
      "name": "_pWebView.on_load_handler",
      "params": [
        "docurl"
      ],
      "calls": [
        "this._ifrm_elem._getDoc",
        "this.on_fire_onloadcompleted"
      ]
    },
    {
      "name": "_pWebView.callScript",
      "params": [
        "/*func*/func"
      ],
      "calls": [
        "nexacro._WebViewPluginElement.prototype.injectScript.apply",
        "this._isCrossDomain"
      ]
    },
    {
      "name": "_pWebView.callScriptAsync",
      "params": [
        "/*func*/func"
      ],
      "calls": [
        "nexacro._WebViewPluginElement.prototype.injectScriptAndReturnPromise.apply",
        "this._isCrossDomain"
      ]
    },
    {
      "name": "_pWebView.addScriptOnDocumentCreated",
      "params": [],
      "calls": []
    },
    {
      "name": "_pWebView.removeScriptOnDocumentCreated",
      "params": [],
      "calls": []
    },
    {
      "name": "_pWebView.clearScriptOnDocumentCreated",
      "params": [],
      "calls": []
    },
    {
      "name": "_pWebView.callScriptAsync",
      "params": [
        "func",
        "callbackfunc",
        "scope"
      ],
      "calls": [
        "nexacro._WebViewPluginElement.prototype.injectScriptAsync.apply"
      ]
    },
    {
      "name": "_pWebView.addEventHandler",
      "params": [
        "evt_id",
        "func",
        "target"
      ],
      "calls": [
        "nexacro.Component.prototype.addEventHandler.call"
      ]
    },
    {
      "name": "_pWebView.removeEventHandler",
      "params": [
        "evt_id",
        "func",
        "target"
      ],
      "calls": [
        "nexacro.Component.prototype.removeEventHandler.call"
      ]
    },
    {
      "name": "_pWebView._isCrossDomain",
      "params": [
        "target"
      ],
      "calls": [
        "base.match",
        "nexacro._isSameOrigin",
        "rootForm._getRefFormBaseUrl",
        "this._getRootForm"
      ]
    },
    {
      "name": "_pWebView._on_apply_accessibilityleavemessage",
      "params": [],
      "calls": [
        "ifrm_elem._setElementLeaveMessage"
      ]
    },
    {
      "name": "_pWebView.updateWindow",
      "params": [],
      "calls": [
        "ifrm_elem.updateWindow"
      ]
    }
  ]
}